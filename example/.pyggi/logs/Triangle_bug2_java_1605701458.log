2020-11-18 13:10:58,637	[INFO]	Path to the temporal program variants: ./.pyggi/tmp_variants/Triangle_bug2_java/1605701458
2020-11-18 13:10:58,637	[INFO]	========== EPOCH 1 ==========
2020-11-18 13:10:58,637	[INFO]	==== WARMUP ====
2020-11-18 13:10:59,806	[INFO]	WARM	SUCCESS	 4.0	
2020-11-18 13:10:59,806	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-11-18 13:11:01,027	[INFO]	WARM	SUCCESS	 4.0	
2020-11-18 13:11:01,027	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-11-18 13:11:02,154	[INFO]	WARM	SUCCESS	 4.0	
2020-11-18 13:11:02,154	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-11-18 13:11:03,704	[INFO]	INITIAL	SUCCESS	 4.0	
2020-11-18 13:11:03,704	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-11-18 13:11:03,705	[INFO]	==== START ====
2020-11-18 13:11:04,826	[INFO]	1	SUCCESS	+4.0	StmtDeletion({'target': ('Triangle.java.xml', 44)})
2020-11-18 13:11:04,826	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 53,59 ****
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
!       System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
        System.out.println(classifyTriangle(999,501,600));
      }
--- 53,59 ----
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
!       
        System.out.println(classifyTriangle(3,20,21));
        System.out.println(classifyTriangle(999,501,600));
      }

2020-11-18 13:11:04,827	[INFO]	2	SUCCESS	+4.0	
2020-11-18 13:11:04,827	[DEBUG]	
2020-11-18 13:11:04,828	[INFO]	3	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('Triangle.java.xml', 19), 'value': '=='})
2020-11-18 13:11:04,829	[DEBUG]	
2020-11-18 13:11:06,115	[INFO]	4	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('Triangle.java.xml', 19), 'value': '=='}) | StmtReplacement({'target': ('Triangle.java.xml', 35), 'ingredient': ('Triangle.java.xml', 42)})
2020-11-18 13:11:06,116	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 44,50 ****
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
!       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
--- 44,50 ----
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));

2020-11-18 13:11:07,186	[INFO]	5	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('Triangle.java.xml', 19), 'value': '=='}) | StmtReplacement({'target': ('Triangle.java.xml', 35), 'ingredient': ('Triangle.java.xml', 42)}) | StmtInsertion({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 10), 'direction': 'before'})
2020-11-18 13:11:07,187	[INFO]	6	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('Triangle.java.xml', 19), 'value': '=='})
2020-11-18 13:11:07,187	[DEBUG]	
2020-11-18 13:11:08,301	[INFO]	7	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('Triangle.java.xml', 19), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 32)})
2020-11-18 13:11:08,302	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 41,47 ****
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
--- 41,47 ----
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));

2020-11-18 13:11:08,303	[INFO]	8	SUCCESS	+4.0	StmtDeletion({'target': ('Triangle.java.xml', 32)})
2020-11-18 13:11:08,303	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 41,47 ****
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
--- 41,47 ----
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));

2020-11-18 13:11:08,304	[INFO]	9	SUCCESS	+4.0	
2020-11-18 13:11:08,304	[DEBUG]	
2020-11-18 13:11:09,647	[INFO]	10	PARSE_ERROR	 None	StmtInsertion({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 4), 'direction': 'before'})
2020-11-18 13:11:10,811	[INFO]	11	SUCCESS	+4.0	StmtDeletion({'target': ('Triangle.java.xml', 35)})
2020-11-18 13:11:10,811	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 44,50 ****
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
!       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
--- 44,50 ----
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
!       
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));

2020-11-18 13:11:10,812	[INFO]	12	SUCCESS	+4.0	
2020-11-18 13:11:10,812	[DEBUG]	
2020-11-18 13:11:11,941	[INFO]	13	SUCCESS	+4.0	StmtDeletion({'target': ('Triangle.java.xml', 29)})
2020-11-18 13:11:11,942	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 38,44 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
--- 38,44 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));

2020-11-18 13:11:12,907	[INFO]	14	PARSE_ERROR	 None	StmtDeletion({'target': ('Triangle.java.xml', 29)}) | StmtDeletion({'target': ('Triangle.java.xml', 15)})
2020-11-18 13:11:12,908	[INFO]	15	SUCCESS	+4.0	
2020-11-18 13:11:12,908	[DEBUG]	
2020-11-18 13:11:14,284	[INFO]	16	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('Triangle.java.xml', 11), 'value': '<='})
2020-11-18 13:11:14,285	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 17,23 ****
              c = tmp;
          }
  
!         if (b > c) {
              int tmp = b;
              b = c;
              c = tmp;
--- 17,23 ----
              c = tmp;
          }
  
!         if (b <= c) {
              int tmp = b;
              b = c;
              c = tmp;

2020-11-18 13:11:14,285	[INFO]	17	SUCCESS	+4.0	
2020-11-18 13:11:14,285	[DEBUG]	
2020-11-18 13:11:15,230	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('Triangle.java.xml', 17), 'ingredient': ('Triangle.java.xml', 44)})
2020-11-18 13:11:16,433	[INFO]	19	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 34), 'ingredient': ('Triangle.java.xml', 34), 'direction': 'before'})
2020-11-18 13:11:16,434	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 44,49 ****
--- 44,50 ----
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
+       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");

2020-11-18 13:11:16,434	[INFO]	20	SUCCESS	+4.0	
2020-11-18 13:11:16,435	[DEBUG]	
2020-11-18 13:11:17,654	[INFO]	21	PARSE_ERROR	 None	StmtInsertion({'target': ('Triangle.java.xml', 7), 'ingredient': ('Triangle.java.xml', 46), 'direction': 'before'})
2020-11-18 13:11:18,790	[INFO]	22	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 34), 'direction': 'before'})
2020-11-18 13:11:18,791	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 47,52 ****
--- 47,53 ----
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
+       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));

2020-11-18 13:11:20,362	[INFO]	23	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 34), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 3), 'ingredient': ('Triangle.java.xml', 32)})
2020-11-18 13:11:20,364	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 7,13 ****
      public static TriangleType classifyTriangle(int a, int b, int c) {
          if (a > b) {
              int tmp = a;
!             a = b;
              b = tmp;
          }
  
--- 7,13 ----
      public static TriangleType classifyTriangle(int a, int b, int c) {
          if (a > b) {
              int tmp = a;
!             System.out.println(classifyTriangle(100,80,10000));
              b = tmp;
          }
  
***************
*** 47,52 ****
--- 47,53 ----
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
+       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));

2020-11-18 13:11:20,366	[INFO]	24	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 34), 'direction': 'before'})
2020-11-18 13:11:20,368	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 47,52 ****
--- 47,53 ----
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
+       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));

2020-11-18 13:11:20,370	[INFO]	25	SUCCESS	+4.0	
2020-11-18 13:11:20,371	[DEBUG]	
2020-11-18 13:11:21,671	[INFO]	26	PARSE_ERROR	 None	StmtInsertion({'target': ('Triangle.java.xml', 22), 'ingredient': ('Triangle.java.xml', 4), 'direction': 'before'})
2020-11-18 13:11:23,027	[INFO]	27	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 17), 'ingredient': ('Triangle.java.xml', 43), 'direction': 'before'})
2020-11-18 13:11:23,028	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 24,29 ****
--- 24,30 ----
          }
  
          if (a + b > c) { // original: a + b <= c
+             System.out.println(classifyTriangle(5,4,3));
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;

2020-11-18 13:11:24,360	[INFO]	28	PARSE_ERROR	 None	StmtInsertion({'target': ('Triangle.java.xml', 17), 'ingredient': ('Triangle.java.xml', 43), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 46), 'ingredient': ('Triangle.java.xml', 2)})
2020-11-18 13:11:24,360	[INFO]	29	SUCCESS	+4.0	
2020-11-18 13:11:24,361	[DEBUG]	
2020-11-18 13:11:26,146	[INFO]	30	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 14), 'direction': 'after'})
2020-11-18 13:11:26,148	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
+             c = tmp;
              c = tmp;
          }
  

2020-11-18 13:11:28,214	[INFO]	31	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 14), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 33)})
2020-11-18 13:11:28,216	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
+             c = tmp;
              c = tmp;
          }
  
***************
*** 42,48 ****
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
--- 43,49 ----
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));

2020-11-18 13:11:30,310	[INFO]	32	PARSE_ERROR	 None	StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 14), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 33)}) | StmtInsertion({'target': ('Triangle.java.xml', 13), 'ingredient': ('Triangle.java.xml', 5), 'direction': 'after'})
2020-11-18 13:11:32,635	[INFO]	33	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 14), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 33)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '<'})
2020-11-18 13:11:32,636	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 15,20 ****
--- 15,21 ----
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
+             c = tmp;
          }
  
          if (b > c) {
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 28,34 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b < c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 42,48 ****
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
--- 43,49 ----
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));

2020-11-18 13:11:32,637	[INFO]	34	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 14), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 33)})
2020-11-18 13:11:32,639	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
+             c = tmp;
              c = tmp;
          }
  
***************
*** 42,48 ****
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
--- 43,49 ----
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));

2020-11-18 13:11:32,640	[INFO]	35	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 14), 'direction': 'after'})
2020-11-18 13:11:32,641	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
+             c = tmp;
              c = tmp;
          }
  

2020-11-18 13:11:32,642	[INFO]	36	SUCCESS	+4.0	
2020-11-18 13:11:32,642	[DEBUG]	
2020-11-18 13:11:34,495	[INFO]	37	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'})
2020-11-18 13:11:34,496	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 47,52 ****
--- 47,53 ----
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));

2020-11-18 13:11:36,409	[INFO]	38	PARSE_ERROR	 None	StmtInsertion({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 26), 'ingredient': ('Triangle.java.xml', 44), 'direction': 'after'})
2020-11-18 13:11:38,137	[INFO]	39	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '<='})
2020-11-18 13:11:38,138	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 11,17 ****
              b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
--- 11,17 ----
              b = tmp;
          }
  
!         if (a <= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
***************
*** 47,52 ****
--- 47,53 ----
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));

2020-11-18 13:11:38,139	[INFO]	40	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'})
2020-11-18 13:11:38,140	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 47,52 ****
--- 47,53 ----
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));

2020-11-18 13:11:39,606	[INFO]	41	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | StmtDeletion({'target': ('Triangle.java.xml', 39)})
2020-11-18 13:11:39,607	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 47,54 ****
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 47,55 ----
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(100,90,90));
!       
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:11:41,064	[INFO]	42	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | StmtDeletion({'target': ('Triangle.java.xml', 39)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '<='})
2020-11-18 13:11:41,066	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 11,17 ****
              b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
--- 11,17 ----
              b = tmp;
          }
  
!         if (a <= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
***************
*** 47,54 ****
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 47,55 ----
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(100,90,90));
!       
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:11:41,068	[INFO]	43	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | StmtDeletion({'target': ('Triangle.java.xml', 39)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '<='}) | StmtDeletion({'target': ('Triangle.java.xml', 39)})
2020-11-18 13:11:41,069	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 11,17 ****
              b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
--- 11,17 ----
              b = tmp;
          }
  
!         if (a <= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
***************
*** 47,54 ****
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 47,55 ----
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(100,90,90));
!       
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:11:42,488	[INFO]	44	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | StmtDeletion({'target': ('Triangle.java.xml', 39)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '<='}) | StmtDeletion({'target': ('Triangle.java.xml', 39)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '<'})
2020-11-18 13:11:42,490	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 11,17 ****
              b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
--- 11,17 ----
              b = tmp;
          }
  
!         if (a <= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 27,33 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a < b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 47,54 ****
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 47,55 ----
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(100,90,90));
!       
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:11:44,237	[INFO]	45	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | StmtDeletion({'target': ('Triangle.java.xml', 39)}) | StmtDeletion({'target': ('Triangle.java.xml', 39)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '<'})
2020-11-18 13:11:44,239	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 27,33 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a < b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 47,54 ****
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 47,55 ----
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(100,90,90));
!       
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:11:44,240	[INFO]	46	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | StmtDeletion({'target': ('Triangle.java.xml', 39)}) | StmtDeletion({'target': ('Triangle.java.xml', 39)})
2020-11-18 13:11:44,241	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 47,54 ****
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 47,55 ----
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(100,90,90));
!       
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:11:46,229	[INFO]	47	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | StmtDeletion({'target': ('Triangle.java.xml', 39)}) | StmtDeletion({'target': ('Triangle.java.xml', 39)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '<'})
2020-11-18 13:11:46,231	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 11,17 ****
              b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
--- 11,17 ----
              b = tmp;
          }
  
!         if (a < c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
***************
*** 47,54 ****
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 47,55 ----
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(100,90,90));
!       
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:11:48,100	[INFO]	48	PARSE_ERROR	 None	StmtInsertion({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | StmtDeletion({'target': ('Triangle.java.xml', 39)}) | StmtDeletion({'target': ('Triangle.java.xml', 39)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 18)})
2020-11-18 13:11:48,102	[INFO]	49	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | StmtDeletion({'target': ('Triangle.java.xml', 39)}) | StmtDeletion({'target': ('Triangle.java.xml', 39)})
2020-11-18 13:11:48,103	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 47,54 ****
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 47,55 ----
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(100,90,90));
!       
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:11:49,846	[INFO]	50	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | StmtDeletion({'target': ('Triangle.java.xml', 39)}) | StmtDeletion({'target': ('Triangle.java.xml', 39)}) | StmtDeletion({'target': ('Triangle.java.xml', 34)})
2020-11-18 13:11:49,847	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 43,54 ****
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 43,55 ----
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
!       
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(100,90,90));
!       
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:11:49,848	[INFO]	51	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | StmtDeletion({'target': ('Triangle.java.xml', 39)}) | StmtDeletion({'target': ('Triangle.java.xml', 34)})
2020-11-18 13:11:49,849	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 43,54 ****
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 43,55 ----
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
!       
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(100,90,90));
!       
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:11:51,219	[INFO]	52	SUCCESS	+4.0	StmtDeletion({'target': ('Triangle.java.xml', 39)}) | StmtDeletion({'target': ('Triangle.java.xml', 34)})
2020-11-18 13:11:51,220	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 43,54 ****
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 43,54 ----
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
!       
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:11:52,315	[INFO]	53	PARSE_ERROR	 None	StmtDeletion({'target': ('Triangle.java.xml', 39)}) | StmtDeletion({'target': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 35), 'ingredient': ('Triangle.java.xml', 14), 'direction': 'after'})
2020-11-18 13:11:53,837	[INFO]	54	SUCCESS	+4.0	StmtDeletion({'target': ('Triangle.java.xml', 34)})
2020-11-18 13:11:53,838	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 43,49 ****
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
--- 43,49 ----
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
!       
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");

2020-11-18 13:11:53,839	[INFO]	55	SUCCESS	+4.0	StmtDeletion({'target': ('Triangle.java.xml', 34)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 19), 'value': '=='})
2020-11-18 13:11:53,840	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 43,49 ****
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
--- 43,49 ----
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
!       
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");

2020-11-18 13:11:55,255	[INFO]	56	SUCCESS	+4.0	StmtDeletion({'target': ('Triangle.java.xml', 34)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 19), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 28)})
2020-11-18 13:11:55,256	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 37,49 ****
  
      public static void main(String[] args) {
        System.out.println("INV");
!       System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
--- 37,49 ----
  
      public static void main(String[] args) {
        System.out.println("INV");
!       
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
!       
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");

2020-11-18 13:11:55,256	[INFO]	57	SUCCESS	+4.0	StmtDeletion({'target': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 28)})
2020-11-18 13:11:55,257	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 37,49 ****
  
      public static void main(String[] args) {
        System.out.println("INV");
!       System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
--- 37,49 ----
  
      public static void main(String[] args) {
        System.out.println("INV");
!       
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
!       
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");

2020-11-18 13:11:56,368	[INFO]	58	PARSE_ERROR	 None	StmtDeletion({'target': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 28)}) | StmtInsertion({'target': ('Triangle.java.xml', 31), 'ingredient': ('Triangle.java.xml', 21), 'direction': 'after'})
2020-11-18 13:11:56,369	[INFO]	59	SUCCESS	+4.0	StmtDeletion({'target': ('Triangle.java.xml', 34)})
2020-11-18 13:11:56,370	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 43,49 ****
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
--- 43,49 ----
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
!       
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");

2020-11-18 13:11:57,150	[INFO]	60	PARSE_ERROR	 None	StmtDeletion({'target': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 18)})
2020-11-18 13:11:57,151	[INFO]	61	SUCCESS	+4.0	
2020-11-18 13:11:57,151	[DEBUG]	
2020-11-18 13:11:58,606	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('Triangle.java.xml', 31), 'ingredient': ('Triangle.java.xml', 13)})
2020-11-18 13:11:58,608	[INFO]	63	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='})
2020-11-18 13:11:58,612	[DEBUG]	
2020-11-18 13:11:58,614	[INFO]	64	SUCCESS	+4.0	
2020-11-18 13:11:58,614	[DEBUG]	
2020-11-18 13:12:01,278	[INFO]	65	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 31), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'})
2020-11-18 13:12:01,281	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 40,45 ****
--- 40,46 ----
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");

2020-11-18 13:12:04,044	[INFO]	66	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 31), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '<='})
2020-11-18 13:12:04,046	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 27,33 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a <= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 40,45 ****
--- 40,46 ----
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");

2020-11-18 13:12:06,962	[INFO]	67	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 31), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '<='}) | StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)})
2020-11-18 13:12:06,964	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 27,33 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a <= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 40,52 ****
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
--- 40,53 ----
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));

2020-11-18 13:12:08,700	[INFO]	68	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 31), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '<='}) | StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)})
2020-11-18 13:12:08,702	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 27,33 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a <= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,52 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
--- 36,53 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));

2020-11-18 13:12:10,547	[INFO]	69	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 31), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '<='}) | StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)})
2020-11-18 13:12:10,548	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 27,33 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a <= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,52 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
--- 36,53 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));

2020-11-18 13:12:12,086	[INFO]	70	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 31), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '<='}) | StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '!='})
2020-11-18 13:12:12,088	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 11,17 ****
              b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
--- 11,17 ----
              b = tmp;
          }
  
!         if (a != c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 27,33 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a <= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,52 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
--- 36,53 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));

2020-11-18 13:12:13,390	[INFO]	71	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 31), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '<='}) | StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '!='}) | StmtDeletion({'target': ('Triangle.java.xml', 9)})
2020-11-18 13:12:13,392	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 11,20 ****
              b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             c = tmp;
          }
  
          if (b > c) {
--- 11,20 ----
              b = tmp;
          }
  
!         if (a != c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             
          }
  
          if (b > c) {
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 27,33 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a <= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,52 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
--- 36,53 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));

2020-11-18 13:12:14,857	[INFO]	72	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 31), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '!='}) | StmtDeletion({'target': ('Triangle.java.xml', 9)})
2020-11-18 13:12:14,859	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 11,20 ****
              b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             c = tmp;
          }
  
          if (b > c) {
--- 11,20 ----
              b = tmp;
          }
  
!         if (a != c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             
          }
  
          if (b > c) {
***************
*** 36,52 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
--- 36,53 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));

2020-11-18 13:12:16,333	[INFO]	73	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 31), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)})
2020-11-18 13:12:16,335	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 14,20 ****
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             c = tmp;
          }
  
          if (b > c) {
--- 14,20 ----
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             
          }
  
          if (b > c) {
***************
*** 36,52 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
--- 36,53 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));

2020-11-18 13:12:16,339	[INFO]	74	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 31), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='})
2020-11-18 13:12:16,340	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 14,20 ****
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             c = tmp;
          }
  
          if (b > c) {
--- 14,20 ----
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             
          }
  
          if (b > c) {
***************
*** 36,52 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
--- 36,53 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));

2020-11-18 13:12:18,037	[INFO]	75	SUCCESS	+4.0	StmtInsertion({'target': ('Triangle.java.xml', 31), 'ingredient': ('Triangle.java.xml', 35), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 45)})
2020-11-18 13:12:18,038	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 14,20 ****
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             c = tmp;
          }
  
          if (b > c) {
--- 14,20 ----
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             
          }
  
          if (b > c) {
***************
*** 36,52 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
--- 36,53 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
+       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
***************
*** 54,60 ****
        System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
!       System.out.println(classifyTriangle(3,20,21));
        System.out.println(classifyTriangle(999,501,600));
      }
  }
--- 55,61 ----
        System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
!       
        System.out.println(classifyTriangle(999,501,600));
      }
  }

2020-11-18 13:12:19,962	[INFO]	76	SUCCESS	+4.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 45)})
2020-11-18 13:12:19,966	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 14,20 ****
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             c = tmp;
          }
  
          if (b > c) {
--- 14,20 ----
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             
          }
  
          if (b > c) {
***************
*** 36,52 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
--- 36,52 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
***************
*** 54,60 ****
        System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
!       System.out.println(classifyTriangle(3,20,21));
        System.out.println(classifyTriangle(999,501,600));
      }
  }
--- 54,60 ----
        System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
!       
        System.out.println(classifyTriangle(999,501,600));
      }
  }

2020-11-18 13:12:21,500	[INFO]	77	SUCCESS	+4.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 45)}) | StmtReplacement({'target': ('Triangle.java.xml', 21), 'ingredient': ('Triangle.java.xml', 15)})
2020-11-18 13:12:21,501	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 14,20 ****
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             c = tmp;
          }
  
          if (b > c) {
--- 14,20 ----
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             
          }
  
          if (b > c) {
***************
*** 26,32 ****
--- 26,40 ----
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
+             if (a + b > c) { // original: a + b <= c
+             return TriangleType.INVALID;
+         } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
+         } else if (a == b || b == c) {
+             return TriangleType.ISOCELES;
+         } else {
+             return TriangleType.SCALENE;
+         }
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
***************
*** 36,52 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
--- 44,60 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
***************
*** 54,60 ****
        System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
!       System.out.println(classifyTriangle(3,20,21));
        System.out.println(classifyTriangle(999,501,600));
      }
  }
--- 62,68 ----
        System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
!       
        System.out.println(classifyTriangle(999,501,600));
      }
  }

2020-11-18 13:12:22,674	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 45)}) | StmtReplacement({'target': ('Triangle.java.xml', 21), 'ingredient': ('Triangle.java.xml', 15)}) | StmtDeletion({'target': ('Triangle.java.xml', 12)})
2020-11-18 13:12:22,676	[INFO]	79	SUCCESS	+4.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 45)})
2020-11-18 13:12:22,677	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 14,20 ****
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             c = tmp;
          }
  
          if (b > c) {
--- 14,20 ----
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             
          }
  
          if (b > c) {
***************
*** 36,52 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
--- 36,52 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
***************
*** 54,60 ****
        System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
!       System.out.println(classifyTriangle(3,20,21));
        System.out.println(classifyTriangle(999,501,600));
      }
  }
--- 54,60 ----
        System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
!       
        System.out.println(classifyTriangle(999,501,600));
      }
  }

2020-11-18 13:12:22,678	[INFO]	80	SUCCESS	+4.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 45)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)})
2020-11-18 13:12:22,679	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 14,20 ****
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             c = tmp;
          }
  
          if (b > c) {
--- 14,20 ----
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             
          }
  
          if (b > c) {
***************
*** 36,52 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
--- 36,52 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
***************
*** 54,60 ****
        System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
!       System.out.println(classifyTriangle(3,20,21));
        System.out.println(classifyTriangle(999,501,600));
      }
  }
--- 54,60 ----
        System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
!       
        System.out.println(classifyTriangle(999,501,600));
      }
  }

2020-11-18 13:12:24,326	[INFO]	81	SUCCESS	+4.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)})
2020-11-18 13:12:24,328	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 14,20 ****
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             c = tmp;
          }
  
          if (b > c) {
--- 14,20 ----
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             
          }
  
          if (b > c) {
***************
*** 36,52 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
--- 36,52 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));

2020-11-18 13:12:26,555	[INFO]	82	SUCCESS	+4.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)})
2020-11-18 13:12:26,557	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 14,20 ****
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             c = tmp;
          }
  
          if (b > c) {
--- 14,20 ----
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             
          }
  
          if (b > c) {
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 36,57 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:12:29,280	[INFO]	83	SUCCESS	+4.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | StmtInsertion({'target': ('Triangle.java.xml', 18), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'})
2020-11-18 13:12:29,284	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 14,20 ****
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             c = tmp;
          }
  
          if (b > c) {
--- 14,20 ----
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             
          }
  
          if (b > c) {
***************
*** 25,31 ****
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
--- 25,32 ----
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else a = c;
!         if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 37,58 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:12:29,291	[INFO]	84	SUCCESS	+4.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | StmtInsertion({'target': ('Triangle.java.xml', 18), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='})
2020-11-18 13:12:29,296	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 14,20 ****
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             c = tmp;
          }
  
          if (b > c) {
--- 14,20 ----
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             
          }
  
          if (b > c) {
***************
*** 25,31 ****
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
--- 25,32 ----
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else a = c;
!         if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 37,58 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:12:32,776	[INFO]	85	SUCCESS	+4.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | StmtInsertion({'target': ('Triangle.java.xml', 18), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)})
2020-11-18 13:12:32,780	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 14,20 ****
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             c = tmp;
          }
  
          if (b > c) {
--- 14,20 ----
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             
          }
  
          if (b > c) {
***************
*** 25,31 ****
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
--- 25,32 ----
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else a = c;
!         if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 37,58 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:12:34,470	[INFO]	86	SUCCESS	+4.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | StmtInsertion({'target': ('Triangle.java.xml', 18), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 33)})
2020-11-18 13:12:34,471	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 14,20 ****
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             c = tmp;
          }
  
          if (b > c) {
--- 14,20 ----
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             
          }
  
          if (b > c) {
***************
*** 25,31 ****
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
--- 25,32 ----
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else a = c;
!         if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
!       System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 37,58 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
!       
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:12:36,005	[INFO]	87	SUCCESS	+4.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | StmtInsertion({'target': ('Triangle.java.xml', 18), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 33)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 19), 'value': '>='})
2020-11-18 13:12:36,006	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 14,20 ****
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             c = tmp;
          }
  
          if (b > c) {
--- 14,20 ----
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             
          }
  
          if (b > c) {
***************
*** 25,31 ****
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
--- 25,32 ----
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else a = c;
!         if (a >= b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
!       System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 37,58 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
!       
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:12:38,016	[INFO]	88	SUCCESS	*3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | StmtInsertion({'target': ('Triangle.java.xml', 18), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 33)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 19), 'value': '>='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'})
2020-11-18 13:12:38,018	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 14,20 ****
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             c = tmp;
          }
  
          if (b > c) {
--- 14,24 ----
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             
!         }
! 
!         if (a == b && b == c) {
!             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 25,31 ****
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
--- 29,36 ----
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else a = c;
!         if (a >= b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
!       System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 41,62 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
!       
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:12:40,009	[INFO]	89	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | StmtInsertion({'target': ('Triangle.java.xml', 18), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 33)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 19), 'value': '>='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'})
2020-11-18 13:12:40,011	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 14,20 ****
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             c = tmp;
          }
  
          if (b > c) {
--- 14,24 ----
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             
!         }
! 
!         if (a == b && b == c) {
!             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 25,31 ****
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
--- 29,36 ----
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else a = c;
!         if (a >= b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 41,62 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:12:41,376	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | StmtInsertion({'target': ('Triangle.java.xml', 18), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 33)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 19), 'value': '>='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 7), 'direction': 'before'})
2020-11-18 13:12:43,860	[INFO]	91	SUCCESS	 4.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | StmtInsertion({'target': ('Triangle.java.xml', 18), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 33)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 19), 'value': '>='})
2020-11-18 13:12:46,247	[INFO]	92	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | StmtInsertion({'target': ('Triangle.java.xml', 18), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 33)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 19), 'value': '>='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 4)})
2020-11-18 13:12:46,250	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 8,20 ****
          if (a > b) {
              int tmp = a;
              a = b;
!             b = tmp;
          }
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             c = tmp;
          }
  
          if (b > c) {
--- 8,24 ----
          if (a > b) {
              int tmp = a;
              a = b;
!             
          }
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             
!         }
! 
!         if (a == b && b == c) {
!             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 25,31 ****
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
--- 29,36 ----
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else a = c;
!         if (a >= b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 41,62 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:12:47,783	[INFO]	93	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | StmtInsertion({'target': ('Triangle.java.xml', 18), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 33)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 19), 'value': '>='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 4)}) | StmtDeletion({'target': ('Triangle.java.xml', 30)})
2020-11-18 13:12:47,785	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 8,20 ****
          if (a > b) {
              int tmp = a;
              a = b;
!             b = tmp;
          }
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             c = tmp;
          }
  
          if (b > c) {
--- 8,24 ----
          if (a > b) {
              int tmp = a;
              a = b;
!             
          }
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             
!         }
! 
!         if (a == b && b == c) {
!             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 25,31 ****
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
--- 29,36 ----
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else a = c;
!         if (a >= b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 41,62 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:12:49,086	[INFO]	94	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | StmtInsertion({'target': ('Triangle.java.xml', 18), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 33)}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 4)}) | StmtDeletion({'target': ('Triangle.java.xml', 30)})
2020-11-18 13:12:49,088	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 8,20 ****
          if (a > b) {
              int tmp = a;
              a = b;
!             b = tmp;
          }
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             c = tmp;
          }
  
          if (b > c) {
--- 8,24 ----
          if (a > b) {
              int tmp = a;
              a = b;
!             
          }
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
!             
!         }
! 
!         if (a == b && b == c) {
!             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 25,31 ****
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
--- 29,36 ----
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else a = c;
!         if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 41,62 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:12:50,346	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | StmtInsertion({'target': ('Triangle.java.xml', 18), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 33)}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 4)}) | StmtDeletion({'target': ('Triangle.java.xml', 30)}) | StmtInsertion({'target': ('Triangle.java.xml', 4), 'ingredient': ('Triangle.java.xml', 5), 'direction': 'after'})
2020-11-18 13:12:52,019	[INFO]	96	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | StmtInsertion({'target': ('Triangle.java.xml', 18), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 33)}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 4)}) | StmtDeletion({'target': ('Triangle.java.xml', 30)})
2020-11-18 13:12:52,022	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 8,20 ****
          if (a > b) {
              int tmp = a;
              a = b;
!             b = tmp;
          }
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 8,24 ----
          if (a > b) {
              int tmp = a;
              a = b;
!             
          }
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 25,31 ****
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
--- 29,36 ----
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else a = c;
!         if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 41,62 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:12:54,250	[INFO]	97	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 33)}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 4)}) | StmtDeletion({'target': ('Triangle.java.xml', 30)})
2020-11-18 13:12:54,252	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 8,20 ****
          if (a > b) {
              int tmp = a;
              a = b;
!             b = tmp;
          }
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 8,24 ----
          if (a > b) {
              int tmp = a;
              a = b;
!             
          }
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 40,61 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:12:56,219	[INFO]	98	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 33)}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 4)}) | StmtDeletion({'target': ('Triangle.java.xml', 30)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '>'})
2020-11-18 13:12:56,222	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 8,20 ****
          if (a > b) {
              int tmp = a;
              a = b;
!             b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 8,24 ----
          if (a > b) {
              int tmp = a;
              a = b;
!             
          }
  
!         if (a > c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 40,61 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:12:58,129	[INFO]	99	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 4)}) | StmtDeletion({'target': ('Triangle.java.xml', 30)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '>'})
2020-11-18 13:12:58,132	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 8,20 ****
          if (a > b) {
              int tmp = a;
              a = b;
!             b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 8,24 ----
          if (a > b) {
              int tmp = a;
              a = b;
!             
          }
  
!         if (a > c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 40,61 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:12:59,975	[INFO]	100	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '>'})
2020-11-18 13:12:59,977	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 8,20 ****
          if (a > b) {
              int tmp = a;
              a = b;
!             b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 8,24 ----
          if (a > b) {
              int tmp = a;
              a = b;
!             
          }
  
!         if (a > c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 36,42 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
--- 40,46 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
***************
*** 45,57 ****
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 49,61 ----
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:13:01,468	[INFO]	101	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '>'}) | StmtDeletion({'target': ('Triangle.java.xml', 33)})
2020-11-18 13:13:01,469	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 8,20 ****
          if (a > b) {
              int tmp = a;
              a = b;
!             b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 8,24 ----
          if (a > b) {
              int tmp = a;
              a = b;
!             
          }
  
!         if (a > c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 40,61 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:13:03,136	[INFO]	102	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '>'}) | StmtDeletion({'target': ('Triangle.java.xml', 33)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='})
2020-11-18 13:13:03,138	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 8,20 ****
          if (a > b) {
              int tmp = a;
              a = b;
!             b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 8,24 ----
          if (a > b) {
              int tmp = a;
              a = b;
!             
          }
  
!         if (a > c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 31,37 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 40,61 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:13:04,296	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '>'}) | StmtDeletion({'target': ('Triangle.java.xml', 33)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtInsertion({'target': ('Triangle.java.xml', 7), 'ingredient': ('Triangle.java.xml', 25), 'direction': 'after'})
2020-11-18 13:13:05,669	[INFO]	104	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '>'}) | StmtDeletion({'target': ('Triangle.java.xml', 33)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 8)})
2020-11-18 13:13:05,671	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 8,20 ****
          if (a > b) {
              int tmp = a;
              a = b;
!             b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
!             a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 8,24 ----
          if (a > b) {
              int tmp = a;
              a = b;
!             
          }
  
!         if (a > c) {
              int tmp = b; // original: int tmp = a;
!             
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 31,37 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 40,61 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
!       
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:13:07,100	[INFO]	105	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '>'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 8)})
2020-11-18 13:13:07,102	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 8,20 ****
          if (a > b) {
              int tmp = a;
              a = b;
!             b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
!             a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 8,24 ----
          if (a > b) {
              int tmp = a;
              a = b;
!             
          }
  
!         if (a > c) {
              int tmp = b; // original: int tmp = a;
!             
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 31,37 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,42 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
--- 40,46 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
***************
*** 45,57 ****
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 49,61 ----
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:13:08,434	[INFO]	106	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '>'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 8)}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)})
2020-11-18 13:13:08,436	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 8,20 ****
          if (a > b) {
              int tmp = a;
              a = b;
!             b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
!             a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 8,24 ----
          if (a > b) {
              int tmp = a;
              a = b;
!             
          }
  
!         if (a > c) {
              int tmp = b; // original: int tmp = a;
!             
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 31,37 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 40,61 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:13:09,789	[INFO]	107	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '>'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 8)}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 45)})
2020-11-18 13:13:09,791	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 8,20 ****
          if (a > b) {
              int tmp = a;
              a = b;
!             b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
!             a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 8,24 ----
          if (a > b) {
              int tmp = a;
              a = b;
!             
          }
  
!         if (a > c) {
              int tmp = b; // original: int tmp = a;
!             
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 31,37 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,60 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
!       System.out.println(classifyTriangle(3,20,21));
        System.out.println(classifyTriangle(999,501,600));
      }
  }
--- 40,64 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
!       
        System.out.println(classifyTriangle(999,501,600));
      }
  }

2020-11-18 13:13:09,793	[INFO]	108	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '>'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 8)}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)})
2020-11-18 13:13:09,795	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 8,20 ****
          if (a > b) {
              int tmp = a;
              a = b;
!             b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
!             a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 8,24 ----
          if (a > b) {
              int tmp = a;
              a = b;
!             
          }
  
!         if (a > c) {
              int tmp = b; // original: int tmp = a;
!             
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 31,37 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 40,61 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:13:11,128	[INFO]	109	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 8)}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)})
2020-11-18 13:13:11,130	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 8,20 ****
          if (a > b) {
              int tmp = a;
              a = b;
!             b = tmp;
          }
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
!             a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 8,24 ----
          if (a > b) {
              int tmp = a;
              a = b;
!             
          }
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
!             
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 31,37 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 40,61 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:13:12,428	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 8)}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)}) | StmtReplacement({'target': ('Triangle.java.xml', 10), 'ingredient': ('Triangle.java.xml', 39)})
2020-11-18 13:13:12,430	[INFO]	111	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 8)}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 36)})
2020-11-18 13:13:12,432	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 8,20 ****
          if (a > b) {
              int tmp = a;
              a = b;
!             b = tmp;
          }
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
!             a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 8,24 ----
          if (a > b) {
              int tmp = a;
              a = b;
!             
          }
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
!             
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 31,37 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 40,61 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:13:12,433	[INFO]	112	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 8)}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 36)})
2020-11-18 13:13:12,435	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 8,20 ****
          if (a > b) {
              int tmp = a;
              a = b;
!             b = tmp;
          }
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
!             a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 8,24 ----
          if (a > b) {
              int tmp = a;
              a = b;
!             
          }
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
!             
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 31,37 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 40,61 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:13:12,437	[INFO]	113	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 8)}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 36)})
2020-11-18 13:13:12,438	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 8,20 ****
          if (a > b) {
              int tmp = a;
              a = b;
!             b = tmp;
          }
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
!             a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 8,24 ----
          if (a > b) {
              int tmp = a;
              a = b;
!             
          }
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
!             
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 31,37 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 40,61 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:13:13,958	[INFO]	114	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 8)}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 36)})
2020-11-18 13:13:13,961	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,20 ****
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
!             a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 13,24 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
!             
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 31,37 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 40,61 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:13:16,087	[INFO]	115	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 8)}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)})
2020-11-18 13:13:16,091	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,20 ****
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
!             a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 13,24 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
!             
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 31,37 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 40,61 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:13:18,253	[INFO]	116	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 42)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)})
2020-11-18 13:13:18,256	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              c = tmp;
          }
  
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
+         }
+ 
          if (b > c) {
              int tmp = b;
              b = c;
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 31,37 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,57 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       System.out.println("SCA");
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
--- 40,61 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
!       
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));

2020-11-18 13:13:19,866	[INFO]	117	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)})
2020-11-18 13:13:19,869	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              c = tmp;
          }
  
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
+         }
+ 
          if (b > c) {
              int tmp = b;
              b = c;
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 31,37 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,52 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
--- 40,56 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));

2020-11-18 13:13:21,677	[INFO]	118	SUCCESS	+3.0	StmtReplacement({'target': ('Triangle.java.xml', 37), 'ingredient': ('Triangle.java.xml', 38)}) | StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtReplacement({'target': ('Triangle.java.xml', 46), 'ingredient': ('Triangle.java.xml', 40)})
2020-11-18 13:13:21,679	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              c = tmp;
          }
  
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
+         }
+ 
          if (b > c) {
              int tmp = b;
              b = c;
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 31,37 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,52 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
--- 40,56 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
***************
*** 55,60 ****
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
!       System.out.println(classifyTriangle(999,501,600));
      }
  }
--- 59,64 ----
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
!       System.out.println(classifyTriangle(3,2,2));
      }
  }

2020-11-18 13:13:23,521	[INFO]	119	SUCCESS	+3.0	StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtReplacement({'target': ('Triangle.java.xml', 46), 'ingredient': ('Triangle.java.xml', 40)})
2020-11-18 13:13:23,523	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              c = tmp;
          }
  
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
+         }
+ 
          if (b > c) {
              int tmp = b;
              b = c;
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 31,37 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,51 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
--- 40,55 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
***************
*** 55,60 ****
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
!       System.out.println(classifyTriangle(999,501,600));
      }
  }
--- 59,64 ----
        System.out.println(classifyTriangle(5,4,3));
        System.out.println(classifyTriangle(1000,900,101));
        System.out.println(classifyTriangle(3,20,21));
!       System.out.println(classifyTriangle(3,2,2));
      }
  }

2020-11-18 13:13:24,675	[INFO]	120	PARSE_ERROR	 None	StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtReplacement({'target': ('Triangle.java.xml', 46), 'ingredient': ('Triangle.java.xml', 40)}) | StmtInsertion({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 15), 'direction': 'after'})
2020-11-18 13:13:26,529	[INFO]	121	SUCCESS	+3.0	StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)})
2020-11-18 13:13:26,532	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              c = tmp;
          }
  
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
+         }
+ 
          if (b > c) {
              int tmp = b;
              b = c;
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 31,37 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,51 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
--- 40,55 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));

2020-11-18 13:13:29,686	[INFO]	122	SUCCESS	+3.0	StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtReplacement({'target': ('Triangle.java.xml', 13), 'ingredient': ('Triangle.java.xml', 44)})
2020-11-18 13:13:29,691	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 17,25 ****
              c = tmp;
          }
  
          if (b > c) {
              int tmp = b;
!             b = c;
              c = tmp;
          }
  
--- 17,29 ----
              c = tmp;
          }
  
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
+         }
+ 
          if (b > c) {
              int tmp = b;
!             System.out.println(classifyTriangle(1000,900,101));
              c = tmp;
          }
  
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 31,37 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,51 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
--- 40,55 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));

2020-11-18 13:13:33,080	[INFO]	123	SUCCESS	+3.0	StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtReplacement({'target': ('Triangle.java.xml', 13), 'ingredient': ('Triangle.java.xml', 44)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'})
2020-11-18 13:13:33,083	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,25 ****
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
              int tmp = b;
!             b = c;
              c = tmp;
          }
  
--- 13,30 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
          }
  
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
+         }
+ 
          if (b > c) {
              int tmp = b;
!             System.out.println(classifyTriangle(1000,900,101));
              c = tmp;
          }
  
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 32,38 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,51 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
--- 41,56 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));

2020-11-18 13:13:35,829	[INFO]	124	SUCCESS	+3.0	StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtReplacement({'target': ('Triangle.java.xml', 13), 'ingredient': ('Triangle.java.xml', 44)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'before'})
2020-11-18 13:13:35,835	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,25 ****
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
              int tmp = b;
!             b = c;
              c = tmp;
          }
  
--- 13,30 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
          }
  
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
+         }
+ 
          if (b > c) {
              int tmp = b;
!             System.out.println(classifyTriangle(1000,900,101));
              c = tmp;
          }
  
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 32,38 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,53 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
--- 41,59 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
+       System.out.println(classifyTriangle(99,99,99));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));

2020-11-18 13:13:35,842	[INFO]	125	SUCCESS	+3.0	StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 24), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtReplacement({'target': ('Triangle.java.xml', 13), 'ingredient': ('Triangle.java.xml', 44)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'})
2020-11-18 13:13:35,847	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,25 ****
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
              int tmp = b;
!             b = c;
              c = tmp;
          }
  
--- 13,30 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
          }
  
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
+         }
+ 
          if (b > c) {
              int tmp = b;
!             System.out.println(classifyTriangle(1000,900,101));
              c = tmp;
          }
  
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 32,38 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,51 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
--- 41,56 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));

2020-11-18 13:13:35,852	[INFO]	126	SUCCESS	+3.0	StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtReplacement({'target': ('Triangle.java.xml', 13), 'ingredient': ('Triangle.java.xml', 44)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'})
2020-11-18 13:13:35,859	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,25 ****
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
              int tmp = b;
!             b = c;
              c = tmp;
          }
  
--- 13,30 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
          }
  
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
+         }
+ 
          if (b > c) {
              int tmp = b;
!             System.out.println(classifyTriangle(1000,900,101));
              c = tmp;
          }
  
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 32,38 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,51 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
--- 41,56 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));

2020-11-18 13:13:38,219	[INFO]	127	SUCCESS	+3.0	StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtReplacement({'target': ('Triangle.java.xml', 13), 'ingredient': ('Triangle.java.xml', 44)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'})
2020-11-18 13:13:38,225	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,25 ****
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
              int tmp = b;
!             b = c;
              c = tmp;
          }
  
--- 13,30 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
          }
  
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
+         }
+ 
          if (b > c) {
              int tmp = b;
!             System.out.println(classifyTriangle(1000,900,101));
              c = tmp;
          }
  
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 32,39 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
!             a = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,51 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
--- 42,57 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));

2020-11-18 13:13:39,910	[INFO]	128	SUCCESS	+3.0	StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtReplacement({'target': ('Triangle.java.xml', 13), 'ingredient': ('Triangle.java.xml', 44)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)})
2020-11-18 13:13:39,915	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,25 ****
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
              int tmp = b;
!             b = c;
              c = tmp;
          }
  
--- 13,30 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
          }
  
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
+         }
+ 
          if (b > c) {
              int tmp = b;
!             System.out.println(classifyTriangle(1000,900,101));
              c = tmp;
          }
  
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 32,39 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
!             a = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,54 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 42,60 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
!       
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:13:41,938	[INFO]	129	PARSE_ERROR	 None	StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 36)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtReplacement({'target': ('Triangle.java.xml', 13), 'ingredient': ('Triangle.java.xml', 44)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 13), 'ingredient': ('Triangle.java.xml', 10)})
2020-11-18 13:13:44,710	[INFO]	130	SUCCESS	+3.0	StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtReplacement({'target': ('Triangle.java.xml', 30), 'ingredient': ('Triangle.java.xml', 34)}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtReplacement({'target': ('Triangle.java.xml', 13), 'ingredient': ('Triangle.java.xml', 44)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)})
2020-11-18 13:13:44,712	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,25 ****
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
              int tmp = b;
!             b = c;
              c = tmp;
          }
  
--- 13,30 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
          }
  
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
+         }
+ 
          if (b > c) {
              int tmp = b;
!             System.out.println(classifyTriangle(1000,900,101));
              c = tmp;
          }
  
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 32,39 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
!             a = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,54 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 42,60 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:13:46,313	[INFO]	131	SUCCESS	+3.0	StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtReplacement({'target': ('Triangle.java.xml', 13), 'ingredient': ('Triangle.java.xml', 44)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)})
2020-11-18 13:13:46,316	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,25 ****
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
              int tmp = b;
!             b = c;
              c = tmp;
          }
  
--- 13,30 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
          }
  
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
+         }
+ 
          if (b > c) {
              int tmp = b;
!             System.out.println(classifyTriangle(1000,900,101));
              c = tmp;
          }
  
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 32,39 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
!             a = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,54 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 42,60 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:13:47,702	[INFO]	132	PARSE_ERROR	 None	StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtReplacement({'target': ('Triangle.java.xml', 13), 'ingredient': ('Triangle.java.xml', 44)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtInsertion({'target': ('Triangle.java.xml', 33), 'ingredient': ('Triangle.java.xml', 4), 'direction': 'before'})
2020-11-18 13:13:49,268	[INFO]	133	SUCCESS	+3.0	StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtReplacement({'target': ('Triangle.java.xml', 13), 'ingredient': ('Triangle.java.xml', 44)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtInsertion({'target': ('Triangle.java.xml', 27), 'ingredient': ('Triangle.java.xml', 45), 'direction': 'before'})
2020-11-18 13:13:49,271	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,25 ****
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
              int tmp = b;
!             b = c;
              c = tmp;
          }
  
--- 13,30 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
          }
  
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
+         }
+ 
          if (b > c) {
              int tmp = b;
!             System.out.println(classifyTriangle(1000,900,101));
              c = tmp;
          }
  
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 32,39 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
!             a = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,54 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 42,61 ----
      }
  
      public static void main(String[] args) {
!       System.out.println(classifyTriangle(3,20,21));
!       
        System.out.println(classifyTriangle(1,2,9));
        System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:13:50,385	[INFO]	134	PARSE_ERROR	 None	StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtReplacement({'target': ('Triangle.java.xml', 13), 'ingredient': ('Triangle.java.xml', 44)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtInsertion({'target': ('Triangle.java.xml', 27), 'ingredient': ('Triangle.java.xml', 45), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 34), 'ingredient': ('Triangle.java.xml', 14), 'direction': 'before'})
2020-11-18 13:13:52,024	[INFO]	135	SUCCESS	 4.0	StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtReplacement({'target': ('Triangle.java.xml', 13), 'ingredient': ('Triangle.java.xml', 44)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtInsertion({'target': ('Triangle.java.xml', 27), 'ingredient': ('Triangle.java.xml', 45), 'direction': 'before'})
2020-11-18 13:13:53,646	[INFO]	136	SUCCESS	+3.0	StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtReplacement({'target': ('Triangle.java.xml', 13), 'ingredient': ('Triangle.java.xml', 44)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtInsertion({'target': ('Triangle.java.xml', 27), 'ingredient': ('Triangle.java.xml', 45), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)})
2020-11-18 13:13:53,649	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,25 ****
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
              int tmp = b;
!             b = c;
              c = tmp;
          }
  
--- 13,30 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
          }
  
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
+         }
+ 
          if (b > c) {
              int tmp = b;
!             System.out.println(classifyTriangle(1000,900,101));
              c = tmp;
          }
  
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 32,39 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
!             a = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,54 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 42,61 ----
      }
  
      public static void main(String[] args) {
!       System.out.println(classifyTriangle(3,20,21));
!       
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:13:55,299	[INFO]	137	SUCCESS	+3.0	StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtReplacement({'target': ('Triangle.java.xml', 13), 'ingredient': ('Triangle.java.xml', 44)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)})
2020-11-18 13:13:55,301	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,25 ****
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
              int tmp = b;
!             b = c;
              c = tmp;
          }
  
--- 13,30 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
          }
  
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
+         }
+ 
          if (b > c) {
              int tmp = b;
!             System.out.println(classifyTriangle(1000,900,101));
              c = tmp;
          }
  
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 32,39 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
!             a = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,54 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 42,60 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:13:56,824	[INFO]	138	SUCCESS	+3.0	StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtReplacement({'target': ('Triangle.java.xml', 13), 'ingredient': ('Triangle.java.xml', 44)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'})
2020-11-18 13:13:56,826	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,25 ****
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
              int tmp = b;
!             b = c;
              c = tmp;
          }
  
--- 13,30 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
          }
  
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
+         }
+ 
          if (b > c) {
              int tmp = b;
!             System.out.println(classifyTriangle(1000,900,101));
              c = tmp;
          }
  
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 32,39 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
!             a = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 36,54 ****
      }
  
      public static void main(String[] args) {
!       System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 42,61 ----
      }
  
      public static void main(String[] args) {
!       
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:13:58,249	[INFO]	139	SUCCESS	 4.0	StmtDeletion({'target': ('Triangle.java.xml', 27)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtReplacement({'target': ('Triangle.java.xml', 13), 'ingredient': ('Triangle.java.xml', 44)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'})
2020-11-18 13:13:59,731	[INFO]	140	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtReplacement({'target': ('Triangle.java.xml', 13), 'ingredient': ('Triangle.java.xml', 44)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'})
2020-11-18 13:13:59,735	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,25 ****
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
              int tmp = b;
!             b = c;
              c = tmp;
          }
  
--- 13,30 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
          }
  
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
+         }
+ 
          if (b > c) {
              int tmp = b;
!             System.out.println(classifyTriangle(1000,900,101));
              c = tmp;
          }
  
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 32,39 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
!             a = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 38,54 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 44,61 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:14:01,490	[INFO]	141	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '=='}) | StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'})
2020-11-18 13:14:01,495	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,20 ****
--- 13,25 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 32,39 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
!             a = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 38,54 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 44,61 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:14:01,500	[INFO]	142	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>='}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'})
2020-11-18 13:14:01,504	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,20 ****
--- 13,25 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 27,33 ****
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 32,39 ----
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
!         } else if (a >= b || b == c) {
!             a = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 38,54 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 44,61 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:14:03,579	[INFO]	143	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'})
2020-11-18 13:14:03,582	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,20 ****
--- 13,25 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 28,33 ****
--- 33,39 ----
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
+             a = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 38,54 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 44,61 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:14:05,900	[INFO]	144	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'})
2020-11-18 13:14:05,903	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,20 ****
--- 13,25 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 28,33 ****
--- 33,40 ----
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
+             a = c;
+             b = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 38,54 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 45,62 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:14:08,524	[INFO]	145	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 2), 'ingredient': ('Triangle.java.xml', 28), 'direction': 'before'})
2020-11-18 13:14:08,527	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 6,11 ****
--- 6,12 ----
  
      public static TriangleType classifyTriangle(int a, int b, int c) {
          if (a > b) {
+             System.out.println(classifyTriangle(1,2,9));
              int tmp = a;
              a = b;
              b = tmp;
***************
*** 13,20 ****
--- 14,26 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 28,33 ****
--- 34,41 ----
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
+             a = c;
+             b = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 38,54 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 46,63 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:14:09,935	[INFO]	146	PARSE_ERROR	 None	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 2), 'ingredient': ('Triangle.java.xml', 28), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 21), 'direction': 'after'})
2020-11-18 13:14:11,334	[INFO]	147	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 2), 'ingredient': ('Triangle.java.xml', 28), 'direction': 'before'})
2020-11-18 13:14:11,337	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 6,11 ****
--- 6,12 ----
  
      public static TriangleType classifyTriangle(int a, int b, int c) {
          if (a > b) {
+             System.out.println(classifyTriangle(1,2,9));
              int tmp = a;
              a = b;
              b = tmp;
***************
*** 13,20 ****
--- 14,26 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 28,33 ****
--- 34,40 ----
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
+             b = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 38,54 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 45,62 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:14:12,646	[INFO]	148	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 2), 'ingredient': ('Triangle.java.xml', 28), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46), 'direction': 'after'})
2020-11-18 13:14:12,650	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 6,11 ****
--- 6,12 ----
  
      public static TriangleType classifyTriangle(int a, int b, int c) {
          if (a > b) {
+             System.out.println(classifyTriangle(1,2,9));
              int tmp = a;
              a = b;
              b = tmp;
***************
*** 13,20 ****
--- 14,26 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 28,33 ****
--- 34,40 ----
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
+             b = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 38,54 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 45,63 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:14:14,029	[INFO]	149	PARSE_ERROR	 None	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 2), 'ingredient': ('Triangle.java.xml', 28), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>'})
2020-11-18 13:14:15,283	[INFO]	150	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 2), 'ingredient': ('Triangle.java.xml', 28), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 35)})
2020-11-18 13:14:15,286	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 6,11 ****
--- 6,12 ----
  
      public static TriangleType classifyTriangle(int a, int b, int c) {
          if (a > b) {
+             System.out.println(classifyTriangle(1,2,9));
              int tmp = a;
              a = b;
              b = tmp;
***************
*** 13,20 ****
--- 14,26 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 28,33 ****
--- 34,40 ----
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
+             b = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 38,54 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
!       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 45,63 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
!       
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:14:16,065	[INFO]	151	PARSE_ERROR	 None	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 2), 'ingredient': ('Triangle.java.xml', 28), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 35)}) | StmtDeletion({'target': ('Triangle.java.xml', 18)})
2020-11-18 13:14:17,390	[INFO]	152	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 2), 'ingredient': ('Triangle.java.xml', 28), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 35)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '<'})
2020-11-18 13:14:17,393	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 6,11 ****
--- 6,12 ----
  
      public static TriangleType classifyTriangle(int a, int b, int c) {
          if (a > b) {
+             System.out.println(classifyTriangle(1,2,9));
              int tmp = a;
              a = b;
              b = tmp;
***************
*** 13,20 ****
--- 14,26 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 25,33 ****
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 31,40 ----
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else if (a == b && b < c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
+             b = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 38,54 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
!       System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 45,63 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
!       
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:14:18,707	[INFO]	153	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 2), 'ingredient': ('Triangle.java.xml', 28), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '<'})
2020-11-18 13:14:18,710	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 6,11 ****
--- 6,12 ----
  
      public static TriangleType classifyTriangle(int a, int b, int c) {
          if (a > b) {
+             System.out.println(classifyTriangle(1,2,9));
              int tmp = a;
              a = b;
              b = tmp;
***************
*** 13,20 ****
--- 14,26 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 25,33 ****
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 31,40 ----
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else if (a == b && b < c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
+             b = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 38,54 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 45,63 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:14:20,043	[INFO]	154	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 2), 'ingredient': ('Triangle.java.xml', 28), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '<'})
2020-11-18 13:14:20,045	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 6,11 ****
--- 6,12 ----
  
      public static TriangleType classifyTriangle(int a, int b, int c) {
          if (a > b) {
+             System.out.println(classifyTriangle(1,2,9));
              int tmp = a;
              a = b;
              b = tmp;
***************
*** 13,20 ****
--- 14,26 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 25,33 ****
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 31,40 ----
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else if (a == b && b < c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
+             b = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 38,54 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 45,62 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
!       
        System.out.println("EQU");
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:14:21,140	[INFO]	155	PARSE_ERROR	 None	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtDeletion({'target': ('Triangle.java.xml', 32)}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 2), 'ingredient': ('Triangle.java.xml', 28), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '<'}) | StmtReplacement({'target': ('Triangle.java.xml', 17), 'ingredient': ('Triangle.java.xml', 22)})
2020-11-18 13:14:22,477	[INFO]	156	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 2), 'ingredient': ('Triangle.java.xml', 28), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 20), 'value': '<'})
2020-11-18 13:14:22,482	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 6,11 ****
--- 6,12 ----
  
      public static TriangleType classifyTriangle(int a, int b, int c) {
          if (a > b) {
+             System.out.println(classifyTriangle(1,2,9));
              int tmp = a;
              a = b;
              b = tmp;
***************
*** 13,20 ****
--- 14,26 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 25,33 ****
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
--- 31,40 ----
  
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
!         } else if (a == b && b < c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
+             b = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 38,44 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
--- 45,52 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
***************
*** 48,54 ****
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 56,62 ----
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:14:23,890	[INFO]	157	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 2), 'ingredient': ('Triangle.java.xml', 28), 'direction': 'before'})
2020-11-18 13:14:23,892	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 6,11 ****
--- 6,12 ----
  
      public static TriangleType classifyTriangle(int a, int b, int c) {
          if (a > b) {
+             System.out.println(classifyTriangle(1,2,9));
              int tmp = a;
              a = b;
              b = tmp;
***************
*** 13,20 ****
--- 14,26 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 28,33 ****
--- 34,40 ----
          } else if (a == b && b == c) {
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
+             b = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 38,44 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
--- 45,52 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
***************
*** 48,54 ****
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 56,62 ----
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:14:24,654	[INFO]	158	PARSE_ERROR	 None	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 2), 'ingredient': ('Triangle.java.xml', 28), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 18), 'ingredient': ('Triangle.java.xml', 26)})
2020-11-18 13:14:25,993	[INFO]	159	PARSE_ERROR	 None	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 2), 'ingredient': ('Triangle.java.xml', 28), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 23), 'value': '>'})
2020-11-18 13:14:27,417	[INFO]	160	SUCCESS	 4.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 2), 'ingredient': ('Triangle.java.xml', 28), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 0), 'ingredient': ('Triangle.java.xml', 45), 'direction': 'before'})
2020-11-18 13:14:28,182	[INFO]	161	PARSE_ERROR	 None	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 2), 'ingredient': ('Triangle.java.xml', 28), 'direction': 'before'}) | StmtDeletion({'target': ('Triangle.java.xml', 18)})
2020-11-18 13:14:29,745	[INFO]	162	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 2), 'ingredient': ('Triangle.java.xml', 28), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 21), 'ingredient': ('Triangle.java.xml', 40), 'direction': 'before'})
2020-11-18 13:14:29,747	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 6,11 ****
--- 6,12 ----
  
      public static TriangleType classifyTriangle(int a, int b, int c) {
          if (a > b) {
+             System.out.println(classifyTriangle(1,2,9));
              int tmp = a;
              a = b;
              b = tmp;
***************
*** 13,20 ****
--- 14,26 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 26,33 ****
--- 32,41 ----
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
+             System.out.println(classifyTriangle(3,2,2));
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
+             b = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 38,44 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
--- 46,53 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
***************
*** 48,54 ****
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 57,63 ----
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:14:31,098	[INFO]	163	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 36), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 21), 'ingredient': ('Triangle.java.xml', 40), 'direction': 'before'})
2020-11-18 13:14:31,100	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,20 ****
--- 13,25 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 26,33 ****
--- 31,40 ----
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
+             System.out.println(classifyTriangle(3,2,2));
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
+             b = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 38,44 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
--- 45,52 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(99,99,99));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
***************
*** 48,54 ****
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 56,62 ----
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:14:32,990	[INFO]	164	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 21), 'ingredient': ('Triangle.java.xml', 40), 'direction': 'before'})
2020-11-18 13:14:32,992	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,20 ****
--- 13,25 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 26,33 ****
--- 31,40 ----
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
+             System.out.println(classifyTriangle(3,2,2));
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
+             b = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 38,44 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
--- 45,51 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
***************
*** 48,54 ****
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");
--- 55,61 ----
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
!       System.out.println(classifyTriangle(999,501,600));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
        System.out.println("SCA");

2020-11-18 13:14:34,302	[INFO]	165	PARSE_ERROR	 None	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 39), 'ingredient': ('Triangle.java.xml', 46)}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 21), 'ingredient': ('Triangle.java.xml', 40), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 26), 'ingredient': ('Triangle.java.xml', 7)})
2020-11-18 13:14:36,131	[INFO]	166	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 21), 'ingredient': ('Triangle.java.xml', 40), 'direction': 'before'})
2020-11-18 13:14:36,135	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,20 ****
--- 13,25 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 26,33 ****
--- 31,40 ----
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
+             System.out.println(classifyTriangle(3,2,2));
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
+             b = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 38,44 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
--- 45,51 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));

2020-11-18 13:14:38,114	[INFO]	167	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 21), 'ingredient': ('Triangle.java.xml', 40), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 36), 'ingredient': ('Triangle.java.xml', 30), 'direction': 'after'})
2020-11-18 13:14:38,116	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,20 ****
--- 13,25 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 26,33 ****
--- 31,40 ----
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
+             System.out.println(classifyTriangle(3,2,2));
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
+             b = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 38,44 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
--- 45,51 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
***************
*** 46,51 ****
--- 53,59 ----
        System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
+       System.out.println(classifyTriangle(1,-1,1));
        System.out.println("ISO");
        System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));

2020-11-18 13:14:38,118	[INFO]	168	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 25), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 21), 'ingredient': ('Triangle.java.xml', 40), 'direction': 'before'})
2020-11-18 13:14:38,119	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,20 ****
--- 13,25 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 26,33 ****
--- 31,40 ----
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
+             System.out.println(classifyTriangle(3,2,2));
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
+             b = c;
              return TriangleType.ISOCELES;
          } else {
              return TriangleType.SCALENE;
***************
*** 38,44 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
--- 45,51 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));

2020-11-18 13:14:40,191	[INFO]	169	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 21), 'ingredient': ('Triangle.java.xml', 40), 'direction': 'before'})
2020-11-18 13:14:40,194	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,20 ****
--- 13,25 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 26,31 ****
--- 31,37 ----
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
+             System.out.println(classifyTriangle(3,2,2));
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
***************
*** 38,44 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
--- 44,50 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));

2020-11-18 13:14:41,964	[INFO]	170	PARSE_ERROR	 None	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 21), 'ingredient': ('Triangle.java.xml', 40), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 34), 'ingredient': ('Triangle.java.xml', 17)})
2020-11-18 13:14:43,887	[INFO]	171	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 21), 'ingredient': ('Triangle.java.xml', 40), 'direction': 'before'}) | StmtDeletion({'target': ('Triangle.java.xml', 34)})
2020-11-18 13:14:43,889	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 13,20 ****
--- 13,25 ----
  
          if (a >= c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 26,31 ****
--- 31,37 ----
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
+             System.out.println(classifyTriangle(3,2,2));
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
***************
*** 38,49 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
--- 44,55 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
!       
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");

2020-11-18 13:14:45,481	[INFO]	172	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 21), 'ingredient': ('Triangle.java.xml', 40), 'direction': 'before'}) | StmtDeletion({'target': ('Triangle.java.xml', 34)}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '=='})
2020-11-18 13:14:45,483	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 11,20 ****
              b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 11,25 ----
              b = tmp;
          }
  
!         if (a == c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 26,31 ****
--- 31,37 ----
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
+             System.out.println(classifyTriangle(3,2,2));
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
***************
*** 38,49 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
--- 44,55 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
        System.out.println("EQU");
!       
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");

2020-11-18 13:14:47,505	[INFO]	173	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 21), 'ingredient': ('Triangle.java.xml', 40), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '=='})
2020-11-18 13:14:47,509	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 11,20 ****
              b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 11,25 ----
              b = tmp;
          }
  
!         if (a == c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 26,31 ****
--- 31,37 ----
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
+             System.out.println(classifyTriangle(3,2,2));
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;
***************
*** 38,44 ****
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(-1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));
--- 44,50 ----
      public static void main(String[] args) {
        System.out.println("INV");
        System.out.println(classifyTriangle(1,2,9));
!       System.out.println(classifyTriangle(1,1,1));
        System.out.println(classifyTriangle(1,-1,1));
        System.out.println(classifyTriangle(1,1,-1));
        System.out.println(classifyTriangle(100,80,10000));

2020-11-18 13:14:49,254	[INFO]	174	PARSE_ERROR	 None	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('Triangle.java.xml', 29), 'ingredient': ('Triangle.java.xml', 34)}) | StmtInsertion({'target': ('Triangle.java.xml', 21), 'ingredient': ('Triangle.java.xml', 40), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '=='}) | StmtReplacement({'target': ('Triangle.java.xml', 7), 'ingredient': ('Triangle.java.xml', 30)})
2020-11-18 13:14:50,828	[INFO]	175	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 21), 'ingredient': ('Triangle.java.xml', 40), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '=='})
2020-11-18 13:14:50,830	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 11,20 ****
              b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 11,25 ----
              b = tmp;
          }
  
!         if (a == c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 26,31 ****
--- 31,37 ----
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
+             System.out.println(classifyTriangle(3,2,2));
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;

2020-11-18 13:14:51,973	[INFO]	176	PARSE_ERROR	 None	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 21), 'ingredient': ('Triangle.java.xml', 40), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '=='}) | StmtDeletion({'target': ('Triangle.java.xml', 15)})
2020-11-18 13:14:53,365	[INFO]	177	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 21), 'ingredient': ('Triangle.java.xml', 40), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '=='}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 1), 'value': '!='})
2020-11-18 13:14:53,367	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 5,20 ****
      }
  
      public static TriangleType classifyTriangle(int a, int b, int c) {
!         if (a > b) {
              int tmp = a;
              a = b;
              b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 5,25 ----
      }
  
      public static TriangleType classifyTriangle(int a, int b, int c) {
!         if (a != b) {
              int tmp = a;
              a = b;
              b = tmp;
          }
  
!         if (a == c) {
              int tmp = b; // original: int tmp = a;
+             b = c;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 26,31 ****
--- 31,37 ----
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
+             System.out.println(classifyTriangle(3,2,2));
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;

2020-11-18 13:14:54,671	[INFO]	178	SUCCESS	 4.0	StmtInsertion({'target': ('Triangle.java.xml', 8), 'ingredient': ('Triangle.java.xml', 13), 'direction': 'before'}) | StmtInsertion({'target': ('Triangle.java.xml', 21), 'ingredient': ('Triangle.java.xml', 40), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '=='}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 1), 'value': '!='})
2020-11-18 13:14:56,016	[INFO]	179	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 21), 'ingredient': ('Triangle.java.xml', 40), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '=='}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 1), 'value': '!='})
2020-11-18 13:14:56,018	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 5,20 ****
      }
  
      public static TriangleType classifyTriangle(int a, int b, int c) {
!         if (a > b) {
              int tmp = a;
              a = b;
              b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 5,24 ----
      }
  
      public static TriangleType classifyTriangle(int a, int b, int c) {
!         if (a != b) {
              int tmp = a;
              a = b;
              b = tmp;
          }
  
!         if (a == c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 26,31 ****
--- 30,36 ----
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
+             System.out.println(classifyTriangle(3,2,2));
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;

2020-11-18 13:14:57,293	[INFO]	180	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 21), 'ingredient': ('Triangle.java.xml', 40), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '=='})
2020-11-18 13:14:57,295	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 11,20 ****
              b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 11,24 ----
              b = tmp;
          }
  
!         if (a == c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 26,31 ****
--- 30,36 ----
          if (a + b > c) { // original: a + b <= c
              return TriangleType.INVALID;
          } else if (a == b && b == c) {
+             System.out.println(classifyTriangle(3,2,2));
              return TriangleType.EQUALATERAL;
          } else if (a == b || b == c) {
              return TriangleType.ISOCELES;

2020-11-18 13:14:58,622	[INFO]	181	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 6), 'value': '=='})
2020-11-18 13:14:58,623	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 11,20 ****
              b = tmp;
          }
  
!         if (a >= c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
          }
  
          if (b > c) {
--- 11,24 ----
              b = tmp;
          }
  
!         if (a == c) {
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {

2020-11-18 13:15:00,017	[INFO]	182	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'})
2020-11-18 13:15:00,019	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 15,20 ****
--- 15,24 ----
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {

2020-11-18 13:15:00,019	[INFO]	183	SUCCESS	 4.0	
2020-11-18 13:15:01,210	[INFO]	184	PARSE_ERROR	 None	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 42), 'ingredient': ('Triangle.java.xml', 0), 'direction': 'after'})
2020-11-18 13:15:02,323	[INFO]	185	PARSE_ERROR	 None	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtReplacement({'target': ('Triangle.java.xml', 12), 'ingredient': ('Triangle.java.xml', 42)})
2020-11-18 13:15:03,704	[INFO]	186	SUCCESS	 4.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 0), 'ingredient': ('Triangle.java.xml', 31), 'direction': 'after'})
2020-11-18 13:15:05,044	[INFO]	187	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtReplacement({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 37)})
2020-11-18 13:15:05,045	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 15,20 ****
--- 15,24 ----
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {
***************
*** 47,53 ****
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
!       System.out.println(classifyTriangle(100,90,90));
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));
--- 51,57 ----
        System.out.println(classifyTriangle(100,100,100));
        System.out.println(classifyTriangle(99,99,99));
        System.out.println("ISO");
!       System.out.println("ISO");
        System.out.println(classifyTriangle(1000,900,900));
        System.out.println(classifyTriangle(3,2,2));
        System.out.println(classifyTriangle(30,16,16));

2020-11-18 13:15:06,374	[INFO]	188	SUCCESS	 4.0	StmtReplacement({'target': ('Triangle.java.xml', 38), 'ingredient': ('Triangle.java.xml', 37)})
2020-11-18 13:15:06,376	[INFO]	189	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'})
2020-11-18 13:15:06,377	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 15,20 ****
--- 15,24 ----
              int tmp = b; // original: int tmp = a;
              a = c;
              c = tmp;
+         }
+ 
+         if (a == b && b == c) {
+             return TriangleType.EQUALATERAL;
          }
  
          if (b > c) {

2020-11-18 13:15:07,502	[INFO]	190	PARSE_ERROR	 None	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | StmtInsertion({'target': ('Triangle.java.xml', 46), 'ingredient': ('Triangle.java.xml', 12), 'direction': 'after'})
2020-11-18 13:15:07,503	[INFO]	191	SUCCESS	 4.0	
2020-11-18 13:15:08,828	[INFO]	192	SUCCESS	+3.0	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 11), 'value': '<'})
2020-11-18 13:15:08,830	[DEBUG]	*** before: Triangle.java.xml
--- after: Triangle.java.xml
***************
*** 17,23 ****
              c = tmp;
          }
  
!         if (b > c) {
              int tmp = b;
              b = c;
              c = tmp;
--- 17,27 ----
              c = tmp;
          }
  
!         if (a == b && b == c) {
!             return TriangleType.EQUALATERAL;
!         }
! 
!         if (b < c) {
              int tmp = b;
              b = c;
              c = tmp;

2020-11-18 13:15:10,004	[INFO]	193	PARSE_ERROR	 None	StmtInsertion({'target': ('Triangle.java.xml', 5), 'ingredient': ('Triangle.java.xml', 18), 'direction': 'after'}) | ComparisonOperatorSetting({'target': ('Triangle.java.xml', 11), 'value': '<'}) | StmtReplacement({'target': ('Triangle.java.xml', 28), 'ingredient': ('Triangle.java.xml', 26)})
2020-11-18 13:15:10,835	[INFO]	==== END ====
2020-11-18 13:15:10,835	[INFO]	Reason: None
2020-11-18 13:15:10,835	[INFO]	========== REPORT ==========
