2020-12-14 17:22:06,082	[INFO]	Path to the temporal program variants: ./.pyggi/tmp_variants/QuixBugs/1607962926
2020-12-14 17:22:06,082	[INFO]	========== EXPERIMENT FOR ['java_programs/LIS.java.xml']  ==========
2020-12-14 17:22:06,082	[INFO]	modification points:
 ['./decl_stmt[1]', './decl_stmt[2]', './decl_stmt[3]', './for[1]', './for[1]/decl_stmt[1]', './for[1]/for[1]', './for[1]/for[1]/operator_comp[1]', './for[1]/for[1]/if[1]', './for[1]/for[1]/if[1]/operator_comp[1]', './for[1]/for[1]/if[1]/expr_stmt[1]', './for[1]/decl_stmt[2]', './for[1]/if[1]', './for[1]/if[1]/operator_comp[1]', './for[1]/if[1]/operator_comp[2]', './for[1]/if[1]/expr_stmt[1]', './for[1]/if[1]/expr_stmt[2]', './for[1]/expr_stmt[1]', './return[1]']
2020-12-14 17:22:06,082	[INFO]	number of statements and comparisons: 14, 4
2020-12-14 17:22:06,082	[INFO]	========== EPOCH 1 ==========
2020-12-14 17:22:06,083	[INFO]	==== WARMUP ====
2020-12-14 17:22:09,274	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:22:09,275	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:22:12,418	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:22:12,419	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:22:15,477	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:22:15,477	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:22:18,676	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-14 17:22:18,676	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:22:18,676	[INFO]	==== START ====
2020-12-14 17:22:19,573	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:22:20,530	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:22:21,484	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:22:24,597	[INFO]	4	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:22:24,599	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,28 ****
--- 23,33 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  

2020-12-14 17:22:24,602	[INFO]	5	SUCCESS	+13.0	
2020-12-14 17:22:24,602	[DEBUG]	
2020-12-14 17:22:25,555	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:22:26,495	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:22:27,440	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:22:28,415	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:22:29,354	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:22:30,307	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:22:31,271	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:22:32,294	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:22:33,282	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:22:34,245	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:22:35,195	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:22:36,180	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:22:37,116	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:22:38,079	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:22:38,988	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:22:39,891	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:22:40,825	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:22:41,819	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:22:44,930	[INFO]	24	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:22:45,871	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:22:46,814	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:22:47,793	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:22:47,795	[INFO]	28	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:22:47,796	[DEBUG]	
2020-12-14 17:22:47,796	[INFO]	29	SUCCESS	+13.0	
2020-12-14 17:22:47,797	[DEBUG]	
2020-12-14 17:22:50,975	[INFO]	30	SUCCESS	 24.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:22:54,066	[INFO]	31	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:22:57,186	[INFO]	32	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:22:58,097	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:22:59,090	[INFO]	34	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:23:02,203	[INFO]	35	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:23:05,451	[INFO]	36	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:23:05,453	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             longest = length + 1;
+ 
              i++;
          }
          return longest;

2020-12-14 17:23:06,359	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:23:06,360	[INFO]	38	SUCCESS	+13.0	
2020-12-14 17:23:06,360	[DEBUG]	
2020-12-14 17:23:07,321	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:23:08,285	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:23:09,230	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:23:12,412	[INFO]	42	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:23:12,413	[INFO]	43	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:23:13,315	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:23:14,277	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:23:17,429	[INFO]	46	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:23:18,362	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:23:21,442	[INFO]	48	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:23:22,373	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:23:22,375	[INFO]	50	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:23:22,376	[DEBUG]	
2020-12-14 17:23:23,344	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:23:23,348	[INFO]	52	SUCCESS	+13.0	
2020-12-14 17:23:23,348	[DEBUG]	
2020-12-14 17:23:24,307	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:23:27,533	[INFO]	54	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:23:28,415	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:23:29,366	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:23:30,309	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:23:31,273	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:23:32,291	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:23:32,294	[INFO]	60	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:23:32,294	[DEBUG]	
2020-12-14 17:23:32,296	[INFO]	61	SUCCESS	+13.0	
2020-12-14 17:23:32,296	[DEBUG]	
2020-12-14 17:23:33,262	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:23:34,199	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:23:35,138	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:23:38,382	[INFO]	65	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:23:38,383	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 17:23:38,384	[INFO]	66	SUCCESS	+13.0	
2020-12-14 17:23:38,384	[DEBUG]	
2020-12-14 17:23:39,265	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:23:40,228	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:23:41,188	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:23:42,147	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:23:45,201	[INFO]	71	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:23:46,163	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:23:49,324	[INFO]	73	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:23:50,273	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:23:51,223	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:23:52,157	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:23:55,258	[INFO]	77	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:23:55,259	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-14 17:23:58,374	[INFO]	78	SUCCESS	 19.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:24:01,424	[INFO]	79	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:24:02,373	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:24:02,374	[INFO]	81	SUCCESS	+13.0	
2020-12-14 17:24:02,374	[DEBUG]	
2020-12-14 17:24:02,375	[INFO]	82	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-14 17:24:02,375	[DEBUG]	
2020-12-14 17:24:02,376	[INFO]	83	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:24:02,377	[INFO]	84	SUCCESS	+13.0	
2020-12-14 17:24:02,377	[DEBUG]	
2020-12-14 17:24:05,553	[INFO]	85	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:24:06,434	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:24:09,577	[INFO]	87	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:24:09,578	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-14 17:24:10,488	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:24:11,462	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:24:12,416	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:24:12,417	[INFO]	91	SUCCESS	+13.0	
2020-12-14 17:24:12,417	[DEBUG]	
2020-12-14 17:24:13,348	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:24:14,267	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:24:17,426	[INFO]	94	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-14 17:24:18,334	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:24:19,247	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:24:20,212	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:24:21,155	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:24:24,378	[INFO]	99	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:24:25,279	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:24:28,366	[INFO]	101	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-14 17:24:29,305	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:24:30,251	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:24:33,532	[INFO]	104	SUCCESS	*10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:24:33,533	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:24:33,533	[INFO]	105	SUCCESS	 13.0	
2020-12-14 17:24:34,474	[INFO]	106	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:24:35,430	[INFO]	107	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:24:36,385	[INFO]	108	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:24:37,326	[INFO]	109	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:24:37,327	[INFO]	110	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-14 17:24:37,328	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:24:38,289	[INFO]	111	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:24:38,291	[INFO]	112	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-14 17:24:41,570	[INFO]	113	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:24:41,571	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:24:44,667	[INFO]	114	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:24:45,581	[INFO]	115	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:24:46,516	[INFO]	116	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:24:47,481	[INFO]	117	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:24:47,483	[INFO]	118	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:24:47,483	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:24:47,484	[INFO]	119	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:24:47,484	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:24:47,485	[INFO]	120	SUCCESS	 13.0	
2020-12-14 17:24:48,477	[INFO]	121	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:24:51,616	[INFO]	122	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:24:52,524	[INFO]	123	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:24:52,526	[INFO]	124	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:24:52,526	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:24:55,702	[INFO]	125	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:24:55,703	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,32 ****
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 23,37 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:24:55,704	[INFO]	126	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:24:55,704	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:24:56,664	[INFO]	127	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:24:56,666	[INFO]	128	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:24:56,666	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:24:56,666	[INFO]	129	SUCCESS	 13.0	
2020-12-14 17:24:57,625	[INFO]	130	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:25:00,835	[INFO]	131	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:25:01,699	[INFO]	132	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:25:02,664	[INFO]	133	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:25:03,601	[INFO]	134	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:25:04,559	[INFO]	135	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:25:07,645	[INFO]	136	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:25:10,892	[INFO]	137	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:25:10,894	[INFO]	138	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:25:10,894	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:25:10,895	[INFO]	139	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:25:10,896	[INFO]	140	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:25:10,896	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:25:11,836	[INFO]	141	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:25:12,780	[INFO]	142	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:25:12,782	[INFO]	143	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:25:12,782	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:25:12,783	[INFO]	144	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:25:12,784	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:25:12,785	[INFO]	145	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:25:12,787	[INFO]	146	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:25:12,787	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:25:12,789	[INFO]	147	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:25:12,789	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:25:12,790	[INFO]	148	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:25:12,791	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:25:13,749	[INFO]	149	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:25:13,752	[INFO]	150	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:25:13,753	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:25:13,754	[INFO]	151	SUCCESS	 13.0	
2020-12-14 17:25:14,644	[INFO]	152	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:25:14,649	[INFO]	153	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:25:14,652	[INFO]	154	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:25:14,653	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:25:15,606	[INFO]	155	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:25:15,607	[INFO]	156	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:25:15,607	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:25:15,608	[INFO]	157	SUCCESS	 13.0	
2020-12-14 17:25:15,609	[INFO]	158	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:25:16,519	[INFO]	159	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:25:19,653	[INFO]	160	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:25:19,654	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,33 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:25:22,717	[INFO]	161	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:25:23,649	[INFO]	162	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:25:24,607	[INFO]	163	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:25:25,594	[INFO]	164	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:25:25,597	[INFO]	165	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:25:25,598	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:25:26,555	[INFO]	166	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:25:26,558	[INFO]	167	SUCCESS	 13.0	
2020-12-14 17:25:29,689	[INFO]	168	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:25:29,690	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
!                     prefix_lengths.add(j);
!                 }
!             }
! 
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:25:30,667	[INFO]	169	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:25:33,876	[INFO]	170	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:25:33,877	[INFO]	171	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:25:33,877	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:25:33,878	[INFO]	172	SUCCESS	 13.0	
2020-12-14 17:25:34,798	[INFO]	173	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:25:38,785	[INFO]	174	SUCCESS	 18.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:25:40,096	[INFO]	175	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:25:41,337	[INFO]	176	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:25:42,668	[INFO]	177	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:25:43,714	[INFO]	178	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:25:44,964	[INFO]	179	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:25:46,068	[INFO]	180	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:25:46,919	[INFO]	181	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:25:47,873	[INFO]	182	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:25:48,856	[INFO]	183	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:25:49,839	[INFO]	184	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:25:50,809	[INFO]	185	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:25:51,781	[INFO]	186	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:25:52,746	[INFO]	187	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:25:53,792	[INFO]	188	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:25:55,061	[INFO]	189	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:25:56,062	[INFO]	190	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:25:57,028	[INFO]	191	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:25:57,030	[INFO]	192	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-14 17:25:57,030	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:25:58,015	[INFO]	193	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:25:58,018	[INFO]	194	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:25:58,019	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:25:58,961	[INFO]	195	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:25:58,962	[INFO]	196	SUCCESS	 13.0	
2020-12-14 17:25:59,957	[INFO]	197	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:26:00,916	[INFO]	198	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:26:04,032	[INFO]	199	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-14 17:26:04,034	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:26:04,036	[INFO]	200	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:26:04,036	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:26:04,038	[INFO]	201	SUCCESS	 13.0	
2020-12-14 17:26:04,953	[INFO]	202	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:26:05,909	[INFO]	203	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:26:05,915	[INFO]	204	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:26:09,052	[INFO]	205	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:26:09,994	[INFO]	206	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:26:10,985	[INFO]	207	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:26:11,936	[INFO]	208	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:26:12,913	[INFO]	209	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:26:13,870	[INFO]	210	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:26:14,846	[INFO]	211	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:26:15,784	[INFO]	212	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:26:16,723	[INFO]	213	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:26:16,725	[INFO]	214	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:26:16,727	[INFO]	215	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:26:17,648	[INFO]	216	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:26:18,651	[INFO]	217	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:26:21,778	[INFO]	218	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:26:21,779	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-14 17:26:21,780	[INFO]	219	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:26:21,780	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:26:21,781	[INFO]	220	SUCCESS	 13.0	
2020-12-14 17:26:22,733	[INFO]	221	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:26:23,682	[INFO]	222	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:26:24,652	[INFO]	223	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:26:25,610	[INFO]	224	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:26:26,551	[INFO]	225	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:26:27,528	[INFO]	226	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:26:28,494	[INFO]	227	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:26:29,467	[INFO]	228	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:26:30,435	[INFO]	229	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:26:31,373	[INFO]	230	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:26:32,388	[INFO]	231	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:26:33,389	[INFO]	232	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:26:34,334	[INFO]	233	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:26:34,336	[INFO]	234	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:26:35,297	[INFO]	235	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:26:38,425	[INFO]	236	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:26:41,563	[INFO]	237	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:26:41,565	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,32 ****
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 22,35 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:26:42,483	[INFO]	238	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:26:45,615	[INFO]	239	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:26:46,561	[INFO]	240	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:26:49,771	[INFO]	241	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 17:26:49,772	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,32 ****
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 22,35 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:26:52,844	[INFO]	242	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 17:26:53,801	[INFO]	243	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:26:54,771	[INFO]	244	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:26:55,758	[INFO]	245	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:26:55,762	[INFO]	246	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-14 17:26:55,763	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,32 ****
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 22,35 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:26:55,765	[INFO]	247	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 17:26:55,767	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,32 ****
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 22,35 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:26:56,730	[INFO]	248	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:26:59,899	[INFO]	249	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:26:59,900	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,33 ****
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 22,41 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-14 17:27:02,933	[INFO]	250	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:27:02,934	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-14 17:27:05,971	[INFO]	251	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 17:27:05,971	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:27:05,972	[INFO]	252	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:27:05,973	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:27:06,935	[INFO]	253	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:27:07,931	[INFO]	254	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:27:08,881	[INFO]	255	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:27:09,868	[INFO]	256	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:27:09,869	[INFO]	257	SUCCESS	 13.0	
2020-12-14 17:27:10,836	[INFO]	258	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:27:14,015	[INFO]	259	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:27:14,933	[INFO]	260	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:27:15,923	[INFO]	261	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:27:16,914	[INFO]	262	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:27:20,016	[INFO]	263	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:27:20,914	[INFO]	264	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:27:21,879	[INFO]	265	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:27:22,854	[INFO]	266	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:27:25,974	[INFO]	267	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:27:26,915	[INFO]	268	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:27:27,867	[INFO]	269	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:27:28,824	[INFO]	270	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:27:29,785	[INFO]	271	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:27:30,735	[INFO]	272	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:27:31,683	[INFO]	273	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:27:31,686	[INFO]	274	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:27:31,687	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:27:32,774	[INFO]	275	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:27:33,968	[INFO]	276	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:27:33,970	[INFO]	277	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:27:33,970	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:27:34,923	[INFO]	278	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:27:38,032	[INFO]	279	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:27:38,994	[INFO]	280	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:27:39,958	[INFO]	281	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:27:40,906	[INFO]	282	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:27:40,910	[INFO]	283	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:27:40,911	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:27:40,914	[INFO]	284	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:27:40,915	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:27:41,862	[INFO]	285	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:27:42,811	[INFO]	286	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:27:42,812	[INFO]	287	SUCCESS	 13.0	
2020-12-14 17:27:42,813	[INFO]	288	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:27:43,781	[INFO]	289	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:27:44,745	[INFO]	290	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:27:45,713	[INFO]	291	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:27:46,591	[INFO]	292	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:27:47,573	[INFO]	293	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:27:48,518	[INFO]	294	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:27:49,463	[INFO]	295	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:27:49,465	[INFO]	296	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:27:50,419	[INFO]	297	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:27:51,443	[INFO]	298	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:27:52,419	[INFO]	299	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:27:53,383	[INFO]	300	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:27:56,499	[INFO]	301	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:27:57,355	[INFO]	302	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:28:00,429	[INFO]	303	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:28:00,431	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:28:00,434	[INFO]	304	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:28:00,435	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:28:01,421	[INFO]	305	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:28:02,313	[INFO]	306	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:28:03,258	[INFO]	307	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:28:04,202	[INFO]	308	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:28:05,176	[INFO]	309	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:28:08,344	[INFO]	310	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:28:09,263	[INFO]	311	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:28:09,264	[INFO]	312	SUCCESS	 13.0	
2020-12-14 17:28:10,242	[INFO]	313	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:28:11,213	[INFO]	314	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:28:12,183	[INFO]	315	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:28:13,092	[INFO]	316	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:28:16,221	[INFO]	317	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-14 17:28:17,159	[INFO]	318	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:28:20,366	[INFO]	319	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:28:23,485	[INFO]	320	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-14 17:28:26,525	[INFO]	321	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 17:28:26,526	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:28:29,707	[INFO]	322	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 17:28:32,795	[INFO]	323	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:28:33,774	[INFO]	324	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:28:33,776	[INFO]	325	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:28:33,776	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:28:34,720	[INFO]	326	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:28:34,722	[INFO]	327	SUCCESS	 13.0	
2020-12-14 17:28:35,670	[INFO]	328	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:28:36,633	[INFO]	329	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:28:37,620	[INFO]	330	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:28:38,619	[INFO]	331	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:28:39,582	[INFO]	332	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:28:40,461	[INFO]	333	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:28:40,463	[INFO]	334	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:28:40,463	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:28:40,464	[INFO]	335	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:28:40,465	[INFO]	336	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:28:40,465	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:28:40,466	[INFO]	337	SUCCESS	 13.0	
2020-12-14 17:28:41,444	[INFO]	338	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:28:42,388	[INFO]	339	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:28:45,495	[INFO]	340	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:28:45,496	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-14 17:28:45,497	[INFO]	341	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:28:45,497	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:28:46,462	[INFO]	342	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:28:46,466	[INFO]	343	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:28:47,397	[INFO]	344	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:28:47,398	[INFO]	345	SUCCESS	 13.0	
2020-12-14 17:28:48,366	[INFO]	346	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:28:49,340	[INFO]	347	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:28:52,483	[INFO]	348	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:28:53,381	[INFO]	349	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:28:54,341	[INFO]	350	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:28:55,309	[INFO]	351	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:28:56,270	[INFO]	352	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:28:59,423	[INFO]	353	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-14 17:29:00,353	[INFO]	354	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:29:01,294	[INFO]	355	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:29:04,444	[INFO]	356	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:29:05,383	[INFO]	357	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:29:06,340	[INFO]	358	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:29:07,174	[INFO]	359	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:29:08,134	[INFO]	360	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:29:09,067	[INFO]	361	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:29:10,050	[INFO]	362	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:29:11,035	[INFO]	363	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:29:11,946	[INFO]	364	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:29:12,912	[INFO]	365	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:29:13,862	[INFO]	366	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:29:14,806	[INFO]	367	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:29:17,918	[INFO]	368	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:29:17,920	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
!                     prefix_lengths.add(j);
!                 }
!             }
! 
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:29:17,922	[INFO]	369	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:29:17,923	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:29:18,888	[INFO]	370	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:29:18,891	[INFO]	371	SUCCESS	 13.0	
2020-12-14 17:29:19,835	[INFO]	372	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:29:20,797	[INFO]	373	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:29:20,800	[INFO]	374	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:29:20,802	[INFO]	375	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:29:21,787	[INFO]	376	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:29:22,733	[INFO]	377	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:29:23,709	[INFO]	378	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:29:24,702	[INFO]	379	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:29:25,583	[INFO]	380	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:29:26,560	[INFO]	381	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:29:27,495	[INFO]	382	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:29:28,455	[INFO]	383	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:29:31,618	[INFO]	384	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:29:34,747	[INFO]	385	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:29:34,748	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 21,32 ****
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 21,33 ----
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                     prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:29:35,718	[INFO]	386	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:29:38,867	[INFO]	387	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:29:39,813	[INFO]	388	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:29:39,816	[INFO]	389	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:29:39,817	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:29:39,818	[INFO]	390	SUCCESS	 13.0	
2020-12-14 17:29:40,775	[INFO]	391	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:29:41,732	[INFO]	392	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:29:42,688	[INFO]	393	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:29:43,644	[INFO]	394	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:29:44,637	[INFO]	395	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:29:47,777	[INFO]	396	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:29:48,728	[INFO]	397	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:29:49,714	[INFO]	398	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:29:52,818	[INFO]	399	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:29:53,719	[INFO]	400	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:29:54,681	[INFO]	401	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:29:55,623	[INFO]	402	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:29:56,582	[INFO]	403	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:29:57,581	[INFO]	404	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:29:58,517	[INFO]	405	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:29:58,519	[INFO]	406	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:30:01,655	[INFO]	407	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-14 17:30:02,582	[INFO]	408	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:30:03,552	[INFO]	409	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:30:04,515	[INFO]	410	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:30:05,485	[INFO]	411	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:30:08,635	[INFO]	412	SUCCESS	 17.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:30:09,613	[INFO]	413	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:30:10,628	[INFO]	414	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:30:11,588	[INFO]	415	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:30:12,566	[INFO]	416	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:30:13,495	[INFO]	417	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:30:14,478	[INFO]	418	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:30:15,417	[INFO]	419	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:30:16,401	[INFO]	420	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:30:17,357	[INFO]	421	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:30:18,314	[INFO]	422	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:30:19,231	[INFO]	423	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:30:20,230	[INFO]	424	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:30:21,222	[INFO]	425	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:30:22,195	[INFO]	426	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:30:22,199	[INFO]	427	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:30:22,200	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:30:22,201	[INFO]	428	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:30:22,202	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:30:22,203	[INFO]	429	SUCCESS	 13.0	
2020-12-14 17:30:23,103	[INFO]	430	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:30:24,075	[INFO]	431	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:30:24,077	[INFO]	432	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:30:24,079	[INFO]	433	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:30:25,051	[INFO]	434	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:30:25,052	[INFO]	435	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:30:25,053	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:30:26,010	[INFO]	436	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:30:26,011	[INFO]	437	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:30:26,011	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:30:26,012	[INFO]	438	SUCCESS	 13.0	
2020-12-14 17:30:29,183	[INFO]	439	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:30:29,184	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-14 17:30:29,184	[INFO]	==== END ====
2020-12-14 17:30:29,184	[INFO]	Reason: target fitness reached
2020-12-14 17:30:29,185	[INFO]	
2020-12-14 17:30:29,185	[INFO]	========== EPOCH 2 ==========
2020-12-14 17:30:29,185	[INFO]	==== WARMUP ====
2020-12-14 17:30:32,313	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:30:32,313	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:30:35,612	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:30:35,612	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:30:39,310	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:30:39,310	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:30:42,574	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-14 17:30:42,575	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:30:42,575	[INFO]	==== START ====
2020-12-14 17:30:43,496	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:30:44,474	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:30:45,417	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:30:48,539	[INFO]	4	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:30:49,512	[INFO]	5	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:30:49,514	[INFO]	6	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:30:49,514	[DEBUG]	
2020-12-14 17:30:49,515	[INFO]	7	SUCCESS	+13.0	
2020-12-14 17:30:49,515	[DEBUG]	
2020-12-14 17:30:50,481	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:30:51,447	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:30:52,357	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:30:53,308	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:30:54,242	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:30:55,203	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:30:56,178	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:30:59,496	[INFO]	15	SUCCESS	 29.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:31:00,812	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:31:02,005	[INFO]	17	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:31:03,274	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:31:04,274	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:31:05,226	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:31:06,180	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:31:07,129	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:31:10,332	[INFO]	23	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:31:11,331	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:31:12,324	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:31:13,160	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:31:14,114	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:31:15,076	[INFO]	28	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:31:16,046	[INFO]	29	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:31:16,050	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:31:16,974	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:31:20,117	[INFO]	32	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-14 17:31:20,989	[INFO]	33	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:31:24,085	[INFO]	34	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:31:24,930	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:31:25,928	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:31:25,930	[INFO]	37	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-14 17:31:25,930	[DEBUG]	
2020-12-14 17:31:25,930	[INFO]	38	SUCCESS	+13.0	
2020-12-14 17:31:25,931	[DEBUG]	
2020-12-14 17:31:25,932	[INFO]	39	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:31:25,932	[DEBUG]	
2020-12-14 17:31:26,909	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:31:26,910	[INFO]	41	SUCCESS	+13.0	
2020-12-14 17:31:26,911	[DEBUG]	
2020-12-14 17:31:27,870	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:31:28,834	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:31:31,995	[INFO]	44	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:31:32,978	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:31:33,907	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:31:34,869	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:31:34,873	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:31:35,833	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:31:36,991	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:31:37,952	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:31:38,925	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:31:39,824	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:31:43,002	[INFO]	54	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:31:43,953	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:31:44,895	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:31:45,814	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:31:46,758	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:31:49,891	[INFO]	59	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:31:49,891	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-14 17:31:49,892	[INFO]	60	SUCCESS	+13.0	
2020-12-14 17:31:49,892	[DEBUG]	
2020-12-14 17:31:50,878	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:31:50,881	[INFO]	62	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:31:50,882	[DEBUG]	
2020-12-14 17:31:50,883	[INFO]	63	SUCCESS	+13.0	
2020-12-14 17:31:50,884	[DEBUG]	
2020-12-14 17:31:51,854	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:31:52,768	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:31:55,896	[INFO]	66	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-14 17:31:56,835	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:31:57,793	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:31:58,716	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:32:01,874	[INFO]	70	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:32:01,876	[INFO]	71	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:32:01,877	[DEBUG]	
2020-12-14 17:32:01,878	[INFO]	72	SUCCESS	+13.0	
2020-12-14 17:32:01,879	[DEBUG]	
2020-12-14 17:32:02,850	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:32:03,796	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:32:03,799	[INFO]	75	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:32:03,800	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-14 17:32:04,741	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:32:05,717	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:32:05,720	[INFO]	78	SUCCESS	+13.0	
2020-12-14 17:32:05,721	[DEBUG]	
2020-12-14 17:32:06,660	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:32:09,816	[INFO]	80	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-14 17:32:10,771	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:32:13,891	[INFO]	82	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-14 17:32:13,892	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:32:14,835	[INFO]	83	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:32:15,776	[INFO]	84	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:32:15,777	[INFO]	85	SUCCESS	+13.0	
2020-12-14 17:32:15,777	[DEBUG]	
2020-12-14 17:32:18,913	[INFO]	86	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:32:19,851	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:32:20,813	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:32:21,768	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:32:22,669	[INFO]	90	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:32:23,597	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:32:24,487	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:32:25,441	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:32:28,557	[INFO]	94	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:32:28,558	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-14 17:32:28,559	[INFO]	95	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-14 17:32:28,560	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-14 17:32:29,469	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:32:29,470	[INFO]	97	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:32:29,471	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-14 17:32:29,471	[INFO]	98	SUCCESS	+13.0	
2020-12-14 17:32:29,472	[DEBUG]	
2020-12-14 17:32:30,429	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:32:31,358	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:32:32,367	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:32:35,531	[INFO]	102	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:32:36,418	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:32:37,351	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:32:38,285	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:32:39,289	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:32:42,402	[INFO]	107	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:32:42,403	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                     prefix_lengths.add(j);
                  }
              }
  

2020-12-14 17:32:42,404	[INFO]	108	SUCCESS	+13.0	
2020-12-14 17:32:42,404	[DEBUG]	
2020-12-14 17:32:43,339	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:32:44,283	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:32:45,234	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:32:48,334	[INFO]	112	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:32:51,414	[INFO]	113	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:32:52,349	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:32:53,298	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:32:54,257	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:32:54,261	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:32:55,235	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:32:56,205	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:32:56,206	[INFO]	120	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-14 17:32:56,207	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:32:56,207	[INFO]	121	SUCCESS	+13.0	
2020-12-14 17:32:56,208	[DEBUG]	
2020-12-14 17:32:59,386	[INFO]	122	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-14 17:33:00,632	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:33:01,629	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:33:02,589	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:33:03,516	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:33:06,634	[INFO]	127	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:33:07,614	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:33:08,585	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:33:11,698	[INFO]	130	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:33:11,701	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             ends.put(length+1, i);
+ 
              i++;
          }
          return longest;

2020-12-14 17:33:11,703	[INFO]	131	SUCCESS	+13.0	
2020-12-14 17:33:11,704	[DEBUG]	
2020-12-14 17:33:12,637	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:33:15,730	[INFO]	133	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:33:15,731	[INFO]	134	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:33:15,732	[DEBUG]	
2020-12-14 17:33:15,732	[INFO]	135	SUCCESS	+13.0	
2020-12-14 17:33:15,733	[DEBUG]	
2020-12-14 17:33:16,680	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:33:17,628	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:33:18,569	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:33:21,683	[INFO]	139	SUCCESS	 22.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:33:22,647	[INFO]	140	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:33:22,650	[INFO]	141	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:33:22,652	[DEBUG]	
2020-12-14 17:33:23,599	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:33:23,601	[INFO]	143	SUCCESS	+13.0	
2020-12-14 17:33:23,602	[DEBUG]	
2020-12-14 17:33:26,687	[INFO]	144	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:33:29,764	[INFO]	145	SUCCESS	*0.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:33:29,765	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-14 17:33:29,765	[INFO]	==== END ====
2020-12-14 17:33:29,766	[INFO]	Reason: target fitness reached
2020-12-14 17:33:29,766	[INFO]	
2020-12-14 17:33:29,766	[INFO]	========== EPOCH 3 ==========
2020-12-14 17:33:29,767	[INFO]	==== WARMUP ====
2020-12-14 17:33:32,887	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:33:32,888	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:33:35,980	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:33:35,980	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:33:39,085	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:33:39,085	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:33:42,310	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-14 17:33:42,311	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:33:42,311	[INFO]	==== START ====
2020-12-14 17:33:45,436	[INFO]	1	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:33:48,661	[INFO]	2	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:33:51,896	[INFO]	3	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:33:54,945	[INFO]	4	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:33:58,057	[INFO]	5	SUCCESS	 19.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:34:01,202	[INFO]	6	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:34:02,059	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:34:05,305	[INFO]	8	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-14 17:34:06,272	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:34:07,229	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:34:10,466	[INFO]	11	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:34:10,467	[INFO]	12	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:34:10,467	[DEBUG]	
2020-12-14 17:34:10,468	[INFO]	13	SUCCESS	+13.0	
2020-12-14 17:34:10,468	[DEBUG]	
2020-12-14 17:34:11,378	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:34:12,341	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:34:15,428	[INFO]	16	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:34:15,430	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 17:34:15,430	[INFO]	==== END ====
2020-12-14 17:34:15,430	[INFO]	Reason: target fitness reached
2020-12-14 17:34:15,431	[INFO]	
2020-12-14 17:34:15,431	[INFO]	========== EPOCH 4 ==========
2020-12-14 17:34:15,432	[INFO]	==== WARMUP ====
2020-12-14 17:34:18,659	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:34:18,659	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:34:21,746	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:34:21,746	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:34:24,884	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:34:24,884	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:34:28,121	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-14 17:34:28,121	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:34:28,121	[INFO]	==== START ====
2020-12-14 17:34:29,031	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:34:29,983	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:34:33,142	[INFO]	3	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-14 17:34:33,143	[INFO]	4	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:34:33,143	[DEBUG]	
2020-12-14 17:34:34,112	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:34:34,115	[INFO]	6	SUCCESS	+13.0	
2020-12-14 17:34:34,116	[DEBUG]	
2020-12-14 17:34:37,233	[INFO]	7	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:34:37,234	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 17:34:37,235	[INFO]	8	SUCCESS	+13.0	
2020-12-14 17:34:37,235	[DEBUG]	
2020-12-14 17:34:40,361	[INFO]	9	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-14 17:34:41,229	[INFO]	10	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:34:42,194	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:34:43,145	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:34:44,111	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:34:45,057	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:34:46,052	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:34:46,983	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:34:47,969	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:34:47,972	[INFO]	18	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-14 17:34:51,064	[INFO]	19	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 17:34:51,065	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:34:52,022	[INFO]	20	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:34:52,023	[INFO]	21	SUCCESS	+13.0	
2020-12-14 17:34:52,024	[DEBUG]	
2020-12-14 17:34:52,909	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:34:56,019	[INFO]	23	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:34:56,020	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-14 17:34:57,007	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:34:57,008	[INFO]	25	SUCCESS	+13.0	
2020-12-14 17:34:57,009	[DEBUG]	
2020-12-14 17:34:57,984	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:34:58,937	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:34:59,913	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:35:02,996	[INFO]	29	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:35:06,156	[INFO]	30	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:35:07,078	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:35:10,297	[INFO]	32	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:35:13,480	[INFO]	33	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:35:14,388	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:35:15,378	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:35:16,319	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:35:16,322	[INFO]	37	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-14 17:35:16,323	[DEBUG]	
2020-12-14 17:35:17,296	[INFO]	38	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:35:17,299	[INFO]	39	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:35:17,300	[INFO]	40	SUCCESS	+13.0	
2020-12-14 17:35:17,300	[DEBUG]	
2020-12-14 17:35:20,560	[INFO]	41	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:35:21,802	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:35:23,184	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:35:24,467	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:35:24,469	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:35:25,712	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:35:25,714	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:35:29,316	[INFO]	48	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:35:30,211	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:35:31,110	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:35:34,276	[INFO]	51	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-14 17:35:34,277	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:35:35,399	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:35:38,554	[INFO]	54	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:35:38,555	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 17:35:38,555	[INFO]	==== END ====
2020-12-14 17:35:38,555	[INFO]	Reason: target fitness reached
2020-12-14 17:35:38,556	[INFO]	
2020-12-14 17:35:38,556	[INFO]	========== EPOCH 5 ==========
2020-12-14 17:35:38,556	[INFO]	==== WARMUP ====
2020-12-14 17:35:41,684	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:35:41,684	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:35:44,748	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:35:44,748	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:35:47,838	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:35:47,838	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:35:51,069	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-14 17:35:51,069	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:35:51,069	[INFO]	==== START ====
2020-12-14 17:35:54,164	[INFO]	1	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:35:55,061	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:35:58,256	[INFO]	3	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:35:58,257	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-14 17:35:59,185	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:36:00,139	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:36:01,130	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:36:02,094	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:36:02,096	[INFO]	8	SUCCESS	+13.0	
2020-12-14 17:36:02,097	[DEBUG]	
2020-12-14 17:36:03,213	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:36:06,426	[INFO]	10	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:36:09,598	[INFO]	11	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:36:10,529	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:36:13,684	[INFO]	13	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:36:13,685	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;

2020-12-14 17:36:13,686	[INFO]	14	SUCCESS	+13.0	
2020-12-14 17:36:13,687	[DEBUG]	
2020-12-14 17:36:14,622	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:36:14,625	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:36:15,600	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:36:18,717	[INFO]	18	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:36:18,718	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:36:18,719	[INFO]	19	SUCCESS	+13.0	
2020-12-14 17:36:18,719	[DEBUG]	
2020-12-14 17:36:21,786	[INFO]	20	SUCCESS	 20.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:36:24,933	[INFO]	21	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:36:28,001	[INFO]	22	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-14 17:36:28,002	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:36:28,938	[INFO]	23	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:36:28,941	[INFO]	24	SUCCESS	+13.0	
2020-12-14 17:36:28,942	[DEBUG]	
2020-12-14 17:36:32,133	[INFO]	25	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 17:36:32,134	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:36:35,320	[INFO]	26	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:36:36,142	[INFO]	27	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:36:36,144	[INFO]	28	SUCCESS	+13.0	
2020-12-14 17:36:36,144	[DEBUG]	
2020-12-14 17:36:37,068	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:36:37,987	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:36:38,939	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:36:38,940	[INFO]	32	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:36:38,941	[DEBUG]	
2020-12-14 17:36:38,941	[INFO]	33	SUCCESS	+13.0	
2020-12-14 17:36:38,941	[DEBUG]	
2020-12-14 17:36:39,936	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:36:39,938	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:36:39,939	[INFO]	36	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:36:39,940	[DEBUG]	
2020-12-14 17:36:39,941	[INFO]	37	SUCCESS	+13.0	
2020-12-14 17:36:39,941	[DEBUG]	
2020-12-14 17:36:40,899	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:36:41,888	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:36:45,041	[INFO]	40	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-14 17:36:45,961	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:36:46,925	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:36:47,915	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:36:48,880	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:36:49,870	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:36:50,836	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:36:51,805	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:36:52,763	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:36:53,703	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:36:54,655	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:36:54,658	[INFO]	51	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:36:54,659	[DEBUG]	
2020-12-14 17:36:55,631	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:36:56,593	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:36:57,544	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:36:58,485	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:36:58,486	[INFO]	56	SUCCESS	+13.0	
2020-12-14 17:36:58,487	[DEBUG]	
2020-12-14 17:36:59,440	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:37:00,403	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:37:01,362	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:37:04,636	[INFO]	60	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:37:05,570	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:37:06,543	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:37:07,470	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:37:08,432	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:37:08,433	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:37:09,371	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:37:12,612	[INFO]	67	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:37:15,710	[INFO]	68	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:37:15,712	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:37:16,605	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:37:17,542	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:37:18,513	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:37:19,443	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:37:20,403	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:37:20,406	[INFO]	75	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:37:20,407	[DEBUG]	
2020-12-14 17:37:21,309	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:37:21,311	[INFO]	77	SUCCESS	+13.0	
2020-12-14 17:37:21,312	[DEBUG]	
2020-12-14 17:37:22,291	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:37:22,294	[INFO]	79	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:37:22,295	[DEBUG]	
2020-12-14 17:37:25,431	[INFO]	80	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:37:25,432	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,38 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-14 17:37:26,361	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:37:26,364	[INFO]	82	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:37:26,365	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,38 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-14 17:37:26,367	[INFO]	83	SUCCESS	+13.0	
2020-12-14 17:37:26,367	[DEBUG]	
2020-12-14 17:37:27,302	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:37:30,399	[INFO]	85	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:37:31,362	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:37:32,372	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:37:33,306	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:37:34,169	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:37:37,283	[INFO]	90	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:37:40,382	[INFO]	91	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:37:40,383	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,41 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-14 17:37:40,384	[INFO]	92	SUCCESS	+13.0	
2020-12-14 17:37:40,384	[DEBUG]	
2020-12-14 17:37:41,303	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:37:41,304	[INFO]	94	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:37:42,294	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:37:45,430	[INFO]	96	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-14 17:37:48,924	[INFO]	97	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:37:48,925	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             ends.put(length+1, i);
+ 
              i++;
          }
          return longest;

2020-12-14 17:37:49,875	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:37:50,825	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:37:51,807	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:37:51,808	[INFO]	101	SUCCESS	+13.0	
2020-12-14 17:37:51,808	[DEBUG]	
2020-12-14 17:37:51,809	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:37:52,778	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:37:53,720	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:37:54,688	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:37:55,653	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:37:56,617	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:37:57,585	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:37:58,519	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:37:59,480	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:38:00,470	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:38:01,403	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:38:02,376	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:38:03,336	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:38:03,340	[INFO]	115	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:38:03,341	[DEBUG]	
2020-12-14 17:38:03,343	[INFO]	116	SUCCESS	+13.0	
2020-12-14 17:38:03,344	[DEBUG]	
2020-12-14 17:38:04,297	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:38:05,243	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:38:06,190	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:38:09,325	[INFO]	120	SUCCESS	*10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:38:09,326	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:38:09,327	[INFO]	121	SUCCESS	 13.0	
2020-12-14 17:38:10,294	[INFO]	122	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:38:11,274	[INFO]	123	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:38:12,243	[INFO]	124	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:38:13,183	[INFO]	125	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:38:14,125	[INFO]	126	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:38:15,057	[INFO]	127	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:38:15,997	[INFO]	128	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:38:19,233	[INFO]	129	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:38:20,147	[INFO]	130	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:38:21,090	[INFO]	131	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:38:22,094	[INFO]	132	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:38:23,056	[INFO]	133	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:38:26,166	[INFO]	134	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:38:26,167	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:38:27,086	[INFO]	135	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:38:27,089	[INFO]	136	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:38:27,090	[INFO]	137	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:38:27,091	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:38:28,022	[INFO]	138	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:38:28,975	[INFO]	139	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:38:29,972	[INFO]	140	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:38:29,974	[INFO]	141	SUCCESS	 13.0	
2020-12-14 17:38:30,935	[INFO]	142	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:38:31,921	[INFO]	143	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:38:32,883	[INFO]	144	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:38:33,824	[INFO]	145	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:38:36,978	[INFO]	146	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:38:37,906	[INFO]	147	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:38:38,877	[INFO]	148	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:38:39,806	[INFO]	149	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:38:40,805	[INFO]	150	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:38:41,766	[INFO]	151	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:38:42,649	[INFO]	152	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:38:45,745	[INFO]	153	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:38:46,681	[INFO]	154	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:38:47,593	[INFO]	155	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:38:48,542	[INFO]	156	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:38:48,544	[INFO]	157	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:38:49,511	[INFO]	158	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:38:50,457	[INFO]	159	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:38:51,431	[INFO]	160	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:38:51,433	[INFO]	161	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:38:52,369	[INFO]	162	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:38:53,335	[INFO]	163	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:38:56,444	[INFO]	164	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:38:56,444	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:38:56,445	[INFO]	165	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:38:56,446	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:38:56,446	[INFO]	166	SUCCESS	 13.0	
2020-12-14 17:38:57,382	[INFO]	167	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:39:00,527	[INFO]	168	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:39:00,528	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-14 17:39:00,529	[INFO]	169	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:39:00,529	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:39:00,530	[INFO]	170	SUCCESS	 13.0	
2020-12-14 17:39:01,473	[INFO]	171	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:39:02,443	[INFO]	172	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:39:03,330	[INFO]	173	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:39:04,274	[INFO]	174	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:39:04,280	[INFO]	175	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:39:05,262	[INFO]	176	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:39:06,209	[INFO]	177	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:39:07,178	[INFO]	178	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:39:10,408	[INFO]	179	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:39:11,354	[INFO]	180	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:39:12,317	[INFO]	181	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:39:13,281	[INFO]	182	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:39:14,213	[INFO]	183	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:39:15,198	[INFO]	184	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:39:15,201	[INFO]	185	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:39:15,202	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:39:16,151	[INFO]	186	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:39:17,105	[INFO]	187	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:39:18,106	[INFO]	188	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:39:19,055	[INFO]	189	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:39:20,014	[INFO]	190	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:39:23,275	[INFO]	191	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:39:26,379	[INFO]	192	SUCCESS	 21.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:39:26,380	[INFO]	193	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:39:26,380	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:39:26,381	[INFO]	194	SUCCESS	 13.0	
2020-12-14 17:39:27,314	[INFO]	195	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:39:28,303	[INFO]	196	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:39:28,307	[INFO]	197	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:39:31,408	[INFO]	198	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:39:32,419	[INFO]	199	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:39:33,404	[INFO]	200	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:39:34,409	[INFO]	201	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:39:37,580	[INFO]	202	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:39:37,581	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:39:38,529	[INFO]	203	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:39:38,530	[INFO]	204	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:39:38,531	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:39:38,531	[INFO]	205	SUCCESS	 13.0	
2020-12-14 17:39:39,517	[INFO]	206	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:39:40,448	[INFO]	207	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:39:40,449	[INFO]	208	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:39:40,450	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:39:40,451	[INFO]	209	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:39:40,451	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:39:40,452	[INFO]	210	SUCCESS	 13.0	
2020-12-14 17:39:43,570	[INFO]	211	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:39:44,521	[INFO]	212	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:39:47,659	[INFO]	213	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:39:50,687	[INFO]	214	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:39:50,688	[INFO]	215	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-14 17:39:50,689	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:39:51,641	[INFO]	216	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:39:51,644	[INFO]	217	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-14 17:39:54,750	[INFO]	218	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:39:55,656	[INFO]	219	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:39:58,868	[INFO]	220	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:39:58,869	[INFO]	221	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:39:58,870	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:39:59,759	[INFO]	222	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:40:00,712	[INFO]	223	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:40:00,714	[INFO]	224	SUCCESS	 13.0	
2020-12-14 17:40:03,792	[INFO]	225	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:40:04,738	[INFO]	226	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:40:05,705	[INFO]	227	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:40:06,690	[INFO]	228	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:40:07,649	[INFO]	229	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:40:10,803	[INFO]	230	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:40:11,772	[INFO]	231	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:40:11,777	[INFO]	232	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:40:11,778	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:40:11,780	[INFO]	233	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:40:12,706	[INFO]	234	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:40:13,667	[INFO]	235	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:40:13,668	[INFO]	236	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 17:40:13,668	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:40:13,669	[INFO]	237	SUCCESS	 13.0	
2020-12-14 17:40:14,637	[INFO]	238	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:40:15,590	[INFO]	239	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:40:16,536	[INFO]	240	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:40:17,467	[INFO]	241	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:40:18,409	[INFO]	242	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:40:19,405	[INFO]	243	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:40:20,351	[INFO]	244	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:40:21,314	[INFO]	245	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:40:22,288	[INFO]	246	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:40:23,274	[INFO]	247	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:40:23,278	[INFO]	248	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:40:24,232	[INFO]	249	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:40:27,273	[INFO]	250	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:40:28,236	[INFO]	251	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:40:29,203	[INFO]	252	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:40:32,305	[INFO]	253	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:40:32,306	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:40:33,264	[INFO]	254	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:40:34,204	[INFO]	255	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:40:35,253	[INFO]	256	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:40:36,593	[INFO]	257	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:40:37,751	[INFO]	258	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:40:37,753	[INFO]	259	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:40:37,754	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:40:39,056	[INFO]	260	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:40:40,070	[INFO]	261	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:40:41,082	[INFO]	262	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:40:42,085	[INFO]	263	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:40:42,087	[INFO]	264	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:40:42,088	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:40:42,090	[INFO]	265	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:40:43,058	[INFO]	266	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:40:44,026	[INFO]	267	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:40:47,130	[INFO]	268	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:40:47,948	[INFO]	269	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:40:48,883	[INFO]	270	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:40:48,884	[INFO]	271	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:40:48,885	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:40:51,951	[INFO]	272	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:40:51,952	[INFO]	273	SUCCESS	 13.0	
2020-12-14 17:40:55,104	[INFO]	274	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:40:55,106	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,35 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:40:56,071	[INFO]	275	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:40:57,036	[INFO]	276	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:41:00,173	[INFO]	277	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:41:03,133	[INFO]	278	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:41:04,093	[INFO]	279	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:41:04,098	[INFO]	280	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:41:04,099	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,35 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:41:05,011	[INFO]	281	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:41:05,964	[INFO]	282	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:41:06,915	[INFO]	283	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:41:06,917	[INFO]	284	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:41:06,918	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,35 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:41:06,919	[INFO]	285	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:41:06,921	[INFO]	286	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:41:07,797	[INFO]	287	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:41:10,991	[INFO]	288	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-14 17:41:10,993	[INFO]	289	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:41:10,993	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:41:11,923	[INFO]	290	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:41:11,926	[INFO]	291	SUCCESS	 13.0	
2020-12-14 17:41:12,849	[INFO]	292	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:41:15,958	[INFO]	293	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:41:16,906	[INFO]	294	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:41:17,881	[INFO]	295	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:41:18,849	[INFO]	296	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:41:18,851	[INFO]	297	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:41:18,852	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:41:18,854	[INFO]	298	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:41:18,854	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:41:18,856	[INFO]	299	SUCCESS	 13.0	
2020-12-14 17:41:21,929	[INFO]	300	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:41:22,895	[INFO]	301	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:41:23,861	[INFO]	302	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:41:27,148	[INFO]	303	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:41:30,277	[INFO]	304	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:41:30,278	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:41:33,408	[INFO]	305	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:41:33,411	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,40 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-14 17:41:34,377	[INFO]	306	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:41:34,380	[INFO]	307	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:41:34,381	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:41:35,351	[INFO]	308	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:41:35,354	[INFO]	309	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:41:35,355	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:41:35,357	[INFO]	310	SUCCESS	 13.0	
2020-12-14 17:41:38,519	[INFO]	311	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-14 17:41:39,439	[INFO]	312	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:41:40,384	[INFO]	313	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:41:41,290	[INFO]	314	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:41:42,235	[INFO]	315	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:41:43,223	[INFO]	316	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:41:43,225	[INFO]	317	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:41:44,159	[INFO]	318	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:41:45,103	[INFO]	319	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:41:46,097	[INFO]	320	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:41:47,058	[INFO]	321	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:41:48,011	[INFO]	322	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:41:48,996	[INFO]	323	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:41:49,950	[INFO]	324	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:41:53,197	[INFO]	325	SUCCESS	 17.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:41:54,142	[INFO]	326	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:41:55,112	[INFO]	327	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:41:56,065	[INFO]	328	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:41:57,045	[INFO]	329	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:41:57,994	[INFO]	330	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:41:58,958	[INFO]	331	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:41:59,913	[INFO]	332	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:42:00,870	[INFO]	333	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:42:01,832	[INFO]	334	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:42:02,788	[INFO]	335	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:42:03,718	[INFO]	336	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:42:06,865	[INFO]	337	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:42:07,805	[INFO]	338	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:42:08,766	[INFO]	339	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:42:09,758	[INFO]	340	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:42:12,917	[INFO]	341	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:42:12,917	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,40 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              i++;

2020-12-14 17:42:16,035	[INFO]	342	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:42:16,959	[INFO]	343	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:42:20,098	[INFO]	344	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:42:20,099	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,41 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              i++;

2020-12-14 17:42:20,100	[INFO]	345	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:42:20,100	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,40 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              i++;

2020-12-14 17:42:21,001	[INFO]	346	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:42:21,002	[INFO]	347	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:42:21,003	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:42:24,186	[INFO]	348	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:42:24,187	[INFO]	349	SUCCESS	 13.0	
2020-12-14 17:42:25,102	[INFO]	350	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:42:28,338	[INFO]	351	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:42:28,340	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 24,32 ****
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 24,38 ----
                  }
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:42:28,341	[INFO]	352	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:42:28,342	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:42:31,386	[INFO]	353	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:42:32,396	[INFO]	354	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:42:32,397	[INFO]	355	SUCCESS	 13.0	
2020-12-14 17:42:33,379	[INFO]	356	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:42:34,352	[INFO]	357	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:42:37,546	[INFO]	358	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:42:37,547	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 21,32 ****
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 21,33 ----
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                     prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:42:40,650	[INFO]	359	SUCCESS	 17.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:42:43,756	[INFO]	360	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:42:43,757	[INFO]	361	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:42:43,757	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:42:44,761	[INFO]	362	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:42:46,013	[INFO]	363	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:42:46,989	[INFO]	364	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:42:46,992	[INFO]	365	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:42:46,993	[INFO]	366	SUCCESS	 13.0	
2020-12-14 17:42:47,863	[INFO]	367	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:42:48,847	[INFO]	368	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:42:49,830	[INFO]	369	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:42:50,774	[INFO]	370	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:42:51,710	[INFO]	371	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:42:52,672	[INFO]	372	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:42:53,618	[INFO]	373	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:42:54,576	[INFO]	374	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:42:55,520	[INFO]	375	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:42:55,522	[INFO]	376	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:42:56,527	[INFO]	377	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:42:57,654	[INFO]	378	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:42:58,625	[INFO]	379	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:42:58,628	[INFO]	380	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:42:59,609	[INFO]	381	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:43:02,687	[INFO]	382	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:43:03,606	[INFO]	383	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:43:06,667	[INFO]	384	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:43:06,668	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:43:09,637	[INFO]	385	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:43:12,816	[INFO]	386	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:43:12,817	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,41 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
+                 ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 17:43:12,818	[INFO]	387	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:43:12,818	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:43:15,955	[INFO]	388	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:43:15,957	[INFO]	389	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:43:15,957	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:43:15,958	[INFO]	390	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:43:15,958	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:43:15,959	[INFO]	391	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-14 17:43:15,959	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:43:15,960	[INFO]	392	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:43:15,961	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:43:16,914	[INFO]	393	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:43:17,886	[INFO]	394	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:43:18,841	[INFO]	395	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:43:21,995	[INFO]	396	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-14 17:43:21,996	[INFO]	397	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:43:22,956	[INFO]	398	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:43:22,957	[INFO]	399	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:43:22,957	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:43:22,958	[INFO]	400	SUCCESS	 13.0	
2020-12-14 17:43:23,900	[INFO]	401	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:43:27,065	[INFO]	402	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:43:28,016	[INFO]	403	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:43:31,132	[INFO]	404	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:43:31,133	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,32 ****
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 22,35 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:43:34,290	[INFO]	405	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:43:34,292	[INFO]	406	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:43:34,292	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:43:35,244	[INFO]	407	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:43:36,191	[INFO]	408	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:43:36,193	[INFO]	409	SUCCESS	 13.0	
2020-12-14 17:43:39,319	[INFO]	410	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:43:40,264	[INFO]	411	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:43:40,267	[INFO]	412	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:43:41,240	[INFO]	413	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:43:42,194	[INFO]	414	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:43:43,156	[INFO]	415	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:43:44,111	[INFO]	416	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:43:45,081	[INFO]	417	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:43:46,076	[INFO]	418	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:43:47,009	[INFO]	419	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:43:47,964	[INFO]	420	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:43:48,937	[INFO]	421	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:43:48,942	[INFO]	422	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:43:48,946	[INFO]	423	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:43:49,896	[INFO]	424	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:43:50,845	[INFO]	425	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:43:54,028	[INFO]	426	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:43:54,911	[INFO]	427	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:43:55,906	[INFO]	428	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:43:56,878	[INFO]	429	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:43:57,812	[INFO]	430	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:44:00,951	[INFO]	431	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:44:00,952	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 27,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:44:04,072	[INFO]	432	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:44:05,022	[INFO]	433	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:44:05,024	[INFO]	434	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:44:05,024	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:44:05,025	[INFO]	435	SUCCESS	 13.0	
2020-12-14 17:44:06,017	[INFO]	436	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:44:06,974	[INFO]	437	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:44:10,210	[INFO]	438	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:44:11,162	[INFO]	439	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:44:12,116	[INFO]	440	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:44:15,280	[INFO]	441	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:44:16,203	[INFO]	442	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:44:17,165	[INFO]	443	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:44:20,252	[INFO]	444	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:44:23,429	[INFO]	445	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:44:24,354	[INFO]	446	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:44:25,331	[INFO]	447	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:44:26,300	[INFO]	448	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:44:27,227	[INFO]	449	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:44:28,205	[INFO]	450	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:44:29,183	[INFO]	451	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:44:30,149	[INFO]	452	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:44:31,124	[INFO]	453	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:44:32,084	[INFO]	454	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:44:33,036	[INFO]	455	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:44:34,012	[INFO]	456	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:44:34,958	[INFO]	457	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:44:38,097	[INFO]	458	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:44:38,097	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,32 ****
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 23,37 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:44:38,098	[INFO]	459	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:44:38,099	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:44:39,057	[INFO]	460	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:44:40,053	[INFO]	461	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:44:40,055	[INFO]	462	SUCCESS	 13.0	
2020-12-14 17:44:41,023	[INFO]	463	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:44:41,994	[INFO]	464	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:44:42,939	[INFO]	465	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:44:46,103	[INFO]	466	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:44:46,105	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
!                     prefix_lengths.add(j);
!                 }
!             }
! 
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:44:49,194	[INFO]	467	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:44:49,195	[INFO]	468	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:44:49,195	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:44:50,144	[INFO]	469	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:44:50,147	[INFO]	470	SUCCESS	 13.0	
2020-12-14 17:44:50,153	[INFO]	471	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:44:50,154	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:44:50,157	[INFO]	472	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-14 17:44:50,158	[INFO]	473	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:44:50,159	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:44:51,111	[INFO]	474	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:44:51,989	[INFO]	475	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:44:51,990	[INFO]	476	SUCCESS	 13.0	
2020-12-14 17:44:52,929	[INFO]	477	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:44:56,119	[INFO]	478	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:44:56,120	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,32 ****
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 22,35 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:44:57,031	[INFO]	479	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:44:57,994	[INFO]	480	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:45:01,201	[INFO]	481	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:45:02,135	[INFO]	482	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:45:03,100	[INFO]	483	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:45:03,104	[INFO]	484	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:45:04,012	[INFO]	485	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:45:04,013	[INFO]	486	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:45:04,013	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:45:04,014	[INFO]	487	SUCCESS	 13.0	
2020-12-14 17:45:04,015	[INFO]	488	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:45:04,972	[INFO]	489	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:45:05,922	[INFO]	490	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:45:06,901	[INFO]	491	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:45:10,095	[INFO]	492	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:45:10,096	[INFO]	493	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:45:10,097	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:45:10,097	[INFO]	494	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 17:45:10,098	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:45:11,054	[INFO]	495	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:45:11,057	[INFO]	496	SUCCESS	 13.0	
2020-12-14 17:45:12,002	[INFO]	497	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:45:15,195	[INFO]	498	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:45:16,150	[INFO]	499	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:45:17,106	[INFO]	500	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:45:17,107	[INFO]	==== END ====
2020-12-14 17:45:17,107	[INFO]	Reason: step budget
2020-12-14 17:45:17,108	[INFO]	
2020-12-14 17:45:17,108	[INFO]	========== EPOCH 6 ==========
2020-12-14 17:45:17,108	[INFO]	==== WARMUP ====
2020-12-14 17:45:20,419	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:45:20,419	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:45:23,481	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:45:23,481	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:45:26,627	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:45:26,627	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:45:29,653	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-14 17:45:29,654	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:45:29,654	[INFO]	==== START ====
2020-12-14 17:45:30,589	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:45:31,550	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:45:32,566	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:45:32,570	[INFO]	4	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:45:32,571	[DEBUG]	
2020-12-14 17:45:32,573	[INFO]	5	SUCCESS	+13.0	
2020-12-14 17:45:32,574	[DEBUG]	
2020-12-14 17:45:33,516	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:45:34,479	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:45:38,374	[INFO]	8	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-14 17:45:39,612	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:45:40,597	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:45:41,881	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:45:43,252	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:45:44,426	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:45:45,875	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:45:49,152	[INFO]	15	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:45:49,153	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 17:45:50,089	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:45:53,295	[INFO]	17	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:45:53,297	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }
***************
*** 27,32 ****
--- 28,34 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:45:54,250	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:45:54,253	[INFO]	19	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:45:54,254	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 17:45:54,255	[INFO]	20	SUCCESS	+13.0	
2020-12-14 17:45:54,256	[DEBUG]	
2020-12-14 17:45:55,133	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:45:56,105	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:45:59,249	[INFO]	23	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:46:00,211	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:46:01,067	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:46:04,198	[INFO]	26	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-14 17:46:05,176	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:46:06,119	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:46:07,066	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:46:10,237	[INFO]	30	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:46:10,238	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 17:46:10,238	[INFO]	31	SUCCESS	+13.0	
2020-12-14 17:46:10,239	[DEBUG]	
2020-12-14 17:46:11,153	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:46:12,095	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:46:13,026	[INFO]	34	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:46:13,987	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:46:14,940	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:46:14,943	[INFO]	37	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:46:14,944	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 17:46:14,946	[INFO]	38	SUCCESS	+13.0	
2020-12-14 17:46:14,946	[DEBUG]	
2020-12-14 17:46:15,931	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:46:16,856	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:46:17,825	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:46:20,973	[INFO]	42	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:46:20,974	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 17:46:21,899	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:46:22,883	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:46:26,069	[INFO]	45	SUCCESS	 27.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:46:26,988	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:46:26,991	[INFO]	47	SUCCESS	+13.0	
2020-12-14 17:46:26,991	[DEBUG]	
2020-12-14 17:46:27,943	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:46:28,907	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:46:29,879	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:46:30,812	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:46:34,011	[INFO]	52	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:46:37,191	[INFO]	53	SUCCESS	 20.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:46:38,290	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:46:39,244	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:46:40,297	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:46:41,347	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:46:42,388	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:46:43,377	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:46:44,340	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:46:45,293	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:46:46,249	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:46:47,212	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:46:48,117	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:46:49,052	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:46:52,101	[INFO]	66	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:46:52,102	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,41 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-14 17:46:53,041	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:46:53,042	[INFO]	68	SUCCESS	+13.0	
2020-12-14 17:46:53,042	[DEBUG]	
2020-12-14 17:46:53,990	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:46:54,940	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:46:55,906	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:46:59,074	[INFO]	72	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:46:59,076	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 17:46:59,077	[INFO]	==== END ====
2020-12-14 17:46:59,077	[INFO]	Reason: target fitness reached
2020-12-14 17:46:59,080	[INFO]	
2020-12-14 17:46:59,080	[INFO]	========== EPOCH 7 ==========
2020-12-14 17:46:59,081	[INFO]	==== WARMUP ====
2020-12-14 17:47:02,185	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:47:02,185	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:47:05,280	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:47:05,281	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:47:08,425	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:47:08,425	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:47:11,536	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-14 17:47:11,537	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:47:11,537	[INFO]	==== START ====
2020-12-14 17:47:12,451	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:47:13,409	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:47:14,369	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:47:15,319	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:47:16,301	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:47:17,266	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:47:18,184	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:47:21,289	[INFO]	8	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:47:22,246	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:47:25,385	[INFO]	10	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:47:25,387	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 17:47:25,388	[INFO]	11	SUCCESS	+13.0	
2020-12-14 17:47:25,388	[DEBUG]	
2020-12-14 17:47:26,333	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:47:27,320	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:47:30,470	[INFO]	14	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:47:31,394	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:47:34,671	[INFO]	16	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-14 17:47:37,743	[INFO]	17	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-14 17:47:38,639	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:47:39,585	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:47:40,561	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:47:41,485	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:47:42,457	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:47:45,647	[INFO]	23	SUCCESS	 24.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:47:46,556	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:47:47,531	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:47:50,639	[INFO]	26	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-14 17:47:50,641	[INFO]	27	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-14 17:47:50,641	[DEBUG]	
2020-12-14 17:47:51,487	[INFO]	28	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:47:51,488	[INFO]	29	SUCCESS	+13.0	
2020-12-14 17:47:51,488	[DEBUG]	
2020-12-14 17:47:52,366	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:47:53,286	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:47:56,391	[INFO]	32	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:47:57,320	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:47:57,323	[INFO]	34	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:47:57,324	[DEBUG]	
2020-12-14 17:48:00,453	[INFO]	35	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:48:01,376	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:48:02,350	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:48:02,351	[INFO]	38	SUCCESS	+13.0	
2020-12-14 17:48:02,351	[DEBUG]	
2020-12-14 17:48:05,444	[INFO]	39	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:48:05,445	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,26 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                 }
                  }
              }
  

2020-12-14 17:48:06,431	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:48:06,432	[INFO]	41	SUCCESS	 24.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:48:06,433	[INFO]	42	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:48:09,551	[INFO]	43	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:48:09,552	[INFO]	44	SUCCESS	+13.0	
2020-12-14 17:48:09,552	[DEBUG]	
2020-12-14 17:48:10,521	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:48:10,525	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:48:11,497	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:48:12,426	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:48:13,398	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:48:13,401	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:48:14,337	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:48:15,320	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:48:16,227	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:48:17,174	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:48:18,036	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:48:19,002	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:48:19,894	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:48:23,016	[INFO]	58	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:48:23,956	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:48:27,130	[INFO]	60	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:48:27,975	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:48:28,897	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:48:29,847	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:48:30,821	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:48:31,786	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:48:35,062	[INFO]	66	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-14 17:48:35,968	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:48:36,920	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:48:37,891	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:48:38,853	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:48:39,821	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:48:40,739	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:48:41,678	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:48:44,855	[INFO]	74	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-14 17:48:45,820	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:48:48,987	[INFO]	76	SUCCESS	 19.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:48:49,939	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:48:50,886	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:48:51,858	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:48:52,813	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:48:53,783	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:48:54,725	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:48:55,677	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:48:58,855	[INFO]	84	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:49:01,965	[INFO]	85	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:49:01,966	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 17:49:01,967	[INFO]	86	SUCCESS	+13.0	
2020-12-14 17:49:01,967	[DEBUG]	
2020-12-14 17:49:02,882	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:49:03,856	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:49:07,029	[INFO]	89	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:49:07,030	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 17:49:07,955	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:49:11,091	[INFO]	91	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:49:11,092	[INFO]	92	SUCCESS	+13.0	
2020-12-14 17:49:11,092	[DEBUG]	
2020-12-14 17:49:12,060	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:49:13,014	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:49:13,980	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:49:17,207	[INFO]	96	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:49:17,209	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-14 17:49:17,210	[INFO]	97	SUCCESS	+13.0	
2020-12-14 17:49:17,211	[DEBUG]	
2020-12-14 17:49:18,142	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:49:19,075	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:49:20,033	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:49:23,308	[INFO]	101	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:49:23,309	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 17:49:23,310	[INFO]	102	SUCCESS	+13.0	
2020-12-14 17:49:23,311	[DEBUG]	
2020-12-14 17:49:24,208	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:49:27,305	[INFO]	104	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:49:30,416	[INFO]	105	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:49:31,275	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:49:34,491	[INFO]	107	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:49:34,492	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,42 ----
                  longest = length + 1;
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              i++;
          }
          return longest;

2020-12-14 17:49:35,400	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:49:36,328	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:49:36,330	[INFO]	110	SUCCESS	+13.0	
2020-12-14 17:49:36,330	[DEBUG]	
2020-12-14 17:49:39,511	[INFO]	111	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 17:49:39,514	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:49:39,516	[INFO]	112	SUCCESS	+13.0	
2020-12-14 17:49:39,517	[DEBUG]	
2020-12-14 17:49:39,520	[INFO]	113	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:49:40,353	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:49:40,354	[INFO]	115	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:49:43,534	[INFO]	116	SUCCESS	*0.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:49:43,535	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-14 17:49:43,536	[INFO]	==== END ====
2020-12-14 17:49:43,536	[INFO]	Reason: target fitness reached
2020-12-14 17:49:43,536	[INFO]	
2020-12-14 17:49:43,537	[INFO]	========== EPOCH 8 ==========
2020-12-14 17:49:43,537	[INFO]	==== WARMUP ====
2020-12-14 17:49:46,699	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:49:46,699	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:49:49,813	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:49:49,813	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:49:52,991	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:49:52,992	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:49:56,073	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-14 17:49:56,073	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:49:56,073	[INFO]	==== START ====
2020-12-14 17:49:57,000	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:49:57,964	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:49:58,918	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:49:59,919	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:50:03,055	[INFO]	5	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:50:03,995	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:50:07,136	[INFO]	7	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:50:07,137	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 17:50:08,066	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:50:09,061	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:50:09,063	[INFO]	10	SUCCESS	+13.0	
2020-12-14 17:50:09,063	[DEBUG]	
2020-12-14 17:50:10,018	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:50:10,019	[INFO]	12	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:50:10,020	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 17:50:11,018	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:50:11,020	[INFO]	14	SUCCESS	+13.0	
2020-12-14 17:50:11,020	[DEBUG]	
2020-12-14 17:50:11,979	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:50:12,916	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:50:13,859	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:50:17,046	[INFO]	18	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:50:17,938	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:50:18,875	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:50:19,823	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:50:20,770	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:50:21,723	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:50:22,685	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:50:23,651	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:50:24,626	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:50:24,627	[INFO]	27	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:50:24,627	[DEBUG]	
2020-12-14 17:50:27,788	[INFO]	28	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:50:27,789	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;

2020-12-14 17:50:27,790	[INFO]	29	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:50:27,790	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;

2020-12-14 17:50:28,703	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:50:28,706	[INFO]	31	SUCCESS	+13.0	
2020-12-14 17:50:28,706	[DEBUG]	
2020-12-14 17:50:31,832	[INFO]	32	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:50:32,822	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:50:33,773	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:50:34,733	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:50:35,847	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:50:35,849	[INFO]	37	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:50:35,850	[DEBUG]	
2020-12-14 17:50:36,856	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:50:36,859	[INFO]	39	SUCCESS	+13.0	
2020-12-14 17:50:36,860	[DEBUG]	
2020-12-14 17:50:37,819	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:50:38,761	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:50:39,750	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:50:40,696	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:50:41,647	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:50:44,749	[INFO]	45	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:50:44,750	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-14 17:50:44,751	[INFO]	46	SUCCESS	+13.0	
2020-12-14 17:50:44,752	[DEBUG]	
2020-12-14 17:50:45,734	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:50:46,682	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:50:47,617	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:50:50,787	[INFO]	50	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:50:53,863	[INFO]	51	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-14 17:50:54,783	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:50:57,885	[INFO]	53	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:50:57,886	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:50:58,827	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:50:59,833	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:51:00,800	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:51:01,733	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:51:02,714	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:51:05,792	[INFO]	59	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:51:05,793	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,38 ****
--- 27,43 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-14 17:51:05,794	[INFO]	60	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:51:05,794	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-14 17:51:05,795	[INFO]	61	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:51:05,796	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-14 17:51:05,797	[INFO]	62	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:51:05,797	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-14 17:51:05,798	[INFO]	63	SUCCESS	+13.0	
2020-12-14 17:51:05,798	[DEBUG]	
2020-12-14 17:51:08,914	[INFO]	64	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:51:08,915	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-14 17:51:08,917	[INFO]	65	SUCCESS	+13.0	
2020-12-14 17:51:08,917	[DEBUG]	
2020-12-14 17:51:09,896	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:51:10,859	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:51:14,009	[INFO]	68	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-14 17:51:17,145	[INFO]	69	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:51:17,146	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-14 17:51:17,147	[INFO]	70	SUCCESS	+13.0	
2020-12-14 17:51:17,147	[DEBUG]	
2020-12-14 17:51:18,051	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:51:19,062	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:51:20,051	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:51:20,979	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:51:24,083	[INFO]	75	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-14 17:51:24,084	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val != arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:51:24,086	[INFO]	76	SUCCESS	+13.0	
2020-12-14 17:51:24,087	[DEBUG]	
2020-12-14 17:51:25,065	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:51:25,968	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:51:25,970	[INFO]	79	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:51:25,971	[INFO]	80	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:51:25,971	[DEBUG]	
2020-12-14 17:51:25,972	[INFO]	81	SUCCESS	+13.0	
2020-12-14 17:51:25,973	[DEBUG]	
2020-12-14 17:51:26,912	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:51:27,882	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:51:28,833	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:51:29,800	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:51:30,751	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:51:30,753	[INFO]	87	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:51:30,753	[DEBUG]	
2020-12-14 17:51:30,754	[INFO]	88	SUCCESS	+13.0	
2020-12-14 17:51:30,754	[DEBUG]	
2020-12-14 17:51:31,728	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:51:31,731	[INFO]	90	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:51:31,732	[DEBUG]	
2020-12-14 17:51:31,734	[INFO]	91	SUCCESS	+13.0	
2020-12-14 17:51:31,735	[DEBUG]	
2020-12-14 17:51:32,735	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:51:33,676	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:51:36,796	[INFO]	94	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:51:36,797	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                     prefix_lengths.add(j);
                  }
              }
  

2020-12-14 17:51:37,644	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:51:37,647	[INFO]	96	SUCCESS	+13.0	
2020-12-14 17:51:37,648	[DEBUG]	
2020-12-14 17:51:37,650	[INFO]	97	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-14 17:51:37,651	[DEBUG]	
2020-12-14 17:51:37,653	[INFO]	98	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:51:37,654	[DEBUG]	
2020-12-14 17:51:37,655	[INFO]	99	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:51:37,656	[DEBUG]	
2020-12-14 17:51:40,807	[INFO]	100	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:51:40,810	[INFO]	101	SUCCESS	+13.0	
2020-12-14 17:51:40,811	[DEBUG]	
2020-12-14 17:51:43,938	[INFO]	102	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:51:44,944	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:51:45,901	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:51:49,077	[INFO]	105	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:51:52,300	[INFO]	106	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:51:53,225	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:51:54,191	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:51:55,181	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:51:56,179	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:51:57,155	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:52:00,336	[INFO]	112	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 17:52:00,337	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:52:00,338	[INFO]	113	SUCCESS	+13.0	
2020-12-14 17:52:00,338	[DEBUG]	
2020-12-14 17:52:00,339	[INFO]	114	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-14 17:52:00,339	[DEBUG]	
2020-12-14 17:52:03,524	[INFO]	115	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:52:03,525	[INFO]	116	SUCCESS	+13.0	
2020-12-14 17:52:03,525	[DEBUG]	
2020-12-14 17:52:04,446	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:52:05,391	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:52:06,334	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:52:09,590	[INFO]	120	SUCCESS	*10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-14 17:52:09,591	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:52:09,593	[INFO]	121	SUCCESS	 13.0	
2020-12-14 17:52:12,693	[INFO]	122	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-14 17:52:13,607	[INFO]	123	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:52:14,580	[INFO]	124	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:52:15,560	[INFO]	125	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:52:15,564	[INFO]	126	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:52:15,566	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:52:16,487	[INFO]	127	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:52:17,501	[INFO]	128	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:52:17,505	[INFO]	129	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-14 17:52:17,507	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:52:18,534	[INFO]	130	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:52:18,538	[INFO]	131	SUCCESS	 13.0	
2020-12-14 17:52:19,438	[INFO]	132	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:52:20,391	[INFO]	133	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:52:21,357	[INFO]	134	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:52:22,336	[INFO]	135	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:52:23,290	[INFO]	136	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:52:26,454	[INFO]	137	SUCCESS	 21.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:52:29,570	[INFO]	138	SUCCESS	 18.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:52:32,698	[INFO]	139	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:52:32,699	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
!                 longest = length + 1;
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:52:35,780	[INFO]	140	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:52:35,781	[INFO]	141	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-14 17:52:35,781	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:52:35,782	[INFO]	142	SUCCESS	 13.0	
2020-12-14 17:52:36,757	[INFO]	143	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:52:37,717	[INFO]	144	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:52:37,718	[INFO]	145	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:52:37,719	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:52:38,674	[INFO]	146	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:52:39,612	[INFO]	147	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:52:40,559	[INFO]	148	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:52:41,568	[INFO]	149	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:52:41,570	[INFO]	150	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:52:42,515	[INFO]	151	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:52:43,470	[INFO]	152	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:52:43,471	[INFO]	153	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-14 17:52:43,472	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:52:44,405	[INFO]	154	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:52:45,372	[INFO]	155	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:52:45,373	[INFO]	156	SUCCESS	 13.0	
2020-12-14 17:52:46,357	[INFO]	157	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:52:46,361	[INFO]	158	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:52:47,302	[INFO]	159	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:52:48,265	[INFO]	160	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:52:49,250	[INFO]	161	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:52:50,202	[INFO]	162	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:52:51,182	[INFO]	163	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:52:52,137	[INFO]	164	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:52:53,096	[INFO]	165	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:52:56,186	[INFO]	166	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:52:56,187	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-14 17:52:56,188	[INFO]	167	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-14 17:52:56,189	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:52:56,189	[INFO]	168	SUCCESS	 13.0	
2020-12-14 17:52:57,137	[INFO]	169	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:52:58,099	[INFO]	170	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:52:59,082	[INFO]	171	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:53:00,035	[INFO]	172	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:53:03,064	[INFO]	173	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:53:03,937	[INFO]	174	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:53:03,939	[INFO]	175	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:53:05,100	[INFO]	176	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:53:06,481	[INFO]	177	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:53:09,659	[INFO]	178	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:53:10,595	[INFO]	179	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:53:11,549	[INFO]	180	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:53:12,435	[INFO]	181	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:53:13,378	[INFO]	182	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:53:14,333	[INFO]	183	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:53:14,337	[INFO]	184	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:53:15,311	[INFO]	185	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:53:16,288	[INFO]	186	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:53:17,285	[INFO]	187	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:53:18,247	[INFO]	188	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:53:19,192	[INFO]	189	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:53:22,274	[INFO]	190	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-14 17:53:25,351	[INFO]	191	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-14 17:53:28,464	[INFO]	192	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:53:28,465	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 17:53:29,314	[INFO]	193	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:53:32,543	[INFO]	194	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:53:35,639	[INFO]	195	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-14 17:53:36,551	[INFO]	196	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:53:37,514	[INFO]	197	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:53:37,518	[INFO]	198	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:53:37,519	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 17:53:38,445	[INFO]	199	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:53:38,448	[INFO]	200	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:53:38,449	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 17:53:39,405	[INFO]	201	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:53:39,407	[INFO]	202	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-14 17:53:39,408	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:53:40,415	[INFO]	203	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:53:41,363	[INFO]	204	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:53:41,364	[INFO]	205	SUCCESS	 13.0	
2020-12-14 17:53:42,315	[INFO]	206	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:53:43,259	[INFO]	207	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:53:44,256	[INFO]	208	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:53:47,363	[INFO]	209	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:53:48,373	[INFO]	210	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:53:48,376	[INFO]	211	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-14 17:53:49,323	[INFO]	212	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:53:50,302	[INFO]	213	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:53:53,507	[INFO]	214	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-14 17:53:53,508	[INFO]	215	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:53:53,509	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:53:54,386	[INFO]	216	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:53:55,362	[INFO]	217	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:53:55,365	[INFO]	218	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:53:55,366	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:53:56,317	[INFO]	219	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:53:57,278	[INFO]	220	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:54:00,353	[INFO]	221	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-14 17:54:01,292	[INFO]	222	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:54:01,293	[INFO]	223	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:54:01,294	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:54:02,193	[INFO]	224	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:54:02,195	[INFO]	225	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-14 17:54:02,195	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:54:05,456	[INFO]	226	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:54:05,457	[INFO]	227	SUCCESS	 13.0	
2020-12-14 17:54:06,345	[INFO]	228	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:54:07,331	[INFO]	229	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:54:08,298	[INFO]	230	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:54:09,222	[INFO]	231	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:54:12,475	[INFO]	232	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:54:12,476	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,40 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              i++;

2020-12-14 17:54:13,431	[INFO]	233	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:54:13,435	[INFO]	234	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-14 17:54:13,436	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:54:14,422	[INFO]	235	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:54:15,289	[INFO]	236	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:54:15,290	[INFO]	237	SUCCESS	 13.0	
2020-12-14 17:54:18,425	[INFO]	238	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:54:18,426	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-14 17:54:21,531	[INFO]	239	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-14 17:54:21,532	[INFO]	240	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:54:21,533	[INFO]	241	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:54:21,534	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-14 17:54:22,490	[INFO]	242	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:54:22,494	[INFO]	243	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:54:23,463	[INFO]	244	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:54:23,466	[INFO]	245	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:54:23,467	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-14 17:54:23,468	[INFO]	246	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-14 17:54:23,469	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:54:24,403	[INFO]	247	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:54:24,404	[INFO]	248	SUCCESS	 13.0	
2020-12-14 17:54:25,357	[INFO]	249	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:54:26,358	[INFO]	250	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:54:27,304	[INFO]	251	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:54:28,276	[INFO]	252	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:54:29,220	[INFO]	253	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:54:30,184	[INFO]	254	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:54:33,504	[INFO]	255	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:54:34,430	[INFO]	256	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:54:37,591	[INFO]	257	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:54:37,592	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,33 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:54:37,593	[INFO]	258	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-14 17:54:37,593	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:54:38,498	[INFO]	259	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:54:39,474	[INFO]	260	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:54:39,477	[INFO]	261	SUCCESS	 13.0	
2020-12-14 17:54:39,480	[INFO]	262	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:54:40,432	[INFO]	263	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:54:41,390	[INFO]	264	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:54:42,363	[INFO]	265	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:54:45,483	[INFO]	266	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-14 17:54:46,429	[INFO]	267	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:54:47,371	[INFO]	268	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:54:47,374	[INFO]	269	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:54:47,374	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:54:48,267	[INFO]	270	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:54:49,203	[INFO]	271	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:54:50,219	[INFO]	272	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:54:50,222	[INFO]	273	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-14 17:54:50,223	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:54:51,158	[INFO]	274	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:54:54,288	[INFO]	275	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-14 17:54:55,204	[INFO]	276	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:54:55,206	[INFO]	277	SUCCESS	 13.0	
2020-12-14 17:54:56,172	[INFO]	278	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:54:57,110	[INFO]	279	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:54:58,062	[INFO]	280	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:54:59,046	[INFO]	281	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:55:02,259	[INFO]	282	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:55:03,163	[INFO]	283	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:55:04,098	[INFO]	284	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:55:05,044	[INFO]	285	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:55:05,994	[INFO]	286	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:55:09,100	[INFO]	287	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:55:10,063	[INFO]	288	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:55:11,021	[INFO]	289	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:55:11,997	[INFO]	290	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:55:15,093	[INFO]	291	SUCCESS	 21.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:55:16,050	[INFO]	292	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:55:16,925	[INFO]	293	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:55:17,824	[INFO]	294	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:55:18,782	[INFO]	295	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:55:19,625	[INFO]	296	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:55:19,626	[INFO]	297	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:55:20,635	[INFO]	298	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:55:21,610	[INFO]	299	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:55:22,567	[INFO]	300	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:55:22,569	[INFO]	301	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:55:23,482	[INFO]	302	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:55:24,430	[INFO]	303	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:55:25,388	[INFO]	304	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:55:26,322	[INFO]	305	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:55:27,286	[INFO]	306	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:55:28,257	[INFO]	307	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:55:29,200	[INFO]	308	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:55:30,184	[INFO]	309	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:55:31,130	[INFO]	310	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:55:34,338	[INFO]	311	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-14 17:55:35,402	[INFO]	312	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:55:39,294	[INFO]	313	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:55:42,420	[INFO]	314	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 17:55:42,421	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:55:45,567	[INFO]	315	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 17:55:45,568	[INFO]	316	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-14 17:55:45,568	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:55:45,569	[INFO]	317	SUCCESS	 13.0	
2020-12-14 17:55:46,461	[INFO]	318	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:55:47,455	[INFO]	319	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:55:48,562	[INFO]	320	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:55:49,564	[INFO]	321	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:55:50,514	[INFO]	322	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:55:51,473	[INFO]	323	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:55:52,422	[INFO]	324	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:55:55,642	[INFO]	325	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:55:56,577	[INFO]	326	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:55:57,589	[INFO]	327	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:55:58,539	[INFO]	328	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:55:59,516	[INFO]	329	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:56:00,486	[INFO]	330	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:56:01,441	[INFO]	331	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:56:02,419	[INFO]	332	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:56:03,387	[INFO]	333	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:56:03,389	[INFO]	334	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:56:04,291	[INFO]	335	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:56:05,186	[INFO]	336	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:56:08,340	[INFO]	337	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:56:08,342	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 17:56:09,285	[INFO]	338	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:56:10,286	[INFO]	339	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:56:13,512	[INFO]	340	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:56:13,513	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 17:56:13,513	[INFO]	==== END ====
2020-12-14 17:56:13,513	[INFO]	Reason: target fitness reached
2020-12-14 17:56:13,514	[INFO]	
2020-12-14 17:56:13,514	[INFO]	========== EPOCH 9 ==========
2020-12-14 17:56:13,514	[INFO]	==== WARMUP ====
2020-12-14 17:56:16,650	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:56:16,651	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:56:19,700	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:56:19,700	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:56:22,753	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 17:56:22,753	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:56:25,886	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-14 17:56:25,886	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 17:56:25,887	[INFO]	==== START ====
2020-12-14 17:56:26,862	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:56:30,068	[INFO]	2	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:56:30,943	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:56:31,907	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:56:32,941	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:56:36,076	[INFO]	6	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:56:37,008	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:56:37,972	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:56:41,128	[INFO]	9	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-14 17:56:42,068	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:56:42,991	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:56:46,123	[INFO]	12	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:56:49,233	[INFO]	13	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:56:50,168	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:56:50,169	[INFO]	15	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-14 17:56:50,170	[DEBUG]	
2020-12-14 17:56:50,170	[INFO]	16	SUCCESS	+13.0	
2020-12-14 17:56:50,170	[DEBUG]	
2020-12-14 17:56:51,264	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:56:51,267	[INFO]	18	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:56:51,268	[DEBUG]	
2020-12-14 17:56:51,269	[INFO]	19	SUCCESS	+13.0	
2020-12-14 17:56:51,270	[DEBUG]	
2020-12-14 17:56:52,249	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:56:53,248	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:56:54,224	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:56:55,179	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:56:56,088	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:56:56,994	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:56:57,945	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:56:58,893	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:56:59,861	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:57:00,821	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:57:01,818	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:57:02,679	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:57:05,867	[INFO]	32	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-14 17:57:08,885	[INFO]	33	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:57:09,868	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:57:13,011	[INFO]	35	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:57:13,012	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             ends.put(length+1, i);
+ 
              i++;
          }
          return longest;

2020-12-14 17:57:13,013	[INFO]	36	SUCCESS	+13.0	
2020-12-14 17:57:13,013	[DEBUG]	
2020-12-14 17:57:13,961	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:57:13,965	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:57:14,800	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:57:15,756	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:57:16,742	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:57:19,914	[INFO]	42	SUCCESS	 22.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-14 17:57:20,850	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:57:21,797	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:57:22,734	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:57:25,865	[INFO]	46	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:57:26,801	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:57:27,764	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:57:28,707	[INFO]	49	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:57:29,546	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:57:29,547	[INFO]	51	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-14 17:57:29,548	[DEBUG]	
2020-12-14 17:57:29,548	[INFO]	52	SUCCESS	+13.0	
2020-12-14 17:57:29,548	[DEBUG]	
2020-12-14 17:57:30,514	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:57:33,678	[INFO]	54	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:57:34,625	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:57:35,590	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:57:36,562	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:57:37,518	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:57:38,462	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:57:39,389	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:57:40,373	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:57:40,376	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:57:41,349	[INFO]	63	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:57:42,293	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:57:43,214	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:57:44,164	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:57:45,111	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:57:46,076	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:57:47,048	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:57:48,006	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:57:48,008	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:57:49,004	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:57:49,992	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:57:50,958	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:57:51,881	[INFO]	75	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:57:52,812	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:57:53,770	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:57:56,952	[INFO]	78	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:57:57,893	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:58:01,067	[INFO]	80	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:58:01,068	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,33 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 longest = length + 1;
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:58:04,204	[INFO]	81	SUCCESS	 19.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:58:04,205	[INFO]	82	SUCCESS	+13.0	
2020-12-14 17:58:04,206	[DEBUG]	
2020-12-14 17:58:05,096	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:58:08,202	[INFO]	84	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-14 17:58:08,203	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val <= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:58:08,203	[INFO]	85	SUCCESS	+13.0	
2020-12-14 17:58:08,204	[DEBUG]	
2020-12-14 17:58:09,067	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:58:10,041	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:58:11,015	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:58:11,969	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:58:12,867	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:58:13,737	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:58:14,681	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:58:14,683	[INFO]	93	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:58:14,683	[DEBUG]	
2020-12-14 17:58:14,684	[INFO]	94	SUCCESS	+13.0	
2020-12-14 17:58:14,685	[DEBUG]	
2020-12-14 17:58:15,729	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:58:16,706	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:58:19,881	[INFO]	97	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:58:20,770	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:58:21,755	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:58:22,705	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:58:23,656	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 17:58:23,657	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:58:23,658	[INFO]	103	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:58:23,659	[DEBUG]	
2020-12-14 17:58:23,659	[INFO]	104	SUCCESS	+13.0	
2020-12-14 17:58:23,660	[DEBUG]	
2020-12-14 17:58:26,663	[INFO]	105	SUCCESS	 29.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:58:27,613	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 17:58:28,555	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:58:29,503	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:58:29,504	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 17:58:30,445	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:58:31,412	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:58:32,480	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:58:33,431	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:58:34,361	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:58:37,506	[INFO]	115	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:58:38,425	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:58:39,357	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:58:40,331	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:58:41,283	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:58:42,226	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:58:43,182	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:58:46,307	[INFO]	122	SUCCESS	 28.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:58:49,501	[INFO]	123	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:58:52,600	[INFO]	124	SUCCESS	 19.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:58:53,531	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:58:54,484	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:58:55,467	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:58:56,411	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:58:57,398	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:58:58,341	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:58:59,285	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:59:00,259	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 17:59:01,104	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:59:01,965	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:59:05,128	[INFO]	135	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:59:05,130	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,28 ****
--- 23,33 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  

2020-12-14 17:59:05,132	[INFO]	136	SUCCESS	+13.0	
2020-12-14 17:59:05,133	[DEBUG]	
2020-12-14 17:59:06,105	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:59:07,050	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:59:08,024	[INFO]	139	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 17:59:08,993	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 17:59:09,980	[INFO]	141	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:59:09,983	[INFO]	142	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:59:09,984	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,28 ****
--- 23,33 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  

2020-12-14 17:59:10,957	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:59:10,959	[INFO]	144	SUCCESS	+13.0	
2020-12-14 17:59:10,959	[DEBUG]	
2020-12-14 17:59:11,926	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 17:59:12,834	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:59:13,679	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 17:59:14,635	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:59:14,639	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:59:15,641	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:59:18,761	[INFO]	151	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 17:59:19,681	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:59:20,643	[INFO]	153	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-14 17:59:21,586	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:59:24,806	[INFO]	155	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-14 17:59:24,809	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:59:24,812	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 17:59:25,693	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 17:59:26,637	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:59:27,614	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:59:30,695	[INFO]	161	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:59:30,696	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-14 17:59:31,629	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 17:59:31,631	[INFO]	163	SUCCESS	+13.0	
2020-12-14 17:59:31,632	[DEBUG]	
2020-12-14 17:59:32,597	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 17:59:33,568	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 17:59:34,535	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:59:35,490	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 17:59:38,603	[INFO]	168	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 17:59:38,604	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 17:59:38,604	[INFO]	169	SUCCESS	+13.0	
2020-12-14 17:59:38,605	[DEBUG]	
2020-12-14 17:59:39,566	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 17:59:40,521	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 17:59:41,481	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 17:59:42,442	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 17:59:43,390	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:59:44,330	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:59:45,237	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:59:46,146	[INFO]	177	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 17:59:47,110	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 17:59:48,410	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 17:59:51,588	[INFO]	180	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 17:59:51,589	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 29,34 ****
--- 29,35 ----
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+                 longest = length + 1;
              }
  
              i++;

2020-12-14 17:59:52,539	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 17:59:53,503	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 17:59:53,505	[INFO]	183	SUCCESS	+13.0	
2020-12-14 17:59:53,505	[DEBUG]	
2020-12-14 17:59:54,488	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:59:55,459	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 17:59:56,407	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 17:59:59,534	[INFO]	187	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:00:02,712	[INFO]	188	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-14 18:00:03,697	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:00:06,793	[INFO]	190	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:00:07,774	[INFO]	191	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:00:08,731	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:00:11,897	[INFO]	193	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-14 18:00:12,890	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:00:16,017	[INFO]	195	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:00:16,018	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:00:16,969	[INFO]	196	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:00:16,970	[INFO]	197	SUCCESS	 13.0	
2020-12-14 18:00:17,951	[INFO]	198	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:00:21,101	[INFO]	199	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:00:21,102	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:00:24,199	[INFO]	200	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:00:25,171	[INFO]	201	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:00:28,402	[INFO]	202	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:00:29,309	[INFO]	203	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:00:30,292	[INFO]	204	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:00:30,296	[INFO]	205	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:00:30,297	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:00:30,299	[INFO]	206	SUCCESS	 13.0	
2020-12-14 18:00:31,259	[INFO]	207	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:00:34,504	[INFO]	208	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:00:38,389	[INFO]	209	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:00:42,780	[INFO]	210	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:00:42,781	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,40 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              i++;

2020-12-14 18:00:42,782	[INFO]	211	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:00:42,783	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,40 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              i++;

2020-12-14 18:00:43,960	[INFO]	212	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:00:43,963	[INFO]	213	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:00:43,964	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,40 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              i++;

2020-12-14 18:00:43,965	[INFO]	214	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:00:43,966	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:00:45,269	[INFO]	215	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:00:46,412	[INFO]	216	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:00:47,579	[INFO]	217	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:00:48,792	[INFO]	218	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:00:48,793	[INFO]	219	SUCCESS	 13.0	
2020-12-14 18:00:52,335	[INFO]	220	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 18:00:52,336	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:00:52,337	[INFO]	221	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:00:52,337	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:00:52,338	[INFO]	222	SUCCESS	 13.0	
2020-12-14 18:00:53,294	[INFO]	223	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:00:54,239	[INFO]	224	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:00:55,235	[INFO]	225	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:00:56,212	[INFO]	226	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:00:59,363	[INFO]	227	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-14 18:01:00,329	[INFO]	228	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:01:01,287	[INFO]	229	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:01:02,296	[INFO]	230	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:01:03,239	[INFO]	231	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:01:04,181	[INFO]	232	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:01:04,186	[INFO]	233	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-14 18:01:04,188	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:01:04,190	[INFO]	234	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-14 18:01:04,193	[INFO]	235	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:01:04,195	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:01:05,169	[INFO]	236	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:01:06,090	[INFO]	237	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:01:09,247	[INFO]	238	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:01:09,248	[INFO]	239	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:01:10,225	[INFO]	240	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:01:11,095	[INFO]	241	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:01:11,096	[INFO]	242	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-14 18:01:11,097	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:01:11,098	[INFO]	243	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:01:11,098	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:01:12,056	[INFO]	244	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:01:12,989	[INFO]	245	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:01:16,119	[INFO]	246	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-14 18:01:19,190	[INFO]	247	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:01:19,191	[INFO]	248	SUCCESS	 13.0	
2020-12-14 18:01:22,313	[INFO]	249	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:01:22,314	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
!                     prefix_lengths.add(j);
!                 }
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:01:25,437	[INFO]	250	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:01:26,404	[INFO]	251	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:01:29,473	[INFO]	252	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:01:30,462	[INFO]	253	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:01:31,389	[INFO]	254	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:01:31,391	[INFO]	255	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:01:32,382	[INFO]	256	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:01:32,386	[INFO]	257	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:01:32,388	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
!                     prefix_lengths.add(j);
!                 }
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:01:35,549	[INFO]	258	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:01:35,550	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:01:36,474	[INFO]	259	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:01:37,430	[INFO]	260	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:01:40,553	[INFO]	261	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:01:43,651	[INFO]	262	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-14 18:01:44,610	[INFO]	263	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:01:45,563	[INFO]	264	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:01:45,566	[INFO]	265	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:01:45,567	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:01:45,568	[INFO]	266	SUCCESS	 13.0	
2020-12-14 18:01:46,507	[INFO]	267	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:01:47,445	[INFO]	268	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:01:48,450	[INFO]	269	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:01:49,458	[INFO]	270	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:01:52,548	[INFO]	271	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-14 18:01:53,562	[INFO]	272	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:01:54,515	[INFO]	273	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:01:55,443	[INFO]	274	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:01:56,412	[INFO]	275	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:01:59,585	[INFO]	276	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-14 18:02:00,516	[INFO]	277	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:02:03,665	[INFO]	278	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:02:03,666	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
!                     prefix_lengths.add(j);
!                 }
!             }
! 
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:02:06,836	[INFO]	279	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:02:06,837	[INFO]	280	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:02:06,838	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:02:07,770	[INFO]	281	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:02:07,771	[INFO]	282	SUCCESS	 13.0	
2020-12-14 18:02:07,772	[INFO]	283	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:02:10,992	[INFO]	284	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:02:11,933	[INFO]	285	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:02:12,886	[INFO]	286	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:02:13,836	[INFO]	287	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:02:14,791	[INFO]	288	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:02:15,752	[INFO]	289	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:02:16,695	[INFO]	290	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:02:16,697	[INFO]	291	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-14 18:02:16,697	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:02:16,698	[INFO]	292	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:02:16,698	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:02:16,699	[INFO]	293	SUCCESS	 13.0	
2020-12-14 18:02:17,668	[INFO]	294	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:02:18,505	[INFO]	295	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:02:19,463	[INFO]	296	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:02:20,438	[INFO]	297	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:02:21,428	[INFO]	298	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:02:22,388	[INFO]	299	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:02:23,318	[INFO]	300	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:02:24,258	[INFO]	301	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:02:25,148	[INFO]	302	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:02:26,132	[INFO]	303	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:02:27,122	[INFO]	304	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:02:28,061	[INFO]	305	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:02:29,001	[INFO]	306	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:02:32,184	[INFO]	307	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:02:33,142	[INFO]	308	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:02:34,067	[INFO]	309	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:02:35,006	[INFO]	310	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:02:35,007	[INFO]	311	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:02:38,095	[INFO]	312	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-14 18:02:39,040	[INFO]	313	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:02:40,004	[INFO]	314	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:02:43,226	[INFO]	315	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:02:43,227	[INFO]	316	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:02:44,131	[INFO]	317	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:02:47,273	[INFO]	318	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:02:50,373	[INFO]	319	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:02:51,313	[INFO]	320	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:02:52,263	[INFO]	321	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:02:53,258	[INFO]	322	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:02:54,210	[INFO]	323	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:02:55,178	[INFO]	324	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:02:56,163	[INFO]	325	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:02:57,330	[INFO]	326	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:02:58,321	[INFO]	327	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:02:59,311	[INFO]	328	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:03:00,262	[INFO]	329	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:03:01,232	[INFO]	330	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:03:04,347	[INFO]	331	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:03:04,349	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:03:07,471	[INFO]	332	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:03:08,422	[INFO]	333	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:03:09,355	[INFO]	334	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:03:10,369	[INFO]	335	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:03:13,510	[INFO]	336	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:03:13,511	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 24,32 ****
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 24,42 ----
                  }
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:03:14,433	[INFO]	337	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:03:17,590	[INFO]	338	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:03:17,591	[INFO]	339	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:03:17,592	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:03:17,593	[INFO]	340	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:03:18,543	[INFO]	341	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:03:18,545	[INFO]	342	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:03:18,545	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:03:21,707	[INFO]	343	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:03:21,708	[INFO]	344	SUCCESS	 13.0	
2020-12-14 18:03:24,799	[INFO]	345	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:03:24,800	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 27,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:03:25,769	[INFO]	346	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:03:28,973	[INFO]	347	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:03:29,865	[INFO]	348	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:03:29,866	[INFO]	349	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:03:29,866	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:03:30,849	[INFO]	350	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:03:30,851	[INFO]	351	SUCCESS	 13.0	
2020-12-14 18:03:31,830	[INFO]	352	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:03:35,073	[INFO]	353	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:03:38,258	[INFO]	354	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:03:38,260	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:03:41,283	[INFO]	355	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:03:41,284	[INFO]	356	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:03:41,285	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:03:41,285	[INFO]	357	SUCCESS	 13.0	
2020-12-14 18:03:44,378	[INFO]	358	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-14 18:03:45,326	[INFO]	359	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:03:45,332	[INFO]	360	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:03:45,333	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:03:45,334	[INFO]	361	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:03:48,513	[INFO]	362	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-14 18:03:49,809	[INFO]	363	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:03:49,811	[INFO]	364	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:03:49,811	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:03:50,805	[INFO]	365	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:03:51,846	[INFO]	366	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:03:54,981	[INFO]	367	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:03:54,982	[INFO]	368	SUCCESS	 13.0	
2020-12-14 18:03:58,113	[INFO]	369	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:03:59,060	[INFO]	370	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:04:00,043	[INFO]	371	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:04:01,028	[INFO]	372	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:04:01,036	[INFO]	373	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-14 18:04:01,978	[INFO]	374	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:04:02,945	[INFO]	375	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:04:03,907	[INFO]	376	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:04:04,861	[INFO]	377	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:04:04,862	[INFO]	378	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:04:04,863	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:04:04,863	[INFO]	379	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:04:05,844	[INFO]	380	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:04:06,800	[INFO]	381	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:04:07,743	[INFO]	382	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:04:10,945	[INFO]	383	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:04:10,947	[INFO]	384	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:04:10,948	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:04:10,949	[INFO]	385	SUCCESS	 13.0	
2020-12-14 18:04:10,952	[INFO]	386	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:04:11,887	[INFO]	387	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:04:15,012	[INFO]	388	SUCCESS	 18.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:04:15,963	[INFO]	389	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:04:19,100	[INFO]	390	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:04:19,995	[INFO]	391	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:04:23,045	[INFO]	392	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:04:23,940	[INFO]	393	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:04:27,095	[INFO]	394	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:04:27,991	[INFO]	395	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:04:28,953	[INFO]	396	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:04:29,852	[INFO]	397	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:04:29,853	[INFO]	398	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:04:29,854	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:04:29,854	[INFO]	399	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:04:30,820	[INFO]	400	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:04:31,801	[INFO]	401	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:04:32,770	[INFO]	402	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:04:32,771	[INFO]	403	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:04:32,772	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:04:33,695	[INFO]	404	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:04:33,697	[INFO]	405	SUCCESS	 13.0	
2020-12-14 18:04:34,697	[INFO]	406	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:04:35,614	[INFO]	407	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:04:38,791	[INFO]	408	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:04:38,793	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,35 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:04:39,746	[INFO]	409	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:04:40,680	[INFO]	410	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:04:40,682	[INFO]	411	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:04:40,683	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:04:41,630	[INFO]	412	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:04:41,631	[INFO]	413	SUCCESS	 13.0	
2020-12-14 18:04:44,786	[INFO]	414	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:04:44,787	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:04:47,878	[INFO]	415	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:04:51,021	[INFO]	416	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:04:51,023	[INFO]	417	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:04:51,023	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:04:51,024	[INFO]	418	SUCCESS	 13.0	
2020-12-14 18:04:51,024	[INFO]	419	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:04:51,025	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:04:51,923	[INFO]	420	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:04:52,786	[INFO]	421	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:04:52,787	[INFO]	422	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:04:53,713	[INFO]	423	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:04:53,714	[INFO]	424	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:04:53,715	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:04:53,716	[INFO]	425	SUCCESS	 13.0	
2020-12-14 18:04:54,663	[INFO]	426	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:04:57,796	[INFO]	427	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:04:57,797	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 27,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:04:58,729	[INFO]	428	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:04:58,731	[INFO]	429	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:04:58,731	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:04:58,732	[INFO]	430	SUCCESS	 13.0	
2020-12-14 18:04:59,698	[INFO]	431	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:04:59,700	[INFO]	432	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:04:59,701	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:04:59,702	[INFO]	433	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:04:59,703	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:05:02,818	[INFO]	434	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:05:02,819	[INFO]	435	SUCCESS	 13.0	
2020-12-14 18:05:03,781	[INFO]	436	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:05:04,814	[INFO]	437	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:05:07,899	[INFO]	438	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:05:11,041	[INFO]	439	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-14 18:05:11,980	[INFO]	440	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:05:12,951	[INFO]	441	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:05:13,897	[INFO]	442	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:05:14,846	[INFO]	443	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:05:15,815	[INFO]	444	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:05:18,957	[INFO]	445	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:05:18,960	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             ends.put(length+1, i);
! 
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:05:18,961	[INFO]	==== END ====
2020-12-14 18:05:18,961	[INFO]	Reason: target fitness reached
2020-12-14 18:05:18,964	[INFO]	
2020-12-14 18:05:18,964	[INFO]	========== EPOCH 10 ==========
2020-12-14 18:05:18,965	[INFO]	==== WARMUP ====
2020-12-14 18:05:22,064	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:05:22,064	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:05:25,124	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:05:25,124	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:05:28,232	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:05:28,232	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:05:31,396	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-14 18:05:31,396	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:05:31,397	[INFO]	==== START ====
2020-12-14 18:05:32,390	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:05:33,267	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:05:34,251	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:05:35,354	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:05:36,311	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:05:37,261	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:05:38,216	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:05:39,158	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:05:40,131	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:05:41,065	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:05:42,014	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:05:42,982	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:05:43,958	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:05:47,179	[INFO]	14	SUCCESS	*0.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:05:47,180	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-14 18:05:47,180	[INFO]	==== END ====
2020-12-14 18:05:47,181	[INFO]	Reason: target fitness reached
2020-12-14 18:05:47,182	[INFO]	
2020-12-14 18:05:47,182	[INFO]	========== EPOCH 11 ==========
2020-12-14 18:05:47,182	[INFO]	==== WARMUP ====
2020-12-14 18:05:50,259	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:05:50,259	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:05:53,408	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:05:53,409	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:05:56,554	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:05:56,554	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:05:59,720	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-14 18:05:59,721	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:05:59,721	[INFO]	==== START ====
2020-12-14 18:06:00,624	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:06:01,601	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:06:02,572	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:06:03,480	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:06:03,484	[INFO]	5	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:06:03,485	[DEBUG]	
2020-12-14 18:06:04,441	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:06:05,386	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:06:06,343	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:06:07,300	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:06:10,420	[INFO]	10	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:06:10,421	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 18:06:10,421	[INFO]	==== END ====
2020-12-14 18:06:10,421	[INFO]	Reason: target fitness reached
2020-12-14 18:06:10,422	[INFO]	
2020-12-14 18:06:10,422	[INFO]	========== EPOCH 12 ==========
2020-12-14 18:06:10,423	[INFO]	==== WARMUP ====
2020-12-14 18:06:13,626	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:06:13,626	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:06:16,693	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:06:16,693	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:06:19,802	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:06:19,802	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:06:22,920	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-14 18:06:22,921	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:06:22,921	[INFO]	==== START ====
2020-12-14 18:06:23,921	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:06:24,886	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:06:28,065	[INFO]	3	SUCCESS	 24.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:06:29,059	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:06:30,021	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:06:30,970	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:06:31,860	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:06:32,796	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:06:35,993	[INFO]	9	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:06:37,155	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:06:38,085	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:06:39,038	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:06:39,991	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:06:40,951	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:06:41,902	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:06:42,856	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:06:46,036	[INFO]	17	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-14 18:06:46,933	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:06:46,935	[INFO]	19	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:06:46,935	[DEBUG]	
2020-12-14 18:06:46,936	[INFO]	20	SUCCESS	+13.0	
2020-12-14 18:06:46,936	[DEBUG]	
2020-12-14 18:06:47,908	[INFO]	21	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:06:48,883	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:06:49,884	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:06:53,043	[INFO]	24	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:06:53,993	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:06:54,976	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:06:58,150	[INFO]	27	SUCCESS	 20.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:06:59,113	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:06:59,979	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:07:00,937	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:07:01,881	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:07:02,849	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:07:03,835	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:07:04,795	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:07:05,776	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:07:06,751	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:07:07,723	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:07:08,655	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:07:11,773	[INFO]	39	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:07:11,774	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:07:12,734	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:07:13,710	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:07:16,850	[INFO]	43	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:07:17,796	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:07:20,959	[INFO]	45	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:07:21,882	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:07:25,095	[INFO]	47	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:07:25,097	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-14 18:07:25,994	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:07:29,196	[INFO]	49	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:07:29,197	[INFO]	50	SUCCESS	+13.0	
2020-12-14 18:07:29,197	[DEBUG]	
2020-12-14 18:07:30,133	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:07:31,090	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:07:32,047	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:07:35,168	[INFO]	54	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:07:36,090	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:07:37,052	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:07:37,938	[INFO]	57	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:07:38,905	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:07:42,164	[INFO]	59	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:07:43,117	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:07:44,028	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:07:44,954	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:07:48,162	[INFO]	63	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:07:48,163	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-14 18:07:48,164	[INFO]	64	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:07:48,165	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-14 18:07:48,165	[INFO]	65	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:07:48,166	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-14 18:07:49,243	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:07:49,245	[INFO]	67	SUCCESS	+13.0	
2020-12-14 18:07:49,245	[DEBUG]	
2020-12-14 18:07:50,200	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:07:51,076	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:07:52,016	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:07:52,968	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:07:53,933	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:07:54,860	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:07:54,861	[INFO]	74	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-14 18:07:54,862	[DEBUG]	
2020-12-14 18:07:54,863	[INFO]	75	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:07:54,864	[INFO]	76	SUCCESS	+13.0	
2020-12-14 18:07:54,864	[DEBUG]	
2020-12-14 18:07:55,844	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:07:56,764	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:07:57,715	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:07:57,717	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:07:57,719	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:07:58,683	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:07:59,628	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:08:02,721	[INFO]	84	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:08:03,671	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:08:06,782	[INFO]	86	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:08:07,732	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:08:08,619	[INFO]	88	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:08:11,772	[INFO]	89	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-14 18:08:11,773	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-14 18:08:11,773	[INFO]	90	SUCCESS	+13.0	
2020-12-14 18:08:11,774	[DEBUG]	
2020-12-14 18:08:12,742	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:08:13,580	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:08:14,548	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:08:15,496	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:08:18,653	[INFO]	95	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:08:19,575	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:08:20,532	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:08:21,460	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:08:24,626	[INFO]	99	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:08:24,627	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 18:08:24,628	[INFO]	==== END ====
2020-12-14 18:08:24,628	[INFO]	Reason: target fitness reached
2020-12-14 18:08:24,628	[INFO]	
2020-12-14 18:08:24,629	[INFO]	========== EPOCH 13 ==========
2020-12-14 18:08:24,629	[INFO]	==== WARMUP ====
2020-12-14 18:08:27,751	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:08:27,751	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:08:30,883	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:08:30,883	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:08:34,143	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:08:34,143	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:08:37,463	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-14 18:08:37,463	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:08:37,463	[INFO]	==== START ====
2020-12-14 18:08:38,438	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:08:39,431	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:08:42,698	[INFO]	3	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:08:43,677	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:08:47,034	[INFO]	5	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:08:47,036	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 18:08:50,798	[INFO]	6	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:08:51,782	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:08:51,783	[INFO]	8	SUCCESS	+13.0	
2020-12-14 18:08:51,783	[DEBUG]	
2020-12-14 18:08:52,842	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:08:53,877	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:08:54,917	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:08:55,968	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:08:56,991	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:08:58,063	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:08:59,076	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:09:00,074	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:09:03,241	[INFO]	17	SUCCESS	 29.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:09:04,214	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:09:07,410	[INFO]	19	SUCCESS	 24.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:09:08,358	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:09:11,524	[INFO]	21	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:09:11,526	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,37 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:09:11,527	[INFO]	22	SUCCESS	+13.0	
2020-12-14 18:09:11,528	[DEBUG]	
2020-12-14 18:09:12,506	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:09:12,509	[INFO]	24	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:09:12,510	[DEBUG]	
2020-12-14 18:09:12,511	[INFO]	25	SUCCESS	+13.0	
2020-12-14 18:09:12,512	[DEBUG]	
2020-12-14 18:09:13,524	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:09:14,542	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:09:17,810	[INFO]	28	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:09:21,137	[INFO]	29	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:09:21,138	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:09:21,138	[INFO]	30	SUCCESS	+13.0	
2020-12-14 18:09:21,139	[DEBUG]	
2020-12-14 18:09:22,059	[INFO]	31	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:09:23,054	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:09:26,363	[INFO]	33	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:09:29,728	[INFO]	34	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:09:29,729	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 18:09:33,029	[INFO]	35	SUCCESS	 22.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:09:33,030	[INFO]	36	SUCCESS	+13.0	
2020-12-14 18:09:33,030	[DEBUG]	
2020-12-14 18:09:34,039	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:09:34,043	[INFO]	38	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:09:34,044	[DEBUG]	
2020-12-14 18:09:35,034	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:09:35,035	[INFO]	40	SUCCESS	+13.0	
2020-12-14 18:09:35,035	[DEBUG]	
2020-12-14 18:09:38,309	[INFO]	41	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:09:39,299	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:09:40,322	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:09:41,392	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:09:42,431	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:09:43,435	[INFO]	46	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:09:44,449	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:09:45,406	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:09:46,411	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:09:49,679	[INFO]	50	SUCCESS	 24.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:09:50,646	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:09:51,626	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:09:54,944	[INFO]	53	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:09:54,946	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 18:09:54,947	[INFO]	54	SUCCESS	+13.0	
2020-12-14 18:09:54,948	[DEBUG]	
2020-12-14 18:09:55,945	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:09:56,844	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:09:57,815	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:09:58,836	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:10:02,161	[INFO]	59	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:10:03,089	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:10:04,059	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:10:05,016	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:10:05,977	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:10:06,966	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:10:10,444	[INFO]	65	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:10:13,691	[INFO]	66	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-14 18:10:14,673	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:10:17,970	[INFO]	68	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:10:17,970	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             ends.put(length+1, i);
+ 
              i++;
          }
          return longest;

2020-12-14 18:10:18,929	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:10:18,931	[INFO]	70	SUCCESS	+13.0	
2020-12-14 18:10:18,932	[DEBUG]	
2020-12-14 18:10:22,218	[INFO]	71	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:10:22,219	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-14 18:10:23,229	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:10:23,232	[INFO]	73	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:10:23,234	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-14 18:10:24,236	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:10:25,284	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:10:25,287	[INFO]	76	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:10:25,288	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-14 18:10:26,294	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:10:26,296	[INFO]	78	SUCCESS	+13.0	
2020-12-14 18:10:26,297	[DEBUG]	
2020-12-14 18:10:27,340	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:10:28,247	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:10:29,230	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:10:30,203	[INFO]	82	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:10:31,102	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:10:32,063	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:10:32,945	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:10:32,947	[INFO]	86	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:10:32,948	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-14 18:10:32,949	[INFO]	87	SUCCESS	+13.0	
2020-12-14 18:10:32,949	[DEBUG]	
2020-12-14 18:10:33,885	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:10:37,554	[INFO]	89	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:10:41,398	[INFO]	90	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:10:41,399	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,41 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-14 18:10:41,400	[INFO]	91	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-14 18:10:41,401	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,41 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-14 18:10:42,418	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:10:43,489	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:10:43,492	[INFO]	94	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:10:43,492	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,41 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-14 18:10:44,517	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:10:45,522	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:10:46,555	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:10:47,584	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:10:50,901	[INFO]	99	SUCCESS	 25.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:10:51,903	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:10:51,904	[INFO]	101	SUCCESS	+13.0	
2020-12-14 18:10:51,904	[DEBUG]	
2020-12-14 18:10:52,918	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:10:53,932	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:10:54,944	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:10:55,961	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:10:57,015	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:10:58,024	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:10:58,959	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:10:59,960	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:11:03,269	[INFO]	110	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-14 18:11:03,270	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-14 18:11:03,271	[INFO]	111	SUCCESS	+13.0	
2020-12-14 18:11:03,271	[DEBUG]	
2020-12-14 18:11:04,221	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:11:07,317	[INFO]	113	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:11:10,447	[INFO]	114	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-14 18:11:11,476	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:11:14,760	[INFO]	116	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:11:14,761	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,28 ****
--- 23,33 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  

2020-12-14 18:11:14,762	[INFO]	117	SUCCESS	+13.0	
2020-12-14 18:11:14,763	[DEBUG]	
2020-12-14 18:11:15,770	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:11:15,775	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:11:16,806	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:11:17,812	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:11:18,803	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:11:19,837	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:11:23,122	[INFO]	124	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:11:23,123	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,33 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:11:26,457	[INFO]	125	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:11:26,458	[INFO]	126	SUCCESS	+13.0	
2020-12-14 18:11:26,458	[DEBUG]	
2020-12-14 18:11:27,425	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:11:28,459	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:11:31,773	[INFO]	129	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:11:35,021	[INFO]	130	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:11:35,022	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 18:11:35,023	[INFO]	131	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:11:35,023	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 18:11:35,898	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:11:39,036	[INFO]	133	SUCCESS	 28.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-14 18:11:39,038	[INFO]	134	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:11:39,039	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 18:11:39,939	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:11:39,943	[INFO]	136	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:11:39,945	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 18:11:40,890	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:11:41,856	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:11:42,826	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:11:43,796	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:11:43,797	[INFO]	141	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:11:43,798	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 18:11:43,799	[INFO]	142	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:11:43,800	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 18:11:43,801	[INFO]	143	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:11:43,801	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 18:11:44,818	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:11:44,819	[INFO]	145	SUCCESS	+13.0	
2020-12-14 18:11:44,819	[DEBUG]	
2020-12-14 18:11:45,876	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:11:46,867	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:11:47,873	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:11:47,876	[INFO]	149	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-14 18:11:47,877	[DEBUG]	
2020-12-14 18:11:48,904	[INFO]	150	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:11:48,907	[INFO]	151	SUCCESS	+13.0	
2020-12-14 18:11:48,907	[DEBUG]	
2020-12-14 18:11:49,914	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:11:50,946	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:11:51,950	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:11:51,952	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:11:55,127	[INFO]	156	SUCCESS	 29.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:11:58,423	[INFO]	157	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-14 18:11:58,424	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:11:59,424	[INFO]	158	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:11:59,426	[INFO]	159	SUCCESS	+13.0	
2020-12-14 18:11:59,426	[DEBUG]	
2020-12-14 18:12:02,808	[INFO]	160	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:12:03,796	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:12:07,030	[INFO]	162	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:12:07,031	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-14 18:12:07,032	[INFO]	163	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:12:07,032	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-14 18:12:07,033	[INFO]	164	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:12:07,034	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-14 18:12:07,034	[INFO]	165	SUCCESS	+13.0	
2020-12-14 18:12:07,035	[DEBUG]	
2020-12-14 18:12:10,338	[INFO]	166	SUCCESS	 28.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:12:11,316	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:12:12,378	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:12:13,407	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:12:14,398	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:12:15,392	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:12:16,380	[INFO]	172	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:12:19,651	[INFO]	173	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:12:20,637	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:12:21,633	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:12:21,636	[INFO]	176	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:12:21,637	[DEBUG]	
2020-12-14 18:12:22,672	[INFO]	177	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:12:22,677	[INFO]	178	SUCCESS	+13.0	
2020-12-14 18:12:22,678	[DEBUG]	
2020-12-14 18:12:23,662	[INFO]	179	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:12:24,651	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:12:25,662	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:12:26,680	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:12:29,869	[INFO]	183	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:12:30,815	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:12:31,741	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:12:32,746	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:12:33,686	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:12:33,688	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:12:34,734	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:12:35,794	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:12:35,796	[INFO]	191	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:12:36,834	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:12:37,916	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:12:39,023	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:12:42,847	[INFO]	195	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:12:46,175	[INFO]	196	SUCCESS	 24.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:12:47,174	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:12:48,215	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:12:49,235	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:12:50,244	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:12:51,271	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:12:54,554	[INFO]	202	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:12:57,808	[INFO]	203	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:12:57,808	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 18:12:58,798	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:12:58,800	[INFO]	205	SUCCESS	+13.0	
2020-12-14 18:12:58,801	[DEBUG]	
2020-12-14 18:12:59,768	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:13:00,801	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:13:04,136	[INFO]	208	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:13:05,145	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:13:06,143	[INFO]	210	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:13:09,409	[INFO]	211	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-14 18:13:09,410	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val <= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:13:09,411	[INFO]	212	SUCCESS	+13.0	
2020-12-14 18:13:09,412	[DEBUG]	
2020-12-14 18:13:12,658	[INFO]	213	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:13:13,704	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:13:13,706	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:13:14,701	[INFO]	216	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:13:15,702	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:13:16,723	[INFO]	218	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:13:20,314	[INFO]	219	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:13:25,134	[INFO]	220	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:13:25,135	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 24,29 ****
--- 24,35 ----
                  }
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {

2020-12-14 18:13:29,680	[INFO]	221	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:13:29,681	[INFO]	222	SUCCESS	+13.0	
2020-12-14 18:13:29,681	[DEBUG]	
2020-12-14 18:13:30,716	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:13:34,090	[INFO]	224	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:13:34,092	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,41 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-14 18:13:34,094	[INFO]	225	SUCCESS	+13.0	
2020-12-14 18:13:34,095	[DEBUG]	
2020-12-14 18:13:35,085	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:13:36,117	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:13:39,438	[INFO]	228	SUCCESS	 19.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:13:40,462	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:13:41,357	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:13:42,329	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:13:45,516	[INFO]	232	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-14 18:13:48,761	[INFO]	233	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:13:48,762	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 29,34 ****
--- 29,35 ----
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+                 longest = length + 1;
              }
  
              i++;

2020-12-14 18:13:49,819	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:13:50,828	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:13:51,841	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:13:51,843	[INFO]	237	SUCCESS	+13.0	
2020-12-14 18:13:51,844	[DEBUG]	
2020-12-14 18:13:55,165	[INFO]	238	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:13:55,167	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:13:56,121	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:13:57,160	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:13:58,191	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:14:01,526	[INFO]	243	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:14:04,744	[INFO]	244	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 18:14:04,745	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:14:04,746	[INFO]	245	SUCCESS	+13.0	
2020-12-14 18:14:04,747	[DEBUG]	
2020-12-14 18:14:05,710	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:14:08,972	[INFO]	247	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:14:08,973	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-14 18:14:12,116	[INFO]	248	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:14:13,108	[INFO]	249	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:14:13,111	[INFO]	250	SUCCESS	+13.0	
2020-12-14 18:14:13,111	[DEBUG]	
2020-12-14 18:14:16,372	[INFO]	251	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-14 18:14:19,598	[INFO]	252	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-14 18:14:19,599	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:14:20,621	[INFO]	253	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:14:23,966	[INFO]	254	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:14:23,969	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 27,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:14:23,972	[INFO]	255	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-14 18:14:23,973	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:14:23,975	[INFO]	256	SUCCESS	+13.0	
2020-12-14 18:14:23,976	[DEBUG]	
2020-12-14 18:14:24,902	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:14:25,840	[INFO]	258	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:14:26,848	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:14:27,837	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:14:28,962	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:14:29,984	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:14:30,993	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:14:31,978	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:14:32,983	[INFO]	265	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:14:33,955	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:14:37,111	[INFO]	267	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:14:38,069	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:14:39,047	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:14:39,986	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:14:40,962	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:14:41,944	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:14:42,897	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:14:43,833	[INFO]	274	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:14:44,828	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:14:44,830	[INFO]	276	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-14 18:14:44,831	[DEBUG]	
2020-12-14 18:14:44,832	[INFO]	277	SUCCESS	+13.0	
2020-12-14 18:14:44,832	[DEBUG]	
2020-12-14 18:14:45,855	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:14:46,857	[INFO]	279	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:14:47,874	[INFO]	280	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:14:51,147	[INFO]	281	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:14:52,001	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:14:52,997	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:14:56,330	[INFO]	284	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:14:57,293	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:14:58,295	[INFO]	286	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:14:59,217	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:15:00,205	[INFO]	288	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:15:01,229	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:15:04,511	[INFO]	290	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:15:05,487	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:15:06,507	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:15:07,510	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:15:08,524	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:15:09,518	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:15:10,476	[INFO]	296	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:15:11,489	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:15:12,488	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:15:13,489	[INFO]	299	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:15:16,794	[INFO]	300	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:15:17,727	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:15:21,058	[INFO]	302	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 18:15:21,058	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:15:21,059	[INFO]	303	SUCCESS	+13.0	
2020-12-14 18:15:21,059	[DEBUG]	
2020-12-14 18:15:22,009	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:15:22,938	[INFO]	305	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:15:23,872	[INFO]	306	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:15:24,797	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:15:25,790	[INFO]	308	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:15:25,795	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:15:28,921	[INFO]	310	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:15:29,894	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:15:29,896	[INFO]	312	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:15:29,897	[DEBUG]	
2020-12-14 18:15:29,897	[INFO]	313	SUCCESS	+13.0	
2020-12-14 18:15:29,898	[DEBUG]	
2020-12-14 18:15:30,846	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:15:30,847	[INFO]	315	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:15:30,847	[DEBUG]	
2020-12-14 18:15:30,848	[INFO]	316	SUCCESS	+13.0	
2020-12-14 18:15:30,848	[DEBUG]	
2020-12-14 18:15:31,826	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:15:35,024	[INFO]	318	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-14 18:15:36,043	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:15:39,305	[INFO]	320	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-14 18:15:39,307	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-14 18:15:40,258	[INFO]	321	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:15:41,249	[INFO]	322	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:15:41,253	[INFO]	323	SUCCESS	+13.0	
2020-12-14 18:15:41,254	[DEBUG]	
2020-12-14 18:15:44,376	[INFO]	324	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-14 18:15:44,376	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val != arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:15:44,377	[INFO]	325	SUCCESS	+13.0	
2020-12-14 18:15:44,378	[DEBUG]	
2020-12-14 18:15:45,355	[INFO]	326	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:15:46,312	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:15:47,191	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:15:48,152	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:15:49,139	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:15:50,110	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:15:53,260	[INFO]	332	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:15:53,262	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-14 18:15:54,170	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:15:55,098	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:15:55,099	[INFO]	335	SUCCESS	+13.0	
2020-12-14 18:15:55,100	[DEBUG]	
2020-12-14 18:15:58,194	[INFO]	336	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-14 18:15:58,195	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:15:58,196	[INFO]	337	SUCCESS	+13.0	
2020-12-14 18:15:58,196	[DEBUG]	
2020-12-14 18:15:59,160	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:16:00,129	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:16:01,075	[INFO]	340	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:16:02,043	[INFO]	341	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:16:05,298	[INFO]	342	SUCCESS	 19.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:16:06,218	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:16:07,258	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:16:10,569	[INFO]	345	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:16:10,569	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:16:11,597	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:16:11,598	[INFO]	347	SUCCESS	+13.0	
2020-12-14 18:16:11,598	[DEBUG]	
2020-12-14 18:16:12,602	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:16:13,620	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:16:14,604	[INFO]	350	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:16:15,520	[INFO]	351	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:16:16,517	[INFO]	352	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:16:16,521	[INFO]	353	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:16:16,522	[DEBUG]	
2020-12-14 18:16:16,524	[INFO]	354	SUCCESS	+13.0	
2020-12-14 18:16:16,525	[DEBUG]	
2020-12-14 18:16:17,519	[INFO]	355	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:16:18,507	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:16:19,555	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:16:20,565	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:16:21,487	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:16:22,487	[INFO]	360	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:16:25,980	[INFO]	361	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:16:27,389	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:16:28,425	[INFO]	363	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:16:29,426	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:16:30,444	[INFO]	365	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:16:31,450	[INFO]	366	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:16:32,490	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:16:33,508	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:16:34,488	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:16:35,516	[INFO]	370	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:16:38,774	[INFO]	371	SUCCESS	 19.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:16:42,092	[INFO]	372	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-14 18:16:45,310	[INFO]	373	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:16:46,312	[INFO]	374	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:16:49,626	[INFO]	375	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:16:50,626	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:16:51,732	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:16:52,808	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:16:53,828	[INFO]	379	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:16:54,844	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:16:55,852	[INFO]	381	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:16:56,798	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:16:56,802	[INFO]	383	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:16:57,808	[INFO]	384	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:16:58,821	[INFO]	385	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:16:59,830	[INFO]	386	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:16:59,833	[INFO]	387	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:16:59,834	[DEBUG]	
2020-12-14 18:17:00,872	[INFO]	388	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:17:01,865	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:17:01,869	[INFO]	390	SUCCESS	+13.0	
2020-12-14 18:17:01,870	[DEBUG]	
2020-12-14 18:17:02,887	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:17:03,898	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:17:07,111	[INFO]	393	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:17:08,101	[INFO]	394	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:17:11,720	[INFO]	395	SUCCESS	 19.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:17:12,713	[INFO]	396	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:17:13,719	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:17:13,721	[INFO]	398	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:17:13,721	[DEBUG]	
2020-12-14 18:17:13,722	[INFO]	399	SUCCESS	+13.0	
2020-12-14 18:17:13,722	[DEBUG]	
2020-12-14 18:17:17,002	[INFO]	400	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-14 18:17:17,979	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:17:21,609	[INFO]	402	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:17:22,575	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:17:23,557	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:17:24,574	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:17:25,572	[INFO]	406	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:17:26,506	[INFO]	407	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:17:27,519	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:17:27,524	[INFO]	409	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-14 18:17:27,525	[DEBUG]	
2020-12-14 18:17:28,492	[INFO]	410	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:17:31,796	[INFO]	411	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:17:31,797	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                     prefix_lengths.add(j);
                  }
              }
  

2020-12-14 18:17:31,798	[INFO]	412	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-14 18:17:31,798	[DEBUG]	
2020-12-14 18:17:31,798	[INFO]	413	SUCCESS	+13.0	
2020-12-14 18:17:31,799	[DEBUG]	
2020-12-14 18:17:32,803	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:17:36,045	[INFO]	415	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:17:36,938	[INFO]	416	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:17:37,931	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:17:38,952	[INFO]	418	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:17:39,981	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:17:43,187	[INFO]	420	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-14 18:17:44,148	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:17:45,156	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:17:46,174	[INFO]	423	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:17:47,141	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:17:50,417	[INFO]	425	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:17:50,418	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,33 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 longest = length + 1;
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:17:50,419	[INFO]	426	SUCCESS	+13.0	
2020-12-14 18:17:50,419	[DEBUG]	
2020-12-14 18:17:50,420	[INFO]	427	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:17:50,420	[DEBUG]	
2020-12-14 18:17:51,419	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:17:51,421	[INFO]	429	SUCCESS	+13.0	
2020-12-14 18:17:51,421	[DEBUG]	
2020-12-14 18:17:52,444	[INFO]	430	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:17:53,432	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:17:54,417	[INFO]	432	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:17:55,428	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:17:56,464	[INFO]	434	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:17:57,478	[INFO]	435	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:17:58,467	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:17:59,517	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:18:00,391	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:18:01,437	[INFO]	439	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:18:02,386	[INFO]	440	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:18:05,548	[INFO]	441	SUCCESS	 29.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:18:06,554	[INFO]	442	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:18:07,578	[INFO]	443	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:18:10,799	[INFO]	444	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:18:10,800	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,41 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-14 18:18:10,801	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:18:11,806	[INFO]	446	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:18:11,807	[INFO]	447	SUCCESS	+13.0	
2020-12-14 18:18:11,807	[DEBUG]	
2020-12-14 18:18:15,083	[INFO]	448	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:18:18,337	[INFO]	449	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-14 18:18:18,338	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val <= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:18:18,339	[INFO]	450	SUCCESS	+13.0	
2020-12-14 18:18:18,339	[DEBUG]	
2020-12-14 18:18:19,318	[INFO]	451	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:18:20,262	[INFO]	452	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:18:21,255	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:18:24,380	[INFO]	454	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:18:27,664	[INFO]	455	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:18:28,573	[INFO]	456	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:18:28,577	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:18:29,599	[INFO]	458	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:18:30,615	[INFO]	459	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:18:30,619	[INFO]	460	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:18:33,901	[INFO]	461	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-14 18:18:33,902	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:18:33,903	[INFO]	462	SUCCESS	+13.0	
2020-12-14 18:18:33,903	[DEBUG]	
2020-12-14 18:18:34,885	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:18:35,962	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:18:39,299	[INFO]	465	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:18:42,358	[INFO]	466	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:18:42,359	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-14 18:18:42,360	[INFO]	467	SUCCESS	+13.0	
2020-12-14 18:18:42,360	[DEBUG]	
2020-12-14 18:18:43,302	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:18:43,304	[INFO]	469	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:18:46,439	[INFO]	470	SUCCESS	 19.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:18:47,394	[INFO]	471	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:18:48,349	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:18:49,347	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:18:52,526	[INFO]	474	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-14 18:18:55,740	[INFO]	475	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:18:55,742	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 29,34 ****
--- 29,35 ----
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+                 longest = length + 1;
              }
  
              i++;

2020-12-14 18:18:55,743	[INFO]	476	SUCCESS	+13.0	
2020-12-14 18:18:55,744	[DEBUG]	
2020-12-14 18:18:56,692	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:18:57,649	[INFO]	478	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:18:58,629	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:18:59,624	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:19:00,562	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:19:03,716	[INFO]	482	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:19:04,670	[INFO]	483	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:19:05,654	[INFO]	484	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:19:06,619	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:19:07,598	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:19:08,560	[INFO]	487	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:19:09,561	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:19:10,516	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:19:11,484	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:19:12,430	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:19:13,366	[INFO]	492	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:19:13,367	[INFO]	493	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:19:14,321	[INFO]	494	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:19:15,272	[INFO]	495	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:19:16,254	[INFO]	496	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:19:17,218	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:19:18,172	[INFO]	498	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:19:19,136	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:19:20,121	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:19:20,122	[INFO]	==== END ====
2020-12-14 18:19:20,123	[INFO]	Reason: step budget
2020-12-14 18:19:20,125	[INFO]	
2020-12-14 18:19:20,125	[INFO]	========== EPOCH 14 ==========
2020-12-14 18:19:20,126	[INFO]	==== WARMUP ====
2020-12-14 18:19:23,330	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:19:23,330	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:19:26,455	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:19:26,455	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:19:29,536	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:19:29,537	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:19:32,751	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-14 18:19:32,752	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:19:32,752	[INFO]	==== START ====
2020-12-14 18:19:35,868	[INFO]	1	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:19:36,813	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:19:37,782	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:19:38,743	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:19:39,699	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:19:40,646	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:19:41,622	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:19:42,551	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:19:43,409	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:19:44,416	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:19:47,650	[INFO]	11	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:19:48,558	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:19:51,752	[INFO]	13	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:19:52,691	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:19:53,641	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:19:56,689	[INFO]	16	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:19:56,690	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,42 ----
                  longest = length + 1;
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              i++;
          }
          return longest;

2020-12-14 18:19:59,853	[INFO]	17	SUCCESS	 28.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:20:02,973	[INFO]	18	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:20:02,974	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 24,29 ****
--- 24,35 ----
                  }
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
***************
*** 31,36 ****
--- 37,48 ----
                  longest = length + 1;
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              i++;
          }
          return longest;

2020-12-14 18:20:03,810	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:20:07,002	[INFO]	20	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:20:07,003	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 24,29 ****
--- 24,35 ----
                  }
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {

2020-12-14 18:20:07,963	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:20:11,202	[INFO]	22	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:20:11,205	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,31 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
+                 }
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 18:20:11,209	[INFO]	23	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:20:11,211	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,31 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
+                 }
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 18:20:14,267	[INFO]	24	SUCCESS	 27.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:20:15,217	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:20:15,218	[INFO]	26	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:20:15,219	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,31 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
+                 }
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 18:20:15,220	[INFO]	27	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:20:15,220	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 24,29 ****
--- 24,35 ----
                  }
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {

2020-12-14 18:20:15,221	[INFO]	28	SUCCESS	+13.0	
2020-12-14 18:20:15,221	[DEBUG]	
2020-12-14 18:20:16,185	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:20:16,186	[INFO]	30	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:20:16,187	[DEBUG]	
2020-12-14 18:20:19,473	[INFO]	31	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:20:19,474	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 18:20:19,475	[INFO]	32	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:20:19,475	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 18:20:19,476	[INFO]	33	SUCCESS	+13.0	
2020-12-14 18:20:19,476	[DEBUG]	
2020-12-14 18:20:20,495	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:20:23,798	[INFO]	35	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:20:23,800	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:20:23,801	[INFO]	36	SUCCESS	+13.0	
2020-12-14 18:20:23,801	[DEBUG]	
2020-12-14 18:20:24,833	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:20:25,849	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:20:25,852	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:20:26,903	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:20:30,141	[INFO]	41	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:20:31,096	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:20:32,117	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:20:32,119	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:20:33,104	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:20:33,107	[INFO]	46	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:20:34,061	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:20:35,063	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:20:39,188	[INFO]	49	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:20:40,331	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:20:41,574	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:20:42,826	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:20:43,904	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:20:45,090	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:20:46,326	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:20:47,257	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:20:50,526	[INFO]	57	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 18:20:50,528	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:20:51,448	[INFO]	58	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:20:52,398	[INFO]	59	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:20:53,390	[INFO]	60	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:20:53,393	[INFO]	61	SUCCESS	+13.0	
2020-12-14 18:20:53,393	[DEBUG]	
2020-12-14 18:20:54,367	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:20:55,336	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:20:56,327	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:20:59,534	[INFO]	65	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:21:00,458	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:21:01,441	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:21:02,413	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:21:03,322	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:21:04,238	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:21:07,354	[INFO]	71	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:21:07,355	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,37 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:21:07,356	[INFO]	72	SUCCESS	+13.0	
2020-12-14 18:21:07,356	[DEBUG]	
2020-12-14 18:21:08,326	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:21:09,267	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:21:10,254	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:21:11,236	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:21:12,184	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:21:13,161	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:21:16,465	[INFO]	79	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:21:17,371	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:21:18,320	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:21:19,290	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:21:22,408	[INFO]	83	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:21:23,319	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:21:24,282	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:21:25,266	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:21:28,385	[INFO]	87	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 18:21:28,386	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:21:28,387	[INFO]	88	SUCCESS	+13.0	
2020-12-14 18:21:28,387	[DEBUG]	
2020-12-14 18:21:29,277	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:21:30,222	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:21:31,154	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:21:31,156	[INFO]	92	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:21:31,157	[DEBUG]	
2020-12-14 18:21:31,157	[INFO]	93	SUCCESS	+13.0	
2020-12-14 18:21:31,158	[DEBUG]	
2020-12-14 18:21:32,105	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:21:33,091	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:21:36,200	[INFO]	96	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:21:37,162	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:21:38,095	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:21:41,192	[INFO]	99	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:21:41,194	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,37 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:21:41,195	[INFO]	100	SUCCESS	+13.0	
2020-12-14 18:21:41,196	[DEBUG]	
2020-12-14 18:21:42,172	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:21:43,074	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:21:44,039	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:21:44,973	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:21:45,970	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:21:49,157	[INFO]	106	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:21:49,159	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:21:49,161	[INFO]	107	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:21:49,162	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:21:52,337	[INFO]	108	SUCCESS	 14.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-14 18:21:52,341	[INFO]	109	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:21:52,342	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:21:55,442	[INFO]	110	SUCCESS	 28.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:21:55,443	[INFO]	111	SUCCESS	+13.0	
2020-12-14 18:21:55,443	[DEBUG]	
2020-12-14 18:21:58,653	[INFO]	112	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:21:58,654	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,38 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:21:59,598	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:22:00,564	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:22:00,565	[INFO]	115	SUCCESS	+13.0	
2020-12-14 18:22:00,565	[DEBUG]	
2020-12-14 18:22:01,539	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:22:02,490	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:22:03,395	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:22:03,396	[INFO]	119	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:22:03,396	[DEBUG]	
2020-12-14 18:22:03,397	[INFO]	120	SUCCESS	+13.0	
2020-12-14 18:22:03,397	[DEBUG]	
2020-12-14 18:22:04,682	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:22:04,685	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:22:05,659	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:22:06,621	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:22:07,580	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:22:07,583	[INFO]	126	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:22:07,584	[DEBUG]	
2020-12-14 18:22:07,585	[INFO]	127	SUCCESS	+13.0	
2020-12-14 18:22:07,586	[DEBUG]	
2020-12-14 18:22:08,572	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:22:11,602	[INFO]	129	SUCCESS	 29.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:22:12,511	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:22:13,463	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:22:14,376	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:22:17,470	[INFO]	133	SUCCESS	*0.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:22:17,471	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-14 18:22:17,471	[INFO]	==== END ====
2020-12-14 18:22:17,471	[INFO]	Reason: target fitness reached
2020-12-14 18:22:17,472	[INFO]	
2020-12-14 18:22:17,472	[INFO]	========== EPOCH 15 ==========
2020-12-14 18:22:17,472	[INFO]	==== WARMUP ====
2020-12-14 18:22:20,558	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:22:20,559	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:22:23,698	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:22:23,699	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:22:26,883	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:22:26,884	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:22:29,995	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-14 18:22:29,995	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:22:29,995	[INFO]	==== START ====
2020-12-14 18:22:29,996	[INFO]	1	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:22:29,996	[DEBUG]	
2020-12-14 18:22:30,953	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:22:31,918	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:22:32,917	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:22:32,919	[INFO]	5	SUCCESS	+13.0	
2020-12-14 18:22:32,920	[DEBUG]	
2020-12-14 18:22:32,922	[INFO]	6	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:22:32,923	[DEBUG]	
2020-12-14 18:22:32,924	[INFO]	7	SUCCESS	+13.0	
2020-12-14 18:22:32,924	[DEBUG]	
2020-12-14 18:22:33,891	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:22:37,043	[INFO]	9	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:22:37,043	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                     prefix_lengths.add(j);
                  }
              }
  

2020-12-14 18:22:40,023	[INFO]	10	SUCCESS	 29.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:22:43,143	[INFO]	11	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:22:43,144	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 21,30 ****
--- 21,36 ----
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                     prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
+ 
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);

2020-12-14 18:22:46,352	[INFO]	12	SUCCESS	 22.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-14 18:22:49,517	[INFO]	13	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:22:49,518	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                     prefix_lengths.add(j);
                  }
              }
  
***************
*** 31,36 ****
--- 32,42 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 i++;
+             }
+ 
              i++;
          }
          return longest;

2020-12-14 18:22:49,519	[INFO]	14	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:22:49,519	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 21,30 ****
--- 21,36 ----
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                     prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
+ 
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);

2020-12-14 18:22:52,580	[INFO]	15	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:22:52,581	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,41 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-14 18:22:52,582	[INFO]	16	SUCCESS	+13.0	
2020-12-14 18:22:52,582	[DEBUG]	
2020-12-14 18:22:53,536	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:22:56,673	[INFO]	18	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:22:57,609	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:22:58,548	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:22:59,522	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:23:02,688	[INFO]	22	SUCCESS	*10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 18:23:02,689	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:23:02,689	[INFO]	23	SUCCESS	 13.0	
2020-12-14 18:23:03,614	[INFO]	24	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:23:04,615	[INFO]	25	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:23:05,586	[INFO]	26	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:23:06,436	[INFO]	27	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:23:07,322	[INFO]	28	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:23:08,283	[INFO]	29	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:23:09,244	[INFO]	30	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:23:10,270	[INFO]	31	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:23:11,221	[INFO]	32	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:23:12,173	[INFO]	33	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:23:13,129	[INFO]	34	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:23:14,077	[INFO]	35	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:23:15,018	[INFO]	36	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:23:15,950	[INFO]	37	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:23:19,096	[INFO]	38	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:23:19,097	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
!                     prefix_lengths.add(j);
!                 }
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:23:19,098	[INFO]	39	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 18:23:19,098	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:23:19,099	[INFO]	40	SUCCESS	 13.0	
2020-12-14 18:23:19,966	[INFO]	41	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:23:19,971	[INFO]	42	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:23:19,973	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:23:20,939	[INFO]	43	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:23:24,188	[INFO]	44	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:23:24,190	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:23:25,094	[INFO]	45	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:23:25,097	[INFO]	46	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:23:25,098	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:23:25,100	[INFO]	47	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:23:25,101	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:23:28,259	[INFO]	48	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:23:28,260	[INFO]	49	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:23:28,261	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:23:28,262	[INFO]	50	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:23:29,185	[INFO]	51	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:23:30,143	[INFO]	52	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:23:31,096	[INFO]	53	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:23:31,097	[INFO]	54	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:23:31,098	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:23:31,099	[INFO]	55	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:23:31,099	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:23:34,217	[INFO]	56	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:23:37,549	[INFO]	57	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-14 18:23:37,549	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:23:37,550	[INFO]	58	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-14 18:23:37,551	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:23:37,551	[INFO]	59	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 18:23:38,429	[INFO]	60	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:23:41,606	[INFO]	61	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-14 18:23:42,514	[INFO]	62	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:23:45,582	[INFO]	63	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:23:46,574	[INFO]	64	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:23:47,541	[INFO]	65	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:23:48,521	[INFO]	66	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:23:49,479	[INFO]	67	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:23:50,484	[INFO]	68	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:23:53,640	[INFO]	69	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:23:54,575	[INFO]	70	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:23:57,763	[INFO]	71	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:23:58,677	[INFO]	72	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:23:59,632	[INFO]	73	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:24:02,861	[INFO]	74	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:24:03,772	[INFO]	75	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:24:04,687	[INFO]	76	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:24:05,681	[INFO]	77	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:24:06,645	[INFO]	78	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:24:07,618	[INFO]	79	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:24:08,558	[INFO]	80	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:24:08,561	[INFO]	81	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:24:09,536	[INFO]	82	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:24:10,534	[INFO]	83	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:24:11,491	[INFO]	84	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:24:12,470	[INFO]	85	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:24:13,434	[INFO]	86	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:24:14,408	[INFO]	87	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:24:15,374	[INFO]	88	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:24:18,543	[INFO]	89	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-14 18:24:19,523	[INFO]	90	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:24:20,475	[INFO]	91	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:24:23,659	[INFO]	92	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:24:26,680	[INFO]	93	SUCCESS	 17.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:24:29,800	[INFO]	94	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:24:29,801	[INFO]	95	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:24:30,754	[INFO]	96	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:24:30,755	[INFO]	97	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:24:30,756	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:24:31,738	[INFO]	98	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:24:31,741	[INFO]	99	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:24:34,961	[INFO]	100	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:24:34,962	[INFO]	101	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-14 18:24:34,963	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:24:34,963	[INFO]	102	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-14 18:24:34,964	[INFO]	103	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 18:24:35,834	[INFO]	104	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:24:39,050	[INFO]	105	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:24:39,966	[INFO]	106	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:24:40,977	[INFO]	107	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:24:41,925	[INFO]	108	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:24:42,893	[INFO]	109	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:24:46,057	[INFO]	110	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:24:46,058	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,33 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:24:46,060	[INFO]	111	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:24:46,060	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,33 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:24:47,000	[INFO]	112	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:24:47,003	[INFO]	113	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:24:47,004	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,33 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:24:47,005	[INFO]	114	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-14 18:24:47,006	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:24:47,007	[INFO]	115	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-14 18:24:47,983	[INFO]	116	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:24:51,095	[INFO]	117	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:24:51,971	[INFO]	118	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:24:51,972	[INFO]	119	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 18:24:52,909	[INFO]	120	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:24:53,891	[INFO]	121	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:24:54,839	[INFO]	122	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:24:54,843	[INFO]	123	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:24:55,791	[INFO]	124	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:24:56,754	[INFO]	125	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:24:57,728	[INFO]	126	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:24:58,707	[INFO]	127	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:25:01,869	[INFO]	128	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-14 18:25:02,799	[INFO]	129	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:25:03,745	[INFO]	130	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:25:04,683	[INFO]	131	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:25:05,659	[INFO]	132	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:25:06,633	[INFO]	133	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:25:07,602	[INFO]	134	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:25:10,800	[INFO]	135	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:25:11,774	[INFO]	136	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:25:12,753	[INFO]	137	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:25:13,743	[INFO]	138	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:25:14,690	[INFO]	139	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:25:15,687	[INFO]	140	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:25:16,653	[INFO]	141	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:25:16,655	[INFO]	142	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:25:17,620	[INFO]	143	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:25:18,588	[INFO]	144	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:25:21,688	[INFO]	145	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:25:21,689	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,30 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] <= val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 32,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:25:24,879	[INFO]	146	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:25:24,884	[INFO]	147	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:25:24,886	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,30 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] <= val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 32,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:25:25,869	[INFO]	148	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:25:28,990	[INFO]	149	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:25:28,994	[INFO]	150	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:25:28,996	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,30 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] <= val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 32,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:25:28,998	[INFO]	151	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:25:29,955	[INFO]	152	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:25:30,914	[INFO]	153	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:25:31,925	[INFO]	154	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:25:32,943	[INFO]	155	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:25:33,917	[INFO]	156	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:25:34,863	[INFO]	157	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:25:34,865	[INFO]	158	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:25:35,921	[INFO]	159	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:25:35,923	[INFO]	160	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:25:35,923	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,30 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] <= val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 32,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:25:36,879	[INFO]	161	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:25:37,762	[INFO]	162	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:25:37,763	[INFO]	163	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:25:37,764	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:25:38,745	[INFO]	164	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:25:39,738	[INFO]	165	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:25:39,741	[INFO]	166	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:25:39,742	[INFO]	167	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:25:40,677	[INFO]	168	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:25:41,636	[INFO]	169	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:25:42,611	[INFO]	170	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:25:42,615	[INFO]	171	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:25:42,617	[INFO]	172	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:25:42,618	[INFO]	173	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-14 18:25:42,619	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:25:45,721	[INFO]	174	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:25:45,722	[INFO]	175	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 18:25:46,668	[INFO]	176	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:25:46,671	[INFO]	177	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-14 18:25:47,642	[INFO]	178	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:25:50,797	[INFO]	179	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-14 18:25:51,726	[INFO]	180	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:25:52,587	[INFO]	181	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:25:53,547	[INFO]	182	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:25:54,497	[INFO]	183	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:25:55,459	[INFO]	184	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:25:56,403	[INFO]	185	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:25:57,361	[INFO]	186	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:26:00,534	[INFO]	187	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-14 18:26:03,602	[INFO]	188	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-14 18:26:04,542	[INFO]	189	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:26:04,544	[INFO]	190	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:26:05,550	[INFO]	191	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:26:08,516	[INFO]	192	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:26:09,497	[INFO]	193	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:26:10,490	[INFO]	194	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:26:11,344	[INFO]	195	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:26:12,351	[INFO]	196	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:26:15,522	[INFO]	197	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 18:26:15,523	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:26:16,487	[INFO]	198	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:26:16,490	[INFO]	199	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-14 18:26:16,491	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:26:19,650	[INFO]	200	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:26:19,651	[INFO]	201	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:26:19,652	[INFO]	202	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 18:26:20,569	[INFO]	203	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:26:20,570	[INFO]	204	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-14 18:26:21,546	[INFO]	205	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:26:24,621	[INFO]	206	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:26:25,558	[INFO]	207	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:26:26,523	[INFO]	208	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:26:27,489	[INFO]	209	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:26:28,439	[INFO]	210	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:26:29,392	[INFO]	211	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:26:32,577	[INFO]	212	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:26:32,580	[INFO]	213	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:26:32,580	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:26:32,581	[INFO]	214	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:26:32,582	[INFO]	215	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:26:32,583	[INFO]	216	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-14 18:26:32,583	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:26:32,584	[INFO]	217	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 18:26:32,585	[INFO]	218	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-14 18:26:33,523	[INFO]	219	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:26:34,478	[INFO]	220	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:26:37,609	[INFO]	221	SUCCESS	 17.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:26:37,611	[INFO]	222	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:26:38,584	[INFO]	223	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:26:39,519	[INFO]	224	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:26:42,674	[INFO]	225	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:26:42,675	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,34 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 19,37 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 18:26:45,722	[INFO]	226	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:26:45,724	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,34 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 19,38 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
!                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 18:26:45,725	[INFO]	227	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:26:45,725	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,34 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 19,37 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 18:26:48,798	[INFO]	228	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:26:48,799	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 18:26:48,800	[INFO]	229	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 18:26:51,919	[INFO]	230	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:26:51,920	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 18:26:51,920	[INFO]	==== END ====
2020-12-14 18:26:51,920	[INFO]	Reason: target fitness reached
2020-12-14 18:26:51,921	[INFO]	
2020-12-14 18:26:51,921	[INFO]	========== EPOCH 16 ==========
2020-12-14 18:26:51,921	[INFO]	==== WARMUP ====
2020-12-14 18:26:55,098	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:26:55,099	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:26:58,237	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:26:58,237	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:27:01,274	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:27:01,274	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:27:04,412	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-14 18:27:04,412	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:27:04,412	[INFO]	==== START ====
2020-12-14 18:27:05,366	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:27:06,332	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:27:07,252	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:27:10,400	[INFO]	4	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:27:10,401	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-14 18:27:10,401	[INFO]	5	SUCCESS	+13.0	
2020-12-14 18:27:10,402	[DEBUG]	
2020-12-14 18:27:11,348	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:27:12,337	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:27:13,286	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:27:14,222	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:27:15,198	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:27:16,155	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:27:17,129	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:27:18,095	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:27:19,030	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:27:19,032	[INFO]	15	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-14 18:27:19,032	[DEBUG]	
2020-12-14 18:27:19,032	[INFO]	16	SUCCESS	+13.0	
2020-12-14 18:27:19,033	[DEBUG]	
2020-12-14 18:27:19,941	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:27:23,093	[INFO]	18	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:27:23,957	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:27:24,848	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:27:27,979	[INFO]	21	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:27:27,979	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 29,34 ****
--- 29,35 ----
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+                 longest = length + 1;
              }
  
              i++;

2020-12-14 18:27:31,076	[INFO]	22	SUCCESS	 28.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:27:31,078	[INFO]	23	SUCCESS	+13.0	
2020-12-14 18:27:31,079	[DEBUG]	
2020-12-14 18:27:32,019	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:27:35,184	[INFO]	25	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-14 18:27:35,185	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:27:36,143	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:27:37,124	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:27:38,098	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:27:39,068	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:27:40,023	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:27:40,984	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:27:41,961	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:27:42,896	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:27:43,857	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:27:44,809	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:27:47,939	[INFO]	37	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:27:47,940	[INFO]	38	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:27:47,941	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-14 18:27:47,941	[INFO]	39	SUCCESS	+13.0	
2020-12-14 18:27:47,941	[DEBUG]	
2020-12-14 18:27:48,889	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:27:52,079	[INFO]	41	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:27:53,031	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:27:53,999	[INFO]	43	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:27:54,961	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:27:54,962	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:27:55,911	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:27:56,878	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:27:57,816	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:27:57,818	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:27:58,789	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:28:01,880	[INFO]	51	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:28:02,814	[INFO]	52	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:28:03,805	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:28:04,776	[INFO]	54	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:28:07,724	[INFO]	55	SUCCESS	 29.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:28:08,675	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:28:09,559	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:28:10,484	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:28:11,441	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:28:12,432	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:28:13,415	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:28:16,571	[INFO]	62	SUCCESS	*10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-14 18:28:16,572	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:28:16,573	[INFO]	63	SUCCESS	 13.0	
2020-12-14 18:28:17,506	[INFO]	64	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:28:17,507	[INFO]	65	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:28:17,508	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:28:17,509	[INFO]	66	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:28:17,509	[INFO]	67	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-14 18:28:17,510	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:28:17,510	[INFO]	68	SUCCESS	 13.0	
2020-12-14 18:28:18,467	[INFO]	69	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:28:19,417	[INFO]	70	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:28:22,541	[INFO]	71	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:28:23,495	[INFO]	72	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:28:24,455	[INFO]	73	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:28:27,641	[INFO]	74	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:28:28,588	[INFO]	75	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:28:29,539	[INFO]	76	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:28:32,666	[INFO]	77	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:28:32,666	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:28:33,589	[INFO]	78	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:28:34,549	[INFO]	79	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:28:34,550	[INFO]	80	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-14 18:28:34,551	[INFO]	81	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:28:34,551	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:28:37,663	[INFO]	82	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:28:37,664	[INFO]	83	SUCCESS	 13.0	
2020-12-14 18:28:40,796	[INFO]	84	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-14 18:28:41,717	[INFO]	85	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:28:42,691	[INFO]	86	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:28:43,541	[INFO]	87	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:28:46,791	[INFO]	88	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:28:46,792	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:28:49,950	[INFO]	89	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:28:50,888	[INFO]	90	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:28:50,889	[INFO]	91	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:28:50,889	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:28:54,008	[INFO]	92	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:28:54,957	[INFO]	93	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:28:58,198	[INFO]	94	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:28:59,118	[INFO]	95	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:29:00,071	[INFO]	96	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:29:00,073	[INFO]	97	SUCCESS	 13.0	
2020-12-14 18:29:01,055	[INFO]	98	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:29:02,001	[INFO]	99	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:29:02,954	[INFO]	100	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:29:03,944	[INFO]	101	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:29:07,165	[INFO]	102	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:29:07,167	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             ends.put(length+1, i);
! 
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:29:07,167	[INFO]	==== END ====
2020-12-14 18:29:07,167	[INFO]	Reason: target fitness reached
2020-12-14 18:29:07,168	[INFO]	
2020-12-14 18:29:07,168	[INFO]	========== EPOCH 17 ==========
2020-12-14 18:29:07,169	[INFO]	==== WARMUP ====
2020-12-14 18:29:10,328	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:29:10,328	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:29:13,473	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:29:13,473	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:29:16,545	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:29:16,545	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:29:19,620	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-14 18:29:19,620	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:29:19,620	[INFO]	==== START ====
2020-12-14 18:29:20,551	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:29:21,486	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:29:24,556	[INFO]	3	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:29:24,557	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 29,34 ****
--- 29,35 ----
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+                 longest = length + 1;
              }
  
              i++;

2020-12-14 18:29:27,751	[INFO]	4	SUCCESS	 27.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:29:28,706	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:29:29,675	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:29:30,643	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:29:30,644	[INFO]	8	SUCCESS	+13.0	
2020-12-14 18:29:30,645	[DEBUG]	
2020-12-14 18:29:31,579	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:29:32,578	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:29:33,518	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:29:34,447	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:29:35,415	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:29:36,558	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:29:37,440	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:29:40,638	[INFO]	16	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:29:40,640	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:29:41,566	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:29:41,567	[INFO]	18	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:29:41,568	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:29:42,520	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:29:45,648	[INFO]	20	SUCCESS	 20.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:29:45,650	[INFO]	21	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:29:45,650	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:29:48,846	[INFO]	22	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-14 18:29:48,847	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 28,33 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:29:52,035	[INFO]	23	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-14 18:29:52,036	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-14 18:29:52,855	[INFO]	24	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:29:52,856	[INFO]	25	SUCCESS	+13.0	
2020-12-14 18:29:52,856	[DEBUG]	
2020-12-14 18:29:53,811	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:29:54,756	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:29:55,706	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:29:55,707	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:29:55,708	[INFO]	30	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:29:55,709	[DEBUG]	
2020-12-14 18:29:58,833	[INFO]	31	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:29:58,834	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,26 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                 }
                  }
              }
  

2020-12-14 18:29:58,835	[INFO]	32	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:29:58,836	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,26 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                 }
                  }
              }
  

2020-12-14 18:29:59,790	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:29:59,791	[INFO]	34	SUCCESS	+13.0	
2020-12-14 18:29:59,791	[DEBUG]	
2020-12-14 18:29:59,792	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:30:00,777	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:30:03,917	[INFO]	37	SUCCESS	 22.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:30:04,891	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:30:05,821	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:30:06,793	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:30:07,795	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:30:08,741	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:30:11,862	[INFO]	43	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:30:12,832	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:30:13,797	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:30:13,801	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:30:13,803	[INFO]	47	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:30:13,803	[DEBUG]	
2020-12-14 18:30:13,805	[INFO]	48	SUCCESS	+13.0	
2020-12-14 18:30:13,805	[DEBUG]	
2020-12-14 18:30:14,764	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:30:15,739	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:30:16,712	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:30:16,716	[INFO]	52	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:30:16,717	[DEBUG]	
2020-12-14 18:30:17,670	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:30:17,671	[INFO]	54	SUCCESS	+13.0	
2020-12-14 18:30:17,671	[DEBUG]	
2020-12-14 18:30:18,624	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:30:19,597	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:30:20,529	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:30:23,700	[INFO]	58	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:30:24,606	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:30:27,780	[INFO]	60	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:30:27,781	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,41 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-14 18:30:27,781	[INFO]	61	SUCCESS	+13.0	
2020-12-14 18:30:27,782	[DEBUG]	
2020-12-14 18:30:28,706	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:30:29,664	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:30:32,860	[INFO]	64	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-14 18:30:33,779	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:30:37,551	[INFO]	66	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:30:38,753	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:30:41,972	[INFO]	68	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:30:41,974	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 18:30:41,975	[INFO]	==== END ====
2020-12-14 18:30:41,975	[INFO]	Reason: target fitness reached
2020-12-14 18:30:41,978	[INFO]	
2020-12-14 18:30:41,978	[INFO]	========== EPOCH 18 ==========
2020-12-14 18:30:41,979	[INFO]	==== WARMUP ====
2020-12-14 18:30:45,168	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:30:45,169	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:30:48,255	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:30:48,255	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:30:51,436	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:30:51,436	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:30:54,560	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-14 18:30:54,560	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:30:54,560	[INFO]	==== START ====
2020-12-14 18:30:55,490	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:30:58,608	[INFO]	2	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:30:58,609	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,28 ****
--- 23,33 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  

2020-12-14 18:30:59,621	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:30:59,622	[INFO]	4	SUCCESS	+13.0	
2020-12-14 18:30:59,623	[DEBUG]	
2020-12-14 18:31:00,587	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:31:01,536	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:31:04,678	[INFO]	7	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-14 18:31:05,632	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:31:06,608	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:31:07,541	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:31:07,543	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:31:08,512	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:31:09,442	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:31:09,444	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:31:10,428	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:31:11,449	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:31:12,435	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:31:13,361	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:31:14,296	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:31:15,263	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:31:16,235	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:31:17,176	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:31:18,170	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:31:21,412	[INFO]	24	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:31:21,413	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-14 18:31:22,352	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:31:22,353	[INFO]	26	SUCCESS	+13.0	
2020-12-14 18:31:22,354	[DEBUG]	
2020-12-14 18:31:25,545	[INFO]	27	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-14 18:31:25,546	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-14 18:31:26,467	[INFO]	28	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:31:27,458	[INFO]	29	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:31:27,461	[INFO]	30	SUCCESS	+13.0	
2020-12-14 18:31:27,462	[DEBUG]	
2020-12-14 18:31:30,652	[INFO]	31	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:31:30,653	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;

2020-12-14 18:31:30,654	[INFO]	32	SUCCESS	+13.0	
2020-12-14 18:31:30,654	[DEBUG]	
2020-12-14 18:31:31,606	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:31:32,583	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:31:33,483	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:31:34,448	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:31:35,420	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:31:36,387	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:31:37,346	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:31:38,317	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:31:39,297	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:31:42,452	[INFO]	42	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:31:43,405	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:31:44,295	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:31:45,247	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:31:48,320	[INFO]	46	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:31:48,320	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 18:31:48,321	[INFO]	47	SUCCESS	+13.0	
2020-12-14 18:31:48,322	[DEBUG]	
2020-12-14 18:31:48,322	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:31:51,402	[INFO]	49	SUCCESS	 19.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:31:52,371	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:31:55,559	[INFO]	51	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:31:56,486	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:31:59,701	[INFO]	53	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:31:59,702	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-14 18:31:59,703	[INFO]	54	SUCCESS	+13.0	
2020-12-14 18:31:59,703	[DEBUG]	
2020-12-14 18:32:02,773	[INFO]	55	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:32:03,741	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:32:04,701	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:32:05,705	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:32:08,905	[INFO]	59	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-14 18:32:09,892	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:32:12,932	[INFO]	61	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:32:13,860	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:32:14,813	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:32:18,006	[INFO]	64	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-14 18:32:18,954	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:32:19,920	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:32:20,878	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:32:21,829	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:32:22,815	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:32:23,827	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:32:26,899	[INFO]	71	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-14 18:32:26,899	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-14 18:32:27,868	[INFO]	72	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:32:27,870	[INFO]	73	SUCCESS	+13.0	
2020-12-14 18:32:27,871	[DEBUG]	
2020-12-14 18:32:28,827	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:32:29,786	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:32:30,775	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:32:31,731	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:32:32,743	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:32:33,706	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:32:33,708	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:32:34,690	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:32:37,881	[INFO]	82	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-14 18:32:38,804	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:32:39,831	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:32:40,815	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:32:41,794	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:32:44,936	[INFO]	87	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:32:45,895	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:32:46,854	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:32:47,793	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:32:48,740	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:32:49,747	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:32:50,648	[INFO]	93	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:32:51,654	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:32:51,657	[INFO]	95	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-14 18:32:51,658	[DEBUG]	
2020-12-14 18:32:52,607	[INFO]	96	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:32:52,609	[INFO]	97	SUCCESS	+13.0	
2020-12-14 18:32:52,610	[DEBUG]	
2020-12-14 18:32:53,575	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:32:54,549	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:32:57,752	[INFO]	100	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:32:58,755	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:32:59,735	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:32:59,737	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:33:00,748	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:33:01,765	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:33:05,293	[INFO]	106	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:33:06,286	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:33:07,297	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:33:10,573	[INFO]	109	SUCCESS	 24.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:33:11,563	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:33:12,512	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:33:13,459	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:33:16,600	[INFO]	113	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:33:16,602	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,38 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:33:17,538	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:33:18,493	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:33:18,495	[INFO]	116	SUCCESS	+13.0	
2020-12-14 18:33:18,495	[DEBUG]	
2020-12-14 18:33:19,456	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:33:20,414	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:33:21,376	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:33:22,307	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:33:23,267	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:33:26,488	[INFO]	122	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:33:27,397	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:33:28,325	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:33:29,305	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:33:30,284	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:33:33,414	[INFO]	127	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:33:33,415	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,33 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 longest = length + 1;
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:33:34,320	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:33:35,303	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:33:35,305	[INFO]	130	SUCCESS	+13.0	
2020-12-14 18:33:35,306	[DEBUG]	
2020-12-14 18:33:38,493	[INFO]	131	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:33:41,675	[INFO]	132	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:33:41,676	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:33:42,606	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:33:45,712	[INFO]	134	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:33:45,713	[INFO]	135	SUCCESS	+13.0	
2020-12-14 18:33:45,713	[DEBUG]	
2020-12-14 18:33:46,672	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:33:49,774	[INFO]	137	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:33:49,775	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,28 ****
--- 23,33 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  

2020-12-14 18:33:50,708	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:33:50,711	[INFO]	139	SUCCESS	+13.0	
2020-12-14 18:33:50,711	[DEBUG]	
2020-12-14 18:33:51,726	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:33:52,712	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:33:53,732	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:33:56,975	[INFO]	143	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:33:56,976	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,42 ----
                  longest = length + 1;
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              i++;
          }
          return longest;

2020-12-14 18:33:57,900	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:33:57,901	[INFO]	145	SUCCESS	+13.0	
2020-12-14 18:33:57,902	[DEBUG]	
2020-12-14 18:33:58,846	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:33:59,960	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:34:00,962	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:34:01,941	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:34:05,243	[INFO]	150	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:34:06,228	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:34:07,240	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:34:08,249	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:34:09,236	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:34:10,293	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:34:11,296	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:34:12,253	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:34:13,256	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:34:13,258	[INFO]	159	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:34:13,259	[DEBUG]	
2020-12-14 18:34:14,270	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:34:15,318	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:34:16,290	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:34:16,292	[INFO]	163	SUCCESS	+13.0	
2020-12-14 18:34:16,292	[DEBUG]	
2020-12-14 18:34:19,583	[INFO]	164	SUCCESS	 28.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:34:20,589	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:34:21,594	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:34:22,978	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:34:24,032	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:34:25,008	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:34:25,982	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:34:26,935	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:34:27,912	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:34:28,909	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:34:29,866	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:34:30,862	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:34:31,846	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:34:32,871	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:34:33,907	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:34:37,250	[INFO]	179	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-14 18:34:38,247	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:34:38,250	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:34:39,254	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:34:42,476	[INFO]	183	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:34:43,425	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:34:44,427	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:34:45,346	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:34:46,363	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:34:47,306	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:34:50,534	[INFO]	189	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:34:50,536	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:34:51,449	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:34:52,425	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:34:53,368	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:34:54,355	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:34:55,263	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:34:55,267	[INFO]	196	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:34:55,268	[DEBUG]	
2020-12-14 18:34:56,196	[INFO]	197	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:34:57,148	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:34:58,111	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:34:58,114	[INFO]	200	SUCCESS	+13.0	
2020-12-14 18:34:58,115	[DEBUG]	
2020-12-14 18:34:59,097	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:35:00,074	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:35:03,207	[INFO]	203	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:35:03,208	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-14 18:35:03,209	[INFO]	204	SUCCESS	+13.0	
2020-12-14 18:35:03,209	[DEBUG]	
2020-12-14 18:35:04,142	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:35:05,147	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:35:06,114	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:35:07,056	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:35:08,030	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:35:09,015	[INFO]	210	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:35:10,009	[INFO]	211	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:35:10,960	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:35:11,922	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:35:15,114	[INFO]	214	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:35:16,053	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:35:17,031	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:35:17,987	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:35:21,387	[INFO]	218	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-14 18:35:21,389	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val != arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:35:22,618	[INFO]	219	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:35:24,026	[INFO]	220	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:35:24,028	[INFO]	221	SUCCESS	+13.0	
2020-12-14 18:35:24,028	[DEBUG]	
2020-12-14 18:35:25,321	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:35:28,923	[INFO]	223	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:35:28,924	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:35:29,862	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:35:29,864	[INFO]	225	SUCCESS	+13.0	
2020-12-14 18:35:29,865	[DEBUG]	
2020-12-14 18:35:29,867	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:35:33,129	[INFO]	227	SUCCESS	 20.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:35:34,043	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:35:37,483	[INFO]	229	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:35:38,422	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:35:41,640	[INFO]	231	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:35:42,516	[INFO]	232	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:35:43,453	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:35:46,687	[INFO]	234	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:35:46,688	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,37 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:35:46,688	[INFO]	235	SUCCESS	+13.0	
2020-12-14 18:35:46,689	[DEBUG]	
2020-12-14 18:35:47,603	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:35:48,457	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:35:49,440	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:35:50,376	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:35:51,319	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:35:52,303	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:35:55,520	[INFO]	242	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:35:56,386	[INFO]	243	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:35:57,393	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:35:58,383	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:35:59,262	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:36:02,340	[INFO]	247	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-14 18:36:03,295	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:36:06,545	[INFO]	249	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:36:07,456	[INFO]	250	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:36:08,444	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:36:09,398	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:36:12,692	[INFO]	253	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:36:15,835	[INFO]	254	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:36:16,736	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:36:17,685	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:36:18,648	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:36:21,854	[INFO]	258	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:36:22,751	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:36:23,704	[INFO]	260	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:36:24,648	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:36:27,655	[INFO]	262	SUCCESS	 29.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:36:28,646	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:36:29,614	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:36:30,451	[INFO]	265	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:36:31,392	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:36:32,382	[INFO]	267	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:36:33,361	[INFO]	268	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:36:33,365	[INFO]	269	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:36:33,366	[DEBUG]	
2020-12-14 18:36:36,634	[INFO]	270	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:36:39,753	[INFO]	271	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:36:39,754	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-14 18:36:39,755	[INFO]	272	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:36:39,755	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-14 18:36:39,756	[INFO]	273	SUCCESS	+13.0	
2020-12-14 18:36:39,756	[DEBUG]	
2020-12-14 18:36:43,268	[INFO]	274	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:36:44,219	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:36:47,465	[INFO]	276	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:36:50,660	[INFO]	277	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-14 18:36:50,662	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val != arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:36:50,663	[INFO]	278	SUCCESS	+13.0	
2020-12-14 18:36:50,663	[DEBUG]	
2020-12-14 18:36:53,726	[INFO]	279	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:36:53,727	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,33 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:36:54,685	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:36:54,687	[INFO]	281	SUCCESS	+13.0	
2020-12-14 18:36:54,688	[DEBUG]	
2020-12-14 18:36:57,861	[INFO]	282	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:36:58,732	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:36:59,656	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:36:59,657	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:37:02,864	[INFO]	286	SUCCESS	 22.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:37:03,777	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:37:06,914	[INFO]	288	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:37:07,902	[INFO]	289	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:37:08,732	[INFO]	290	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:37:09,707	[INFO]	291	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:37:10,652	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:37:11,650	[INFO]	293	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:37:11,653	[INFO]	294	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:37:12,646	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:37:12,649	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:37:13,605	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:37:14,597	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:37:15,582	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:37:16,546	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:37:17,516	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:37:17,519	[INFO]	302	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:37:18,450	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:37:19,414	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:37:20,360	[INFO]	305	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:37:21,474	[INFO]	306	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:37:22,477	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:37:23,459	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:37:24,466	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:37:25,435	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:37:26,353	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:37:27,293	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:37:28,243	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:37:31,661	[INFO]	314	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:37:31,662	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,42 ----
                  longest = length + 1;
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              i++;
          }
          return longest;

2020-12-14 18:37:32,651	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:37:32,654	[INFO]	316	SUCCESS	+13.0	
2020-12-14 18:37:32,655	[DEBUG]	
2020-12-14 18:37:33,574	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:37:34,564	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:37:35,572	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:37:36,576	[INFO]	320	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:37:40,425	[INFO]	321	SUCCESS	 29.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:37:40,427	[INFO]	322	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:37:40,427	[DEBUG]	
2020-12-14 18:37:41,449	[INFO]	323	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:37:41,450	[INFO]	324	SUCCESS	+13.0	
2020-12-14 18:37:41,451	[DEBUG]	
2020-12-14 18:37:42,444	[INFO]	325	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:37:43,524	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:37:46,860	[INFO]	327	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:37:50,092	[INFO]	328	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 18:37:50,092	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:37:50,093	[INFO]	329	SUCCESS	+13.0	
2020-12-14 18:37:50,093	[DEBUG]	
2020-12-14 18:37:53,351	[INFO]	330	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:37:54,315	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:37:55,344	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:37:56,375	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:37:57,377	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:37:58,317	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:38:01,530	[INFO]	336	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:38:01,531	[INFO]	337	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:38:01,532	[DEBUG]	
2020-12-14 18:38:02,449	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:38:05,614	[INFO]	339	SUCCESS	 24.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:38:06,549	[INFO]	340	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:38:07,426	[INFO]	341	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:38:07,427	[INFO]	342	SUCCESS	+13.0	
2020-12-14 18:38:07,427	[DEBUG]	
2020-12-14 18:38:08,377	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:38:11,600	[INFO]	344	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 18:38:11,601	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:38:11,602	[INFO]	345	SUCCESS	+13.0	
2020-12-14 18:38:11,602	[DEBUG]	
2020-12-14 18:38:14,730	[INFO]	346	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:38:17,800	[INFO]	347	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:38:18,809	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:38:19,792	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:38:20,711	[INFO]	350	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:38:21,712	[INFO]	351	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:38:22,743	[INFO]	352	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:38:22,746	[INFO]	353	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:38:22,747	[DEBUG]	
2020-12-14 18:38:22,749	[INFO]	354	SUCCESS	+13.0	
2020-12-14 18:38:22,750	[DEBUG]	
2020-12-14 18:38:22,754	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:38:23,832	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:38:24,886	[INFO]	357	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:38:25,908	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:38:25,911	[INFO]	359	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:38:25,913	[DEBUG]	
2020-12-14 18:38:25,915	[INFO]	360	SUCCESS	+13.0	
2020-12-14 18:38:25,916	[DEBUG]	
2020-12-14 18:38:30,309	[INFO]	361	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:38:30,312	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }

2020-12-14 18:38:31,722	[INFO]	362	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:38:31,724	[INFO]	363	SUCCESS	+13.0	
2020-12-14 18:38:31,725	[DEBUG]	
2020-12-14 18:38:33,129	[INFO]	364	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:38:33,132	[INFO]	365	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:38:35,100	[INFO]	366	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:38:40,817	[INFO]	367	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-14 18:38:40,818	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val != arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:38:42,791	[INFO]	368	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:38:42,793	[INFO]	369	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-14 18:38:42,794	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val != arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:38:42,796	[INFO]	370	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-14 18:38:42,797	[DEBUG]	
2020-12-14 18:38:42,798	[INFO]	371	SUCCESS	+13.0	
2020-12-14 18:38:42,799	[DEBUG]	
2020-12-14 18:38:44,785	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:38:46,856	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:38:49,131	[INFO]	374	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:38:51,918	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:38:51,921	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:38:54,174	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:38:54,177	[INFO]	378	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:38:56,390	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:38:56,393	[INFO]	380	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:38:58,851	[INFO]	381	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:39:01,633	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:39:04,495	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:39:07,192	[INFO]	384	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:39:09,977	[INFO]	385	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:39:12,764	[INFO]	386	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:39:15,834	[INFO]	387	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:39:18,706	[INFO]	388	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:39:21,320	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:39:30,217	[INFO]	390	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-14 18:39:30,218	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val <= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:39:30,224	[INFO]	391	SUCCESS	+13.0	
2020-12-14 18:39:30,225	[DEBUG]	
2020-12-14 18:39:32,579	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:39:34,551	[INFO]	393	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:39:35,669	[INFO]	394	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:39:36,910	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:39:40,614	[INFO]	396	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:39:40,616	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,42 ----
                  longest = length + 1;
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              i++;
          }
          return longest;

2020-12-14 18:39:40,617	[INFO]	397	SUCCESS	+13.0	
2020-12-14 18:39:40,618	[DEBUG]	
2020-12-14 18:39:41,666	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:39:41,669	[INFO]	399	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:39:41,670	[DEBUG]	
2020-12-14 18:39:44,898	[INFO]	400	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:39:45,867	[INFO]	401	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:39:45,868	[INFO]	402	SUCCESS	+13.0	
2020-12-14 18:39:45,868	[DEBUG]	
2020-12-14 18:39:45,869	[INFO]	403	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:39:47,073	[INFO]	404	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:39:48,094	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:39:51,545	[INFO]	406	SUCCESS	 20.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:39:52,531	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:39:53,503	[INFO]	408	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:39:54,408	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:39:54,410	[INFO]	410	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:39:55,405	[INFO]	411	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:39:58,768	[INFO]	412	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-14 18:39:59,810	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:39:59,814	[INFO]	414	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:40:03,255	[INFO]	415	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-14 18:40:04,250	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:40:05,276	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:40:06,323	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:40:07,333	[INFO]	419	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:40:08,321	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:40:09,297	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:40:12,604	[INFO]	422	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:40:15,872	[INFO]	423	SUCCESS	*10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 18:40:15,873	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:40:16,861	[INFO]	424	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:40:17,960	[INFO]	425	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:40:18,975	[INFO]	426	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:40:19,990	[INFO]	427	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:40:21,003	[INFO]	428	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:40:24,341	[INFO]	429	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:40:25,334	[INFO]	430	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:40:26,301	[INFO]	431	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:40:26,303	[INFO]	432	SUCCESS	 13.0	
2020-12-14 18:40:30,395	[INFO]	433	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-14 18:40:31,899	[INFO]	434	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:40:33,882	[INFO]	435	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:40:36,708	[INFO]	436	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:40:39,120	[INFO]	437	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:40:41,673	[INFO]	438	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:40:44,107	[INFO]	439	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:40:44,111	[INFO]	440	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:40:44,112	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:40:44,114	[INFO]	441	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-14 18:40:44,114	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:40:46,493	[INFO]	442	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:40:46,495	[INFO]	443	SUCCESS	 13.0	
2020-12-14 18:40:51,476	[INFO]	444	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 18:40:51,477	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:40:55,103	[INFO]	445	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-14 18:40:58,538	[INFO]	446	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:40:58,539	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val == arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 18:41:01,593	[INFO]	447	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-14 18:41:01,594	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val >= arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 18:41:04,722	[INFO]	448	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-14 18:41:04,726	[INFO]	449	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-14 18:41:04,727	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val >= arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 18:41:05,672	[INFO]	450	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:41:08,878	[INFO]	451	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:41:08,879	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 18:41:08,879	[INFO]	==== END ====
2020-12-14 18:41:08,879	[INFO]	Reason: target fitness reached
2020-12-14 18:41:08,880	[INFO]	
2020-12-14 18:41:08,880	[INFO]	========== EPOCH 19 ==========
2020-12-14 18:41:08,881	[INFO]	==== WARMUP ====
2020-12-14 18:41:12,017	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:41:12,017	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:41:15,231	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:41:15,232	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:41:18,654	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:41:18,654	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:41:22,049	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-14 18:41:22,049	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:41:22,049	[INFO]	==== START ====
2020-12-14 18:41:25,279	[INFO]	1	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:41:26,277	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:41:29,573	[INFO]	3	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-14 18:41:29,573	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val <= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:41:30,542	[INFO]	4	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:41:30,543	[INFO]	5	SUCCESS	+13.0	
2020-12-14 18:41:30,543	[DEBUG]	
2020-12-14 18:41:31,504	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:41:32,506	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:41:33,482	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:41:34,489	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:41:37,733	[INFO]	10	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:41:37,735	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,28 ****
--- 23,33 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  

2020-12-14 18:41:37,736	[INFO]	11	SUCCESS	+13.0	
2020-12-14 18:41:37,737	[DEBUG]	
2020-12-14 18:41:40,987	[INFO]	12	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:41:40,989	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,33 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 longest = length + 1;
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:41:41,936	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:41:42,883	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:41:42,884	[INFO]	15	SUCCESS	+13.0	
2020-12-14 18:41:42,884	[DEBUG]	
2020-12-14 18:41:43,842	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:41:44,820	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:41:48,570	[INFO]	18	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:41:48,572	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,38 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:41:49,876	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:41:49,879	[INFO]	20	SUCCESS	+13.0	
2020-12-14 18:41:49,880	[DEBUG]	
2020-12-14 18:41:55,238	[INFO]	21	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:41:55,239	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,33 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:41:56,751	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:41:56,752	[INFO]	23	SUCCESS	+13.0	
2020-12-14 18:41:56,752	[DEBUG]	
2020-12-14 18:41:58,076	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:41:59,207	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:42:00,422	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:42:00,424	[INFO]	27	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:42:00,424	[DEBUG]	
2020-12-14 18:42:00,425	[INFO]	28	SUCCESS	+13.0	
2020-12-14 18:42:00,425	[DEBUG]	
2020-12-14 18:42:03,871	[INFO]	29	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:42:04,907	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:42:05,965	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:42:06,925	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:42:07,956	[INFO]	33	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:42:07,957	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:42:09,025	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:42:10,105	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:42:11,081	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:42:12,085	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:42:13,091	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:42:16,427	[INFO]	40	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:42:16,428	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 24,29 ****
--- 24,35 ----
                  }
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {

2020-12-14 18:42:16,429	[INFO]	41	SUCCESS	+13.0	
2020-12-14 18:42:16,430	[DEBUG]	
2020-12-14 18:42:17,560	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:42:18,602	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:42:19,630	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:42:20,650	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:42:21,694	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:42:21,696	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:42:24,911	[INFO]	48	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:42:24,912	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                     prefix_lengths.add(j);
                  }
              }
  

2020-12-14 18:42:24,913	[INFO]	49	SUCCESS	+13.0	
2020-12-14 18:42:24,913	[DEBUG]	
2020-12-14 18:42:28,196	[INFO]	50	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:42:28,196	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,37 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:42:28,197	[INFO]	51	SUCCESS	+13.0	
2020-12-14 18:42:28,197	[DEBUG]	
2020-12-14 18:42:29,193	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:42:30,198	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:42:31,171	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:42:34,485	[INFO]	55	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-14 18:42:35,722	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:42:39,140	[INFO]	57	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:42:39,141	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-14 18:42:39,142	[INFO]	58	SUCCESS	+13.0	
2020-12-14 18:42:39,142	[DEBUG]	
2020-12-14 18:42:40,176	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:42:41,246	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:42:41,248	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:42:42,322	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:42:42,324	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:42:45,745	[INFO]	64	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:42:45,746	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,38 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:42:45,748	[INFO]	65	SUCCESS	+13.0	
2020-12-14 18:42:45,748	[DEBUG]	
2020-12-14 18:42:46,771	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:42:47,841	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:42:47,842	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:42:48,890	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:42:49,963	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:42:53,243	[INFO]	71	SUCCESS	 19.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:42:54,244	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:42:57,538	[INFO]	73	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:42:58,494	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:42:59,492	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:43:00,488	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:43:00,491	[INFO]	77	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:43:00,493	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-14 18:43:00,494	[INFO]	78	SUCCESS	+13.0	
2020-12-14 18:43:00,495	[DEBUG]	
2020-12-14 18:43:03,766	[INFO]	79	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:43:03,767	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:43:03,768	[INFO]	80	SUCCESS	 13.0	
2020-12-14 18:43:04,738	[INFO]	81	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:43:05,733	[INFO]	82	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:43:06,717	[INFO]	83	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:43:07,730	[INFO]	84	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:43:08,737	[INFO]	85	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:43:09,694	[INFO]	86	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:43:10,728	[INFO]	87	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:43:11,782	[INFO]	88	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:43:12,764	[INFO]	89	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:43:16,022	[INFO]	90	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-14 18:43:16,973	[INFO]	91	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:43:20,529	[INFO]	92	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:43:20,531	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,33 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:43:23,991	[INFO]	93	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:43:27,377	[INFO]	94	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:43:27,377	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:43:28,439	[INFO]	95	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:43:29,475	[INFO]	96	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:43:29,476	[INFO]	97	SUCCESS	 13.0	
2020-12-14 18:43:29,478	[INFO]	98	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:43:29,480	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:43:30,527	[INFO]	99	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:43:31,614	[INFO]	100	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:43:31,615	[INFO]	101	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:43:32,684	[INFO]	102	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:43:33,721	[INFO]	103	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:43:34,755	[INFO]	104	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:43:35,750	[INFO]	105	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:43:35,752	[INFO]	106	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:43:35,753	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:43:35,753	[INFO]	107	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:43:35,754	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:43:36,715	[INFO]	108	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:43:36,717	[INFO]	109	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:43:36,717	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:43:40,109	[INFO]	110	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:43:40,111	[INFO]	111	SUCCESS	 13.0	
2020-12-14 18:43:41,115	[INFO]	112	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:43:42,163	[INFO]	113	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:43:43,206	[INFO]	114	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:43:44,268	[INFO]	115	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:43:44,272	[INFO]	116	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:43:47,877	[INFO]	117	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:43:47,880	[INFO]	118	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:43:49,175	[INFO]	119	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:43:49,177	[INFO]	120	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:43:49,177	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:43:50,218	[INFO]	121	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:43:51,233	[INFO]	122	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:43:51,239	[INFO]	123	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:43:51,242	[INFO]	124	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:43:51,243	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:43:52,222	[INFO]	125	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:43:52,223	[INFO]	126	SUCCESS	 13.0	
2020-12-14 18:43:53,177	[INFO]	127	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:43:54,177	[INFO]	128	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:43:55,171	[INFO]	129	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:43:58,576	[INFO]	130	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-14 18:44:00,197	[INFO]	131	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:44:01,678	[INFO]	132	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:44:03,336	[INFO]	133	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:44:05,317	[INFO]	134	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:44:06,613	[INFO]	135	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:44:07,638	[INFO]	136	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:44:08,652	[INFO]	137	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:44:10,024	[INFO]	138	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:44:11,091	[INFO]	139	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:44:14,557	[INFO]	140	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:44:15,466	[INFO]	141	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:44:16,424	[INFO]	142	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:44:17,366	[INFO]	143	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:44:18,364	[INFO]	144	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:44:19,312	[INFO]	145	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:44:20,279	[INFO]	146	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:44:21,222	[INFO]	147	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:44:22,176	[INFO]	148	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:44:23,125	[INFO]	149	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:44:26,134	[INFO]	150	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:44:27,072	[INFO]	151	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:44:28,032	[INFO]	152	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:44:28,976	[INFO]	153	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:44:32,147	[INFO]	154	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:44:33,121	[INFO]	155	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:44:36,304	[INFO]	156	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:44:37,251	[INFO]	157	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:44:38,200	[INFO]	158	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:44:39,178	[INFO]	159	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:44:39,182	[INFO]	160	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:44:39,182	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:44:39,184	[INFO]	161	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:44:39,185	[INFO]	162	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:44:39,185	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:44:40,076	[INFO]	163	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:44:40,078	[INFO]	164	SUCCESS	 13.0	
2020-12-14 18:44:41,063	[INFO]	165	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:44:41,066	[INFO]	166	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:44:41,067	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:44:41,069	[INFO]	167	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:44:41,069	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:44:42,031	[INFO]	168	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:44:42,032	[INFO]	169	SUCCESS	 13.0	
2020-12-14 18:44:42,930	[INFO]	170	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:44:43,895	[INFO]	171	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:44:43,896	[INFO]	172	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:44:43,897	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:44:43,898	[INFO]	173	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:44:43,898	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:44:47,102	[INFO]	174	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:44:47,103	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-14 18:44:47,104	[INFO]	==== END ====
2020-12-14 18:44:47,104	[INFO]	Reason: target fitness reached
2020-12-14 18:44:47,105	[INFO]	
2020-12-14 18:44:47,105	[INFO]	========== EPOCH 20 ==========
2020-12-14 18:44:47,105	[INFO]	==== WARMUP ====
2020-12-14 18:44:50,354	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:44:50,354	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:44:53,606	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:44:53,606	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:44:56,897	[INFO]	WARM	SUCCESS	 13.0	
2020-12-14 18:44:56,898	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:45:00,096	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-14 18:45:00,096	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-14 18:45:00,097	[INFO]	==== START ====
2020-12-14 18:45:00,954	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:45:01,944	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:45:05,120	[INFO]	3	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:45:06,032	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:45:07,009	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:45:07,983	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:45:07,985	[INFO]	7	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-14 18:45:07,986	[DEBUG]	
2020-12-14 18:45:07,987	[INFO]	8	SUCCESS	+13.0	
2020-12-14 18:45:07,988	[DEBUG]	
2020-12-14 18:45:08,842	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:45:09,839	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:45:10,818	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:45:11,769	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:45:12,764	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:45:15,944	[INFO]	14	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:45:15,946	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 24,29 ****
--- 24,35 ----
                  }
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {

2020-12-14 18:45:16,910	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:45:16,913	[INFO]	16	SUCCESS	+13.0	
2020-12-14 18:45:16,913	[DEBUG]	
2020-12-14 18:45:20,065	[INFO]	17	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:45:20,066	[INFO]	18	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:45:20,066	[DEBUG]	
2020-12-14 18:45:20,067	[INFO]	19	SUCCESS	+13.0	
2020-12-14 18:45:20,067	[DEBUG]	
2020-12-14 18:45:20,979	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:45:21,960	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:45:25,039	[INFO]	22	SUCCESS	 24.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:45:25,040	[INFO]	23	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:45:25,040	[DEBUG]	
2020-12-14 18:45:26,037	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:45:26,039	[INFO]	25	SUCCESS	+13.0	
2020-12-14 18:45:26,040	[DEBUG]	
2020-12-14 18:45:27,059	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:45:31,096	[INFO]	27	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:45:31,097	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             ends.put(length+1, i);
+ 
              i++;
          }
          return longest;

2020-12-14 18:45:32,763	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:45:32,765	[INFO]	29	SUCCESS	+13.0	
2020-12-14 18:45:32,765	[DEBUG]	
2020-12-14 18:45:36,615	[INFO]	30	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-14 18:45:40,716	[INFO]	31	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:45:44,508	[INFO]	32	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-14 18:45:45,763	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:45:47,087	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:45:48,361	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:45:49,520	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:45:51,046	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:45:52,420	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:45:52,423	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:45:54,308	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:45:55,444	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:45:59,556	[INFO]	42	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:46:00,851	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:46:02,425	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:46:04,035	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:46:05,217	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:46:08,791	[INFO]	47	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:46:08,792	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,41 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-14 18:46:08,794	[INFO]	48	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-14 18:46:08,794	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,41 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-14 18:46:10,124	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:46:11,276	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:46:12,485	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:46:12,486	[INFO]	52	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-14 18:46:12,486	[DEBUG]	
2020-12-14 18:46:13,748	[INFO]	53	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:46:14,999	[INFO]	54	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:46:16,182	[INFO]	55	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:46:17,219	[INFO]	56	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:46:18,225	[INFO]	57	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:46:18,227	[INFO]	58	SUCCESS	+13.0	
2020-12-14 18:46:18,228	[DEBUG]	
2020-12-14 18:46:19,242	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:46:22,636	[INFO]	60	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:46:23,619	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:46:24,671	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:46:26,054	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:46:28,003	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:46:31,460	[INFO]	65	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:46:32,938	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:46:34,037	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:46:35,122	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:46:36,142	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:46:37,160	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:46:43,107	[INFO]	71	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-14 18:46:48,992	[INFO]	72	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:46:51,306	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:46:53,913	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:46:56,654	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:46:59,578	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:47:08,370	[INFO]	77	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:47:13,149	[INFO]	78	SUCCESS	 29.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:47:14,289	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:47:14,291	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:47:17,836	[INFO]	81	SUCCESS	 22.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:47:21,380	[INFO]	82	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:47:22,485	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:47:23,597	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:47:24,857	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:47:26,057	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:47:27,217	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:47:28,356	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:47:29,509	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:47:30,639	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:47:34,303	[INFO]	91	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:47:35,427	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:47:36,530	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:47:37,775	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:47:38,972	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:47:42,652	[INFO]	96	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:47:43,743	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:47:45,028	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:47:46,075	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:47:47,191	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:47:48,303	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:47:49,392	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:47:50,575	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:47:51,600	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:47:52,699	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:47:53,702	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:47:54,759	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:47:59,876	[INFO]	108	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:48:05,269	[INFO]	109	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:48:05,271	[INFO]	110	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:48:05,271	[DEBUG]	
2020-12-14 18:48:05,272	[INFO]	111	SUCCESS	+13.0	
2020-12-14 18:48:05,272	[DEBUG]	
2020-12-14 18:48:06,303	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:48:07,483	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:48:08,787	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:48:10,099	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:48:11,417	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:48:12,867	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:48:13,992	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:48:15,120	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:48:15,121	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:48:15,122	[INFO]	121	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:48:15,123	[DEBUG]	
2020-12-14 18:48:15,123	[INFO]	122	SUCCESS	+13.0	
2020-12-14 18:48:15,124	[DEBUG]	
2020-12-14 18:48:16,283	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:48:16,285	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:48:20,002	[INFO]	125	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-14 18:48:21,084	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:48:22,206	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:48:26,230	[INFO]	128	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:48:26,231	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:48:27,388	[INFO]	129	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:48:27,389	[INFO]	130	SUCCESS	 13.0	
2020-12-14 18:48:28,533	[INFO]	131	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:48:29,694	[INFO]	132	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:48:30,812	[INFO]	133	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:48:31,941	[INFO]	134	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:48:33,114	[INFO]	135	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:48:34,252	[INFO]	136	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:48:38,024	[INFO]	137	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:48:39,219	[INFO]	138	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:48:40,376	[INFO]	139	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:48:41,568	[INFO]	140	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:48:42,742	[INFO]	141	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:48:46,487	[INFO]	142	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:48:47,643	[INFO]	143	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:48:47,647	[INFO]	144	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:48:47,648	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:48:47,650	[INFO]	145	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:48:48,902	[INFO]	146	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:48:48,904	[INFO]	147	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:48:48,904	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:48:50,047	[INFO]	148	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:48:51,163	[INFO]	149	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:48:51,165	[INFO]	150	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:48:51,166	[INFO]	151	SUCCESS	 13.0	
2020-12-14 18:48:52,259	[INFO]	152	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:48:53,372	[INFO]	153	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:48:54,466	[INFO]	154	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:48:55,585	[INFO]	155	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:48:56,667	[INFO]	156	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:48:57,782	[INFO]	157	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:49:01,465	[INFO]	158	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:49:02,790	[INFO]	159	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:49:04,080	[INFO]	160	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:49:07,903	[INFO]	161	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:49:07,904	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:49:07,906	[INFO]	162	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:49:07,907	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:49:07,908	[INFO]	163	SUCCESS	 13.0	
2020-12-14 18:49:09,018	[INFO]	164	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:49:10,113	[INFO]	165	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:49:11,307	[INFO]	166	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:49:14,978	[INFO]	167	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:49:18,652	[INFO]	168	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:49:19,853	[INFO]	169	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:49:21,017	[INFO]	170	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:49:22,133	[INFO]	171	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:49:23,303	[INFO]	172	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:49:24,519	[INFO]	173	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:49:25,703	[INFO]	174	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:49:26,758	[INFO]	175	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:49:27,923	[INFO]	176	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:49:32,056	[INFO]	177	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:49:32,057	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,33 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:49:33,216	[INFO]	178	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:49:36,938	[INFO]	179	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:49:40,573	[INFO]	180	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:49:41,694	[INFO]	181	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:49:41,696	[INFO]	182	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:49:41,697	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,33 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:49:42,895	[INFO]	183	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:49:42,897	[INFO]	184	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:49:42,897	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:49:42,898	[INFO]	185	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:49:42,898	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:49:42,899	[INFO]	186	SUCCESS	 13.0	
2020-12-14 18:49:42,900	[INFO]	187	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:49:46,580	[INFO]	188	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-14 18:49:47,637	[INFO]	189	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:49:51,621	[INFO]	190	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:49:52,731	[INFO]	191	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:49:56,462	[INFO]	192	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-14 18:49:57,564	[INFO]	193	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:49:58,721	[INFO]	194	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:49:59,855	[INFO]	195	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:50:01,006	[INFO]	196	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:50:02,164	[INFO]	197	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:50:03,342	[INFO]	198	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:50:04,539	[INFO]	199	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:50:05,794	[INFO]	200	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:50:06,858	[INFO]	201	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:50:06,861	[INFO]	202	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:50:06,861	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:50:06,862	[INFO]	203	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:50:08,036	[INFO]	204	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:50:08,037	[INFO]	205	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:50:08,038	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:50:08,038	[INFO]	206	SUCCESS	 13.0	
2020-12-14 18:50:09,405	[INFO]	207	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:50:10,648	[INFO]	208	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:50:11,905	[INFO]	209	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:50:13,034	[INFO]	210	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:50:14,156	[INFO]	211	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:50:15,392	[INFO]	212	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:50:16,463	[INFO]	213	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:50:17,571	[INFO]	214	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:50:18,711	[INFO]	215	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:50:18,713	[INFO]	216	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:50:18,713	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:50:19,838	[INFO]	217	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:50:20,933	[INFO]	218	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:50:22,032	[INFO]	219	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:50:22,033	[INFO]	220	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:50:22,034	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:50:25,731	[INFO]	221	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:50:26,845	[INFO]	222	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:50:27,964	[INFO]	223	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:50:27,966	[INFO]	224	SUCCESS	 13.0	
2020-12-14 18:50:31,632	[INFO]	225	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:50:32,781	[INFO]	226	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:50:33,931	[INFO]	227	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:50:35,070	[INFO]	228	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:50:36,473	[INFO]	229	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:50:37,906	[INFO]	230	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:50:39,497	[INFO]	231	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:50:40,637	[INFO]	232	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:50:41,862	[INFO]	233	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:50:43,049	[INFO]	234	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:50:44,228	[INFO]	235	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:50:45,465	[INFO]	236	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:50:49,311	[INFO]	237	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-14 18:50:53,112	[INFO]	238	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:50:54,254	[INFO]	239	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:50:55,413	[INFO]	240	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:50:59,064	[INFO]	241	SUCCESS	 17.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:51:00,219	[INFO]	242	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:51:01,362	[INFO]	243	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:51:02,495	[INFO]	244	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:51:03,622	[INFO]	245	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:51:04,808	[INFO]	246	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:51:05,924	[INFO]	247	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:51:09,575	[INFO]	248	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:51:09,577	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 21,32 ****
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 21,33 ----
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                     prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:51:09,578	[INFO]	249	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:51:09,578	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:51:09,579	[INFO]	250	SUCCESS	 13.0	
2020-12-14 18:51:10,679	[INFO]	251	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:51:11,803	[INFO]	252	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:51:12,971	[INFO]	253	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:51:12,973	[INFO]	254	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:51:12,974	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:51:12,975	[INFO]	255	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:51:12,976	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:51:12,976	[INFO]	256	SUCCESS	 13.0	
2020-12-14 18:51:14,068	[INFO]	257	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:51:15,202	[INFO]	258	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:51:18,982	[INFO]	259	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:51:18,983	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,32 ****
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 23,37 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:51:22,782	[INFO]	260	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:51:23,910	[INFO]	261	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:51:23,911	[INFO]	262	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:51:23,912	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:51:27,720	[INFO]	263	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:51:27,722	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:51:31,615	[INFO]	264	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:51:32,862	[INFO]	265	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:51:34,019	[INFO]	266	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:51:35,072	[INFO]	267	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:51:36,233	[INFO]	268	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:51:39,995	[INFO]	269	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:51:39,997	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,44 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-14 18:51:44,478	[INFO]	270	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:51:48,143	[INFO]	271	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:51:48,144	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-14 18:51:51,921	[INFO]	272	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:51:51,922	[INFO]	273	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:51:51,922	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:51:52,980	[INFO]	274	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:51:52,981	[INFO]	275	SUCCESS	 13.0	
2020-12-14 18:51:52,982	[INFO]	276	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:51:52,983	[INFO]	277	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:51:52,984	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,32 ****
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 23,37 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:51:52,985	[INFO]	278	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:51:52,986	[INFO]	279	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:51:52,987	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,32 ****
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 23,37 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:51:54,077	[INFO]	280	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:51:55,207	[INFO]	281	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:51:56,352	[INFO]	282	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:51:57,459	[INFO]	283	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:51:57,462	[INFO]	284	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:51:57,463	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,32 ****
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 23,37 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:51:57,464	[INFO]	285	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:51:57,464	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:51:57,465	[INFO]	286	SUCCESS	 13.0	
2020-12-14 18:51:58,615	[INFO]	287	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:51:58,619	[INFO]	288	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:51:58,622	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,32 ****
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 23,37 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:51:58,626	[INFO]	289	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:51:59,771	[INFO]	290	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:52:00,970	[INFO]	291	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:52:00,972	[INFO]	292	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:52:00,973	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:52:00,973	[INFO]	293	SUCCESS	 13.0	
2020-12-14 18:52:02,121	[INFO]	294	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:52:03,250	[INFO]	295	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:52:04,304	[INFO]	296	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:52:05,520	[INFO]	297	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:52:06,687	[INFO]	298	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:52:07,883	[INFO]	299	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:52:09,061	[INFO]	300	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:52:10,258	[INFO]	301	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:52:11,458	[INFO]	302	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:52:15,390	[INFO]	303	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:52:16,523	[INFO]	304	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:52:17,639	[INFO]	305	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:52:18,764	[INFO]	306	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:52:22,430	[INFO]	307	SUCCESS	 18.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:52:26,076	[INFO]	308	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:52:27,162	[INFO]	309	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:52:27,163	[INFO]	310	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:52:27,164	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:52:28,265	[INFO]	311	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:52:31,926	[INFO]	312	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:52:31,927	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:52:31,928	[INFO]	313	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:52:31,929	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:52:35,569	[INFO]	314	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:52:35,571	[INFO]	315	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:52:35,571	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:52:36,684	[INFO]	316	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:52:36,688	[INFO]	317	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:52:36,689	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:52:37,784	[INFO]	318	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:52:38,871	[INFO]	319	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:52:38,873	[INFO]	320	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:52:38,874	[INFO]	321	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:52:38,874	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:52:38,875	[INFO]	322	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:52:38,876	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:52:38,877	[INFO]	323	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:52:38,877	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:52:39,995	[INFO]	324	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:52:41,128	[INFO]	325	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:52:41,131	[INFO]	326	SUCCESS	 13.0	
2020-12-14 18:52:41,133	[INFO]	327	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:52:42,143	[INFO]	328	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:52:43,308	[INFO]	329	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:52:44,397	[INFO]	330	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:52:48,043	[INFO]	331	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:52:49,156	[INFO]	332	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:52:49,158	[INFO]	333	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:52:49,158	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:52:50,258	[INFO]	334	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:52:51,422	[INFO]	335	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:52:52,521	[INFO]	336	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:52:52,523	[INFO]	337	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:52:52,523	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:52:52,524	[INFO]	338	SUCCESS	 13.0	
2020-12-14 18:52:53,654	[INFO]	339	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:52:54,755	[INFO]	340	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:52:58,464	[INFO]	341	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:52:58,467	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:53:02,305	[INFO]	342	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-14 18:53:06,147	[INFO]	343	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:53:06,149	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:53:07,307	[INFO]	344	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:53:11,170	[INFO]	345	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:53:12,371	[INFO]	346	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:53:12,374	[INFO]	347	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:53:12,375	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:53:13,487	[INFO]	348	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:53:17,307	[INFO]	349	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:53:17,310	[INFO]	350	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:53:17,312	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:53:18,480	[INFO]	351	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:53:22,423	[INFO]	352	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:53:22,428	[INFO]	353	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:53:22,430	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:53:25,997	[INFO]	354	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:53:25,998	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,33 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 20,40 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:53:25,999	[INFO]	355	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:53:26,000	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,33 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 20,40 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:53:29,629	[INFO]	356	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:53:30,779	[INFO]	357	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:53:34,520	[INFO]	358	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:53:35,630	[INFO]	359	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:53:36,752	[INFO]	360	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:53:37,906	[INFO]	361	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:53:37,909	[INFO]	362	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:53:37,910	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,33 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 20,40 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:53:39,038	[INFO]	363	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-14 18:53:39,041	[INFO]	364	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:53:42,922	[INFO]	365	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:53:42,923	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,35 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:53:42,924	[INFO]	366	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:53:42,925	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:53:42,925	[INFO]	367	SUCCESS	 13.0	
2020-12-14 18:53:44,046	[INFO]	368	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:53:45,153	[INFO]	369	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:53:48,818	[INFO]	370	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:53:49,944	[INFO]	371	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:53:53,825	[INFO]	372	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:53:53,827	[INFO]	373	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:53:53,828	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:53:54,958	[INFO]	374	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:53:54,960	[INFO]	375	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:53:56,088	[INFO]	376	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:53:56,090	[INFO]	377	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:53:56,091	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:53:56,093	[INFO]	378	SUCCESS	 13.0	
2020-12-14 18:53:57,165	[INFO]	379	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:53:57,168	[INFO]	380	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:53:58,273	[INFO]	381	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:53:59,415	[INFO]	382	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:54:00,565	[INFO]	383	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:54:01,699	[INFO]	384	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:54:05,428	[INFO]	385	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:54:05,429	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,32 ****
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 22,35 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:54:05,430	[INFO]	386	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:54:05,431	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:54:06,468	[INFO]	387	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:54:10,145	[INFO]	388	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:54:11,443	[INFO]	389	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:54:12,547	[INFO]	390	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:54:13,562	[INFO]	391	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:54:14,698	[INFO]	392	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-14 18:54:14,702	[INFO]	393	SUCCESS	 13.0	
2020-12-14 18:54:15,762	[INFO]	394	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-14 18:54:16,921	[INFO]	395	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:54:18,013	[INFO]	396	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:54:19,138	[INFO]	397	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:54:20,250	[INFO]	398	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:54:23,964	[INFO]	399	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:54:25,050	[INFO]	400	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:54:26,184	[INFO]	401	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:54:27,311	[INFO]	402	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:54:28,469	[INFO]	403	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:54:32,116	[INFO]	404	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:54:33,282	[INFO]	405	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:54:33,284	[INFO]	406	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-14 18:54:34,434	[INFO]	407	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-14 18:54:38,207	[INFO]	408	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:54:39,285	[INFO]	409	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-14 18:54:40,434	[INFO]	410	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:54:44,134	[INFO]	411	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:54:44,135	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
!                     prefix_lengths.add(j);
!                 }
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:54:47,821	[INFO]	412	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:54:48,948	[INFO]	413	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:54:50,087	[INFO]	414	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:54:51,137	[INFO]	415	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:54:52,285	[INFO]	416	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:54:52,287	[INFO]	417	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:54:52,288	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:54:53,382	[INFO]	418	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-14 18:54:57,005	[INFO]	419	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:54:57,006	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:55:00,705	[INFO]	420	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:55:01,843	[INFO]	421	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:55:05,466	[INFO]	422	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:55:05,468	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,42 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-14 18:55:09,080	[INFO]	423	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:55:09,082	[INFO]	424	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:55:09,082	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-14 18:55:09,083	[INFO]	425	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:55:09,084	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:55:09,085	[INFO]	426	SUCCESS	 13.0	
2020-12-14 18:55:10,266	[INFO]	427	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:55:11,416	[INFO]	428	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-14 18:55:15,079	[INFO]	429	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:55:16,204	[INFO]	430	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:55:17,348	[INFO]	431	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:55:18,477	[INFO]	432	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:55:19,614	[INFO]	433	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:55:20,723	[INFO]	434	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:55:21,705	[INFO]	435	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:55:22,845	[INFO]	436	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:55:23,950	[INFO]	437	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:55:25,054	[INFO]	438	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:55:26,172	[INFO]	439	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:55:27,328	[INFO]	440	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:55:28,418	[INFO]	441	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:55:29,527	[INFO]	442	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:55:30,638	[INFO]	443	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-14 18:55:34,419	[INFO]	444	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-14 18:55:38,198	[INFO]	445	SUCCESS	 18.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:55:39,293	[INFO]	446	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:55:42,981	[INFO]	447	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-14 18:55:46,622	[INFO]	448	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:55:46,623	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:55:46,624	[INFO]	449	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:55:47,748	[INFO]	450	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:55:47,749	[INFO]	451	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:55:47,750	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:55:47,750	[INFO]	452	SUCCESS	 13.0	
2020-12-14 18:55:48,888	[INFO]	453	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:55:50,022	[INFO]	454	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:55:50,024	[INFO]	455	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:55:50,025	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:55:50,026	[INFO]	456	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:55:50,026	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:55:51,161	[INFO]	457	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:55:52,303	[INFO]	458	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-14 18:55:53,390	[INFO]	459	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:55:53,391	[INFO]	460	SUCCESS	 13.0	
2020-12-14 18:55:54,481	[INFO]	461	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:55:55,621	[INFO]	462	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:55:56,718	[INFO]	463	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:56:00,433	[INFO]	464	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:56:04,041	[INFO]	465	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:56:04,042	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-14 18:56:04,043	[INFO]	466	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:56:04,043	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:56:04,044	[INFO]	467	SUCCESS	 13.0	
2020-12-14 18:56:05,165	[INFO]	468	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:56:06,271	[INFO]	469	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-14 18:56:07,414	[INFO]	470	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-14 18:56:08,574	[INFO]	471	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:56:09,753	[INFO]	472	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-14 18:56:10,853	[INFO]	473	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:56:11,950	[INFO]	474	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:56:15,692	[INFO]	475	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-14 18:56:16,795	[INFO]	476	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:56:17,920	[INFO]	477	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:56:21,627	[INFO]	478	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:56:22,751	[INFO]	479	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-14 18:56:23,880	[INFO]	480	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-14 18:56:23,882	[INFO]	481	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-14 18:56:27,506	[INFO]	482	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-14 18:56:27,507	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,40 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              i++;

2020-12-14 18:56:27,508	[INFO]	483	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:56:27,509	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,40 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              i++;

2020-12-14 18:56:31,653	[INFO]	484	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-14 18:56:32,812	[INFO]	485	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:56:32,814	[INFO]	486	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:56:32,814	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:56:33,934	[INFO]	487	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-14 18:56:37,596	[INFO]	488	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:56:37,600	[INFO]	489	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:56:37,601	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:56:37,603	[INFO]	490	SUCCESS	 13.0	
2020-12-14 18:56:38,690	[INFO]	491	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-14 18:56:39,853	[INFO]	492	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-14 18:56:43,564	[INFO]	493	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-14 18:56:44,758	[INFO]	494	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-14 18:56:45,997	[INFO]	495	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-14 18:56:49,815	[INFO]	496	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-14 18:56:49,816	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:56:50,882	[INFO]	497	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-14 18:56:54,525	[INFO]	498	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-14 18:56:54,527	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,36 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:56:54,528	[INFO]	499	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-14 18:56:54,529	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:56:55,626	[INFO]	500	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:56:55,627	[INFO]	==== END ====
2020-12-14 18:56:55,627	[INFO]	Reason: step budget
2020-12-14 18:56:55,628	[INFO]	
2020-12-14 18:56:55,628	[INFO]	========== REPORT ==========
2020-12-14 18:56:55,628	[INFO]	==== Epoch 1 ====
2020-12-14 18:56:55,628	[INFO]	Termination: target fitness reached
2020-12-14 18:56:55,628	[INFO]	Number of interations: 439
2020-12-14 18:56:55,628	[INFO]	Best fitness: 0.0
2020-12-14 18:56:55,628	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:56:55,628	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-14 18:56:55,628	[INFO]	==== Epoch 2 ====
2020-12-14 18:56:55,628	[INFO]	Termination: target fitness reached
2020-12-14 18:56:55,628	[INFO]	Number of interations: 145
2020-12-14 18:56:55,629	[INFO]	Best fitness: 0.0
2020-12-14 18:56:55,629	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:56:55,629	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-14 18:56:55,629	[INFO]	==== Epoch 3 ====
2020-12-14 18:56:55,629	[INFO]	Termination: target fitness reached
2020-12-14 18:56:55,629	[INFO]	Number of interations: 16
2020-12-14 18:56:55,629	[INFO]	Best fitness: 0.0
2020-12-14 18:56:55,629	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:56:55,629	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 18:56:55,629	[INFO]	==== Epoch 4 ====
2020-12-14 18:56:55,629	[INFO]	Termination: target fitness reached
2020-12-14 18:56:55,629	[INFO]	Number of interations: 54
2020-12-14 18:56:55,629	[INFO]	Best fitness: 0.0
2020-12-14 18:56:55,630	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:56:55,630	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 18:56:55,630	[INFO]	==== Epoch 5 ====
2020-12-14 18:56:55,630	[INFO]	Termination: step budget
2020-12-14 18:56:55,630	[INFO]	Number of interations: 500
2020-12-14 18:56:55,630	[INFO]	Best fitness: 9.0
2020-12-14 18:56:55,630	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:56:55,630	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:56:55,630	[INFO]	==== Epoch 6 ====
2020-12-14 18:56:55,630	[INFO]	Termination: target fitness reached
2020-12-14 18:56:55,630	[INFO]	Number of interations: 72
2020-12-14 18:56:55,630	[INFO]	Best fitness: 0.0
2020-12-14 18:56:55,630	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:56:55,630	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 18:56:55,630	[INFO]	==== Epoch 7 ====
2020-12-14 18:56:55,631	[INFO]	Termination: target fitness reached
2020-12-14 18:56:55,631	[INFO]	Number of interations: 116
2020-12-14 18:56:55,631	[INFO]	Best fitness: 0.0
2020-12-14 18:56:55,631	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:56:55,631	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-14 18:56:55,631	[INFO]	==== Epoch 8 ====
2020-12-14 18:56:55,631	[INFO]	Termination: target fitness reached
2020-12-14 18:56:55,631	[INFO]	Number of interations: 340
2020-12-14 18:56:55,631	[INFO]	Best fitness: 0.0
2020-12-14 18:56:55,631	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:56:55,631	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 18:56:55,631	[INFO]	==== Epoch 9 ====
2020-12-14 18:56:55,631	[INFO]	Termination: target fitness reached
2020-12-14 18:56:55,631	[INFO]	Number of interations: 445
2020-12-14 18:56:55,632	[INFO]	Best fitness: 0.0
2020-12-14 18:56:55,632	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:56:55,632	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             ends.put(length+1, i);
! 
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:56:55,632	[INFO]	==== Epoch 10 ====
2020-12-14 18:56:55,632	[INFO]	Termination: target fitness reached
2020-12-14 18:56:55,632	[INFO]	Number of interations: 14
2020-12-14 18:56:55,632	[INFO]	Best fitness: 0.0
2020-12-14 18:56:55,632	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:56:55,632	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-14 18:56:55,632	[INFO]	==== Epoch 11 ====
2020-12-14 18:56:55,632	[INFO]	Termination: target fitness reached
2020-12-14 18:56:55,632	[INFO]	Number of interations: 10
2020-12-14 18:56:55,632	[INFO]	Best fitness: 0.0
2020-12-14 18:56:55,632	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:56:55,632	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 18:56:55,633	[INFO]	==== Epoch 12 ====
2020-12-14 18:56:55,633	[INFO]	Termination: target fitness reached
2020-12-14 18:56:55,633	[INFO]	Number of interations: 99
2020-12-14 18:56:55,633	[INFO]	Best fitness: 0.0
2020-12-14 18:56:55,633	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:56:55,633	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 18:56:55,633	[INFO]	==== Epoch 13 ====
2020-12-14 18:56:55,633	[INFO]	Termination: step budget
2020-12-14 18:56:55,633	[INFO]	Number of interations: 500
2020-12-14 18:56:55,633	[INFO]	==== Epoch 14 ====
2020-12-14 18:56:55,633	[INFO]	Termination: target fitness reached
2020-12-14 18:56:55,633	[INFO]	Number of interations: 133
2020-12-14 18:56:55,633	[INFO]	Best fitness: 0.0
2020-12-14 18:56:55,633	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:56:55,633	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-14 18:56:55,634	[INFO]	==== Epoch 15 ====
2020-12-14 18:56:55,634	[INFO]	Termination: target fitness reached
2020-12-14 18:56:55,634	[INFO]	Number of interations: 230
2020-12-14 18:56:55,634	[INFO]	Best fitness: 0.0
2020-12-14 18:56:55,634	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:56:55,634	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 18:56:55,634	[INFO]	==== Epoch 16 ====
2020-12-14 18:56:55,634	[INFO]	Termination: target fitness reached
2020-12-14 18:56:55,634	[INFO]	Number of interations: 102
2020-12-14 18:56:55,634	[INFO]	Best fitness: 0.0
2020-12-14 18:56:55,634	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:56:55,634	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             ends.put(length+1, i);
! 
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:56:55,634	[INFO]	==== Epoch 17 ====
2020-12-14 18:56:55,634	[INFO]	Termination: target fitness reached
2020-12-14 18:56:55,634	[INFO]	Number of interations: 68
2020-12-14 18:56:55,635	[INFO]	Best fitness: 0.0
2020-12-14 18:56:55,635	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:56:55,635	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 18:56:55,635	[INFO]	==== Epoch 18 ====
2020-12-14 18:56:55,635	[INFO]	Termination: target fitness reached
2020-12-14 18:56:55,635	[INFO]	Number of interations: 451
2020-12-14 18:56:55,635	[INFO]	Best fitness: 0.0
2020-12-14 18:56:55,635	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-14 18:56:55,635	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-14 18:56:55,635	[INFO]	==== Epoch 19 ====
2020-12-14 18:56:55,635	[INFO]	Termination: target fitness reached
2020-12-14 18:56:55,635	[INFO]	Number of interations: 174
2020-12-14 18:56:55,635	[INFO]	Best fitness: 0.0
2020-12-14 18:56:55,635	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-14 18:56:55,636	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-14 18:56:55,636	[INFO]	==== Epoch 20 ====
2020-12-14 18:56:55,636	[INFO]	Termination: step budget
2020-12-14 18:56:55,636	[INFO]	Number of interations: 500
2020-12-14 18:56:55,636	[INFO]	Best fitness: 9.0
2020-12-14 18:56:55,636	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-14 18:56:55,636	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-14 18:56:55,642	[INFO]	Experiment duration: 5689.560006856918
