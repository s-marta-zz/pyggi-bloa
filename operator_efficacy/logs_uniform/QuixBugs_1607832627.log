2020-12-13 05:10:27,600	[INFO]	Path to the temporal program variants: ./.pyggi/tmp_variants/QuixBugs/1607832627
2020-12-13 05:10:27,600	[INFO]	========== EXPERIMENT FOR ['java_programs/DEPTH_FIRST_SEARCH.java.xml']  ==========
2020-12-13 05:10:27,601	[INFO]	modification points:
 ['./decl_stmt[1]', './if[1]', './if[1]/return[1]', './if[2]', './if[2]/operator_comp[1]', './if[2]/return[1]', './for[1]', './for[1]/if[1]', './for[1]/if[1]/return[1]', './return[1]', './decl_stmt[2]', './return[2]']
2020-12-13 05:10:27,601	[INFO]	number of statements and comparisons: 11, 1
2020-12-13 05:10:27,601	[INFO]	========== EPOCH 1 ==========
2020-12-13 05:10:27,601	[INFO]	==== WARMUP ====
2020-12-13 05:10:31,099	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:10:31,100	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:10:34,461	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:10:34,462	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:10:38,041	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:10:38,042	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:10:41,474	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-13 05:10:41,475	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:10:41,475	[INFO]	==== START ====
2020-12-13 05:10:41,476	[INFO]	1	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:10:41,476	[DEBUG]	
2020-12-13 05:10:41,477	[INFO]	2	SUCCESS	+1.0	
2020-12-13 05:10:41,477	[DEBUG]	
2020-12-13 05:10:42,428	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:10:45,926	[INFO]	4	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:10:45,927	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:10:45,928	[INFO]	5	SUCCESS	+1.0	
2020-12-13 05:10:45,928	[DEBUG]	
2020-12-13 05:10:46,934	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:10:47,775	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:10:48,536	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:10:49,517	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:10:49,519	[INFO]	10	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-13 05:10:49,519	[DEBUG]	
2020-12-13 05:10:49,520	[INFO]	11	SUCCESS	+1.0	
2020-12-13 05:10:49,521	[DEBUG]	
2020-12-13 05:10:50,478	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:10:51,466	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:10:54,909	[INFO]	14	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:10:55,724	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:10:55,725	[INFO]	16	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:10:55,726	[DEBUG]	
2020-12-13 05:10:55,726	[INFO]	17	SUCCESS	+1.0	
2020-12-13 05:10:55,727	[DEBUG]	
2020-12-13 05:10:56,676	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:10:57,674	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:10:58,630	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:11:02,170	[INFO]	21	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:11:02,172	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:11:02,176	[INFO]	22	SUCCESS	+1.0	
2020-12-13 05:11:02,177	[DEBUG]	
2020-12-13 05:11:05,567	[INFO]	23	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:11:06,546	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:11:07,469	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:11:10,894	[INFO]	26	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:11:10,896	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:11:10,899	[INFO]	27	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:11:10,900	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:11:14,264	[INFO]	28	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:11:14,270	[INFO]	29	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:11:14,271	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:11:14,275	[INFO]	30	SUCCESS	+1.0	
2020-12-13 05:11:14,276	[DEBUG]	
2020-12-13 05:11:15,225	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:11:16,052	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:11:16,869	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:11:18,012	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:11:18,013	[INFO]	35	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:11:18,014	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:11:19,000	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:11:19,002	[INFO]	37	SUCCESS	+1.0	
2020-12-13 05:11:19,002	[DEBUG]	
2020-12-13 05:11:19,003	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:11:22,405	[INFO]	39	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:11:23,364	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:11:26,852	[INFO]	41	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:11:26,853	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:11:26,854	[INFO]	42	SUCCESS	+1.0	
2020-12-13 05:11:26,854	[DEBUG]	
2020-12-13 05:11:27,766	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:11:28,585	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:11:29,600	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:11:32,993	[INFO]	46	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-13 05:11:32,996	[INFO]	47	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:11:32,997	[DEBUG]	
2020-12-13 05:11:32,999	[INFO]	48	SUCCESS	+1.0	
2020-12-13 05:11:32,999	[DEBUG]	
2020-12-13 05:11:33,816	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:11:34,736	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:11:35,705	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:11:35,709	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:11:39,148	[INFO]	53	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:11:39,149	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-13 05:11:40,102	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:11:40,103	[INFO]	55	SUCCESS	+1.0	
2020-12-13 05:11:40,103	[DEBUG]	
2020-12-13 05:11:41,077	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:11:42,019	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:11:42,954	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:11:46,391	[INFO]	59	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:11:46,392	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:11:46,394	[INFO]	60	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:11:46,394	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:11:49,874	[INFO]	61	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:11:49,878	[INFO]	62	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:11:49,879	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:11:50,676	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:11:50,678	[INFO]	64	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:11:50,678	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:11:51,471	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:11:51,472	[INFO]	66	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:11:51,473	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:11:54,915	[INFO]	67	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:11:54,918	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:11:55,860	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:11:56,815	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:11:56,817	[INFO]	70	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:11:56,818	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:11:57,800	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-13 05:11:58,739	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:11:59,727	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:12:00,582	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:12:00,586	[INFO]	75	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:12:00,587	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:12:00,588	[INFO]	76	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:12:00,589	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:12:00,591	[INFO]	77	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:12:00,592	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:12:00,594	[INFO]	78	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-13 05:12:00,595	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:12:01,609	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:12:01,611	[INFO]	80	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:12:01,612	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:12:02,426	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:12:03,382	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:12:04,181	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:12:04,187	[INFO]	84	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:12:04,188	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:12:04,191	[INFO]	85	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:12:04,193	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:12:04,196	[INFO]	86	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-13 05:12:04,198	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:12:07,618	[INFO]	87	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:12:07,623	[INFO]	88	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-13 05:12:07,624	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:12:07,627	[INFO]	89	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:12:07,628	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:12:08,627	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:12:12,662	[INFO]	91	SUCCESS	 2.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:12:13,642	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:12:13,643	[INFO]	93	SUCCESS	+1.0	
2020-12-13 05:12:13,643	[DEBUG]	
2020-12-13 05:12:14,623	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:12:15,604	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:12:16,770	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:12:17,593	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:12:18,580	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:12:19,443	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:12:19,444	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:12:20,277	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:12:21,263	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:12:24,777	[INFO]	103	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:12:24,778	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:12:25,569	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:12:25,570	[INFO]	105	SUCCESS	+1.0	
2020-12-13 05:12:25,571	[DEBUG]	
2020-12-13 05:12:26,524	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:12:27,517	[INFO]	107	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:12:28,536	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:12:32,043	[INFO]	109	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:12:32,044	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 05:12:32,990	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:12:32,991	[INFO]	111	SUCCESS	+1.0	
2020-12-13 05:12:32,991	[DEBUG]	
2020-12-13 05:12:36,439	[INFO]	112	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:12:36,440	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 05:12:36,440	[INFO]	==== END ====
2020-12-13 05:12:36,440	[INFO]	Reason: target fitness reached
2020-12-13 05:12:36,441	[INFO]	
2020-12-13 05:12:36,441	[INFO]	========== EPOCH 2 ==========
2020-12-13 05:12:36,442	[INFO]	==== WARMUP ====
2020-12-13 05:12:39,900	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:12:39,900	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:12:43,300	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:12:43,300	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:12:46,670	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:12:46,672	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:12:50,110	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-13 05:12:50,111	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:12:50,111	[INFO]	==== START ====
2020-12-13 05:12:51,076	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:12:51,078	[INFO]	2	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:12:51,078	[DEBUG]	
2020-12-13 05:12:51,078	[INFO]	3	SUCCESS	+1.0	
2020-12-13 05:12:51,079	[DEBUG]	
2020-12-13 05:12:52,231	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:12:53,076	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:12:54,046	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:12:55,051	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:12:58,461	[INFO]	8	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:12:58,462	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 05:12:59,475	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:13:03,226	[INFO]	10	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:13:03,227	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,28 ****
--- 17,32 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 05:13:03,228	[INFO]	11	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:13:03,228	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 05:13:03,230	[INFO]	12	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:13:03,230	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 05:13:06,573	[INFO]	13	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:13:06,574	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
--- 20,30 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 05:13:07,393	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:13:08,355	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:13:11,841	[INFO]	16	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:13:12,793	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:13:13,769	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:13:13,771	[INFO]	19	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:13:13,773	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 05:13:14,739	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:13:15,519	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:13:16,504	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:13:17,449	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:13:17,451	[INFO]	24	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:13:17,451	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 05:13:17,452	[INFO]	25	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:13:17,453	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 05:13:17,454	[INFO]	26	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:13:17,455	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 05:13:20,886	[INFO]	27	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:13:20,887	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:13:21,849	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:13:22,818	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:13:23,804	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:13:27,266	[INFO]	31	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:13:27,271	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:13:27,275	[INFO]	32	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:13:27,278	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:13:30,694	[INFO]	33	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:13:30,697	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,26 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 14,27 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return s.search(startnode); }
                      }
                  }
                  return false;
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:13:31,666	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:13:35,177	[INFO]	35	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:13:35,179	[INFO]	36	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:13:35,180	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:13:36,115	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:13:36,117	[INFO]	38	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:13:36,117	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:13:39,731	[INFO]	39	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:13:39,732	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 31,37 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:13:40,519	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:13:40,521	[INFO]	41	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:13:40,522	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:13:44,183	[INFO]	42	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:13:44,186	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:13:45,137	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:13:45,138	[INFO]	44	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:13:45,139	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:13:45,139	[INFO]	45	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:13:45,140	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:13:46,104	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:13:47,047	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:13:47,048	[INFO]	48	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:13:47,049	[DEBUG]	
2020-12-13 05:13:48,026	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:13:48,029	[INFO]	50	SUCCESS	+1.0	
2020-12-13 05:13:48,030	[DEBUG]	
2020-12-13 05:13:49,018	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:13:52,454	[INFO]	52	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:13:53,417	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:13:54,405	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:13:57,885	[INFO]	55	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:13:57,887	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:13:57,889	[INFO]	56	SUCCESS	+1.0	
2020-12-13 05:13:57,889	[DEBUG]	
2020-12-13 05:13:57,891	[INFO]	57	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-13 05:13:57,892	[DEBUG]	
2020-12-13 05:13:57,893	[INFO]	58	SUCCESS	+1.0	
2020-12-13 05:13:57,893	[DEBUG]	
2020-12-13 05:13:58,870	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:13:58,873	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:13:59,863	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:14:03,354	[INFO]	62	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:14:03,355	[INFO]	63	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:14:03,355	[DEBUG]	
2020-12-13 05:14:03,356	[INFO]	64	SUCCESS	+1.0	
2020-12-13 05:14:03,356	[DEBUG]	
2020-12-13 05:14:04,309	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:14:05,253	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:14:06,063	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:14:06,909	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:14:10,275	[INFO]	69	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:14:10,276	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-13 05:14:11,230	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:14:14,677	[INFO]	71	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:14:14,678	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,27 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
--- 16,33 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  }
                  return false;
              }

2020-12-13 05:14:15,616	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:14:19,048	[INFO]	73	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:14:19,050	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,27 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
--- 15,36 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
!                 }
!                     return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  }
                  return false;
              }

2020-12-13 05:14:22,561	[INFO]	74	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:14:22,564	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,22 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 15,28 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
!                 }
!                     return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:14:26,023	[INFO]	75	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:14:26,025	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:14:26,028	[INFO]	76	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:14:26,029	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:14:27,015	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:14:27,017	[INFO]	78	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:14:27,018	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:14:27,019	[INFO]	79	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:14:27,019	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:14:27,020	[INFO]	80	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:14:27,020	[DEBUG]	
2020-12-13 05:14:30,443	[INFO]	81	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:14:30,444	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:14:30,445	[INFO]	82	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:14:30,445	[DEBUG]	
2020-12-13 05:14:31,394	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:14:32,383	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:14:32,385	[INFO]	85	SUCCESS	+1.0	
2020-12-13 05:14:32,386	[DEBUG]	
2020-12-13 05:14:35,827	[INFO]	86	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:14:36,819	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:14:37,776	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:14:38,733	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:14:39,671	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:14:40,643	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:14:40,644	[INFO]	92	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:14:40,644	[DEBUG]	
2020-12-13 05:14:40,645	[INFO]	93	SUCCESS	+1.0	
2020-12-13 05:14:40,645	[DEBUG]	
2020-12-13 05:14:41,627	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:14:42,619	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:14:43,610	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:14:46,972	[INFO]	97	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:14:46,974	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:14:46,976	[INFO]	98	SUCCESS	+1.0	
2020-12-13 05:14:46,977	[DEBUG]	
2020-12-13 05:14:47,966	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:14:47,967	[INFO]	100	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:14:47,967	[DEBUG]	
2020-12-13 05:14:48,964	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:14:48,967	[INFO]	102	SUCCESS	+1.0	
2020-12-13 05:14:48,967	[DEBUG]	
2020-12-13 05:14:49,961	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:14:49,965	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:14:49,966	[INFO]	105	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:14:49,967	[DEBUG]	
2020-12-13 05:14:49,968	[INFO]	106	SUCCESS	+1.0	
2020-12-13 05:14:49,969	[DEBUG]	
2020-12-13 05:14:50,956	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:14:54,417	[INFO]	108	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:14:54,419	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:14:55,390	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:14:55,393	[INFO]	111	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:14:55,394	[DEBUG]	
2020-12-13 05:14:55,395	[INFO]	112	SUCCESS	+1.0	
2020-12-13 05:14:55,396	[DEBUG]	
2020-12-13 05:14:56,185	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:14:56,186	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:14:59,619	[INFO]	115	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:14:59,621	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:14:59,624	[INFO]	116	SUCCESS	+1.0	
2020-12-13 05:14:59,625	[DEBUG]	
2020-12-13 05:15:00,647	[INFO]	117	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-13 05:15:00,651	[INFO]	118	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:15:00,651	[DEBUG]	
2020-12-13 05:15:01,642	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:15:01,644	[INFO]	120	SUCCESS	+1.0	
2020-12-13 05:15:01,644	[DEBUG]	
2020-12-13 05:15:05,107	[INFO]	121	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:15:06,041	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:15:06,871	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:15:07,658	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:15:11,021	[INFO]	125	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:15:11,023	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:15:11,993	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:15:15,456	[INFO]	127	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:15:15,459	[INFO]	128	SUCCESS	+1.0	
2020-12-13 05:15:15,460	[DEBUG]	
2020-12-13 05:15:18,896	[INFO]	129	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:15:19,853	[INFO]	130	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:15:23,355	[INFO]	131	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:15:23,356	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-13 05:15:23,356	[INFO]	132	SUCCESS	+1.0	
2020-12-13 05:15:23,357	[DEBUG]	
2020-12-13 05:15:24,290	[INFO]	133	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-13 05:15:27,675	[INFO]	134	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:15:27,678	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:15:27,681	[INFO]	135	SUCCESS	+1.0	
2020-12-13 05:15:27,682	[DEBUG]	
2020-12-13 05:15:27,685	[INFO]	136	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:15:27,686	[DEBUG]	
2020-12-13 05:15:27,687	[INFO]	137	SUCCESS	+1.0	
2020-12-13 05:15:27,688	[DEBUG]	
2020-12-13 05:15:28,631	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:15:29,608	[INFO]	139	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:15:33,009	[INFO]	140	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:15:33,011	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:15:33,014	[INFO]	141	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:15:33,016	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:15:33,018	[INFO]	142	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:15:33,019	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:15:36,879	[INFO]	143	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:15:36,880	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,24 ****
--- 14,28 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:15:40,934	[INFO]	144	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:15:40,935	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-13 05:15:40,936	[INFO]	145	SUCCESS	+1.0	
2020-12-13 05:15:40,936	[DEBUG]	
2020-12-13 05:15:40,937	[INFO]	146	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:15:40,937	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:15:40,938	[INFO]	147	SUCCESS	+1.0	
2020-12-13 05:15:40,938	[DEBUG]	
2020-12-13 05:15:44,423	[INFO]	148	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:15:47,848	[INFO]	149	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:15:47,849	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:15:47,850	[INFO]	150	SUCCESS	+1.0	
2020-12-13 05:15:47,850	[DEBUG]	
2020-12-13 05:15:48,834	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:15:52,304	[INFO]	152	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:15:53,220	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:15:53,222	[INFO]	154	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:15:53,223	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:15:57,134	[INFO]	156	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:15:57,135	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 05:15:57,136	[INFO]	157	SUCCESS	+1.0	
2020-12-13 05:15:57,137	[DEBUG]	
2020-12-13 05:15:57,138	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:15:58,163	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:15:59,216	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:16:02,746	[INFO]	161	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:16:02,747	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-13 05:16:03,687	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-13 05:16:03,688	[INFO]	163	SUCCESS	+1.0	
2020-12-13 05:16:03,689	[DEBUG]	
2020-12-13 05:16:04,662	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:16:05,633	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:16:06,587	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:16:06,591	[INFO]	167	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:16:06,592	[DEBUG]	
2020-12-13 05:16:07,623	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:16:07,625	[INFO]	169	SUCCESS	+1.0	
2020-12-13 05:16:07,626	[DEBUG]	
2020-12-13 05:16:08,587	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:16:12,058	[INFO]	171	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:16:12,060	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:16:13,046	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:16:14,016	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:16:14,834	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:16:18,183	[INFO]	176	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:16:21,763	[INFO]	177	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:16:21,768	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:16:22,687	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:16:23,669	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:16:23,671	[INFO]	181	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:16:23,671	[DEBUG]	
2020-12-13 05:16:23,672	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:16:23,674	[INFO]	183	SUCCESS	+1.0	
2020-12-13 05:16:23,674	[DEBUG]	
2020-12-13 05:16:24,516	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:16:24,518	[INFO]	185	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:16:24,519	[DEBUG]	
2020-12-13 05:16:24,520	[INFO]	186	SUCCESS	+1.0	
2020-12-13 05:16:24,520	[DEBUG]	
2020-12-13 05:16:24,522	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:16:24,523	[INFO]	188	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:16:24,524	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:16:24,525	[INFO]	189	SUCCESS	+1.0	
2020-12-13 05:16:24,525	[DEBUG]	
2020-12-13 05:16:24,526	[INFO]	190	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:16:24,526	[DEBUG]	
2020-12-13 05:16:27,908	[INFO]	191	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:16:27,910	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:16:28,923	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:16:28,926	[INFO]	193	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:16:28,927	[DEBUG]	
2020-12-13 05:16:29,721	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:16:29,722	[INFO]	195	SUCCESS	+1.0	
2020-12-13 05:16:29,722	[DEBUG]	
2020-12-13 05:16:33,114	[INFO]	196	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:16:34,128	[INFO]	197	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:16:37,584	[INFO]	198	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:16:38,561	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:16:41,987	[INFO]	200	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:16:41,988	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:16:41,988	[INFO]	201	SUCCESS	+1.0	
2020-12-13 05:16:41,989	[DEBUG]	
2020-12-13 05:16:41,990	[INFO]	202	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:16:42,807	[INFO]	203	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:16:43,722	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:16:44,520	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:16:44,521	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:16:47,928	[INFO]	207	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:16:47,931	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:16:48,909	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:16:48,911	[INFO]	209	SUCCESS	+1.0	
2020-12-13 05:16:48,912	[DEBUG]	
2020-12-13 05:16:48,914	[INFO]	210	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:16:52,338	[INFO]	211	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:16:53,119	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:16:53,122	[INFO]	213	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:16:53,942	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:16:54,898	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:16:55,877	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:16:55,878	[INFO]	217	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:16:55,878	[DEBUG]	
2020-12-13 05:16:59,300	[INFO]	218	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:17:02,808	[INFO]	219	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:17:02,809	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:17:02,811	[INFO]	220	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:17:02,811	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:17:02,813	[INFO]	221	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:17:02,814	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:17:03,784	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:17:03,787	[INFO]	223	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:17:03,789	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:17:03,792	[INFO]	224	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:17:03,794	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:17:03,796	[INFO]	225	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:17:03,797	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:17:04,594	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:17:08,063	[INFO]	227	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:17:08,067	[INFO]	228	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:17:09,041	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:17:09,042	[INFO]	230	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-13 05:17:09,043	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:17:10,042	[INFO]	231	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:17:10,043	[INFO]	232	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:17:10,044	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:17:11,015	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:17:11,016	[INFO]	234	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:17:11,017	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:17:11,018	[INFO]	235	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:17:11,018	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:17:11,019	[INFO]	236	SUCCESS	+1.0	
2020-12-13 05:17:11,019	[DEBUG]	
2020-12-13 05:17:11,830	[INFO]	237	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:17:15,250	[INFO]	238	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:17:15,251	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:17:18,774	[INFO]	239	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:17:18,776	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,22 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 15,25 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     return true;
+                 } if (nodesvisited.contains(node)) {
                      return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:17:22,127	[INFO]	240	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:17:22,130	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:17:22,955	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:17:22,957	[INFO]	242	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:17:22,958	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:17:23,949	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:17:24,950	[INFO]	244	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:17:25,912	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:17:26,900	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:17:26,901	[INFO]	247	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:17:26,901	[DEBUG]	
2020-12-13 05:17:26,902	[INFO]	248	SUCCESS	+1.0	
2020-12-13 05:17:26,902	[DEBUG]	
2020-12-13 05:17:30,260	[INFO]	249	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:17:30,261	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-13 05:17:31,230	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:17:34,730	[INFO]	251	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:17:34,731	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,24 ****
--- 14,28 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:17:35,658	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:17:35,661	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:17:36,610	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:17:37,568	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:17:38,401	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:17:38,405	[INFO]	257	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:17:38,406	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:17:38,407	[INFO]	258	SUCCESS	+1.0	
2020-12-13 05:17:38,408	[DEBUG]	
2020-12-13 05:17:41,830	[INFO]	259	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:17:45,185	[INFO]	260	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:17:45,189	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:17:46,187	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:17:46,190	[INFO]	262	SUCCESS	+1.0	
2020-12-13 05:17:46,191	[DEBUG]	
2020-12-13 05:17:49,797	[INFO]	263	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:17:50,715	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:17:51,531	[INFO]	265	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:17:52,507	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:17:53,467	[INFO]	267	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:17:56,855	[INFO]	268	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:17:56,856	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:18:00,290	[INFO]	269	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:18:00,292	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
--- 20,30 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 05:18:00,293	[INFO]	270	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:18:00,293	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:18:00,294	[INFO]	271	SUCCESS	+1.0	
2020-12-13 05:18:00,294	[DEBUG]	
2020-12-13 05:18:01,291	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:18:04,643	[INFO]	273	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:18:04,646	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:18:05,625	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:18:05,628	[INFO]	275	SUCCESS	+1.0	
2020-12-13 05:18:05,629	[DEBUG]	
2020-12-13 05:18:06,752	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:18:07,703	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:18:08,666	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:18:09,639	[INFO]	279	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:18:09,640	[INFO]	280	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:18:09,641	[DEBUG]	
2020-12-13 05:18:13,770	[INFO]	281	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:18:13,772	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 05:18:13,773	[INFO]	282	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:18:13,775	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 05:18:13,776	[INFO]	283	SUCCESS	+1.0	
2020-12-13 05:18:13,776	[DEBUG]	
2020-12-13 05:18:13,778	[INFO]	284	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-13 05:18:13,778	[DEBUG]	
2020-12-13 05:18:13,778	[INFO]	285	SUCCESS	+1.0	
2020-12-13 05:18:13,779	[DEBUG]	
2020-12-13 05:18:14,706	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:18:15,666	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:18:19,132	[INFO]	288	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:18:19,136	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:18:20,126	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:18:23,607	[INFO]	291	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:18:23,608	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:18:23,610	[INFO]	292	SUCCESS	+1.0	
2020-12-13 05:18:23,610	[DEBUG]	
2020-12-13 05:18:23,611	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:18:24,573	[INFO]	294	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:18:25,554	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:18:26,367	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:18:27,265	[INFO]	297	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:18:28,210	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:18:29,195	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:18:30,137	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:18:31,125	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:18:32,102	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:18:35,593	[INFO]	303	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:18:35,593	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:18:39,023	[INFO]	304	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:18:39,026	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:18:42,438	[INFO]	305	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:18:42,441	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:18:43,455	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:18:43,457	[INFO]	307	SUCCESS	+1.0	
2020-12-13 05:18:43,457	[DEBUG]	
2020-12-13 05:18:44,250	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:18:44,251	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:18:47,621	[INFO]	310	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:18:47,624	[INFO]	311	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:18:47,625	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:18:48,443	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:18:48,445	[INFO]	313	SUCCESS	+1.0	
2020-12-13 05:18:48,446	[DEBUG]	
2020-12-13 05:18:49,218	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:18:50,178	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:18:53,585	[INFO]	316	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:18:53,586	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:18:54,574	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:18:57,992	[INFO]	318	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:19:01,554	[INFO]	319	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:19:02,372	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:19:02,374	[INFO]	321	SUCCESS	+1.0	
2020-12-13 05:19:02,375	[DEBUG]	
2020-12-13 05:19:03,347	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:19:04,311	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:19:05,272	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:19:06,220	[INFO]	325	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:19:09,722	[INFO]	326	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:19:09,725	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:19:09,729	[INFO]	327	SUCCESS	+1.0	
2020-12-13 05:19:09,730	[DEBUG]	
2020-12-13 05:19:10,654	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:19:11,646	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:19:15,042	[INFO]	330	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:19:18,514	[INFO]	331	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:19:19,308	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:19:19,309	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:19:22,667	[INFO]	334	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:19:22,669	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 05:19:22,669	[INFO]	==== END ====
2020-12-13 05:19:22,669	[INFO]	Reason: target fitness reached
2020-12-13 05:19:22,670	[INFO]	
2020-12-13 05:19:22,671	[INFO]	========== EPOCH 3 ==========
2020-12-13 05:19:22,671	[INFO]	==== WARMUP ====
2020-12-13 05:19:26,429	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:19:26,429	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:19:31,511	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:19:31,512	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:19:35,334	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:19:35,335	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:19:38,766	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-13 05:19:38,767	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:19:38,767	[INFO]	==== START ====
2020-12-13 05:19:42,228	[INFO]	1	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:19:43,187	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:19:44,194	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:19:45,174	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:19:48,752	[INFO]	5	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:19:48,753	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:19:48,754	[INFO]	6	SUCCESS	+1.0	
2020-12-13 05:19:48,754	[DEBUG]	
2020-12-13 05:19:49,715	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:19:53,132	[INFO]	8	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:19:53,133	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:19:53,134	[INFO]	9	SUCCESS	+1.0	
2020-12-13 05:19:53,134	[DEBUG]	
2020-12-13 05:19:56,513	[INFO]	10	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:19:59,987	[INFO]	11	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:19:59,987	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 05:19:59,988	[INFO]	==== END ====
2020-12-13 05:19:59,988	[INFO]	Reason: target fitness reached
2020-12-13 05:19:59,989	[INFO]	
2020-12-13 05:19:59,989	[INFO]	========== EPOCH 4 ==========
2020-12-13 05:19:59,989	[INFO]	==== WARMUP ====
2020-12-13 05:20:03,467	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:20:03,468	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:20:06,866	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:20:06,867	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:20:10,231	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:20:10,231	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:20:13,624	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-13 05:20:13,624	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:20:13,624	[INFO]	==== START ====
2020-12-13 05:20:17,016	[INFO]	1	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:20:17,017	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:20:20,488	[INFO]	2	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:20:20,491	[INFO]	3	SUCCESS	+1.0	
2020-12-13 05:20:20,491	[DEBUG]	
2020-12-13 05:20:21,622	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:20:22,608	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:20:23,558	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:20:27,033	[INFO]	7	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:20:28,016	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:20:28,876	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:20:29,801	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:20:30,734	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:20:31,715	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:20:31,716	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:20:32,674	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:20:36,157	[INFO]	15	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:20:36,986	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:20:40,381	[INFO]	17	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:20:41,163	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:20:44,632	[INFO]	19	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:20:44,633	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:20:44,634	[INFO]	20	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:20:44,635	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:20:44,636	[INFO]	21	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:20:44,636	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:20:45,582	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:20:45,583	[INFO]	23	SUCCESS	+1.0	
2020-12-13 05:20:45,583	[DEBUG]	
2020-12-13 05:20:46,578	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:20:47,583	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:20:51,020	[INFO]	26	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:20:54,444	[INFO]	27	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:20:54,446	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:20:54,448	[INFO]	28	SUCCESS	+1.0	
2020-12-13 05:20:54,449	[DEBUG]	
2020-12-13 05:20:57,957	[INFO]	29	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:20:57,960	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:20:58,955	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:20:58,956	[INFO]	31	SUCCESS	+1.0	
2020-12-13 05:20:58,956	[DEBUG]	
2020-12-13 05:20:59,934	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:21:00,791	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:21:01,740	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:21:02,561	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:21:03,524	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:21:04,503	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:21:05,496	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:21:06,455	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:21:06,459	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:21:06,461	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:21:09,924	[INFO]	42	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:21:09,925	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 05:21:09,926	[INFO]	43	SUCCESS	+1.0	
2020-12-13 05:21:09,926	[DEBUG]	
2020-12-13 05:21:13,353	[INFO]	44	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:21:13,354	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:21:14,129	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:21:14,131	[INFO]	46	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:21:14,132	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:21:14,133	[INFO]	47	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:21:14,134	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:21:14,135	[INFO]	48	SUCCESS	+1.0	
2020-12-13 05:21:14,135	[DEBUG]	
2020-12-13 05:21:15,100	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:21:18,489	[INFO]	50	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:21:19,470	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:21:19,473	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:21:22,860	[INFO]	53	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:21:22,862	[INFO]	54	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:21:22,862	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:21:22,863	[INFO]	55	SUCCESS	+1.0	
2020-12-13 05:21:22,863	[DEBUG]	
2020-12-13 05:21:23,855	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:21:27,246	[INFO]	57	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:21:28,216	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:21:29,150	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:21:30,136	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:21:33,613	[INFO]	61	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:21:37,058	[INFO]	62	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:21:37,059	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:21:37,060	[INFO]	63	SUCCESS	+1.0	
2020-12-13 05:21:37,061	[DEBUG]	
2020-12-13 05:21:38,011	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:21:38,807	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:21:42,101	[INFO]	66	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:21:43,059	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:21:44,075	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:21:44,906	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:21:45,845	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:21:46,804	[INFO]	71	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:21:47,794	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:21:51,192	[INFO]	73	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:21:52,186	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:21:55,569	[INFO]	75	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:21:56,551	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:21:56,553	[INFO]	77	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-13 05:21:56,553	[DEBUG]	
2020-12-13 05:21:59,920	[INFO]	78	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:22:00,960	[INFO]	79	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:22:00,964	[INFO]	80	SUCCESS	+1.0	
2020-12-13 05:22:00,964	[DEBUG]	
2020-12-13 05:22:00,968	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:22:00,970	[INFO]	82	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:22:04,417	[INFO]	83	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:22:04,419	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:22:04,422	[INFO]	84	SUCCESS	+1.0	
2020-12-13 05:22:04,423	[DEBUG]	
2020-12-13 05:22:04,426	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:22:04,429	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:22:05,380	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:22:08,762	[INFO]	88	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:22:08,763	[INFO]	89	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:22:08,763	[DEBUG]	
2020-12-13 05:22:08,764	[INFO]	90	SUCCESS	+1.0	
2020-12-13 05:22:08,764	[DEBUG]	
2020-12-13 05:22:09,746	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:22:13,115	[INFO]	92	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:22:13,116	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-13 05:22:13,119	[INFO]	93	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:22:13,120	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-13 05:22:13,954	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:22:13,957	[INFO]	95	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:22:13,958	[DEBUG]	
2020-12-13 05:22:14,904	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:22:14,906	[INFO]	97	SUCCESS	+1.0	
2020-12-13 05:22:14,907	[DEBUG]	
2020-12-13 05:22:15,880	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:22:15,884	[INFO]	99	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:22:15,885	[DEBUG]	
2020-12-13 05:22:16,877	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:22:16,880	[INFO]	101	SUCCESS	+1.0	
2020-12-13 05:22:16,881	[DEBUG]	
2020-12-13 05:22:17,840	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:22:18,775	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:22:19,591	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:22:20,553	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:22:21,536	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:22:25,040	[INFO]	107	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:22:28,409	[INFO]	108	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:22:28,410	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-13 05:22:28,411	[INFO]	109	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:22:28,412	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-13 05:22:29,398	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:22:29,399	[INFO]	111	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:22:29,399	[DEBUG]	
2020-12-13 05:22:30,379	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:22:31,354	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:22:32,135	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:22:32,138	[INFO]	115	SUCCESS	+1.0	
2020-12-13 05:22:32,139	[DEBUG]	
2020-12-13 05:22:32,953	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:22:32,955	[INFO]	117	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:22:32,956	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-13 05:22:32,957	[INFO]	118	SUCCESS	+1.0	
2020-12-13 05:22:32,958	[DEBUG]	
2020-12-13 05:22:33,742	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:22:34,671	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:22:35,660	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:22:35,662	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:22:39,172	[INFO]	123	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:22:42,625	[INFO]	124	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:22:42,626	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 05:22:42,626	[INFO]	==== END ====
2020-12-13 05:22:42,626	[INFO]	Reason: target fitness reached
2020-12-13 05:22:42,627	[INFO]	
2020-12-13 05:22:42,627	[INFO]	========== EPOCH 5 ==========
2020-12-13 05:22:42,628	[INFO]	==== WARMUP ====
2020-12-13 05:22:46,021	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:22:46,022	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:22:49,421	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:22:49,422	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:22:52,841	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:22:52,841	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:22:56,252	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-13 05:22:56,252	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:22:56,252	[INFO]	==== START ====
2020-12-13 05:22:57,047	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:22:58,026	[INFO]	2	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:22:59,000	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:22:59,835	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:23:03,413	[INFO]	5	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:23:06,801	[INFO]	6	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:23:06,803	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-13 05:23:06,804	[INFO]	7	SUCCESS	+1.0	
2020-12-13 05:23:06,805	[DEBUG]	
2020-12-13 05:23:10,144	[INFO]	8	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:23:10,145	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 05:23:10,146	[INFO]	9	SUCCESS	+1.0	
2020-12-13 05:23:10,146	[DEBUG]	
2020-12-13 05:23:11,152	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:23:12,127	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:23:15,590	[INFO]	12	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:23:15,592	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:23:15,593	[INFO]	13	SUCCESS	+1.0	
2020-12-13 05:23:15,594	[DEBUG]	
2020-12-13 05:23:19,058	[INFO]	14	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:23:19,059	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:23:20,009	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:23:23,492	[INFO]	16	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:23:23,494	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,25 ****
--- 17,29 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:23:24,510	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:23:27,935	[INFO]	18	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:23:27,937	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:23:31,416	[INFO]	19	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:23:31,417	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,22 ****
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:23:31,418	[INFO]	20	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:23:31,418	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:23:34,893	[INFO]	21	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:23:34,894	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,27 ****
--- 17,33 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  }
                  return false;
              }

2020-12-13 05:23:34,895	[INFO]	22	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:23:34,895	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:23:35,865	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:23:35,866	[INFO]	24	SUCCESS	+1.0	
2020-12-13 05:23:35,867	[DEBUG]	
2020-12-13 05:23:35,867	[INFO]	25	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:23:35,868	[DEBUG]	
2020-12-13 05:23:35,868	[INFO]	26	SUCCESS	+1.0	
2020-12-13 05:23:35,869	[DEBUG]	
2020-12-13 05:23:36,863	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:23:36,868	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:23:37,827	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:23:38,839	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:23:38,840	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:23:39,818	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:23:43,405	[INFO]	33	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:23:46,756	[INFO]	34	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:23:47,550	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:23:48,531	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:23:51,925	[INFO]	37	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:23:51,926	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 05:23:51,927	[INFO]	38	SUCCESS	+1.0	
2020-12-13 05:23:51,927	[DEBUG]	
2020-12-13 05:23:52,915	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:23:56,394	[INFO]	40	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:23:56,395	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:23:57,202	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:24:00,677	[INFO]	42	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:24:00,679	[INFO]	43	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:24:00,680	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:24:01,675	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:24:01,680	[INFO]	45	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:24:01,682	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:24:02,640	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:24:02,641	[INFO]	47	SUCCESS	+1.0	
2020-12-13 05:24:02,641	[DEBUG]	
2020-12-13 05:24:06,026	[INFO]	48	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:24:06,028	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-13 05:24:09,435	[INFO]	49	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:24:09,436	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,34 ****
  	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 23,37 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:24:12,813	[INFO]	50	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:24:12,814	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,34 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
-                 }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 20,38 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
+ return true; }
+                     }
+                 }
+                 for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:24:13,760	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:24:13,761	[INFO]	52	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:24:13,762	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,34 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
-                 }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 20,38 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
+ return true; }
+                     }
+                 }
+                 for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:24:13,763	[INFO]	53	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:24:13,764	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,34 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
-                 }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 20,38 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
+ return true; }
+                     }
+                 }
+                 for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:24:13,765	[INFO]	54	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:24:13,766	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,34 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
-                 }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 20,38 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
+ return true; }
+                     }
+                 }
+                 for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:24:17,165	[INFO]	55	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:24:17,168	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,34 ****
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
-                 }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 18,41 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
+ return true; }
+                     }
+                 }
+                 for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:24:20,679	[INFO]	56	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:24:20,684	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,28 ****
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
-                 }
                  return false;
              }
          };
--- 18,35 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
+ return true; }
+                     }
+                 }
+                 for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  return false;
              }
          };

2020-12-13 05:24:20,688	[INFO]	57	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:24:20,690	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,28 ****
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
-                 }
                  return false;
              }
          };
--- 18,35 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
+ return true; }
+                     }
+                 }
+                 for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  return false;
              }
          };

2020-12-13 05:24:24,174	[INFO]	58	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:24:24,176	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,28 ****
--- 18,34 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-13 05:24:24,999	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:24:25,968	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:24:26,759	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:24:26,761	[INFO]	62	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:24:26,761	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,28 ****
--- 18,34 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-13 05:24:26,763	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:24:27,568	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:24:27,572	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:24:28,394	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:24:28,397	[INFO]	67	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:24:28,398	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,28 ****
--- 18,34 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-13 05:24:31,798	[INFO]	68	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:24:31,799	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-13 05:24:31,800	[INFO]	69	SUCCESS	+1.0	
2020-12-13 05:24:31,800	[DEBUG]	
2020-12-13 05:24:32,782	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:24:33,741	[INFO]	71	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:24:37,158	[INFO]	72	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:24:37,940	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:24:38,906	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:24:39,901	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:24:40,891	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:24:44,331	[INFO]	77	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:24:45,309	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:24:48,732	[INFO]	79	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:24:48,733	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 05:24:48,734	[INFO]	80	SUCCESS	+1.0	
2020-12-13 05:24:48,734	[DEBUG]	
2020-12-13 05:24:48,736	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:24:52,159	[INFO]	82	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:24:52,161	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:24:53,140	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:24:56,527	[INFO]	84	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:24:56,528	[INFO]	85	SUCCESS	+1.0	
2020-12-13 05:24:56,528	[DEBUG]	
2020-12-13 05:24:57,457	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:24:57,458	[INFO]	87	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:24:57,458	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-13 05:24:57,459	[INFO]	88	SUCCESS	+1.0	
2020-12-13 05:24:57,460	[DEBUG]	
2020-12-13 05:24:58,474	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:24:58,475	[INFO]	90	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:24:58,476	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:25:01,971	[INFO]	91	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:25:02,955	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:25:03,752	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:25:03,753	[INFO]	94	SUCCESS	+1.0	
2020-12-13 05:25:03,753	[DEBUG]	
2020-12-13 05:25:03,754	[INFO]	95	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:25:03,754	[DEBUG]	
2020-12-13 05:25:03,755	[INFO]	96	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:25:03,755	[DEBUG]	
2020-12-13 05:25:03,756	[INFO]	97	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:25:03,756	[DEBUG]	
2020-12-13 05:25:04,730	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:25:08,168	[INFO]	99	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:25:08,168	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 05:25:08,169	[INFO]	==== END ====
2020-12-13 05:25:08,169	[INFO]	Reason: target fitness reached
2020-12-13 05:25:08,170	[INFO]	
2020-12-13 05:25:08,170	[INFO]	========== EPOCH 6 ==========
2020-12-13 05:25:08,170	[INFO]	==== WARMUP ====
2020-12-13 05:25:11,627	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:25:11,628	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:25:15,022	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:25:15,023	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:25:18,409	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:25:18,410	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:25:21,894	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-13 05:25:21,894	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:25:21,895	[INFO]	==== START ====
2020-12-13 05:25:22,873	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:25:23,858	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:25:24,870	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:25:28,262	[INFO]	4	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:25:28,265	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:25:28,270	[INFO]	5	SUCCESS	+1.0	
2020-12-13 05:25:28,271	[DEBUG]	
2020-12-13 05:25:29,241	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:25:30,178	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:25:30,964	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:25:34,428	[INFO]	9	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:25:38,808	[INFO]	10	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:25:38,809	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:25:40,187	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:25:41,359	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:25:41,361	[INFO]	13	SUCCESS	+1.0	
2020-12-13 05:25:41,361	[DEBUG]	
2020-12-13 05:25:45,679	[INFO]	14	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:25:45,680	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:25:49,419	[INFO]	15	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:25:50,425	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:25:50,427	[INFO]	17	SUCCESS	+1.0	
2020-12-13 05:25:50,428	[DEBUG]	
2020-12-13 05:25:51,411	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:25:52,202	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:25:53,176	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:25:53,997	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:25:54,925	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:25:55,888	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:25:56,873	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:25:57,683	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:25:58,635	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:25:59,607	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:26:03,113	[INFO]	28	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:26:03,115	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:26:03,117	[INFO]	29	SUCCESS	+1.0	
2020-12-13 05:26:03,118	[DEBUG]	
2020-12-13 05:26:04,069	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:26:04,889	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:26:05,679	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:26:06,496	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:26:07,291	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:26:08,198	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:26:09,144	[INFO]	36	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:26:09,962	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:26:10,764	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:26:11,559	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:26:11,561	[INFO]	40	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:26:11,561	[DEBUG]	
2020-12-13 05:26:12,555	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:26:15,988	[INFO]	42	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:26:15,990	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:26:15,992	[INFO]	43	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:26:15,993	[DEBUG]	
2020-12-13 05:26:16,965	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:26:20,355	[INFO]	45	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:26:20,356	[INFO]	46	SUCCESS	+1.0	
2020-12-13 05:26:20,356	[DEBUG]	
2020-12-13 05:26:20,357	[INFO]	47	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:26:20,358	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:26:21,127	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:26:21,936	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:26:22,839	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:26:23,842	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:26:24,820	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:26:25,776	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:26:26,583	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:26:27,538	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:26:28,534	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:26:31,978	[INFO]	58	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:26:31,979	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:26:32,804	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:26:32,805	[INFO]	60	SUCCESS	+1.0	
2020-12-13 05:26:32,806	[DEBUG]	
2020-12-13 05:26:32,806	[INFO]	61	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:26:32,807	[DEBUG]	
2020-12-13 05:26:33,732	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:26:33,734	[INFO]	63	SUCCESS	+1.0	
2020-12-13 05:26:33,735	[DEBUG]	
2020-12-13 05:26:37,279	[INFO]	64	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:26:38,022	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:26:38,983	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:26:38,984	[INFO]	67	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:26:38,984	[DEBUG]	
2020-12-13 05:26:38,985	[INFO]	68	SUCCESS	+1.0	
2020-12-13 05:26:38,985	[DEBUG]	
2020-12-13 05:26:39,953	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:26:39,954	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:26:40,925	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:26:41,726	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:26:45,130	[INFO]	73	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:26:45,131	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:26:45,132	[INFO]	74	SUCCESS	+1.0	
2020-12-13 05:26:45,132	[DEBUG]	
2020-12-13 05:26:48,568	[INFO]	75	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:26:48,571	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:26:49,557	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:26:49,558	[INFO]	77	SUCCESS	+1.0	
2020-12-13 05:26:49,558	[DEBUG]	
2020-12-13 05:26:52,945	[INFO]	78	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:26:53,927	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:26:54,704	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:26:58,162	[INFO]	81	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:26:58,166	[INFO]	82	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:26:58,167	[DEBUG]	
2020-12-13 05:26:58,964	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:26:58,967	[INFO]	84	SUCCESS	+1.0	
2020-12-13 05:26:58,968	[DEBUG]	
2020-12-13 05:26:59,942	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:27:00,821	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:27:01,582	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:27:02,430	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:27:02,435	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:27:03,417	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:27:04,203	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:27:04,205	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:27:07,651	[INFO]	93	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:27:07,653	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:27:07,657	[INFO]	94	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:27:07,658	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:27:07,661	[INFO]	95	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:27:07,662	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:27:07,664	[INFO]	96	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:27:07,667	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:27:08,639	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:27:09,442	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:27:09,444	[INFO]	99	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:27:09,445	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:27:09,445	[INFO]	100	SUCCESS	+1.0	
2020-12-13 05:27:09,446	[DEBUG]	
2020-12-13 05:27:09,446	[INFO]	101	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:27:09,447	[DEBUG]	
2020-12-13 05:27:10,232	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:27:11,143	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:27:11,946	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:27:11,947	[INFO]	105	SUCCESS	+1.0	
2020-12-13 05:27:11,948	[DEBUG]	
2020-12-13 05:27:12,931	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:27:13,867	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:27:17,312	[INFO]	108	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:27:18,073	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:27:19,076	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:27:19,078	[INFO]	111	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:27:19,078	[DEBUG]	
2020-12-13 05:27:19,078	[INFO]	112	SUCCESS	+1.0	
2020-12-13 05:27:19,079	[DEBUG]	
2020-12-13 05:27:22,970	[INFO]	113	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:27:22,971	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:27:22,972	[INFO]	114	SUCCESS	+1.0	
2020-12-13 05:27:22,973	[DEBUG]	
2020-12-13 05:27:24,156	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:27:25,176	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:27:25,178	[INFO]	117	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:27:25,178	[DEBUG]	
2020-12-13 05:27:26,134	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:27:27,128	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:27:27,130	[INFO]	120	SUCCESS	+1.0	
2020-12-13 05:27:27,131	[DEBUG]	
2020-12-13 05:27:27,133	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:27:27,944	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:27:27,946	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:27:28,760	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:27:29,722	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:27:33,211	[INFO]	126	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:27:33,212	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 05:27:33,213	[INFO]	127	SUCCESS	+1.0	
2020-12-13 05:27:33,213	[DEBUG]	
2020-12-13 05:27:36,631	[INFO]	128	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:27:36,633	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:27:37,610	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:27:38,590	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:27:39,584	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:27:40,582	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:27:40,583	[INFO]	133	SUCCESS	+1.0	
2020-12-13 05:27:40,584	[DEBUG]	
2020-12-13 05:27:41,375	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:27:42,298	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:27:43,099	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:27:44,069	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:27:47,473	[INFO]	138	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:27:50,908	[INFO]	139	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:27:50,912	[INFO]	140	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:27:50,913	[DEBUG]	
2020-12-13 05:27:54,201	[INFO]	141	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:27:54,202	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:27:55,213	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:27:56,189	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:27:56,191	[INFO]	144	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:27:56,191	[DEBUG]	
2020-12-13 05:27:56,192	[INFO]	145	SUCCESS	+1.0	
2020-12-13 05:27:56,193	[DEBUG]	
2020-12-13 05:27:59,637	[INFO]	146	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:27:59,638	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-13 05:28:00,620	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:28:01,573	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:28:01,574	[INFO]	149	SUCCESS	+1.0	
2020-12-13 05:28:01,574	[DEBUG]	
2020-12-13 05:28:02,409	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:28:03,380	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:28:03,383	[INFO]	152	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:28:03,383	[DEBUG]	
2020-12-13 05:28:03,385	[INFO]	153	SUCCESS	+1.0	
2020-12-13 05:28:03,385	[DEBUG]	
2020-12-13 05:28:03,387	[INFO]	154	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:28:03,388	[DEBUG]	
2020-12-13 05:28:03,389	[INFO]	155	SUCCESS	+1.0	
2020-12-13 05:28:03,390	[DEBUG]	
2020-12-13 05:28:04,351	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:28:07,710	[INFO]	157	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:28:07,710	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:28:07,711	[INFO]	158	SUCCESS	+1.0	
2020-12-13 05:28:07,711	[DEBUG]	
2020-12-13 05:28:08,660	[INFO]	159	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:28:12,212	[INFO]	160	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:28:12,214	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:28:12,215	[INFO]	161	SUCCESS	+1.0	
2020-12-13 05:28:12,216	[DEBUG]	
2020-12-13 05:28:13,115	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:28:14,063	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:28:14,887	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:28:18,321	[INFO]	165	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:28:18,322	[INFO]	166	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:28:18,322	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:28:18,323	[INFO]	167	SUCCESS	+1.0	
2020-12-13 05:28:18,324	[DEBUG]	
2020-12-13 05:28:19,306	[INFO]	168	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-13 05:28:22,690	[INFO]	169	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:28:22,692	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:28:23,514	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:28:26,966	[INFO]	171	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:28:26,967	[INFO]	172	SUCCESS	+1.0	
2020-12-13 05:28:26,967	[DEBUG]	
2020-12-13 05:28:27,928	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:28:28,787	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:28:29,731	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:28:30,527	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:28:31,313	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:28:34,995	[INFO]	178	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:28:34,997	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:28:34,999	[INFO]	179	SUCCESS	+1.0	
2020-12-13 05:28:34,999	[DEBUG]	
2020-12-13 05:28:35,856	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:28:35,859	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:28:36,970	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:28:40,406	[INFO]	183	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-13 05:28:41,370	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:28:42,119	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:28:43,094	[INFO]	186	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:28:43,095	[INFO]	187	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:28:43,096	[DEBUG]	
2020-12-13 05:28:44,117	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:28:44,120	[INFO]	189	SUCCESS	+1.0	
2020-12-13 05:28:44,120	[DEBUG]	
2020-12-13 05:28:47,649	[INFO]	190	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:28:47,650	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-13 05:28:47,651	[INFO]	191	SUCCESS	+1.0	
2020-12-13 05:28:47,651	[DEBUG]	
2020-12-13 05:28:47,652	[INFO]	192	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:28:47,652	[DEBUG]	
2020-12-13 05:28:47,653	[INFO]	193	SUCCESS	+1.0	
2020-12-13 05:28:47,653	[DEBUG]	
2020-12-13 05:28:47,654	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:28:47,654	[INFO]	195	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:28:47,655	[DEBUG]	
2020-12-13 05:28:48,599	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:28:48,600	[INFO]	197	SUCCESS	+1.0	
2020-12-13 05:28:48,600	[DEBUG]	
2020-12-13 05:28:49,573	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:28:49,574	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:28:52,979	[INFO]	200	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:28:52,980	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:28:56,463	[INFO]	201	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:28:56,466	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:28:56,468	[INFO]	202	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-13 05:28:56,470	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:28:59,831	[INFO]	203	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:28:59,832	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,29 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+                     }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>(); }
                      }
                  }
                  return false;

2020-12-13 05:29:00,662	[INFO]	204	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:29:00,667	[INFO]	205	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-13 05:29:00,668	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:29:01,523	[INFO]	206	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:29:01,527	[INFO]	207	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-13 05:29:01,528	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:29:02,494	[INFO]	208	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:29:02,496	[INFO]	209	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-13 05:29:02,496	[DEBUG]	
2020-12-13 05:29:03,446	[INFO]	210	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:29:04,392	[INFO]	211	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:29:05,362	[INFO]	212	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:29:05,363	[INFO]	213	SUCCESS	+1.0	
2020-12-13 05:29:05,363	[DEBUG]	
2020-12-13 05:29:06,277	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:29:07,256	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:29:08,194	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:29:09,175	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:29:12,635	[INFO]	218	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:29:12,637	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 05:29:13,618	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:29:13,621	[INFO]	220	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:29:13,622	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 05:29:17,025	[INFO]	221	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:29:20,510	[INFO]	222	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:29:20,515	[INFO]	223	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:29:20,516	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 05:29:20,517	[INFO]	224	SUCCESS	+1.0	
2020-12-13 05:29:20,518	[DEBUG]	
2020-12-13 05:29:21,511	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:29:21,514	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:29:22,469	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:29:23,267	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:29:26,672	[INFO]	229	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:29:26,675	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-13 05:29:30,265	[INFO]	230	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:29:30,266	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
+                     }
                  }
                  return false;
              }

2020-12-13 05:29:30,269	[INFO]	231	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:29:30,270	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-13 05:29:31,182	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:29:31,185	[INFO]	233	SUCCESS	+1.0	
2020-12-13 05:29:31,185	[DEBUG]	
2020-12-13 05:29:32,156	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:29:32,158	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:29:32,159	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:29:35,571	[INFO]	237	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:29:35,572	[INFO]	238	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:29:35,572	[DEBUG]	
2020-12-13 05:29:38,919	[INFO]	239	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:29:38,920	[INFO]	240	SUCCESS	+1.0	
2020-12-13 05:29:38,920	[DEBUG]	
2020-12-13 05:29:39,710	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:29:43,081	[INFO]	242	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:29:44,022	[INFO]	243	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:29:47,472	[INFO]	244	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:29:47,474	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:29:47,476	[INFO]	245	SUCCESS	+1.0	
2020-12-13 05:29:47,477	[DEBUG]	
2020-12-13 05:29:48,427	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:29:48,428	[INFO]	247	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:29:48,429	[INFO]	248	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:29:48,429	[DEBUG]	
2020-12-13 05:29:48,430	[INFO]	249	SUCCESS	+1.0	
2020-12-13 05:29:48,430	[DEBUG]	
2020-12-13 05:29:49,412	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:29:50,219	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:29:51,171	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:29:54,579	[INFO]	253	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:29:54,580	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 05:29:54,580	[INFO]	==== END ====
2020-12-13 05:29:54,580	[INFO]	Reason: target fitness reached
2020-12-13 05:29:54,581	[INFO]	
2020-12-13 05:29:54,581	[INFO]	========== EPOCH 7 ==========
2020-12-13 05:29:54,581	[INFO]	==== WARMUP ====
2020-12-13 05:29:58,126	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:29:58,126	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:30:01,624	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:30:01,624	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:30:05,084	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:30:05,085	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:30:08,433	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-13 05:30:08,434	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:30:08,434	[INFO]	==== START ====
2020-12-13 05:30:09,402	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:30:12,842	[INFO]	2	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:30:12,844	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-13 05:30:13,658	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:30:13,659	[INFO]	4	SUCCESS	+1.0	
2020-12-13 05:30:13,660	[DEBUG]	
2020-12-13 05:30:14,625	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:30:15,601	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:30:16,580	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:30:17,512	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:30:18,518	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:30:19,523	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:30:20,525	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:30:21,559	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:30:25,018	[INFO]	13	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:30:28,415	[INFO]	14	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:30:28,417	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:30:28,419	[INFO]	15	SUCCESS	+1.0	
2020-12-13 05:30:28,420	[DEBUG]	
2020-12-13 05:30:31,801	[INFO]	16	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:30:32,577	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:30:32,579	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:30:33,555	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:30:34,535	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:30:38,306	[INFO]	21	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:30:39,263	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:30:40,235	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:30:41,236	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:30:42,037	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:30:42,970	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:30:46,449	[INFO]	27	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:30:47,415	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:30:48,197	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:30:49,184	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:30:49,187	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:30:49,191	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:30:52,659	[INFO]	33	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:30:52,661	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:30:52,663	[INFO]	34	SUCCESS	+1.0	
2020-12-13 05:30:52,664	[DEBUG]	
2020-12-13 05:30:53,643	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:30:53,648	[INFO]	36	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:30:54,615	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:30:55,438	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:30:56,216	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:30:59,837	[INFO]	40	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:31:03,289	[INFO]	41	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:31:03,290	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:31:04,238	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:31:05,219	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:31:06,181	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:31:06,182	[INFO]	45	SUCCESS	+1.0	
2020-12-13 05:31:06,183	[DEBUG]	
2020-12-13 05:31:06,184	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:31:09,671	[INFO]	47	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:31:09,673	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:31:09,675	[INFO]	48	SUCCESS	+1.0	
2020-12-13 05:31:09,675	[DEBUG]	
2020-12-13 05:31:10,649	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:31:11,626	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:31:12,450	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:31:15,883	[INFO]	52	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:31:15,885	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-13 05:31:16,699	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:31:16,701	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:31:20,170	[INFO]	55	SUCCESS	 2.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-13 05:31:21,113	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:31:21,963	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:31:22,773	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:31:26,300	[INFO]	59	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:31:26,301	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
+                     }
                  }
                  return false;
              }

2020-12-13 05:31:27,202	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:31:28,156	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:31:29,017	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:31:29,021	[INFO]	63	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:31:29,022	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
+                     }
                  }
                  return false;
              }

2020-12-13 05:31:29,981	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:31:31,004	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:31:34,462	[INFO]	66	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:31:34,463	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    return true;
+                     }
                  }
                  return false;
              }

2020-12-13 05:31:34,465	[INFO]	67	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:31:34,465	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    return true;
+                     }
                  }
                  return false;
              }

2020-12-13 05:31:37,865	[INFO]	68	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:31:37,866	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 05:31:37,867	[INFO]	==== END ====
2020-12-13 05:31:37,867	[INFO]	Reason: target fitness reached
2020-12-13 05:31:37,867	[INFO]	
2020-12-13 05:31:37,868	[INFO]	========== EPOCH 8 ==========
2020-12-13 05:31:37,868	[INFO]	==== WARMUP ====
2020-12-13 05:31:41,213	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:31:41,213	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:31:44,610	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:31:44,611	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:31:48,107	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:31:48,108	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:31:51,477	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-13 05:31:51,478	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:31:51,478	[INFO]	==== START ====
2020-12-13 05:31:54,878	[INFO]	1	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:31:54,879	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:31:58,345	[INFO]	2	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:31:59,328	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:31:59,329	[INFO]	4	SUCCESS	+1.0	
2020-12-13 05:31:59,330	[DEBUG]	
2020-12-13 05:32:00,297	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:32:00,299	[INFO]	6	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:32:00,299	[DEBUG]	
2020-12-13 05:32:03,836	[INFO]	7	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:32:03,838	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:32:04,780	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:32:04,781	[INFO]	9	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:32:04,782	[DEBUG]	
2020-12-13 05:32:05,719	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:32:05,720	[INFO]	11	SUCCESS	+1.0	
2020-12-13 05:32:05,721	[DEBUG]	
2020-12-13 05:32:06,669	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:32:07,585	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:32:08,419	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:32:09,398	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:32:10,338	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:32:13,787	[INFO]	17	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:32:13,788	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:32:14,703	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:32:15,665	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:32:15,667	[INFO]	20	SUCCESS	+1.0	
2020-12-13 05:32:15,667	[DEBUG]	
2020-12-13 05:32:16,488	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:32:17,455	[INFO]	22	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-13 05:32:20,945	[INFO]	23	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:32:22,044	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:32:22,046	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:32:23,043	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:32:26,521	[INFO]	27	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-13 05:32:27,480	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:32:27,481	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:32:30,950	[INFO]	30	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:32:30,951	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:32:31,739	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:32:32,703	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:32:32,704	[INFO]	33	SUCCESS	+1.0	
2020-12-13 05:32:32,704	[DEBUG]	
2020-12-13 05:32:36,071	[INFO]	34	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:32:37,058	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:32:38,030	[INFO]	36	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-13 05:32:39,052	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:32:42,462	[INFO]	38	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:32:42,463	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-13 05:32:42,464	[INFO]	39	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:32:42,465	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-13 05:32:43,251	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:32:43,254	[INFO]	41	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:32:43,254	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-13 05:32:44,188	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:32:44,189	[INFO]	43	SUCCESS	+1.0	
2020-12-13 05:32:44,190	[DEBUG]	
2020-12-13 05:32:44,996	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:32:44,997	[INFO]	45	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:32:44,997	[DEBUG]	
2020-12-13 05:32:45,821	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:32:45,823	[INFO]	47	SUCCESS	+1.0	
2020-12-13 05:32:45,823	[DEBUG]	
2020-12-13 05:32:46,767	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:32:50,153	[INFO]	49	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:32:50,154	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:32:53,593	[INFO]	50	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:32:53,595	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:32:53,599	[INFO]	51	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:32:53,601	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:32:54,596	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:32:54,597	[INFO]	53	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:32:54,598	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:32:58,026	[INFO]	54	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:32:58,028	[INFO]	55	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:32:58,028	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:32:58,029	[INFO]	56	SUCCESS	+1.0	
2020-12-13 05:32:58,029	[DEBUG]	
2020-12-13 05:32:59,001	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:33:02,721	[INFO]	58	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:33:03,518	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:33:04,436	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:33:04,437	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:33:07,807	[INFO]	62	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:33:08,734	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:33:12,099	[INFO]	64	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:33:13,084	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:33:16,548	[INFO]	66	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:33:16,551	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:33:16,553	[INFO]	67	SUCCESS	+1.0	
2020-12-13 05:33:16,553	[DEBUG]	
2020-12-13 05:33:17,555	[INFO]	68	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-13 05:33:18,513	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:33:21,922	[INFO]	70	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:33:22,923	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:33:23,926	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:33:24,946	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:33:25,780	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:33:26,734	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:33:27,685	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:33:28,665	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:33:29,676	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:33:29,678	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:33:33,183	[INFO]	80	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:33:33,185	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:33:34,135	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:33:34,139	[INFO]	82	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:33:34,140	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:33:34,142	[INFO]	83	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:33:34,143	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:33:34,145	[INFO]	84	SUCCESS	+1.0	
2020-12-13 05:33:34,145	[DEBUG]	
2020-12-13 05:33:34,146	[INFO]	85	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:33:34,147	[DEBUG]	
2020-12-13 05:33:34,148	[INFO]	86	SUCCESS	+1.0	
2020-12-13 05:33:34,148	[DEBUG]	
2020-12-13 05:33:34,966	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:33:35,961	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:33:39,379	[INFO]	89	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:33:39,380	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:33:42,883	[INFO]	90	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:33:42,886	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,28 ****
--- 17,32 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 05:33:42,888	[INFO]	91	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:33:42,890	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:33:42,893	[INFO]	92	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:33:42,895	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:33:43,846	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:33:43,848	[INFO]	94	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:33:43,849	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:33:43,849	[INFO]	95	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:33:43,850	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:33:43,851	[INFO]	96	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:33:43,852	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:33:43,852	[INFO]	97	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:33:43,853	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:33:43,854	[INFO]	98	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:33:43,855	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:33:43,856	[INFO]	99	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:33:43,856	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:33:43,857	[INFO]	100	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:33:43,858	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:33:43,859	[INFO]	101	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:33:43,860	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:33:43,861	[INFO]	102	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:33:43,862	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:33:44,845	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:33:44,847	[INFO]	104	SUCCESS	+1.0	
2020-12-13 05:33:44,848	[DEBUG]	
2020-12-13 05:33:44,850	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:33:44,851	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:33:44,853	[INFO]	107	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:33:44,853	[DEBUG]	
2020-12-13 05:33:44,854	[INFO]	108	SUCCESS	+1.0	
2020-12-13 05:33:44,855	[DEBUG]	
2020-12-13 05:33:44,856	[INFO]	109	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:33:44,857	[DEBUG]	
2020-12-13 05:33:44,858	[INFO]	110	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:33:44,859	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:33:45,819	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:33:46,633	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:33:46,637	[INFO]	113	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:33:46,638	[DEBUG]	
2020-12-13 05:33:46,639	[INFO]	114	SUCCESS	+1.0	
2020-12-13 05:33:46,640	[DEBUG]	
2020-12-13 05:33:47,443	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:33:50,911	[INFO]	116	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:33:50,913	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:33:50,915	[INFO]	117	SUCCESS	+1.0	
2020-12-13 05:33:50,916	[DEBUG]	
2020-12-13 05:33:51,908	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:33:51,910	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:33:52,986	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:33:53,949	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:33:54,965	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:33:55,900	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:33:56,892	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:33:57,887	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:34:01,439	[INFO]	126	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:34:01,440	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:34:01,442	[INFO]	127	SUCCESS	+1.0	
2020-12-13 05:34:01,443	[DEBUG]	
2020-12-13 05:34:02,426	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:34:05,805	[INFO]	129	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:34:09,336	[INFO]	130	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:34:09,338	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-13 05:34:09,340	[INFO]	131	SUCCESS	+1.0	
2020-12-13 05:34:09,341	[DEBUG]	
2020-12-13 05:34:10,267	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:34:11,053	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:34:12,032	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:34:12,871	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:34:13,818	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:34:14,632	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:34:15,591	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:34:18,981	[INFO]	139	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:34:18,983	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:34:18,986	[INFO]	140	SUCCESS	+1.0	
2020-12-13 05:34:18,987	[DEBUG]	
2020-12-13 05:34:18,990	[INFO]	141	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:34:18,991	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:34:18,992	[INFO]	142	SUCCESS	+1.0	
2020-12-13 05:34:18,993	[DEBUG]	
2020-12-13 05:34:19,802	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:34:23,306	[INFO]	144	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:34:24,277	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:34:27,645	[INFO]	146	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:34:27,646	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:34:28,623	[INFO]	147	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:34:28,624	[INFO]	148	SUCCESS	+1.0	
2020-12-13 05:34:28,624	[DEBUG]	
2020-12-13 05:34:29,481	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:34:32,937	[INFO]	150	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:34:32,938	[INFO]	151	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:34:33,892	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:34:37,386	[INFO]	153	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:34:37,387	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:34:37,388	[INFO]	154	SUCCESS	+1.0	
2020-12-13 05:34:37,388	[DEBUG]	
2020-12-13 05:34:38,161	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:34:41,635	[INFO]	156	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:34:42,443	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:34:43,220	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:34:44,166	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:34:45,137	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:34:48,729	[INFO]	161	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:34:49,520	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:34:50,474	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:34:50,478	[INFO]	164	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:34:51,478	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:34:54,858	[INFO]	166	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:34:55,641	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:34:59,134	[INFO]	168	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:34:59,135	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:34:59,139	[INFO]	169	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:34:59,140	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:35:00,089	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:35:00,958	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:35:00,962	[INFO]	172	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:35:00,963	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:35:01,753	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:35:02,716	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:35:03,524	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:35:06,931	[INFO]	176	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:35:06,934	[INFO]	177	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:35:06,935	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:35:10,371	[INFO]	178	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:35:10,374	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:35:11,307	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:35:11,309	[INFO]	181	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:35:11,310	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:35:11,311	[INFO]	182	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-13 05:35:11,311	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:35:11,313	[INFO]	183	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:35:11,313	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:35:11,314	[INFO]	184	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:35:12,270	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:35:13,721	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:35:14,714	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:35:18,105	[INFO]	188	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:35:19,055	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:35:19,057	[INFO]	190	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:35:19,057	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:35:19,058	[INFO]	191	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:35:19,059	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:35:19,059	[INFO]	192	SUCCESS	+1.0	
2020-12-13 05:35:19,060	[DEBUG]	
2020-12-13 05:35:19,061	[INFO]	193	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:35:20,025	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:35:20,986	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:35:21,969	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:35:22,975	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:35:22,976	[INFO]	198	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:35:26,454	[INFO]	199	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:35:26,456	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:35:27,421	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:35:28,398	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:35:28,400	[INFO]	202	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:35:28,400	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:35:29,422	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-13 05:35:29,425	[INFO]	204	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:35:29,426	[DEBUG]	
2020-12-13 05:35:29,426	[INFO]	205	SUCCESS	+1.0	
2020-12-13 05:35:29,427	[DEBUG]	
2020-12-13 05:35:30,414	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:35:31,383	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:35:32,334	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:35:33,289	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:35:37,349	[INFO]	210	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:35:38,545	[INFO]	211	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:35:39,733	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:35:43,284	[INFO]	213	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:35:43,285	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-13 05:35:44,245	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:35:47,643	[INFO]	215	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:35:47,644	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>(); }
+                     }
                  }
                  return false;
              }

2020-12-13 05:35:51,035	[INFO]	216	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:35:51,038	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,31 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     Search s = new Search();
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>(); }
+                     }
                  }
                  return false;
              }

2020-12-13 05:35:51,041	[INFO]	217	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:35:51,042	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>(); }
+                     }
                  }
                  return false;
              }

2020-12-13 05:35:51,044	[INFO]	218	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:35:51,045	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-13 05:35:51,047	[INFO]	219	SUCCESS	+1.0	
2020-12-13 05:35:51,047	[DEBUG]	
2020-12-13 05:35:51,050	[INFO]	220	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:35:51,051	[DEBUG]	
2020-12-13 05:35:52,016	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:35:52,017	[INFO]	222	SUCCESS	+1.0	
2020-12-13 05:35:52,017	[DEBUG]	
2020-12-13 05:35:52,989	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:35:56,431	[INFO]	224	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:35:57,406	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:35:58,411	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:35:58,414	[INFO]	227	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:35:58,415	[DEBUG]	
2020-12-13 05:35:59,397	[INFO]	228	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:35:59,398	[INFO]	229	SUCCESS	+1.0	
2020-12-13 05:35:59,399	[DEBUG]	
2020-12-13 05:36:02,888	[INFO]	230	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:36:06,365	[INFO]	231	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:36:06,366	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:36:07,146	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:36:08,112	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:36:09,087	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:36:10,087	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:36:10,090	[INFO]	236	SUCCESS	+1.0	
2020-12-13 05:36:10,091	[DEBUG]	
2020-12-13 05:36:10,093	[INFO]	237	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:36:10,094	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:36:10,095	[INFO]	238	SUCCESS	+1.0	
2020-12-13 05:36:10,096	[DEBUG]	
2020-12-13 05:36:13,486	[INFO]	239	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:36:13,487	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 05:36:13,488	[INFO]	==== END ====
2020-12-13 05:36:13,488	[INFO]	Reason: target fitness reached
2020-12-13 05:36:13,490	[INFO]	
2020-12-13 05:36:13,490	[INFO]	========== EPOCH 9 ==========
2020-12-13 05:36:13,491	[INFO]	==== WARMUP ====
2020-12-13 05:36:16,969	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:36:16,969	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:36:20,353	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:36:20,353	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:36:23,702	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:36:23,702	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:36:27,121	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-13 05:36:27,122	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:36:27,122	[INFO]	==== START ====
2020-12-13 05:36:28,097	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:36:29,085	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:36:30,073	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:36:30,907	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:36:31,696	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:36:35,011	[INFO]	6	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:36:38,674	[INFO]	7	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:36:39,625	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:36:42,964	[INFO]	9	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:36:43,935	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:36:44,894	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:36:44,896	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:36:45,884	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:36:46,689	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:36:47,705	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:36:48,514	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:36:48,516	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:36:49,461	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:36:52,885	[INFO]	19	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:36:52,888	[INFO]	20	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:36:52,889	[DEBUG]	
2020-12-13 05:36:52,891	[INFO]	21	SUCCESS	+1.0	
2020-12-13 05:36:52,892	[DEBUG]	
2020-12-13 05:36:52,895	[INFO]	22	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:36:52,895	[DEBUG]	
2020-12-13 05:36:52,897	[INFO]	23	SUCCESS	+1.0	
2020-12-13 05:36:52,897	[DEBUG]	
2020-12-13 05:36:53,687	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:36:54,463	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:36:55,421	[INFO]	26	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:36:58,929	[INFO]	27	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:36:58,930	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:36:59,882	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:36:59,883	[INFO]	29	SUCCESS	+1.0	
2020-12-13 05:36:59,883	[DEBUG]	
2020-12-13 05:37:00,926	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:37:01,725	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:37:05,186	[INFO]	32	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:37:06,159	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:37:09,593	[INFO]	34	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:37:09,594	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:37:10,432	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:37:10,435	[INFO]	36	SUCCESS	+1.0	
2020-12-13 05:37:10,436	[DEBUG]	
2020-12-13 05:37:11,410	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:37:14,874	[INFO]	38	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:37:14,876	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:37:14,878	[INFO]	39	SUCCESS	+1.0	
2020-12-13 05:37:14,879	[DEBUG]	
2020-12-13 05:37:14,880	[INFO]	40	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:37:14,881	[DEBUG]	
2020-12-13 05:37:14,882	[INFO]	41	SUCCESS	+1.0	
2020-12-13 05:37:14,882	[DEBUG]	
2020-12-13 05:37:14,884	[INFO]	42	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:37:18,212	[INFO]	43	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:37:18,213	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:37:18,214	[INFO]	44	SUCCESS	+1.0	
2020-12-13 05:37:18,215	[DEBUG]	
2020-12-13 05:37:18,980	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:37:19,989	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:37:23,374	[INFO]	47	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:37:24,333	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:37:25,308	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:37:26,288	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:37:29,659	[INFO]	51	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:37:29,659	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:37:29,660	[INFO]	52	SUCCESS	+1.0	
2020-12-13 05:37:29,661	[DEBUG]	
2020-12-13 05:37:30,612	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:37:31,587	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:37:32,559	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:37:33,562	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:37:34,534	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:37:37,969	[INFO]	58	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:37:37,972	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:37:38,778	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:37:38,779	[INFO]	60	SUCCESS	+1.0	
2020-12-13 05:37:38,779	[DEBUG]	
2020-12-13 05:37:39,567	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:37:39,571	[INFO]	62	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:37:39,572	[DEBUG]	
2020-12-13 05:37:40,534	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:37:43,936	[INFO]	64	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:37:43,938	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:37:44,712	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:37:44,713	[INFO]	66	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:37:44,714	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:37:44,716	[INFO]	67	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:37:44,717	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:37:45,690	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:37:45,696	[INFO]	69	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:37:45,698	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:37:45,700	[INFO]	70	SUCCESS	+1.0	
2020-12-13 05:37:45,701	[DEBUG]	
2020-12-13 05:37:45,703	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:37:49,116	[INFO]	72	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:37:52,645	[INFO]	73	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:37:52,647	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:37:52,649	[INFO]	74	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:37:52,650	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:37:53,625	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:37:53,626	[INFO]	76	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:37:53,627	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:37:53,627	[INFO]	77	SUCCESS	+1.0	
2020-12-13 05:37:53,628	[DEBUG]	
2020-12-13 05:37:54,604	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:37:55,413	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:37:56,421	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:37:56,425	[INFO]	81	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:37:56,426	[DEBUG]	
2020-12-13 05:37:56,428	[INFO]	82	SUCCESS	+1.0	
2020-12-13 05:37:56,429	[DEBUG]	
2020-12-13 05:37:56,431	[INFO]	83	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:37:56,432	[DEBUG]	
2020-12-13 05:37:57,448	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:37:58,445	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-13 05:37:58,446	[INFO]	86	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:37:58,446	[DEBUG]	
2020-12-13 05:37:59,418	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:37:59,419	[INFO]	88	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:37:59,420	[DEBUG]	
2020-12-13 05:38:00,399	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:38:00,400	[INFO]	90	SUCCESS	+1.0	
2020-12-13 05:38:00,401	[DEBUG]	
2020-12-13 05:38:03,837	[INFO]	91	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:38:03,838	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:38:04,789	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:38:08,182	[INFO]	93	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:38:08,183	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:38:08,184	[INFO]	94	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:38:08,185	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:38:09,157	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:38:10,121	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:38:13,544	[INFO]	97	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:38:16,945	[INFO]	98	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:38:16,946	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,22 ****
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
+                     return true;
+                 }
+ else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:38:16,947	[INFO]	99	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:38:16,948	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:38:17,950	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:38:21,425	[INFO]	101	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:38:21,426	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:38:24,855	[INFO]	102	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:38:24,856	[INFO]	103	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:38:24,856	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:38:24,857	[INFO]	104	SUCCESS	+1.0	
2020-12-13 05:38:24,857	[DEBUG]	
2020-12-13 05:38:25,661	[INFO]	105	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:38:26,480	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:38:27,274	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:38:28,178	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:38:29,175	[INFO]	109	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-13 05:38:32,526	[INFO]	110	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:38:32,527	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:38:32,527	[INFO]	111	SUCCESS	+1.0	
2020-12-13 05:38:32,528	[DEBUG]	
2020-12-13 05:38:33,485	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:38:34,485	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:38:35,456	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:38:38,932	[INFO]	115	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:38:39,696	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:38:40,671	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:38:41,651	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:38:42,643	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:38:43,647	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:38:44,647	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:38:45,625	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:38:49,084	[INFO]	123	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:38:49,087	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:38:52,489	[INFO]	124	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:38:52,490	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,24 ****
--- 17,26 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:38:53,469	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:38:53,471	[INFO]	126	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:38:53,471	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,24 ****
--- 17,26 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:38:53,473	[INFO]	127	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:38:53,473	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,24 ****
--- 17,26 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:38:54,467	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:38:54,469	[INFO]	129	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:38:54,469	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,24 ****
--- 17,26 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:38:54,470	[INFO]	130	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:38:54,471	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:38:55,459	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:38:55,461	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:38:56,447	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:38:57,448	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:38:57,449	[INFO]	135	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:38:57,450	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:38:58,452	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:38:58,453	[INFO]	137	SUCCESS	+1.0	
2020-12-13 05:38:58,454	[DEBUG]	
2020-12-13 05:39:01,960	[INFO]	138	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:39:01,962	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 05:39:02,972	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:39:02,973	[INFO]	140	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:39:02,974	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 05:39:06,373	[INFO]	141	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:39:06,374	[INFO]	142	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:39:06,375	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 05:39:07,143	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:39:07,144	[INFO]	144	SUCCESS	+1.0	
2020-12-13 05:39:07,144	[DEBUG]	
2020-12-13 05:39:07,145	[INFO]	145	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:39:07,944	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:39:08,921	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:39:12,410	[INFO]	148	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:39:12,412	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-13 05:39:12,414	[INFO]	149	SUCCESS	+1.0	
2020-12-13 05:39:12,415	[DEBUG]	
2020-12-13 05:39:13,169	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:39:13,935	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:39:14,891	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:39:18,396	[INFO]	153	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:39:18,398	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:39:18,400	[INFO]	154	SUCCESS	+1.0	
2020-12-13 05:39:18,400	[DEBUG]	
2020-12-13 05:39:19,168	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:39:20,119	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:39:20,936	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:39:24,366	[INFO]	158	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:39:25,319	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:39:26,105	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:39:27,080	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:39:27,909	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:39:28,687	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:39:28,691	[INFO]	164	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:39:28,691	[DEBUG]	
2020-12-13 05:39:29,498	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:39:29,500	[INFO]	166	SUCCESS	+1.0	
2020-12-13 05:39:29,500	[DEBUG]	
2020-12-13 05:39:30,476	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:39:31,456	[INFO]	168	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-13 05:39:34,863	[INFO]	169	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:39:34,864	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:39:34,865	[INFO]	170	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-13 05:39:34,865	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:39:38,277	[INFO]	171	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:39:38,282	[INFO]	172	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:39:38,284	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:39:38,285	[INFO]	173	SUCCESS	+1.0	
2020-12-13 05:39:38,287	[DEBUG]	
2020-12-13 05:39:38,289	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:39:39,231	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:39:42,583	[INFO]	176	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:39:43,568	[INFO]	177	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:39:44,556	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:39:45,529	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:39:46,533	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:39:47,394	[INFO]	181	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:39:48,188	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:39:51,813	[INFO]	183	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:39:51,814	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:39:51,815	[INFO]	184	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:39:51,816	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:39:52,675	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:39:52,677	[INFO]	186	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:39:52,678	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:39:53,492	[INFO]	187	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:39:54,338	[INFO]	188	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:39:55,252	[INFO]	189	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:39:55,253	[INFO]	190	SUCCESS	+1.0	
2020-12-13 05:39:55,253	[DEBUG]	
2020-12-13 05:39:58,632	[INFO]	191	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:39:58,636	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:40:02,117	[INFO]	193	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:40:03,094	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:40:04,059	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:40:05,041	[INFO]	196	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-13 05:40:08,489	[INFO]	197	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:40:08,491	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:40:08,493	[INFO]	198	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:40:08,494	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:40:08,497	[INFO]	199	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:40:08,498	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:40:08,499	[INFO]	200	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:40:08,500	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:40:08,501	[INFO]	201	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:40:08,502	[DEBUG]	
2020-12-13 05:40:08,504	[INFO]	202	SUCCESS	+1.0	
2020-12-13 05:40:08,504	[DEBUG]	
2020-12-13 05:40:11,971	[INFO]	203	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:40:11,975	[INFO]	204	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:40:11,976	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:40:11,978	[INFO]	205	SUCCESS	+1.0	
2020-12-13 05:40:11,979	[DEBUG]	
2020-12-13 05:40:12,965	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:40:16,425	[INFO]	207	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:40:16,426	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:40:19,868	[INFO]	208	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:40:19,870	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,22 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 15,25 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     return true;
+                 } if (nodesvisited.contains(node)) {
                      return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:40:23,281	[INFO]	209	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:40:23,282	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:40:26,668	[INFO]	210	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:40:26,670	[INFO]	211	SUCCESS	+1.0	
2020-12-13 05:40:26,670	[DEBUG]	
2020-12-13 05:40:26,671	[INFO]	212	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:40:26,672	[DEBUG]	
2020-12-13 05:40:26,673	[INFO]	213	SUCCESS	+1.0	
2020-12-13 05:40:26,673	[DEBUG]	
2020-12-13 05:40:30,112	[INFO]	214	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:40:30,114	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:40:31,186	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:40:31,187	[INFO]	216	SUCCESS	+1.0	
2020-12-13 05:40:31,188	[DEBUG]	
2020-12-13 05:40:31,189	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:40:31,995	[INFO]	218	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:40:32,948	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:40:33,902	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:40:33,903	[INFO]	221	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:40:33,903	[DEBUG]	
2020-12-13 05:40:33,904	[INFO]	222	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:40:33,905	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:40:33,906	[INFO]	223	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:40:33,906	[DEBUG]	
2020-12-13 05:40:33,907	[INFO]	224	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:40:33,907	[INFO]	225	SUCCESS	+1.0	
2020-12-13 05:40:33,908	[DEBUG]	
2020-12-13 05:40:37,413	[INFO]	226	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:40:37,414	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:40:37,414	[INFO]	227	SUCCESS	+1.0	
2020-12-13 05:40:37,415	[DEBUG]	
2020-12-13 05:40:40,818	[INFO]	228	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:40:40,819	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-13 05:40:40,820	[INFO]	229	SUCCESS	+1.0	
2020-12-13 05:40:40,821	[DEBUG]	
2020-12-13 05:40:40,821	[INFO]	230	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:40:40,822	[DEBUG]	
2020-12-13 05:40:40,823	[INFO]	231	SUCCESS	+1.0	
2020-12-13 05:40:40,823	[DEBUG]	
2020-12-13 05:40:40,824	[INFO]	232	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:40:40,825	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:40:41,791	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:40:41,793	[INFO]	234	SUCCESS	+1.0	
2020-12-13 05:40:41,794	[DEBUG]	
2020-12-13 05:40:45,182	[INFO]	235	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:40:45,183	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 05:40:45,184	[INFO]	==== END ====
2020-12-13 05:40:45,184	[INFO]	Reason: target fitness reached
2020-12-13 05:40:45,185	[INFO]	
2020-12-13 05:40:45,185	[INFO]	========== EPOCH 10 ==========
2020-12-13 05:40:45,185	[INFO]	==== WARMUP ====
2020-12-13 05:40:48,618	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:40:48,618	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:40:52,119	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:40:52,119	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:40:55,472	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:40:55,472	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:40:58,917	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-13 05:40:58,917	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:40:58,917	[INFO]	==== START ====
2020-12-13 05:41:02,420	[INFO]	1	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:41:02,422	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:41:02,424	[INFO]	2	SUCCESS	+1.0	
2020-12-13 05:41:02,424	[DEBUG]	
2020-12-13 05:41:03,196	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:41:04,152	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:41:05,101	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:41:05,927	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:41:06,878	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:41:07,861	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:41:07,864	[INFO]	9	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:41:07,865	[DEBUG]	
2020-12-13 05:41:07,867	[INFO]	10	SUCCESS	+1.0	
2020-12-13 05:41:07,867	[DEBUG]	
2020-12-13 05:41:08,839	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:41:12,288	[INFO]	12	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:41:13,215	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:41:14,178	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:41:14,978	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:41:15,966	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:41:16,743	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:41:20,155	[INFO]	18	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:41:21,091	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:41:24,563	[INFO]	20	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:41:24,565	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:41:24,567	[INFO]	21	SUCCESS	+1.0	
2020-12-13 05:41:24,568	[DEBUG]	
2020-12-13 05:41:25,528	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:41:25,532	[INFO]	23	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:41:25,532	[DEBUG]	
2020-12-13 05:41:25,534	[INFO]	24	SUCCESS	+1.0	
2020-12-13 05:41:25,534	[DEBUG]	
2020-12-13 05:41:25,536	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:41:28,931	[INFO]	26	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:41:28,934	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:41:29,884	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:41:29,885	[INFO]	28	SUCCESS	+1.0	
2020-12-13 05:41:29,885	[DEBUG]	
2020-12-13 05:41:30,868	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:41:31,805	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:41:32,739	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:41:36,103	[INFO]	32	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:41:36,105	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:41:37,083	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:41:37,084	[INFO]	34	SUCCESS	+1.0	
2020-12-13 05:41:37,084	[DEBUG]	
2020-12-13 05:41:37,891	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:41:41,304	[INFO]	36	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:41:41,305	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:41:42,183	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:41:42,184	[INFO]	38	SUCCESS	+1.0	
2020-12-13 05:41:42,184	[DEBUG]	
2020-12-13 05:41:43,168	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:41:44,130	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:41:47,677	[INFO]	41	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:41:47,679	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:41:48,620	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:41:48,623	[INFO]	43	SUCCESS	+1.0	
2020-12-13 05:41:48,624	[DEBUG]	
2020-12-13 05:41:49,593	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:41:50,583	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:41:51,436	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:41:54,851	[INFO]	47	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:41:54,853	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:41:54,855	[INFO]	48	SUCCESS	+1.0	
2020-12-13 05:41:54,856	[DEBUG]	
2020-12-13 05:41:55,864	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:41:56,625	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:41:57,597	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:41:58,599	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:41:59,581	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:42:00,577	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:42:01,428	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:42:04,877	[INFO]	56	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:42:04,879	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 05:42:04,881	[INFO]	57	SUCCESS	+1.0	
2020-12-13 05:42:04,882	[DEBUG]	
2020-12-13 05:42:08,316	[INFO]	58	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:42:08,317	[INFO]	59	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:42:08,318	[DEBUG]	
2020-12-13 05:42:08,318	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:42:08,319	[INFO]	61	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:42:08,320	[DEBUG]	
2020-12-13 05:42:09,281	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:42:09,282	[INFO]	63	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:42:09,283	[DEBUG]	
2020-12-13 05:42:09,283	[INFO]	64	SUCCESS	+1.0	
2020-12-13 05:42:09,283	[DEBUG]	
2020-12-13 05:42:10,228	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:42:10,230	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:42:11,216	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:42:14,687	[INFO]	68	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:42:14,691	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:42:15,628	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:42:15,630	[INFO]	70	SUCCESS	+1.0	
2020-12-13 05:42:15,631	[DEBUG]	
2020-12-13 05:42:16,603	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:42:20,056	[INFO]	72	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:42:20,914	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:42:24,354	[INFO]	74	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:42:24,357	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:42:24,359	[INFO]	75	SUCCESS	+1.0	
2020-12-13 05:42:24,359	[DEBUG]	
2020-12-13 05:42:25,304	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:42:28,691	[INFO]	77	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:42:28,693	[INFO]	78	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:42:32,113	[INFO]	79	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:42:32,114	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:42:33,036	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:42:33,037	[INFO]	81	SUCCESS	+1.0	
2020-12-13 05:42:33,037	[DEBUG]	
2020-12-13 05:42:33,844	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:42:34,792	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:42:35,588	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:42:36,376	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:42:39,940	[INFO]	86	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:42:39,944	[INFO]	87	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:42:39,945	[DEBUG]	
2020-12-13 05:42:39,946	[INFO]	88	SUCCESS	+1.0	
2020-12-13 05:42:39,947	[DEBUG]	
2020-12-13 05:42:39,948	[INFO]	89	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:42:39,949	[DEBUG]	
2020-12-13 05:42:40,952	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:42:40,953	[INFO]	91	SUCCESS	+1.0	
2020-12-13 05:42:40,954	[DEBUG]	
2020-12-13 05:42:41,927	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:42:41,928	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:42:45,377	[INFO]	94	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:42:45,378	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:42:46,341	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:42:46,342	[INFO]	96	SUCCESS	+1.0	
2020-12-13 05:42:46,342	[DEBUG]	
2020-12-13 05:42:47,475	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:42:48,493	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:42:49,466	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:42:50,449	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:42:51,448	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:42:54,887	[INFO]	102	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:42:54,889	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:42:58,238	[INFO]	103	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:43:01,643	[INFO]	104	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:43:01,645	[INFO]	105	SUCCESS	+1.0	
2020-12-13 05:43:01,645	[DEBUG]	
2020-12-13 05:43:02,620	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:43:03,444	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:43:06,873	[INFO]	108	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:43:06,874	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:43:10,277	[INFO]	109	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:43:10,280	[INFO]	110	SUCCESS	+1.0	
2020-12-13 05:43:10,281	[DEBUG]	
2020-12-13 05:43:11,219	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:43:12,019	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:43:12,976	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:43:12,977	[INFO]	114	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:43:16,426	[INFO]	115	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:43:16,427	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-13 05:43:16,428	[INFO]	116	SUCCESS	+1.0	
2020-12-13 05:43:16,428	[DEBUG]	
2020-12-13 05:43:17,209	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:43:20,624	[INFO]	118	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:43:20,625	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:43:21,574	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:43:22,572	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:43:23,408	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:43:24,199	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:43:24,200	[INFO]	124	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:43:24,201	[DEBUG]	
2020-12-13 05:43:24,202	[INFO]	125	SUCCESS	+1.0	
2020-12-13 05:43:24,202	[DEBUG]	
2020-12-13 05:43:25,144	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:43:26,124	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:43:26,126	[INFO]	128	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:43:26,126	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:43:26,127	[INFO]	129	SUCCESS	+1.0	
2020-12-13 05:43:26,128	[DEBUG]	
2020-12-13 05:43:29,662	[INFO]	130	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:43:29,663	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-13 05:43:29,664	[INFO]	131	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:43:29,665	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-13 05:43:33,113	[INFO]	132	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:43:33,116	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,33 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  }
                  return false;
              }

2020-12-13 05:43:36,492	[INFO]	133	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:43:36,494	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-13 05:43:37,345	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:43:37,346	[INFO]	135	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:43:37,346	[DEBUG]	
2020-12-13 05:43:38,261	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:43:38,262	[INFO]	137	SUCCESS	+1.0	
2020-12-13 05:43:38,262	[DEBUG]	
2020-12-13 05:43:41,731	[INFO]	138	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:43:41,732	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:43:41,733	[INFO]	139	SUCCESS	+1.0	
2020-12-13 05:43:41,734	[DEBUG]	
2020-12-13 05:43:41,734	[INFO]	140	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:43:41,735	[DEBUG]	
2020-12-13 05:43:42,659	[INFO]	141	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:43:42,660	[INFO]	142	SUCCESS	+1.0	
2020-12-13 05:43:42,661	[DEBUG]	
2020-12-13 05:43:43,663	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:43:47,268	[INFO]	144	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:43:48,072	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:43:48,888	[INFO]	146	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:43:49,829	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:43:49,830	[INFO]	148	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:43:49,831	[DEBUG]	
2020-12-13 05:43:50,775	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:43:51,716	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:43:52,751	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:43:56,249	[INFO]	152	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:43:56,253	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:43:56,257	[INFO]	153	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:43:56,258	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:43:56,259	[INFO]	154	SUCCESS	+1.0	
2020-12-13 05:43:56,260	[DEBUG]	
2020-12-13 05:43:57,030	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:43:57,830	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:43:58,774	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:43:59,554	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:44:00,559	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:44:01,597	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:44:02,611	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:44:03,594	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:44:04,415	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:44:05,423	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:44:05,426	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:44:06,216	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:44:07,168	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:44:07,987	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:44:08,919	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:44:09,916	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:44:10,899	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:44:11,894	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:44:12,704	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:44:12,707	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:44:16,189	[INFO]	175	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:44:16,190	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:44:16,190	[INFO]	176	SUCCESS	+1.0	
2020-12-13 05:44:16,191	[DEBUG]	
2020-12-13 05:44:19,532	[INFO]	177	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:44:20,516	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:44:20,518	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:44:23,984	[INFO]	180	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:44:23,987	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:44:24,996	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:44:25,979	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:44:29,449	[INFO]	184	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:44:30,408	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:44:31,231	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:44:34,652	[INFO]	187	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:44:34,654	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:44:34,656	[INFO]	188	SUCCESS	+1.0	
2020-12-13 05:44:34,657	[DEBUG]	
2020-12-13 05:44:35,618	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:44:36,570	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:44:37,531	[INFO]	191	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:44:38,328	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:44:41,724	[INFO]	193	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:44:41,725	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:44:41,726	[INFO]	194	SUCCESS	+1.0	
2020-12-13 05:44:41,727	[DEBUG]	
2020-12-13 05:44:45,144	[INFO]	195	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:44:45,147	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:44:45,149	[INFO]	196	SUCCESS	+1.0	
2020-12-13 05:44:45,150	[DEBUG]	
2020-12-13 05:44:48,712	[INFO]	197	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:44:49,623	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:44:50,571	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:44:51,585	[INFO]	200	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:44:54,998	[INFO]	201	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:44:55,843	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:44:56,801	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:44:57,770	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:45:01,264	[INFO]	205	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:45:01,265	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:45:01,266	[INFO]	206	SUCCESS	+1.0	
2020-12-13 05:45:01,267	[DEBUG]	
2020-12-13 05:45:02,251	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:45:03,196	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:45:04,180	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:45:07,621	[INFO]	210	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:45:07,622	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 05:45:07,622	[INFO]	==== END ====
2020-12-13 05:45:07,622	[INFO]	Reason: target fitness reached
2020-12-13 05:45:07,623	[INFO]	
2020-12-13 05:45:07,623	[INFO]	========== EPOCH 11 ==========
2020-12-13 05:45:07,624	[INFO]	==== WARMUP ====
2020-12-13 05:45:10,956	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:45:10,956	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:45:14,451	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:45:14,452	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:45:17,826	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:45:17,827	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:45:21,194	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-13 05:45:21,195	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:45:21,195	[INFO]	==== START ====
2020-12-13 05:45:22,148	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:45:25,749	[INFO]	2	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:45:29,189	[INFO]	3	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:45:29,190	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:45:29,192	[INFO]	4	SUCCESS	+1.0	
2020-12-13 05:45:29,193	[DEBUG]	
2020-12-13 05:45:30,003	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:45:33,428	[INFO]	6	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:45:33,430	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 05:45:34,450	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:45:35,562	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:45:35,564	[INFO]	9	SUCCESS	+1.0	
2020-12-13 05:45:35,564	[DEBUG]	
2020-12-13 05:45:36,587	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:45:37,750	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:45:39,081	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:45:40,385	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:45:41,645	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:45:41,647	[INFO]	15	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:45:41,647	[DEBUG]	
2020-12-13 05:45:41,648	[INFO]	16	SUCCESS	+1.0	
2020-12-13 05:45:41,648	[DEBUG]	
2020-12-13 05:45:42,890	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:45:44,028	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:45:45,178	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:45:46,551	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:45:46,554	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:45:46,556	[INFO]	22	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:45:46,557	[DEBUG]	
2020-12-13 05:45:46,558	[INFO]	23	SUCCESS	+1.0	
2020-12-13 05:45:46,558	[DEBUG]	
2020-12-13 05:45:47,432	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:45:48,435	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:45:49,433	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:45:50,210	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:45:53,687	[INFO]	28	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:45:53,688	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:45:54,653	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:45:54,657	[INFO]	30	SUCCESS	+1.0	
2020-12-13 05:45:54,659	[DEBUG]	
2020-12-13 05:45:55,663	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:45:55,669	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:45:59,065	[INFO]	33	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:46:02,523	[INFO]	34	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-13 05:46:05,943	[INFO]	35	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:46:05,945	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:46:06,958	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:46:06,960	[INFO]	37	SUCCESS	+1.0	
2020-12-13 05:46:06,961	[DEBUG]	
2020-12-13 05:46:06,962	[INFO]	38	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:46:06,963	[DEBUG]	
2020-12-13 05:46:06,964	[INFO]	39	SUCCESS	+1.0	
2020-12-13 05:46:06,965	[DEBUG]	
2020-12-13 05:46:07,767	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:46:11,172	[INFO]	41	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:46:11,173	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:46:11,174	[INFO]	42	SUCCESS	+1.0	
2020-12-13 05:46:11,174	[DEBUG]	
2020-12-13 05:46:14,713	[INFO]	43	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:46:18,065	[INFO]	44	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:46:19,012	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:46:19,822	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:46:20,800	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:46:24,210	[INFO]	48	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:46:24,212	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:46:24,213	[INFO]	49	SUCCESS	+1.0	
2020-12-13 05:46:24,213	[DEBUG]	
2020-12-13 05:46:25,141	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:46:25,143	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:46:26,146	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:46:27,156	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:46:28,125	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:46:29,127	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:46:32,624	[INFO]	56	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:46:33,560	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:46:34,533	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:46:37,973	[INFO]	59	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:46:37,974	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-13 05:46:37,975	[INFO]	60	SUCCESS	+1.0	
2020-12-13 05:46:37,975	[DEBUG]	
2020-12-13 05:46:41,346	[INFO]	61	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:46:41,347	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:46:41,348	[INFO]	62	SUCCESS	+1.0	
2020-12-13 05:46:41,348	[DEBUG]	
2020-12-13 05:46:42,305	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:46:45,747	[INFO]	64	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:46:45,749	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 05:46:45,750	[INFO]	==== END ====
2020-12-13 05:46:45,750	[INFO]	Reason: target fitness reached
2020-12-13 05:46:45,751	[INFO]	
2020-12-13 05:46:45,751	[INFO]	========== EPOCH 12 ==========
2020-12-13 05:46:45,751	[INFO]	==== WARMUP ====
2020-12-13 05:46:49,130	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:46:49,130	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:46:52,573	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:46:52,574	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:46:56,094	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:46:56,094	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:46:59,778	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-13 05:46:59,778	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:46:59,778	[INFO]	==== START ====
2020-12-13 05:47:03,191	[INFO]	1	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:47:06,595	[INFO]	2	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:47:10,052	[INFO]	3	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:47:13,503	[INFO]	4	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:47:16,958	[INFO]	5	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:47:16,959	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:47:16,960	[INFO]	6	SUCCESS	+1.0	
2020-12-13 05:47:16,960	[DEBUG]	
2020-12-13 05:47:17,927	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:47:21,453	[INFO]	8	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:47:22,386	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:47:23,360	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:47:24,384	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:47:25,346	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:47:26,333	[INFO]	13	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-13 05:47:29,938	[INFO]	14	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:47:30,725	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:47:34,080	[INFO]	16	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:47:35,045	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:47:38,475	[INFO]	18	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:47:38,477	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:47:38,479	[INFO]	19	SUCCESS	+1.0	
2020-12-13 05:47:38,479	[DEBUG]	
2020-12-13 05:47:41,854	[INFO]	20	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:47:42,664	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:47:42,665	[INFO]	22	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:47:42,665	[DEBUG]	
2020-12-13 05:47:42,666	[INFO]	23	SUCCESS	+1.0	
2020-12-13 05:47:42,666	[DEBUG]	
2020-12-13 05:47:43,645	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:47:44,462	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:47:47,921	[INFO]	26	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:47:51,225	[INFO]	27	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:47:51,228	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:47:54,709	[INFO]	28	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:47:54,711	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 31,37 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:47:58,124	[INFO]	29	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:47:58,125	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:47:58,960	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:47:59,945	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:47:59,946	[INFO]	32	SUCCESS	+1.0	
2020-12-13 05:47:59,946	[DEBUG]	
2020-12-13 05:48:03,460	[INFO]	33	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:48:03,462	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-13 05:48:03,465	[INFO]	34	SUCCESS	+1.0	
2020-12-13 05:48:03,466	[DEBUG]	
2020-12-13 05:48:06,888	[INFO]	35	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:48:06,890	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:48:06,893	[INFO]	36	SUCCESS	+1.0	
2020-12-13 05:48:06,893	[DEBUG]	
2020-12-13 05:48:07,839	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:48:11,233	[INFO]	38	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:48:11,234	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-13 05:48:12,057	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:48:13,020	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:48:16,435	[INFO]	41	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:48:16,436	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,31 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     Set<Node> nodesvisited = new HashSet<>();
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-13 05:48:19,876	[INFO]	42	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:48:19,877	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:48:20,851	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:48:20,853	[INFO]	44	SUCCESS	+1.0	
2020-12-13 05:48:20,853	[DEBUG]	
2020-12-13 05:48:21,809	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:48:22,609	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:48:23,434	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:48:23,437	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:48:24,522	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:48:25,536	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:48:29,009	[INFO]	51	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:48:32,476	[INFO]	52	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:48:32,479	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:48:32,481	[INFO]	53	SUCCESS	+1.0	
2020-12-13 05:48:32,482	[DEBUG]	
2020-12-13 05:48:33,464	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:48:34,607	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:48:35,607	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:48:36,577	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:48:40,101	[INFO]	58	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:48:40,103	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:48:41,046	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:48:41,047	[INFO]	60	SUCCESS	+1.0	
2020-12-13 05:48:41,047	[DEBUG]	
2020-12-13 05:48:41,892	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:48:42,865	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:48:43,654	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:48:44,456	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:48:44,457	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:48:47,842	[INFO]	66	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:48:48,809	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:48:52,767	[INFO]	68	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:48:52,768	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:48:56,297	[INFO]	69	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:48:56,299	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 05:48:57,214	[INFO]	70	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:49:00,705	[INFO]	71	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:49:00,706	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,28 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
--- 15,32 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 05:49:04,054	[INFO]	72	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:49:04,055	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:49:04,055	[INFO]	73	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:49:04,056	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:49:04,056	[INFO]	74	SUCCESS	+1.0	
2020-12-13 05:49:04,057	[DEBUG]	
2020-12-13 05:49:07,520	[INFO]	75	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:49:08,482	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:49:09,443	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:49:12,910	[INFO]	78	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:49:12,912	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:49:13,899	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:49:13,900	[INFO]	80	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:49:13,901	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:49:13,902	[INFO]	81	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:49:13,902	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:49:14,678	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:49:14,681	[INFO]	83	SUCCESS	+1.0	
2020-12-13 05:49:14,682	[DEBUG]	
2020-12-13 05:49:18,134	[INFO]	84	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:49:18,135	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:49:18,136	[INFO]	85	SUCCESS	+1.0	
2020-12-13 05:49:18,136	[DEBUG]	
2020-12-13 05:49:21,557	[INFO]	86	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:49:21,559	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:49:21,562	[INFO]	87	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:49:21,563	[DEBUG]	
2020-12-13 05:49:21,564	[INFO]	88	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:49:21,565	[DEBUG]	
2020-12-13 05:49:22,539	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:49:23,515	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:49:23,516	[INFO]	91	SUCCESS	+1.0	
2020-12-13 05:49:23,517	[DEBUG]	
2020-12-13 05:49:26,971	[INFO]	92	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:49:26,972	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-13 05:49:30,457	[INFO]	93	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:49:30,460	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,24 ****
--- 18,28 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:49:31,447	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:49:34,930	[INFO]	95	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:49:34,934	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,28 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:49:38,360	[INFO]	96	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:49:38,363	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,28 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ if (nodesvisited.contains(node)) {
+                     return false;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:49:38,366	[INFO]	97	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:49:38,368	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,28 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ if (nodesvisited.contains(node)) {
+                     return false;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:49:39,325	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:49:42,699	[INFO]	99	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:49:42,702	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,23 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ if (nodesvisited.contains(node)) {
+                     return false;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-13 05:49:46,191	[INFO]	100	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:49:46,193	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,22 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 15,25 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
+                     return true;
+                 }
+ else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:49:46,986	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:49:46,988	[INFO]	102	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:49:46,988	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-13 05:49:47,953	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:49:47,955	[INFO]	104	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:49:47,955	[DEBUG]	
2020-12-13 05:49:48,924	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:49:48,925	[INFO]	106	SUCCESS	+1.0	
2020-12-13 05:49:48,925	[DEBUG]	
2020-12-13 05:49:48,927	[INFO]	107	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:49:48,927	[DEBUG]	
2020-12-13 05:49:48,928	[INFO]	108	SUCCESS	+1.0	
2020-12-13 05:49:48,928	[DEBUG]	
2020-12-13 05:49:52,402	[INFO]	109	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:49:52,404	[INFO]	110	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:49:52,404	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:49:55,945	[INFO]	111	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:49:55,946	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,26 ****
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 19,30 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:49:55,947	[INFO]	112	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:49:55,948	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:49:55,948	[INFO]	113	SUCCESS	+1.0	
2020-12-13 05:49:55,949	[DEBUG]	
2020-12-13 05:49:56,916	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:49:56,919	[INFO]	115	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:49:56,919	[DEBUG]	
2020-12-13 05:49:56,921	[INFO]	116	SUCCESS	+1.0	
2020-12-13 05:49:56,921	[DEBUG]	
2020-12-13 05:50:00,387	[INFO]	117	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:50:03,861	[INFO]	118	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:50:03,865	[INFO]	119	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:50:07,329	[INFO]	120	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:50:07,330	[INFO]	121	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:50:07,330	[DEBUG]	
2020-12-13 05:50:07,331	[INFO]	122	SUCCESS	+1.0	
2020-12-13 05:50:07,331	[DEBUG]	
2020-12-13 05:50:08,223	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:50:09,180	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:50:09,982	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:50:10,959	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:50:11,936	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:50:12,735	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:50:13,656	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:50:14,651	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:50:18,064	[INFO]	131	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:50:18,065	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:50:18,066	[INFO]	132	SUCCESS	+1.0	
2020-12-13 05:50:18,066	[DEBUG]	
2020-12-13 05:50:19,020	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:50:19,985	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:50:20,937	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:50:21,927	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:50:22,901	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:50:23,918	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:50:27,382	[INFO]	139	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:50:27,383	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:50:30,867	[INFO]	141	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:50:34,257	[INFO]	142	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:50:34,260	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:50:34,263	[INFO]	143	SUCCESS	+1.0	
2020-12-13 05:50:34,267	[DEBUG]	
2020-12-13 05:50:35,314	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:50:38,805	[INFO]	145	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:50:39,611	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:50:43,058	[INFO]	147	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:50:43,879	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:50:44,864	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:50:45,820	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:50:45,822	[INFO]	151	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:50:45,822	[DEBUG]	
2020-12-13 05:50:45,823	[INFO]	152	SUCCESS	+1.0	
2020-12-13 05:50:45,823	[DEBUG]	
2020-12-13 05:50:49,219	[INFO]	153	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:50:50,185	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:50:51,188	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:50:52,012	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:50:52,980	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:50:53,952	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:50:54,932	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:50:58,435	[INFO]	160	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-13 05:51:01,940	[INFO]	161	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:51:01,942	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:51:01,944	[INFO]	162	SUCCESS	+1.0	
2020-12-13 05:51:01,945	[DEBUG]	
2020-12-13 05:51:02,924	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:51:06,403	[INFO]	164	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:51:09,800	[INFO]	165	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:51:09,801	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:51:09,802	[INFO]	166	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:51:09,803	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:51:09,804	[INFO]	167	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:51:09,804	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:51:13,122	[INFO]	168	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:51:13,123	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,22 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
+                     return true;
+                 }
+ else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:51:13,124	[INFO]	169	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:51:13,124	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-13 05:51:14,060	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:51:14,061	[INFO]	171	SUCCESS	+1.0	
2020-12-13 05:51:14,061	[DEBUG]	
2020-12-13 05:51:15,039	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:51:16,020	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:51:17,003	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:51:17,004	[INFO]	175	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:51:17,005	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:51:17,990	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:51:17,991	[INFO]	177	SUCCESS	+1.0	
2020-12-13 05:51:17,992	[DEBUG]	
2020-12-13 05:51:18,968	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:51:19,773	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:51:20,551	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:51:21,337	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:51:24,852	[INFO]	182	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:51:24,856	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:51:25,594	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:51:29,040	[INFO]	185	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:51:29,041	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-13 05:51:29,041	[INFO]	186	SUCCESS	+1.0	
2020-12-13 05:51:29,042	[DEBUG]	
2020-12-13 05:51:30,027	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:51:33,481	[INFO]	188	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:51:34,464	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:51:35,434	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:51:36,405	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:51:37,207	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:51:38,124	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:51:41,576	[INFO]	194	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:51:41,577	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:51:41,577	[INFO]	195	SUCCESS	+1.0	
2020-12-13 05:51:41,578	[DEBUG]	
2020-12-13 05:51:42,535	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:51:43,527	[INFO]	197	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-13 05:51:44,362	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:51:47,785	[INFO]	199	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:51:48,732	[INFO]	200	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:51:49,835	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:51:50,849	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:51:51,646	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:51:52,455	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:51:52,456	[INFO]	205	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:51:52,457	[DEBUG]	
2020-12-13 05:51:53,399	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:51:54,428	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:51:57,893	[INFO]	208	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:51:57,896	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:51:57,898	[INFO]	209	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:51:57,899	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:51:58,822	[INFO]	210	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:51:58,823	[INFO]	211	SUCCESS	+1.0	
2020-12-13 05:51:58,824	[DEBUG]	
2020-12-13 05:51:59,599	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:52:00,601	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:52:04,141	[INFO]	214	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:52:04,142	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:52:04,142	[INFO]	215	SUCCESS	+1.0	
2020-12-13 05:52:04,143	[DEBUG]	
2020-12-13 05:52:07,477	[INFO]	216	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:52:07,478	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:52:08,467	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:52:08,468	[INFO]	218	SUCCESS	+1.0	
2020-12-13 05:52:08,468	[DEBUG]	
2020-12-13 05:52:09,465	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:52:12,894	[INFO]	220	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:52:12,898	[INFO]	221	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:52:12,899	[DEBUG]	
2020-12-13 05:52:16,298	[INFO]	222	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:52:16,299	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:52:16,300	[INFO]	223	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:52:16,300	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:52:16,301	[INFO]	224	SUCCESS	+1.0	
2020-12-13 05:52:16,301	[DEBUG]	
2020-12-13 05:52:17,085	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:52:18,042	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:52:18,882	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:52:22,366	[INFO]	228	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:52:22,367	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-13 05:52:23,105	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:52:23,106	[INFO]	230	SUCCESS	+1.0	
2020-12-13 05:52:23,107	[DEBUG]	
2020-12-13 05:52:24,113	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:52:24,117	[INFO]	232	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:52:24,118	[DEBUG]	
2020-12-13 05:52:27,514	[INFO]	233	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:52:27,516	[INFO]	234	SUCCESS	+1.0	
2020-12-13 05:52:27,516	[DEBUG]	
2020-12-13 05:52:27,518	[INFO]	235	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-13 05:52:27,518	[DEBUG]	
2020-12-13 05:52:30,968	[INFO]	236	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:52:30,969	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:52:31,739	[INFO]	237	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:52:31,740	[INFO]	238	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-13 05:52:31,741	[DEBUG]	
2020-12-13 05:52:32,675	[INFO]	239	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:52:32,678	[INFO]	240	SUCCESS	+1.0	
2020-12-13 05:52:32,678	[DEBUG]	
2020-12-13 05:52:33,675	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:52:34,651	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:52:35,791	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:52:36,771	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:52:37,562	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:52:38,372	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:52:41,712	[INFO]	247	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-13 05:52:41,714	[INFO]	248	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:52:41,715	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:52:41,717	[INFO]	249	SUCCESS	+1.0	
2020-12-13 05:52:41,718	[DEBUG]	
2020-12-13 05:52:41,719	[INFO]	250	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:52:41,720	[DEBUG]	
2020-12-13 05:52:41,721	[INFO]	251	SUCCESS	+1.0	
2020-12-13 05:52:41,722	[DEBUG]	
2020-12-13 05:52:42,737	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:52:42,741	[INFO]	253	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:52:42,742	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:52:42,744	[INFO]	254	SUCCESS	+1.0	
2020-12-13 05:52:42,745	[DEBUG]	
2020-12-13 05:52:46,126	[INFO]	255	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:52:46,128	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:52:46,130	[INFO]	256	SUCCESS	+1.0	
2020-12-13 05:52:46,131	[DEBUG]	
2020-12-13 05:52:47,117	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:52:48,099	[INFO]	258	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:52:51,858	[INFO]	259	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:52:52,790	[INFO]	260	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:52:52,791	[INFO]	261	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:52:52,791	[DEBUG]	
2020-12-13 05:52:52,792	[INFO]	262	SUCCESS	+1.0	
2020-12-13 05:52:52,793	[DEBUG]	
2020-12-13 05:52:53,754	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:52:54,753	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:52:55,738	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:52:56,713	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:53:00,113	[INFO]	267	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:53:00,115	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 05:53:00,117	[INFO]	268	SUCCESS	+1.0	
2020-12-13 05:53:00,118	[DEBUG]	
2020-12-13 05:53:03,596	[INFO]	269	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:53:03,597	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:53:03,598	[INFO]	270	SUCCESS	+1.0	
2020-12-13 05:53:03,599	[DEBUG]	
2020-12-13 05:53:03,601	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:53:03,602	[INFO]	272	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-13 05:53:03,603	[DEBUG]	
2020-12-13 05:53:03,604	[INFO]	273	SUCCESS	+1.0	
2020-12-13 05:53:03,604	[DEBUG]	
2020-12-13 05:53:04,396	[INFO]	274	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:53:05,330	[INFO]	275	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:53:08,797	[INFO]	276	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:53:09,739	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:53:10,663	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:53:11,493	[INFO]	279	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:53:11,497	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:53:11,499	[INFO]	281	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-13 05:53:11,500	[DEBUG]	
2020-12-13 05:53:12,311	[INFO]	282	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:53:13,211	[INFO]	283	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:53:13,213	[INFO]	284	SUCCESS	+1.0	
2020-12-13 05:53:13,213	[DEBUG]	
2020-12-13 05:53:14,182	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:53:14,183	[INFO]	286	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:53:14,184	[DEBUG]	
2020-12-13 05:53:15,011	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:53:18,365	[INFO]	288	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:53:18,366	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:53:19,347	[INFO]	289	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:53:22,730	[INFO]	290	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:53:22,736	[INFO]	291	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:53:22,738	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:53:22,740	[INFO]	292	SUCCESS	+1.0	
2020-12-13 05:53:22,741	[DEBUG]	
2020-12-13 05:53:26,129	[INFO]	293	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:53:27,097	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:53:30,518	[INFO]	295	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:53:31,505	[INFO]	296	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:53:32,491	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:53:32,493	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:53:32,493	[INFO]	299	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:53:32,494	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:53:35,872	[INFO]	300	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:53:36,854	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:53:36,858	[INFO]	302	SUCCESS	+1.0	
2020-12-13 05:53:36,858	[DEBUG]	
2020-12-13 05:53:37,862	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:53:38,819	[INFO]	304	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-13 05:53:42,226	[INFO]	305	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:53:42,228	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:53:42,229	[INFO]	306	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:53:42,229	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:53:43,167	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:53:43,168	[INFO]	308	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:53:43,168	[DEBUG]	
2020-12-13 05:53:43,169	[INFO]	309	SUCCESS	+1.0	
2020-12-13 05:53:43,169	[DEBUG]	
2020-12-13 05:53:44,127	[INFO]	310	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:53:44,128	[INFO]	311	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:53:44,129	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:53:45,083	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:53:45,084	[INFO]	313	SUCCESS	+1.0	
2020-12-13 05:53:45,084	[DEBUG]	
2020-12-13 05:53:48,520	[INFO]	314	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:53:49,488	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:53:50,260	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:53:51,218	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:53:52,031	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:53:53,016	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:53:53,018	[INFO]	320	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:53:53,018	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:53:56,527	[INFO]	321	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:53:57,520	[INFO]	322	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-13 05:53:57,523	[INFO]	323	SUCCESS	+1.0	
2020-12-13 05:53:57,523	[DEBUG]	
2020-12-13 05:53:57,525	[INFO]	324	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:53:57,526	[DEBUG]	
2020-12-13 05:53:57,528	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:53:57,529	[INFO]	326	SUCCESS	+1.0	
2020-12-13 05:53:57,530	[DEBUG]	
2020-12-13 05:53:58,502	[INFO]	327	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:53:58,504	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:53:59,466	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:54:02,965	[INFO]	330	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:54:02,966	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-13 05:54:02,966	[INFO]	331	SUCCESS	+1.0	
2020-12-13 05:54:02,967	[DEBUG]	
2020-12-13 05:54:03,938	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:54:07,419	[INFO]	333	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:54:08,389	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:54:09,171	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:54:12,564	[INFO]	336	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:54:13,401	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:54:14,351	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:54:15,311	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:54:15,313	[INFO]	340	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:54:15,314	[DEBUG]	
2020-12-13 05:54:16,276	[INFO]	341	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:54:16,282	[INFO]	342	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:54:17,103	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:54:17,918	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:54:21,338	[INFO]	345	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:54:21,340	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:54:21,342	[INFO]	346	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:54:21,343	[DEBUG]	
2020-12-13 05:54:24,809	[INFO]	347	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:54:24,810	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:54:24,811	[INFO]	348	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:54:24,812	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:54:24,812	[INFO]	349	SUCCESS	+1.0	
2020-12-13 05:54:24,813	[DEBUG]	
2020-12-13 05:54:28,185	[INFO]	350	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:54:28,186	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:54:28,188	[INFO]	351	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:54:28,189	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:54:28,191	[INFO]	352	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:54:28,191	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:54:31,663	[INFO]	353	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:54:31,664	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,26 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 14,30 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:54:35,108	[INFO]	354	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:54:36,094	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:54:36,098	[INFO]	356	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:54:36,099	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:54:37,060	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:54:37,061	[INFO]	358	SUCCESS	+1.0	
2020-12-13 05:54:37,061	[DEBUG]	
2020-12-13 05:54:40,533	[INFO]	359	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:54:40,534	[INFO]	360	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:54:40,534	[DEBUG]	
2020-12-13 05:54:40,535	[INFO]	361	SUCCESS	+1.0	
2020-12-13 05:54:40,535	[DEBUG]	
2020-12-13 05:54:41,333	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:54:44,764	[INFO]	363	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:54:45,712	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:54:49,162	[INFO]	365	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:54:49,163	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:54:49,164	[INFO]	366	SUCCESS	+1.0	
2020-12-13 05:54:49,164	[DEBUG]	
2020-12-13 05:54:49,165	[INFO]	367	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:54:49,165	[DEBUG]	
2020-12-13 05:54:49,166	[INFO]	368	SUCCESS	+1.0	
2020-12-13 05:54:49,166	[DEBUG]	
2020-12-13 05:54:50,126	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:54:50,127	[INFO]	370	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:54:50,128	[DEBUG]	
2020-12-13 05:54:50,129	[INFO]	371	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:54:50,129	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:54:50,130	[INFO]	372	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:54:50,130	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:54:53,620	[INFO]	373	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:54:53,621	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,32 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:54:53,623	[INFO]	374	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:54:53,624	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,32 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:54:53,626	[INFO]	375	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:54:53,626	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:54:54,591	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:54:54,592	[INFO]	377	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:54:54,592	[DEBUG]	
2020-12-13 05:54:54,593	[INFO]	378	SUCCESS	+1.0	
2020-12-13 05:54:54,593	[DEBUG]	
2020-12-13 05:54:55,410	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:54:56,185	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:54:59,594	[INFO]	381	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:54:59,596	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:54:59,598	[INFO]	382	SUCCESS	+1.0	
2020-12-13 05:54:59,598	[DEBUG]	
2020-12-13 05:55:00,607	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:55:01,610	[INFO]	384	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-13 05:55:01,612	[INFO]	385	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:55:02,601	[INFO]	386	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:55:06,012	[INFO]	387	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:55:06,014	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-13 05:55:06,016	[INFO]	388	SUCCESS	+1.0	
2020-12-13 05:55:06,016	[DEBUG]	
2020-12-13 05:55:06,818	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:55:06,820	[INFO]	390	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:55:06,820	[DEBUG]	
2020-12-13 05:55:07,770	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:55:11,170	[INFO]	392	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:55:11,171	[INFO]	393	SUCCESS	+1.0	
2020-12-13 05:55:11,172	[DEBUG]	
2020-12-13 05:55:14,612	[INFO]	394	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:55:14,613	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:55:15,409	[INFO]	395	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:55:15,412	[INFO]	396	SUCCESS	+1.0	
2020-12-13 05:55:15,413	[DEBUG]	
2020-12-13 05:55:16,450	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:55:17,406	[INFO]	398	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-13 05:55:18,214	[INFO]	399	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:55:19,142	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:55:19,144	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:55:20,111	[INFO]	402	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:55:23,596	[INFO]	403	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:55:23,597	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-13 05:55:23,597	[INFO]	404	SUCCESS	+1.0	
2020-12-13 05:55:23,598	[DEBUG]	
2020-12-13 05:55:24,428	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:55:25,392	[INFO]	406	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:55:28,745	[INFO]	407	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:55:28,748	[INFO]	408	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-13 05:55:28,749	[DEBUG]	
2020-12-13 05:55:32,223	[INFO]	409	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:55:32,224	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:55:32,225	[INFO]	410	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:55:32,225	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:55:32,226	[INFO]	411	SUCCESS	+1.0	
2020-12-13 05:55:32,226	[DEBUG]	
2020-12-13 05:55:32,227	[INFO]	412	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:55:33,155	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:55:33,982	[INFO]	414	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:55:38,675	[INFO]	415	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:55:38,677	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:55:38,678	[INFO]	416	SUCCESS	+1.0	
2020-12-13 05:55:38,678	[DEBUG]	
2020-12-13 05:55:42,562	[INFO]	417	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:55:42,563	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:55:42,565	[INFO]	418	SUCCESS	+1.0	
2020-12-13 05:55:42,565	[DEBUG]	
2020-12-13 05:55:46,246	[INFO]	419	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:55:47,199	[INFO]	420	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:55:47,201	[INFO]	421	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:55:47,202	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-13 05:55:50,725	[INFO]	422	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:55:50,726	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,31 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
+ return true; }
+                     }
                  }
                  return false;
              }

2020-12-13 05:55:50,728	[INFO]	423	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:55:50,729	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-13 05:55:50,730	[INFO]	424	SUCCESS	+1.0	
2020-12-13 05:55:50,731	[DEBUG]	
2020-12-13 05:55:54,080	[INFO]	425	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:55:54,082	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:55:54,085	[INFO]	426	SUCCESS	+1.0	
2020-12-13 05:55:54,086	[DEBUG]	
2020-12-13 05:55:57,582	[INFO]	427	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:55:57,584	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:55:57,586	[INFO]	428	SUCCESS	+1.0	
2020-12-13 05:55:57,587	[DEBUG]	
2020-12-13 05:56:01,063	[INFO]	429	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:56:01,064	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:56:02,024	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:56:02,025	[INFO]	431	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:56:02,026	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:56:02,027	[INFO]	432	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:56:02,027	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:56:02,028	[INFO]	433	SUCCESS	+1.0	
2020-12-13 05:56:02,028	[DEBUG]	
2020-12-13 05:56:02,996	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:56:06,360	[INFO]	435	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:56:07,145	[INFO]	436	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:56:08,121	[INFO]	437	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:56:09,234	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:56:10,176	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:56:13,646	[INFO]	440	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:56:14,614	[INFO]	441	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:56:15,417	[INFO]	442	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:56:16,203	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:56:17,157	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:56:18,125	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:56:18,126	[INFO]	446	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:56:18,127	[DEBUG]	
2020-12-13 05:56:19,115	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:56:19,116	[INFO]	448	SUCCESS	+1.0	
2020-12-13 05:56:19,117	[DEBUG]	
2020-12-13 05:56:22,657	[INFO]	449	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:56:22,658	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:56:23,632	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:56:24,605	[INFO]	451	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:56:24,608	[INFO]	452	SUCCESS	+1.0	
2020-12-13 05:56:24,608	[DEBUG]	
2020-12-13 05:56:25,423	[INFO]	453	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:56:25,424	[INFO]	454	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:56:25,424	[DEBUG]	
2020-12-13 05:56:25,425	[INFO]	455	SUCCESS	+1.0	
2020-12-13 05:56:25,425	[DEBUG]	
2020-12-13 05:56:26,412	[INFO]	456	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:56:26,415	[INFO]	457	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:56:26,416	[DEBUG]	
2020-12-13 05:56:26,417	[INFO]	458	SUCCESS	+1.0	
2020-12-13 05:56:26,418	[DEBUG]	
2020-12-13 05:56:26,420	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:56:29,856	[INFO]	460	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:56:29,858	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 05:56:30,816	[INFO]	461	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:56:30,817	[INFO]	462	SUCCESS	+1.0	
2020-12-13 05:56:30,818	[DEBUG]	
2020-12-13 05:56:30,819	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:56:34,248	[INFO]	464	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:56:34,251	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:56:37,861	[INFO]	465	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:56:37,864	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:56:37,867	[INFO]	466	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:56:37,868	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:56:41,210	[INFO]	467	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:56:41,212	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,27 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
--- 15,25 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     return true;
                  }
                  return false;
              }

2020-12-13 05:56:42,151	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:56:42,154	[INFO]	469	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:56:43,153	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:56:46,536	[INFO]	471	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:56:47,536	[INFO]	472	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:56:48,502	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:56:48,503	[INFO]	474	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:56:48,504	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:56:49,490	[INFO]	475	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:56:49,491	[INFO]	476	SUCCESS	+1.0	
2020-12-13 05:56:49,492	[DEBUG]	
2020-12-13 05:56:50,489	[INFO]	477	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:56:53,967	[INFO]	478	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:56:53,970	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:56:57,451	[INFO]	479	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:56:57,452	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,22 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 14,28 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:56:57,453	[INFO]	480	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:56:57,454	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:56:57,455	[INFO]	481	SUCCESS	+1.0	
2020-12-13 05:56:57,455	[DEBUG]	
2020-12-13 05:57:00,928	[INFO]	482	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:57:01,760	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:57:01,761	[INFO]	484	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:57:01,762	[DEBUG]	
2020-12-13 05:57:01,762	[INFO]	485	SUCCESS	+1.0	
2020-12-13 05:57:01,762	[DEBUG]	
2020-12-13 05:57:02,706	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:57:06,074	[INFO]	487	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:57:06,076	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 05:57:06,078	[INFO]	488	SUCCESS	+1.0	
2020-12-13 05:57:06,079	[DEBUG]	
2020-12-13 05:57:07,086	[INFO]	489	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-13 05:57:07,911	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:57:08,871	[INFO]	491	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:57:09,688	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:57:10,669	[INFO]	493	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:57:11,608	[INFO]	494	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:57:11,610	[INFO]	495	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:57:11,610	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:57:15,164	[INFO]	497	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:57:15,164	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:57:16,054	[INFO]	498	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:57:16,055	[INFO]	499	SUCCESS	+1.0	
2020-12-13 05:57:16,055	[DEBUG]	
2020-12-13 05:57:19,531	[INFO]	500	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:57:19,532	[INFO]	==== END ====
2020-12-13 05:57:19,533	[INFO]	Reason: step budget
2020-12-13 05:57:19,535	[INFO]	
2020-12-13 05:57:19,535	[INFO]	========== EPOCH 13 ==========
2020-12-13 05:57:19,536	[INFO]	==== WARMUP ====
2020-12-13 05:57:22,924	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:57:22,925	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:57:26,412	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:57:26,413	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:57:29,885	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 05:57:29,886	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:57:33,397	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-13 05:57:33,398	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 05:57:33,398	[INFO]	==== START ====
2020-12-13 05:57:34,343	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:57:37,739	[INFO]	2	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:57:41,084	[INFO]	3	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:57:41,085	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 05:57:42,050	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:57:42,051	[INFO]	5	SUCCESS	+1.0	
2020-12-13 05:57:42,052	[DEBUG]	
2020-12-13 05:57:43,010	[INFO]	6	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:57:43,979	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:57:44,949	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:57:45,777	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:57:46,597	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:57:50,210	[INFO]	11	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:57:50,211	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-13 05:57:50,212	[INFO]	12	SUCCESS	+1.0	
2020-12-13 05:57:50,212	[DEBUG]	
2020-12-13 05:57:51,155	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:57:51,157	[INFO]	14	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:57:51,157	[DEBUG]	
2020-12-13 05:57:52,120	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:57:55,641	[INFO]	16	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:57:55,642	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:57:55,643	[INFO]	17	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:57:55,644	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:57:55,645	[INFO]	18	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:57:55,645	[DEBUG]	
2020-12-13 05:57:59,004	[INFO]	19	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 05:57:59,816	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:58:03,234	[INFO]	21	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:58:03,236	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-13 05:58:03,237	[INFO]	22	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:58:03,238	[DEBUG]	
2020-12-13 05:58:06,657	[INFO]	23	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:58:10,096	[INFO]	24	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:58:10,099	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:58:10,903	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:58:10,904	[INFO]	26	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:58:10,905	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 05:58:10,906	[INFO]	27	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:58:10,906	[DEBUG]	
2020-12-13 05:58:11,861	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:58:15,296	[INFO]	29	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:58:15,298	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:58:15,299	[INFO]	30	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:58:15,299	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:58:15,300	[INFO]	31	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:58:15,300	[DEBUG]	
2020-12-13 05:58:15,301	[INFO]	32	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:58:15,301	[DEBUG]	
2020-12-13 05:58:18,701	[INFO]	33	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:58:22,101	[INFO]	34	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:58:22,103	[INFO]	35	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:58:22,103	[INFO]	36	SUCCESS	+1.0	
2020-12-13 05:58:22,104	[DEBUG]	
2020-12-13 05:58:23,083	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:58:24,079	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:58:24,082	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:58:25,076	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:58:25,882	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:58:26,833	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:58:30,344	[INFO]	43	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:58:30,345	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:58:31,313	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:58:34,741	[INFO]	45	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:58:34,742	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,21 ****
--- 14,26 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:58:34,743	[INFO]	46	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:58:34,743	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:58:35,743	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:58:35,748	[INFO]	48	SUCCESS	+1.0	
2020-12-13 05:58:35,749	[DEBUG]	
2020-12-13 05:58:35,753	[INFO]	49	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:58:36,694	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:58:36,695	[INFO]	51	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:58:36,695	[DEBUG]	
2020-12-13 05:58:36,696	[INFO]	52	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:58:36,696	[DEBUG]	
2020-12-13 05:58:36,697	[INFO]	53	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:58:36,697	[DEBUG]	
2020-12-13 05:58:36,698	[INFO]	54	SUCCESS	+1.0	
2020-12-13 05:58:36,698	[DEBUG]	
2020-12-13 05:58:37,489	[INFO]	55	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:58:38,476	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:58:39,300	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:58:39,302	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:58:40,265	[INFO]	59	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:58:41,420	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:58:44,894	[INFO]	61	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-13 05:58:44,898	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:58:44,900	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:58:45,871	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 05:58:46,681	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:58:50,165	[INFO]	66	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:58:50,166	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 05:58:50,974	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:58:54,411	[INFO]	68	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:58:54,414	[INFO]	69	SUCCESS	+1.0	
2020-12-13 05:58:54,414	[DEBUG]	
2020-12-13 05:58:55,416	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 05:58:58,821	[INFO]	71	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:58:59,755	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:58:59,758	[INFO]	73	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:58:59,758	[DEBUG]	
2020-12-13 05:59:00,792	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 05:59:00,793	[INFO]	75	SUCCESS	+1.0	
2020-12-13 05:59:00,793	[DEBUG]	
2020-12-13 05:59:01,574	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 05:59:05,049	[INFO]	77	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:59:06,014	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:59:07,017	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:59:08,016	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:59:08,997	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 05:59:09,950	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:59:13,430	[INFO]	83	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:59:14,408	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:59:17,888	[INFO]	85	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 05:59:18,831	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:59:22,217	[INFO]	87	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 05:59:22,218	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-13 05:59:23,173	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 05:59:23,174	[INFO]	89	SUCCESS	+1.0	
2020-12-13 05:59:23,174	[DEBUG]	
2020-12-13 05:59:23,996	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 05:59:24,982	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 05:59:28,384	[INFO]	92	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:59:28,387	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:59:28,392	[INFO]	93	SUCCESS	+1.0	
2020-12-13 05:59:28,392	[DEBUG]	
2020-12-13 05:59:29,397	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 05:59:32,852	[INFO]	95	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:59:32,854	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:59:32,856	[INFO]	96	SUCCESS	+1.0	
2020-12-13 05:59:32,857	[DEBUG]	
2020-12-13 05:59:33,801	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 05:59:34,755	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 05:59:38,234	[INFO]	99	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:59:41,701	[INFO]	100	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 05:59:41,702	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 05:59:41,703	[INFO]	101	SUCCESS	+1.0	
2020-12-13 05:59:41,703	[DEBUG]	
2020-12-13 05:59:45,075	[INFO]	102	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:59:46,087	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 05:59:46,091	[INFO]	104	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:59:46,092	[DEBUG]	
2020-12-13 05:59:47,069	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 05:59:47,070	[INFO]	106	SUCCESS	+1.0	
2020-12-13 05:59:47,070	[DEBUG]	
2020-12-13 05:59:48,067	[INFO]	107	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-13 05:59:51,551	[INFO]	108	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 05:59:51,553	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 05:59:51,555	[INFO]	109	SUCCESS	+1.0	
2020-12-13 05:59:51,556	[DEBUG]	
2020-12-13 05:59:54,967	[INFO]	110	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 05:59:54,970	[INFO]	111	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 05:59:54,971	[DEBUG]	
2020-12-13 05:59:54,973	[INFO]	112	SUCCESS	+1.0	
2020-12-13 05:59:54,974	[DEBUG]	
2020-12-13 05:59:55,944	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 05:59:56,767	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 05:59:57,721	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:00:01,247	[INFO]	116	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:00:02,194	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:00:02,994	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:00:06,364	[INFO]	119	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:00:07,330	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:00:10,721	[INFO]	121	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:00:10,722	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:00:11,528	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:00:14,933	[INFO]	123	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:00:15,882	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:00:15,883	[INFO]	125	SUCCESS	+1.0	
2020-12-13 06:00:15,883	[DEBUG]	
2020-12-13 06:00:16,863	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:00:20,254	[INFO]	127	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:00:20,255	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 06:00:20,256	[INFO]	128	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:00:20,257	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 06:00:20,259	[INFO]	129	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:00:20,260	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 06:00:20,262	[INFO]	130	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:00:20,263	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 06:00:23,726	[INFO]	131	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:00:23,727	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 06:00:24,714	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:00:24,716	[INFO]	133	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:00:24,716	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 06:00:24,718	[INFO]	134	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:00:24,718	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 06:00:24,719	[INFO]	135	SUCCESS	+1.0	
2020-12-13 06:00:24,719	[DEBUG]	
2020-12-13 06:00:24,720	[INFO]	136	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:00:25,517	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:00:29,017	[INFO]	138	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:00:29,018	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:00:29,019	[INFO]	139	SUCCESS	+1.0	
2020-12-13 06:00:29,019	[DEBUG]	
2020-12-13 06:00:29,850	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:00:33,292	[INFO]	141	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:00:33,292	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 06:00:33,293	[INFO]	142	SUCCESS	+1.0	
2020-12-13 06:00:33,294	[DEBUG]	
2020-12-13 06:00:33,296	[INFO]	143	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:00:33,296	[DEBUG]	
2020-12-13 06:00:33,297	[INFO]	144	SUCCESS	+1.0	
2020-12-13 06:00:33,298	[DEBUG]	
2020-12-13 06:00:34,074	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:00:34,906	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:00:34,909	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:00:35,923	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:00:35,926	[INFO]	149	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:00:35,928	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:00:36,933	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:00:36,935	[INFO]	151	SUCCESS	+1.0	
2020-12-13 06:00:36,936	[DEBUG]	
2020-12-13 06:00:37,749	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:00:38,715	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:00:42,085	[INFO]	154	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:00:42,086	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 06:00:42,922	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:00:46,295	[INFO]	156	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:00:46,297	[INFO]	157	SUCCESS	+1.0	
2020-12-13 06:00:46,298	[DEBUG]	
2020-12-13 06:00:47,242	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:00:48,206	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:00:49,190	[INFO]	160	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-13 06:00:49,991	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:00:50,983	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:00:51,783	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:00:51,784	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:00:55,143	[INFO]	165	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:00:55,145	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 06:00:55,147	[INFO]	166	SUCCESS	+1.0	
2020-12-13 06:00:55,147	[DEBUG]	
2020-12-13 06:00:55,968	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:00:56,929	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:00:57,720	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:00:58,532	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:00:59,513	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:01:00,366	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:01:01,177	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:01:01,988	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:01:01,990	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:01:02,953	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:01:06,366	[INFO]	177	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:01:06,367	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-13 06:01:06,368	[INFO]	178	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:01:06,369	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-13 06:01:09,817	[INFO]	179	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:01:09,818	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 06:01:10,726	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:01:11,534	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:01:11,536	[INFO]	182	SUCCESS	+1.0	
2020-12-13 06:01:11,537	[DEBUG]	
2020-12-13 06:01:12,492	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:01:13,465	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:01:16,897	[INFO]	185	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:01:17,890	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:01:18,851	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:01:18,853	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:01:19,828	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:01:23,255	[INFO]	190	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:01:26,684	[INFO]	191	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:01:26,686	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:01:26,688	[INFO]	192	SUCCESS	+1.0	
2020-12-13 06:01:26,688	[DEBUG]	
2020-12-13 06:01:26,690	[INFO]	193	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:01:27,647	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:01:28,612	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:01:29,652	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:01:30,499	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:01:31,306	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:01:32,246	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:01:33,177	[INFO]	200	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:01:36,586	[INFO]	201	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:01:36,587	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:01:36,587	[INFO]	==== END ====
2020-12-13 06:01:36,587	[INFO]	Reason: target fitness reached
2020-12-13 06:01:36,588	[INFO]	
2020-12-13 06:01:36,588	[INFO]	========== EPOCH 14 ==========
2020-12-13 06:01:36,588	[INFO]	==== WARMUP ====
2020-12-13 06:01:40,039	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 06:01:40,039	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:01:43,449	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 06:01:43,449	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:01:46,879	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 06:01:46,879	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:01:50,360	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-13 06:01:50,361	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:01:50,361	[INFO]	==== START ====
2020-12-13 06:01:51,320	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:01:54,735	[INFO]	2	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:01:54,736	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:01:55,863	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:01:59,402	[INFO]	4	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:01:59,404	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,28 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:02:00,391	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:02:03,850	[INFO]	6	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:02:03,851	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,28 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
--- 15,31 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 06:02:07,338	[INFO]	7	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:02:07,339	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
--- 20,30 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 06:02:07,340	[INFO]	8	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:02:07,341	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
--- 20,30 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 06:02:08,296	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:02:11,824	[INFO]	10	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:02:11,827	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,28 ****
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
--- 18,33 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 06:02:12,585	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:02:13,610	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:02:16,994	[INFO]	13	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:02:16,996	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,28 ****
--- 18,32 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 06:02:20,525	[INFO]	14	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:02:20,527	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 06:02:20,529	[INFO]	15	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:02:20,530	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 06:02:20,531	[INFO]	16	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:02:20,532	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 06:02:21,854	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:02:22,851	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:02:23,862	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:02:24,681	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:02:25,640	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:02:26,611	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:02:30,008	[INFO]	23	SUCCESS	*0.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:02:30,010	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 06:02:30,010	[INFO]	==== END ====
2020-12-13 06:02:30,010	[INFO]	Reason: target fitness reached
2020-12-13 06:02:30,011	[INFO]	
2020-12-13 06:02:30,011	[INFO]	========== EPOCH 15 ==========
2020-12-13 06:02:30,012	[INFO]	==== WARMUP ====
2020-12-13 06:02:33,650	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 06:02:33,651	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:02:37,013	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 06:02:37,013	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:02:40,392	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 06:02:40,393	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:02:43,839	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-13 06:02:43,839	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:02:43,839	[INFO]	==== START ====
2020-12-13 06:02:44,633	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:02:48,005	[INFO]	2	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:02:48,844	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:02:49,742	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:02:50,724	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:02:51,680	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:02:52,657	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:02:53,645	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:02:57,115	[INFO]	9	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:02:57,116	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 06:02:58,065	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:02:58,066	[INFO]	11	SUCCESS	+1.0	
2020-12-13 06:02:58,067	[DEBUG]	
2020-12-13 06:02:59,066	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:03:00,085	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:03:04,516	[INFO]	14	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:03:05,560	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:03:06,599	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:03:07,866	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:03:12,211	[INFO]	18	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:03:12,213	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:03:12,214	[INFO]	19	SUCCESS	+1.0	
2020-12-13 06:03:12,214	[DEBUG]	
2020-12-13 06:03:13,471	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:03:14,718	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:03:14,721	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:03:15,959	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:03:17,185	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:03:18,436	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:03:21,890	[INFO]	26	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:03:21,891	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 06:03:22,897	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:03:23,701	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:03:23,702	[INFO]	29	SUCCESS	+1.0	
2020-12-13 06:03:23,702	[DEBUG]	
2020-12-13 06:03:24,518	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:03:25,483	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:03:28,904	[INFO]	32	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:03:28,905	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-13 06:03:28,906	[INFO]	33	SUCCESS	+1.0	
2020-12-13 06:03:28,906	[DEBUG]	
2020-12-13 06:03:32,407	[INFO]	34	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:03:33,280	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:03:34,210	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:03:35,031	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:03:35,989	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:03:36,952	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:03:37,916	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:03:37,918	[INFO]	41	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:03:37,918	[DEBUG]	
2020-12-13 06:03:41,332	[INFO]	42	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:03:41,334	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:03:44,727	[INFO]	43	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:03:44,728	[INFO]	44	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:03:44,728	[DEBUG]	
2020-12-13 06:03:44,729	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:03:44,730	[INFO]	46	SUCCESS	+1.0	
2020-12-13 06:03:44,730	[DEBUG]	
2020-12-13 06:03:45,690	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:03:49,161	[INFO]	48	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:03:49,972	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:03:49,974	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:03:50,795	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:03:54,155	[INFO]	52	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:03:57,750	[INFO]	53	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:04:01,257	[INFO]	54	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:04:01,259	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-13 06:04:01,260	[INFO]	55	SUCCESS	+1.0	
2020-12-13 06:04:01,260	[DEBUG]	
2020-12-13 06:04:02,070	[INFO]	56	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:04:03,048	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:04:04,036	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:04:04,917	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:04:04,920	[INFO]	60	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:04:04,921	[DEBUG]	
2020-12-13 06:04:05,911	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:04:09,388	[INFO]	62	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:04:09,391	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 06:04:10,365	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:04:11,144	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:04:12,115	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:04:13,122	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:04:13,961	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:04:13,964	[INFO]	68	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:04:13,965	[DEBUG]	
2020-12-13 06:04:17,407	[INFO]	69	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:04:17,409	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 06:04:18,412	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:04:18,413	[INFO]	71	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:04:18,413	[DEBUG]	
2020-12-13 06:04:19,386	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:04:22,868	[INFO]	73	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:04:22,871	[INFO]	74	SUCCESS	+1.0	
2020-12-13 06:04:22,872	[DEBUG]	
2020-12-13 06:04:23,746	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:04:23,748	[INFO]	76	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:04:23,748	[DEBUG]	
2020-12-13 06:04:24,687	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:04:24,688	[INFO]	78	SUCCESS	+1.0	
2020-12-13 06:04:24,689	[DEBUG]	
2020-12-13 06:04:25,486	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:04:28,970	[INFO]	80	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:04:28,973	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 06:04:28,976	[INFO]	81	SUCCESS	+1.0	
2020-12-13 06:04:28,977	[DEBUG]	
2020-12-13 06:04:28,980	[INFO]	82	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:04:28,981	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:04:32,465	[INFO]	83	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:04:33,489	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:04:37,012	[INFO]	85	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:04:37,013	[INFO]	86	SUCCESS	+1.0	
2020-12-13 06:04:37,013	[DEBUG]	
2020-12-13 06:04:37,015	[INFO]	87	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:04:40,399	[INFO]	88	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:04:40,400	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:04:41,144	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:04:44,691	[INFO]	90	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:04:44,693	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,30 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    Set<Node> nodesvisited = new HashSet<>();
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:04:48,099	[INFO]	91	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:04:48,101	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:04:49,098	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-13 06:04:49,099	[INFO]	93	SUCCESS	+1.0	
2020-12-13 06:04:49,099	[DEBUG]	
2020-12-13 06:04:49,100	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:04:50,072	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:04:51,020	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:04:52,022	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:04:52,827	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:04:52,828	[INFO]	99	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:04:52,829	[DEBUG]	
2020-12-13 06:04:56,317	[INFO]	100	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:04:57,218	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:04:57,219	[INFO]	102	SUCCESS	+1.0	
2020-12-13 06:04:57,219	[DEBUG]	
2020-12-13 06:04:58,159	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:04:59,107	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:05:00,086	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:05:00,934	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:05:01,934	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:05:02,759	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:05:03,668	[INFO]	109	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:05:07,096	[INFO]	110	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:05:07,097	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 06:05:07,911	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:05:07,914	[INFO]	112	SUCCESS	+1.0	
2020-12-13 06:05:07,915	[DEBUG]	
2020-12-13 06:05:08,881	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:05:12,209	[INFO]	114	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:05:12,210	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:05:13,159	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:05:16,696	[INFO]	117	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:05:20,046	[INFO]	118	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:05:23,413	[INFO]	119	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:05:23,414	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-13 06:05:23,414	[INFO]	120	SUCCESS	+1.0	
2020-12-13 06:05:23,415	[DEBUG]	
2020-12-13 06:05:24,411	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:05:25,409	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:05:25,411	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:05:28,913	[INFO]	124	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:05:29,722	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:05:30,655	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:05:31,480	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:05:34,922	[INFO]	128	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:05:36,277	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:05:37,286	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:05:38,473	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:05:43,297	[INFO]	132	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:05:43,299	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 06:05:43,300	[INFO]	133	SUCCESS	+1.0	
2020-12-13 06:05:43,301	[DEBUG]	
2020-12-13 06:05:47,173	[INFO]	134	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:05:48,136	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:05:51,628	[INFO]	136	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:05:51,631	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-13 06:05:51,633	[INFO]	137	SUCCESS	+1.0	
2020-12-13 06:05:51,634	[DEBUG]	
2020-12-13 06:05:55,060	[INFO]	138	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:05:55,062	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 06:05:55,063	[INFO]	139	SUCCESS	+1.0	
2020-12-13 06:05:55,064	[DEBUG]	
2020-12-13 06:05:55,898	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:05:55,900	[INFO]	141	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:05:55,900	[DEBUG]	
2020-12-13 06:05:56,841	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:05:56,842	[INFO]	143	SUCCESS	+1.0	
2020-12-13 06:05:56,843	[DEBUG]	
2020-12-13 06:05:57,807	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:05:58,766	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:05:58,770	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:06:02,308	[INFO]	147	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:06:02,309	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:06:02,309	[INFO]	148	SUCCESS	+1.0	
2020-12-13 06:06:02,310	[DEBUG]	
2020-12-13 06:06:05,739	[INFO]	149	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:06:05,742	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:06:06,513	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:06:09,944	[INFO]	151	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:06:10,950	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:06:10,951	[INFO]	153	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:06:10,952	[DEBUG]	
2020-12-13 06:06:10,953	[INFO]	154	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:06:10,953	[DEBUG]	
2020-12-13 06:06:11,927	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:06:12,883	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:06:13,842	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:06:13,843	[INFO]	158	SUCCESS	+1.0	
2020-12-13 06:06:13,843	[DEBUG]	
2020-12-13 06:06:14,823	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:06:14,824	[INFO]	160	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:06:14,824	[DEBUG]	
2020-12-13 06:06:14,825	[INFO]	161	SUCCESS	+1.0	
2020-12-13 06:06:14,825	[DEBUG]	
2020-12-13 06:06:18,162	[INFO]	162	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:06:21,626	[INFO]	163	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:06:22,610	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:06:22,613	[INFO]	165	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:06:22,614	[DEBUG]	
2020-12-13 06:06:22,617	[INFO]	166	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-13 06:06:22,618	[DEBUG]	
2020-12-13 06:06:22,621	[INFO]	167	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:06:22,622	[DEBUG]	
2020-12-13 06:06:23,612	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:06:24,600	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:06:28,065	[INFO]	170	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:06:28,066	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 06:06:28,067	[INFO]	171	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:06:28,068	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 06:06:31,477	[INFO]	172	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:06:32,288	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:06:32,290	[INFO]	174	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:06:32,291	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 06:06:32,292	[INFO]	175	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:06:32,292	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 06:06:33,080	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:06:33,082	[INFO]	177	SUCCESS	+1.0	
2020-12-13 06:06:33,083	[DEBUG]	
2020-12-13 06:06:36,503	[INFO]	178	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:06:36,505	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:06:36,506	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:06:37,506	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:06:38,328	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:06:38,331	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:06:41,780	[INFO]	184	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:06:41,781	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:06:41,782	[INFO]	185	SUCCESS	+1.0	
2020-12-13 06:06:41,782	[DEBUG]	
2020-12-13 06:06:42,727	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:06:43,533	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:06:46,981	[INFO]	188	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:06:46,984	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-13 06:06:50,426	[INFO]	189	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:06:50,427	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-13 06:06:50,428	[INFO]	190	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:06:50,429	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-13 06:06:50,429	[INFO]	191	SUCCESS	+1.0	
2020-12-13 06:06:50,430	[DEBUG]	
2020-12-13 06:06:53,894	[INFO]	192	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:06:54,848	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:06:55,653	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:06:56,612	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:06:57,604	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:06:57,606	[INFO]	197	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:06:57,606	[DEBUG]	
2020-12-13 06:07:01,110	[INFO]	198	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:07:01,113	[INFO]	199	SUCCESS	+1.0	
2020-12-13 06:07:01,113	[DEBUG]	
2020-12-13 06:07:02,055	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:07:03,208	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:07:04,206	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:07:07,668	[INFO]	203	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:07:11,129	[INFO]	204	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:07:11,130	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:07:11,131	[INFO]	205	SUCCESS	+1.0	
2020-12-13 06:07:11,131	[DEBUG]	
2020-12-13 06:07:14,612	[INFO]	206	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:07:14,615	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:07:15,591	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:07:15,592	[INFO]	208	SUCCESS	+1.0	
2020-12-13 06:07:15,592	[DEBUG]	
2020-12-13 06:07:19,031	[INFO]	209	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:07:19,033	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 06:07:22,470	[INFO]	210	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:07:22,473	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 31,37 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 06:07:25,849	[INFO]	211	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:07:25,850	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 06:07:25,850	[INFO]	212	SUCCESS	+1.0	
2020-12-13 06:07:25,851	[DEBUG]	
2020-12-13 06:07:26,830	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:07:27,818	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:07:28,731	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:07:32,184	[INFO]	216	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:07:33,138	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:07:34,298	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:07:37,851	[INFO]	219	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:07:37,854	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:07:37,856	[INFO]	220	SUCCESS	+1.0	
2020-12-13 06:07:37,857	[DEBUG]	
2020-12-13 06:07:41,167	[INFO]	221	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:07:41,168	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 06:07:42,123	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:07:42,125	[INFO]	223	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:07:42,125	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 06:07:42,126	[INFO]	224	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:07:42,127	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 06:07:45,508	[INFO]	225	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:07:46,522	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:07:46,525	[INFO]	227	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:07:46,526	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 06:07:49,909	[INFO]	228	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:07:53,358	[INFO]	229	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:07:53,359	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-13 06:07:56,715	[INFO]	230	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:07:56,716	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:07:56,717	[INFO]	231	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:07:56,718	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-13 06:07:57,648	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:07:57,650	[INFO]	233	SUCCESS	+1.0	
2020-12-13 06:07:57,650	[DEBUG]	
2020-12-13 06:08:01,134	[INFO]	234	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:08:01,135	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:08:01,137	[INFO]	235	SUCCESS	+1.0	
2020-12-13 06:08:01,138	[DEBUG]	
2020-12-13 06:08:02,106	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:08:03,112	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:08:04,104	[INFO]	238	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:08:05,079	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:08:05,880	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:08:06,683	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:08:07,626	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:08:08,593	[INFO]	243	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:08:09,578	[INFO]	244	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:08:10,407	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:08:11,360	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:08:12,338	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:08:13,298	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:08:13,299	[INFO]	249	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:08:13,300	[DEBUG]	
2020-12-13 06:08:14,095	[INFO]	250	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:08:14,899	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:08:14,900	[INFO]	252	SUCCESS	+1.0	
2020-12-13 06:08:14,901	[DEBUG]	
2020-12-13 06:08:15,895	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:08:19,380	[INFO]	254	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:08:19,383	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:08:20,408	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-13 06:08:20,413	[INFO]	256	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:08:20,415	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:08:23,972	[INFO]	257	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:08:23,973	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,25 ****
--- 17,27 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:08:24,927	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:08:25,893	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:08:26,888	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:08:26,889	[INFO]	261	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:08:26,890	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:08:27,865	[INFO]	262	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:08:31,367	[INFO]	263	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:08:31,370	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:08:32,324	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:08:32,326	[INFO]	265	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:08:32,327	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:08:33,277	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:08:34,245	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:08:37,689	[INFO]	268	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:08:37,690	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:08:38,524	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:08:38,526	[INFO]	270	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:08:38,527	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:08:38,529	[INFO]	271	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:08:38,529	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:08:39,505	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:08:39,506	[INFO]	273	SUCCESS	+1.0	
2020-12-13 06:08:39,507	[DEBUG]	
2020-12-13 06:08:40,462	[INFO]	274	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:08:44,032	[INFO]	275	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:08:44,035	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:08:44,036	[INFO]	276	SUCCESS	+1.0	
2020-12-13 06:08:44,037	[DEBUG]	
2020-12-13 06:08:47,458	[INFO]	277	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:08:47,460	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 06:08:47,461	[INFO]	278	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:08:47,462	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 06:08:50,924	[INFO]	279	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:08:50,927	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-13 06:08:50,929	[INFO]	280	SUCCESS	+1.0	
2020-12-13 06:08:50,930	[DEBUG]	
2020-12-13 06:08:51,918	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:08:52,897	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:08:56,370	[INFO]	283	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:08:57,156	[INFO]	284	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:08:57,971	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:08:57,975	[INFO]	286	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:08:57,976	[DEBUG]	
2020-12-13 06:08:58,958	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:08:58,960	[INFO]	288	SUCCESS	+1.0	
2020-12-13 06:08:58,961	[DEBUG]	
2020-12-13 06:09:02,456	[INFO]	289	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:09:03,237	[INFO]	290	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:09:06,680	[INFO]	291	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:09:06,681	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 06:09:06,682	[INFO]	292	SUCCESS	+1.0	
2020-12-13 06:09:06,682	[DEBUG]	
2020-12-13 06:09:07,601	[INFO]	293	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:09:08,585	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:09:12,035	[INFO]	295	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:09:12,037	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 06:09:12,039	[INFO]	296	SUCCESS	+1.0	
2020-12-13 06:09:12,040	[DEBUG]	
2020-12-13 06:09:12,874	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:09:13,833	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:09:17,262	[INFO]	299	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:09:17,267	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:09:17,269	[INFO]	300	SUCCESS	+1.0	
2020-12-13 06:09:17,270	[DEBUG]	
2020-12-13 06:09:18,184	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:09:21,639	[INFO]	302	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:09:21,640	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 06:09:21,641	[INFO]	303	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:09:21,642	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 06:09:22,627	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:09:23,611	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:09:23,613	[INFO]	306	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:09:23,614	[DEBUG]	
2020-12-13 06:09:23,615	[INFO]	307	SUCCESS	+1.0	
2020-12-13 06:09:23,615	[DEBUG]	
2020-12-13 06:09:24,438	[INFO]	308	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:09:25,404	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:09:26,189	[INFO]	310	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:09:27,167	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:09:27,168	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:09:28,089	[INFO]	313	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:09:28,090	[INFO]	314	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:09:28,090	[DEBUG]	
2020-12-13 06:09:31,555	[INFO]	315	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:09:31,558	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:09:31,560	[INFO]	316	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:09:31,561	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:09:32,386	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:09:32,387	[INFO]	318	SUCCESS	+1.0	
2020-12-13 06:09:32,387	[DEBUG]	
2020-12-13 06:09:33,369	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:09:34,185	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:09:35,028	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:09:36,014	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:09:36,809	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:09:40,166	[INFO]	324	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:09:43,582	[INFO]	325	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:09:47,542	[INFO]	326	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:09:48,533	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:09:49,500	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:09:50,493	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:09:50,495	[INFO]	330	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:09:50,495	[DEBUG]	
2020-12-13 06:09:50,495	[INFO]	331	SUCCESS	+1.0	
2020-12-13 06:09:50,496	[DEBUG]	
2020-12-13 06:09:51,317	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:09:54,691	[INFO]	333	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:09:54,692	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 06:09:54,693	[INFO]	334	SUCCESS	+1.0	
2020-12-13 06:09:54,693	[DEBUG]	
2020-12-13 06:09:55,655	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:09:56,637	[INFO]	336	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:10:00,058	[INFO]	337	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:10:03,425	[INFO]	338	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:10:04,402	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:10:04,404	[INFO]	340	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:10:04,404	[DEBUG]	
2020-12-13 06:10:05,386	[INFO]	341	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:10:05,388	[INFO]	342	SUCCESS	+1.0	
2020-12-13 06:10:05,389	[DEBUG]	
2020-12-13 06:10:05,391	[INFO]	343	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:10:05,391	[DEBUG]	
2020-12-13 06:10:05,393	[INFO]	344	SUCCESS	+1.0	
2020-12-13 06:10:05,394	[DEBUG]	
2020-12-13 06:10:05,396	[INFO]	345	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:10:05,397	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 06:10:05,398	[INFO]	346	SUCCESS	+1.0	
2020-12-13 06:10:05,399	[DEBUG]	
2020-12-13 06:10:06,566	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:10:07,543	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:10:08,555	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:10:09,513	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:10:09,514	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:10:09,515	[INFO]	352	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:10:12,999	[INFO]	353	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:10:13,002	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 06:10:13,004	[INFO]	354	SUCCESS	+1.0	
2020-12-13 06:10:13,004	[DEBUG]	
2020-12-13 06:10:16,374	[INFO]	355	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:10:16,375	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:10:16,375	[INFO]	==== END ====
2020-12-13 06:10:16,376	[INFO]	Reason: target fitness reached
2020-12-13 06:10:16,376	[INFO]	
2020-12-13 06:10:16,376	[INFO]	========== EPOCH 16 ==========
2020-12-13 06:10:16,377	[INFO]	==== WARMUP ====
2020-12-13 06:10:19,820	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 06:10:19,820	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:10:23,223	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 06:10:23,224	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:10:26,597	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 06:10:26,597	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:10:30,053	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-13 06:10:30,053	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:10:30,053	[INFO]	==== START ====
2020-12-13 06:10:33,492	[INFO]	1	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:10:33,495	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-13 06:10:33,497	[INFO]	2	SUCCESS	+1.0	
2020-12-13 06:10:33,498	[DEBUG]	
2020-12-13 06:10:34,468	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:10:35,376	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:10:38,834	[INFO]	5	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:10:38,835	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 06:10:38,836	[INFO]	6	SUCCESS	+1.0	
2020-12-13 06:10:38,836	[DEBUG]	
2020-12-13 06:10:39,792	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:10:40,606	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:10:44,053	[INFO]	9	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:10:44,055	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 06:10:45,044	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:10:46,009	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:10:49,450	[INFO]	12	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:10:49,453	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;
***************
*** 23,28 ****
--- 24,30 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 06:10:50,266	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:10:53,677	[INFO]	14	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:10:53,679	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 06:10:54,616	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:10:54,617	[INFO]	16	SUCCESS	+1.0	
2020-12-13 06:10:54,617	[DEBUG]	
2020-12-13 06:10:55,582	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:10:56,425	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:10:57,409	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:11:00,893	[INFO]	20	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:11:01,860	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:11:02,853	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:11:03,794	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:11:07,247	[INFO]	24	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:11:08,057	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:11:09,037	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:11:09,038	[INFO]	27	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:11:09,039	[DEBUG]	
2020-12-13 06:11:09,864	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:11:10,832	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:11:10,834	[INFO]	30	SUCCESS	+1.0	
2020-12-13 06:11:10,834	[DEBUG]	
2020-12-13 06:11:11,803	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:11:12,779	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:11:13,580	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:11:14,401	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:11:14,406	[INFO]	35	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:11:14,406	[DEBUG]	
2020-12-13 06:11:14,408	[INFO]	36	SUCCESS	+1.0	
2020-12-13 06:11:14,408	[DEBUG]	
2020-12-13 06:11:15,366	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:11:16,325	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:11:19,778	[INFO]	39	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:11:19,779	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:11:20,707	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:11:24,118	[INFO]	41	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:11:24,119	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:11:27,458	[INFO]	42	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:11:27,459	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:11:28,242	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:11:28,243	[INFO]	44	SUCCESS	+1.0	
2020-12-13 06:11:28,244	[DEBUG]	
2020-12-13 06:11:29,086	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:11:32,457	[INFO]	46	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:11:32,460	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:11:32,461	[INFO]	47	SUCCESS	+1.0	
2020-12-13 06:11:32,462	[DEBUG]	
2020-12-13 06:11:32,464	[INFO]	48	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:11:32,465	[DEBUG]	
2020-12-13 06:11:33,462	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:11:33,464	[INFO]	50	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:11:33,464	[DEBUG]	
2020-12-13 06:11:33,465	[INFO]	51	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:11:33,465	[DEBUG]	
2020-12-13 06:11:34,439	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:11:35,401	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:11:35,402	[INFO]	54	SUCCESS	+1.0	
2020-12-13 06:11:35,402	[DEBUG]	
2020-12-13 06:11:36,414	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:11:37,360	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:11:38,151	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:11:41,594	[INFO]	58	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:11:41,596	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-13 06:11:42,562	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:11:43,384	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:11:43,387	[INFO]	61	SUCCESS	+1.0	
2020-12-13 06:11:43,388	[DEBUG]	
2020-12-13 06:11:44,357	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:11:45,280	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:11:48,727	[INFO]	64	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:11:48,728	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:11:48,729	[INFO]	==== END ====
2020-12-13 06:11:48,729	[INFO]	Reason: target fitness reached
2020-12-13 06:11:48,730	[INFO]	
2020-12-13 06:11:48,730	[INFO]	========== EPOCH 17 ==========
2020-12-13 06:11:48,730	[INFO]	==== WARMUP ====
2020-12-13 06:11:52,117	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 06:11:52,117	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:11:55,556	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 06:11:55,556	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:11:58,932	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 06:11:58,932	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:12:02,398	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-13 06:12:02,398	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:12:02,399	[INFO]	==== START ====
2020-12-13 06:12:03,398	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:12:04,168	[INFO]	2	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:12:05,144	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:12:08,695	[INFO]	4	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:12:09,636	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:12:10,642	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:12:11,590	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:12:12,597	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:12:13,436	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:12:14,403	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:12:17,853	[INFO]	11	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:12:18,838	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:12:19,804	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:12:20,840	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:12:21,814	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:12:21,817	[INFO]	16	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-13 06:12:21,817	[DEBUG]	
2020-12-13 06:12:21,818	[INFO]	17	SUCCESS	+1.0	
2020-12-13 06:12:21,819	[DEBUG]	
2020-12-13 06:12:21,820	[INFO]	18	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:12:25,455	[INFO]	19	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:12:25,458	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 06:12:28,906	[INFO]	20	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:12:28,907	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 06:12:29,874	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:12:33,285	[INFO]	22	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:12:33,287	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 06:12:36,891	[INFO]	23	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:12:36,894	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,34 ****
  	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 23,35 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 06:12:40,389	[INFO]	24	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:12:40,390	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 06:12:40,391	[INFO]	25	SUCCESS	+1.0	
2020-12-13 06:12:40,391	[DEBUG]	
2020-12-13 06:12:43,852	[INFO]	26	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:12:47,274	[INFO]	27	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:12:47,277	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:12:48,220	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:12:49,019	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:12:49,976	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:12:50,965	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:12:50,968	[INFO]	33	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:12:50,969	[DEBUG]	
2020-12-13 06:12:50,971	[INFO]	34	SUCCESS	+1.0	
2020-12-13 06:12:50,971	[DEBUG]	
2020-12-13 06:12:50,973	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:12:51,938	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:12:51,941	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:12:52,751	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:12:56,277	[INFO]	39	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:12:56,280	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 06:12:56,282	[INFO]	40	SUCCESS	+1.0	
2020-12-13 06:12:56,283	[DEBUG]	
2020-12-13 06:12:57,171	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:13:00,629	[INFO]	42	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:13:00,630	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 06:13:00,631	[INFO]	43	SUCCESS	+1.0	
2020-12-13 06:13:00,632	[DEBUG]	
2020-12-13 06:13:00,633	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:13:00,634	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:13:01,625	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:13:05,034	[INFO]	47	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:13:05,035	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 06:13:05,037	[INFO]	48	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:13:05,037	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 06:13:06,029	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:13:07,018	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:13:07,981	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:13:11,415	[INFO]	52	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:13:11,416	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,22 ****
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 06:13:11,417	[INFO]	53	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:13:11,417	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 06:13:12,398	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:13:12,399	[INFO]	55	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:13:12,400	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 06:13:15,887	[INFO]	56	SUCCESS	 2.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:13:15,890	[INFO]	57	SUCCESS	+1.0	
2020-12-13 06:13:15,891	[DEBUG]	
2020-12-13 06:13:16,837	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:13:17,819	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:13:18,789	[INFO]	60	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-13 06:13:18,791	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:13:19,760	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:13:19,763	[INFO]	63	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:13:19,763	[DEBUG]	
2020-12-13 06:13:19,765	[INFO]	64	SUCCESS	+1.0	
2020-12-13 06:13:19,765	[DEBUG]	
2020-12-13 06:13:20,548	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:13:21,493	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:13:22,325	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:13:23,103	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:13:24,068	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:13:25,068	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:13:26,010	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:13:29,504	[INFO]	72	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:13:30,488	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:13:31,431	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:13:32,427	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:13:35,897	[INFO]	76	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:13:35,898	[INFO]	77	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:13:36,868	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:13:37,811	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:13:38,614	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:13:39,586	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:13:40,426	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:13:41,206	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:13:41,991	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:13:41,992	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:13:42,979	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:13:43,775	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:13:44,564	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:13:47,982	[INFO]	89	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:13:47,983	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 06:13:48,946	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:13:48,948	[INFO]	91	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:13:48,949	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 06:13:48,950	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:13:52,343	[INFO]	93	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:13:52,344	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,26 ****
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 17,28 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:13:52,345	[INFO]	94	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:13:52,345	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 06:13:52,346	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:13:52,347	[INFO]	96	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:13:52,347	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 06:13:52,348	[INFO]	97	SUCCESS	+1.0	
2020-12-13 06:13:52,349	[DEBUG]	
2020-12-13 06:13:53,265	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:13:54,183	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:13:55,448	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:13:55,450	[INFO]	101	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:13:55,451	[DEBUG]	
2020-12-13 06:13:56,276	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:13:56,282	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:13:56,286	[INFO]	104	SUCCESS	+1.0	
2020-12-13 06:13:56,287	[DEBUG]	
2020-12-13 06:13:57,079	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:13:58,085	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:14:01,588	[INFO]	107	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:14:01,590	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:14:01,592	[INFO]	108	SUCCESS	+1.0	
2020-12-13 06:14:01,592	[DEBUG]	
2020-12-13 06:14:02,576	[INFO]	109	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:14:03,404	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:14:06,804	[INFO]	111	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:14:06,805	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:14:06,806	[INFO]	112	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:14:06,806	[DEBUG]	
2020-12-13 06:14:10,143	[INFO]	113	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:14:10,144	[INFO]	114	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:14:10,144	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:14:13,572	[INFO]	115	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:14:13,575	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,27 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     return true;
                  }
                  return false;
              }

2020-12-13 06:14:14,577	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:14:14,581	[INFO]	117	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:14:14,582	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,27 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     return true;
                  }
                  return false;
              }

2020-12-13 06:14:15,406	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:14:15,409	[INFO]	119	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:14:15,409	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:14:15,410	[INFO]	120	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:14:15,411	[DEBUG]	
2020-12-13 06:14:18,680	[INFO]	121	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:14:18,681	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:14:18,682	[INFO]	==== END ====
2020-12-13 06:14:18,682	[INFO]	Reason: target fitness reached
2020-12-13 06:14:18,683	[INFO]	
2020-12-13 06:14:18,683	[INFO]	========== EPOCH 18 ==========
2020-12-13 06:14:18,684	[INFO]	==== WARMUP ====
2020-12-13 06:14:22,118	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 06:14:22,118	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:14:25,593	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 06:14:25,593	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:14:28,997	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 06:14:28,998	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:14:32,434	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-13 06:14:32,435	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:14:32,435	[INFO]	==== START ====
2020-12-13 06:14:35,892	[INFO]	1	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:14:35,893	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:14:35,894	[INFO]	2	SUCCESS	+1.0	
2020-12-13 06:14:35,894	[DEBUG]	
2020-12-13 06:14:36,852	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:14:37,801	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:14:38,736	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:14:39,535	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:14:40,519	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:14:41,642	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:14:42,638	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:14:43,587	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:14:47,101	[INFO]	11	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:14:47,887	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:14:48,852	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:14:49,824	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:14:49,828	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:14:53,308	[INFO]	16	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:14:53,309	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:14:53,310	[INFO]	17	SUCCESS	+1.0	
2020-12-13 06:14:53,310	[DEBUG]	
2020-12-13 06:14:54,215	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:14:57,746	[INFO]	19	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:14:58,683	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:15:02,188	[INFO]	21	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:15:02,190	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:15:03,204	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:15:04,001	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:15:04,003	[INFO]	24	SUCCESS	+1.0	
2020-12-13 06:15:04,004	[DEBUG]	
2020-12-13 06:15:07,427	[INFO]	25	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:15:07,429	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 06:15:07,432	[INFO]	26	SUCCESS	+1.0	
2020-12-13 06:15:07,433	[DEBUG]	
2020-12-13 06:15:08,378	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:15:11,853	[INFO]	28	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:15:11,854	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:15:12,625	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:15:12,626	[INFO]	30	SUCCESS	+1.0	
2020-12-13 06:15:12,626	[DEBUG]	
2020-12-13 06:15:16,043	[INFO]	31	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:15:16,044	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:15:16,044	[INFO]	==== END ====
2020-12-13 06:15:16,044	[INFO]	Reason: target fitness reached
2020-12-13 06:15:16,045	[INFO]	
2020-12-13 06:15:16,045	[INFO]	========== EPOCH 19 ==========
2020-12-13 06:15:16,045	[INFO]	==== WARMUP ====
2020-12-13 06:15:19,417	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 06:15:19,417	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:15:22,786	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 06:15:22,787	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:15:26,198	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 06:15:26,198	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:15:29,636	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-13 06:15:29,637	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:15:29,637	[INFO]	==== START ====
2020-12-13 06:15:29,640	[INFO]	1	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:15:29,641	[DEBUG]	
2020-12-13 06:15:30,606	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:15:31,610	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:15:32,572	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:15:32,573	[INFO]	5	SUCCESS	+1.0	
2020-12-13 06:15:32,573	[DEBUG]	
2020-12-13 06:15:33,393	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:15:37,475	[INFO]	7	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:15:38,646	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:15:39,692	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:15:40,564	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:15:41,528	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:15:42,512	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:15:43,508	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:15:47,004	[INFO]	14	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:15:47,006	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-13 06:15:47,008	[INFO]	15	SUCCESS	+1.0	
2020-12-13 06:15:47,008	[DEBUG]	
2020-12-13 06:15:47,794	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:15:51,185	[INFO]	17	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:15:54,619	[INFO]	18	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:15:55,601	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:15:56,572	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:15:57,387	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:16:00,878	[INFO]	22	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:16:00,880	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-13 06:16:01,832	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:16:01,833	[INFO]	24	SUCCESS	+1.0	
2020-12-13 06:16:01,834	[DEBUG]	
2020-12-13 06:16:02,784	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:16:03,594	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:16:04,560	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:16:07,982	[INFO]	28	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:16:07,984	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 06:16:07,986	[INFO]	29	SUCCESS	+1.0	
2020-12-13 06:16:07,987	[DEBUG]	
2020-12-13 06:16:08,967	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:16:12,366	[INFO]	31	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:16:13,335	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:16:14,295	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:16:14,297	[INFO]	34	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:16:14,297	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-13 06:16:17,679	[INFO]	35	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:16:17,680	[INFO]	36	SUCCESS	+1.0	
2020-12-13 06:16:17,681	[DEBUG]	
2020-12-13 06:16:18,642	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:16:19,471	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:16:20,347	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:16:23,697	[INFO]	40	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:16:27,125	[INFO]	41	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:16:27,128	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 06:16:27,130	[INFO]	42	SUCCESS	+1.0	
2020-12-13 06:16:27,130	[DEBUG]	
2020-12-13 06:16:28,113	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:16:29,120	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:16:30,075	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:16:31,054	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:16:31,998	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:16:32,825	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:16:33,791	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:16:34,797	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:16:35,789	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:16:35,793	[INFO]	52	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:16:35,795	[DEBUG]	
2020-12-13 06:16:35,796	[INFO]	53	SUCCESS	+1.0	
2020-12-13 06:16:35,797	[DEBUG]	
2020-12-13 06:16:39,200	[INFO]	54	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:16:40,124	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:16:43,542	[INFO]	56	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:16:43,544	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:16:44,535	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:16:44,536	[INFO]	58	SUCCESS	+1.0	
2020-12-13 06:16:44,536	[DEBUG]	
2020-12-13 06:16:45,509	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:16:46,511	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:16:47,458	[INFO]	61	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:16:48,261	[INFO]	62	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:16:51,691	[INFO]	63	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:16:51,695	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:16:52,697	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:16:56,134	[INFO]	65	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:16:56,136	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 06:16:59,596	[INFO]	66	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:16:59,598	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 06:17:03,132	[INFO]	67	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:17:03,135	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
--- 20,30 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 06:17:06,549	[INFO]	68	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:17:06,550	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:17:06,551	[INFO]	69	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:17:06,552	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:17:07,392	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:17:10,784	[INFO]	71	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:17:10,785	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,29 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:17:14,178	[INFO]	72	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:17:14,184	[INFO]	73	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:17:14,186	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:17:14,189	[INFO]	74	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:17:14,190	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:17:14,192	[INFO]	75	SUCCESS	+1.0	
2020-12-13 06:17:14,193	[DEBUG]	
2020-12-13 06:17:15,126	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:17:16,110	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:17:19,542	[INFO]	78	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:17:19,543	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 06:17:20,567	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:17:21,542	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:17:22,567	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:17:22,570	[INFO]	82	SUCCESS	+1.0	
2020-12-13 06:17:22,571	[DEBUG]	
2020-12-13 06:17:25,977	[INFO]	83	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:17:25,978	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 06:17:29,451	[INFO]	84	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:17:29,454	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 06:17:29,456	[INFO]	85	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:17:29,457	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 06:17:30,439	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:17:31,405	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:17:31,407	[INFO]	88	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:17:31,407	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 06:17:32,170	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:17:33,126	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:17:34,244	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:17:34,246	[INFO]	92	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:17:34,246	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 06:17:37,753	[INFO]	93	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:17:37,755	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return false;
                      }
                  }
                  return false;
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 06:17:41,202	[INFO]	94	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:17:41,203	[INFO]	95	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:17:41,203	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 06:17:41,204	[INFO]	96	SUCCESS	+1.0	
2020-12-13 06:17:41,204	[DEBUG]	
2020-12-13 06:17:41,205	[INFO]	97	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:17:41,206	[DEBUG]	
2020-12-13 06:17:41,207	[INFO]	98	SUCCESS	+1.0	
2020-12-13 06:17:41,207	[DEBUG]	
2020-12-13 06:17:44,587	[INFO]	99	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:17:48,047	[INFO]	100	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:17:48,049	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:17:48,050	[INFO]	101	SUCCESS	+1.0	
2020-12-13 06:17:48,051	[DEBUG]	
2020-12-13 06:17:51,459	[INFO]	102	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:17:52,418	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:17:53,476	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:17:54,845	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:17:55,828	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:17:56,619	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:17:57,570	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:17:58,535	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:17:58,536	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:17:59,549	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:18:00,527	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:18:01,536	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:18:02,535	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:18:05,946	[INFO]	115	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:18:05,948	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 06:18:05,950	[INFO]	116	SUCCESS	+1.0	
2020-12-13 06:18:05,950	[DEBUG]	
2020-12-13 06:18:09,380	[INFO]	117	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:18:09,381	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:18:12,826	[INFO]	118	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:18:16,314	[INFO]	119	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:18:16,315	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,32 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:18:19,740	[INFO]	120	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:18:19,741	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 06:18:19,742	[INFO]	121	SUCCESS	+1.0	
2020-12-13 06:18:19,743	[DEBUG]	
2020-12-13 06:18:20,701	[INFO]	122	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-13 06:18:21,536	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:18:22,515	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:18:23,485	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:18:26,970	[INFO]	126	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:18:26,970	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 06:18:26,971	[INFO]	127	SUCCESS	+1.0	
2020-12-13 06:18:26,972	[DEBUG]	
2020-12-13 06:18:26,973	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:18:26,973	[INFO]	129	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:18:26,974	[DEBUG]	
2020-12-13 06:18:27,971	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:18:28,963	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:18:28,964	[INFO]	132	SUCCESS	+1.0	
2020-12-13 06:18:28,964	[DEBUG]	
2020-12-13 06:18:28,965	[INFO]	133	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:18:28,965	[DEBUG]	
2020-12-13 06:18:28,966	[INFO]	134	SUCCESS	+1.0	
2020-12-13 06:18:28,966	[DEBUG]	
2020-12-13 06:18:28,967	[INFO]	135	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:18:28,967	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:18:28,968	[INFO]	136	SUCCESS	+1.0	
2020-12-13 06:18:28,968	[DEBUG]	
2020-12-13 06:18:29,910	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:18:30,718	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:18:31,516	[INFO]	139	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:18:32,295	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:18:33,080	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:18:36,493	[INFO]	142	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:18:36,494	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 06:18:40,063	[INFO]	143	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:18:40,065	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
--- 20,30 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-13 06:18:41,413	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:18:46,161	[INFO]	145	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:18:46,163	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:18:46,165	[INFO]	146	SUCCESS	+1.0	
2020-12-13 06:18:46,166	[DEBUG]	
2020-12-13 06:18:47,557	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:18:49,047	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:18:50,408	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:18:51,511	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:18:55,851	[INFO]	151	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:19:00,071	[INFO]	152	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:19:00,074	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 06:19:01,181	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:19:01,186	[INFO]	154	SUCCESS	+1.0	
2020-12-13 06:19:01,187	[DEBUG]	
2020-12-13 06:19:01,192	[INFO]	155	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:19:01,194	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 06:19:02,653	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:19:02,654	[INFO]	157	SUCCESS	+1.0	
2020-12-13 06:19:02,654	[DEBUG]	
2020-12-13 06:19:03,786	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:19:05,022	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:19:06,060	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:19:10,681	[INFO]	161	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:19:10,683	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 06:19:10,685	[INFO]	162	SUCCESS	+1.0	
2020-12-13 06:19:10,685	[DEBUG]	
2020-12-13 06:19:15,507	[INFO]	163	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:19:15,509	[INFO]	164	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:19:15,509	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 06:19:15,510	[INFO]	165	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:19:15,511	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 06:19:15,512	[INFO]	166	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:19:15,513	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 06:19:16,531	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:19:16,535	[INFO]	168	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:19:16,536	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 06:19:16,538	[INFO]	169	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:19:16,539	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 06:19:16,541	[INFO]	170	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:19:16,542	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 06:19:20,389	[INFO]	171	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:19:20,392	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-13 06:19:20,394	[INFO]	172	SUCCESS	+1.0	
2020-12-13 06:19:20,395	[DEBUG]	
2020-12-13 06:19:20,399	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:19:23,773	[INFO]	174	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:19:23,776	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-13 06:19:23,780	[INFO]	175	SUCCESS	+1.0	
2020-12-13 06:19:23,782	[DEBUG]	
2020-12-13 06:19:24,750	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:19:29,413	[INFO]	177	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:19:30,737	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:19:32,020	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:19:32,023	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:19:33,124	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:19:34,163	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:19:35,028	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:19:36,031	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:19:39,489	[INFO]	185	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:19:39,491	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-13 06:19:40,430	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:19:40,431	[INFO]	187	SUCCESS	+1.0	
2020-12-13 06:19:40,431	[DEBUG]	
2020-12-13 06:19:41,453	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:19:44,978	[INFO]	189	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:19:44,979	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:19:45,946	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:19:45,947	[INFO]	191	SUCCESS	+1.0	
2020-12-13 06:19:45,947	[DEBUG]	
2020-12-13 06:19:49,388	[INFO]	192	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:19:49,389	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:19:49,389	[INFO]	==== END ====
2020-12-13 06:19:49,389	[INFO]	Reason: target fitness reached
2020-12-13 06:19:49,390	[INFO]	
2020-12-13 06:19:49,390	[INFO]	========== EPOCH 20 ==========
2020-12-13 06:19:49,390	[INFO]	==== WARMUP ====
2020-12-13 06:19:52,757	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 06:19:52,758	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:19:56,126	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 06:19:56,126	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:19:59,585	[INFO]	WARM	SUCCESS	 1.0	
2020-12-13 06:19:59,586	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:20:02,985	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-13 06:20:02,985	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-13 06:20:02,985	[INFO]	==== START ====
2020-12-13 06:20:03,798	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:20:04,583	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:20:08,088	[INFO]	3	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:20:08,861	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:20:12,331	[INFO]	5	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:20:12,334	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:20:12,336	[INFO]	6	SUCCESS	+1.0	
2020-12-13 06:20:12,337	[DEBUG]	
2020-12-13 06:20:15,763	[INFO]	7	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:20:15,767	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:20:16,700	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:20:16,706	[INFO]	9	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:20:16,709	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:20:16,713	[INFO]	10	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:20:16,716	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:20:17,505	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:20:17,506	[INFO]	12	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:20:17,507	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:20:18,474	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:20:19,433	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:20:19,435	[INFO]	15	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:20:19,435	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:20:19,436	[INFO]	16	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:20:19,437	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:20:19,438	[INFO]	17	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:20:19,439	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:20:20,410	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:20:21,381	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:20:22,367	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:20:22,369	[INFO]	21	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:20:22,369	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:20:23,339	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:20:23,341	[INFO]	23	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:20:23,342	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:20:24,332	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:20:24,334	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:20:25,243	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:20:25,245	[INFO]	27	SUCCESS	+1.0	
2020-12-13 06:20:25,245	[DEBUG]	
2020-12-13 06:20:25,246	[INFO]	28	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:20:25,246	[DEBUG]	
2020-12-13 06:20:26,212	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:20:29,992	[INFO]	30	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:20:29,994	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-13 06:20:31,004	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:20:31,006	[INFO]	32	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:20:31,007	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-13 06:20:31,007	[INFO]	33	SUCCESS	+1.0	
2020-12-13 06:20:31,007	[DEBUG]	
2020-12-13 06:20:31,008	[INFO]	34	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:20:31,008	[DEBUG]	
2020-12-13 06:20:31,778	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:20:31,780	[INFO]	36	SUCCESS	+1.0	
2020-12-13 06:20:31,780	[DEBUG]	
2020-12-13 06:20:35,205	[INFO]	37	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:20:35,206	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:20:36,206	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:20:36,207	[INFO]	39	SUCCESS	+1.0	
2020-12-13 06:20:36,207	[DEBUG]	
2020-12-13 06:20:37,158	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:20:38,174	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:20:38,984	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:20:39,956	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:20:40,945	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:20:41,764	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:20:42,721	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:20:43,558	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:20:46,999	[INFO]	48	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:20:47,000	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 06:20:47,002	[INFO]	49	SUCCESS	+1.0	
2020-12-13 06:20:47,002	[DEBUG]	
2020-12-13 06:20:50,472	[INFO]	50	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:20:50,474	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 06:20:51,501	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:20:51,502	[INFO]	52	SUCCESS	+1.0	
2020-12-13 06:20:51,502	[DEBUG]	
2020-12-13 06:20:51,503	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:20:52,486	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:20:53,430	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:20:56,871	[INFO]	56	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:20:56,872	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-13 06:20:56,873	[INFO]	57	SUCCESS	+1.0	
2020-12-13 06:20:56,873	[DEBUG]	
2020-12-13 06:20:57,850	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:20:58,648	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:20:58,649	[INFO]	60	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:20:58,649	[DEBUG]	
2020-12-13 06:20:58,650	[INFO]	61	SUCCESS	+1.0	
2020-12-13 06:20:58,650	[DEBUG]	
2020-12-13 06:20:58,651	[INFO]	62	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:20:58,651	[DEBUG]	
2020-12-13 06:20:58,652	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:20:58,653	[INFO]	64	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:20:58,654	[DEBUG]	
2020-12-13 06:21:02,209	[INFO]	65	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:21:02,211	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:21:03,160	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:21:03,162	[INFO]	67	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:21:03,162	[DEBUG]	
2020-12-13 06:21:06,708	[INFO]	68	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:21:06,710	[INFO]	69	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:21:06,710	[DEBUG]	
2020-12-13 06:21:10,126	[INFO]	70	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:21:10,129	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:21:10,131	[INFO]	71	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:21:10,132	[DEBUG]	
2020-12-13 06:21:10,134	[INFO]	72	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:21:10,135	[DEBUG]	
2020-12-13 06:21:10,136	[INFO]	73	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:21:10,137	[DEBUG]	
2020-12-13 06:21:10,138	[INFO]	74	SUCCESS	+1.0	
2020-12-13 06:21:10,138	[DEBUG]	
2020-12-13 06:21:11,096	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:21:12,085	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:21:12,902	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:21:12,903	[INFO]	78	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:21:13,847	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:21:17,315	[INFO]	80	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-13 06:21:17,316	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:21:17,316	[INFO]	81	SUCCESS	+1.0	
2020-12-13 06:21:17,317	[DEBUG]	
2020-12-13 06:21:20,942	[INFO]	82	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:21:24,358	[INFO]	83	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:21:24,360	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:21:28,464	[INFO]	84	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:21:28,466	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-13 06:21:32,999	[INFO]	85	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:21:33,001	[INFO]	86	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:21:33,002	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:21:33,003	[INFO]	87	SUCCESS	+1.0	
2020-12-13 06:21:33,004	[DEBUG]	
2020-12-13 06:21:34,386	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:21:35,691	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:21:37,014	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:21:37,015	[INFO]	91	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:21:37,016	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:21:38,079	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:21:38,080	[INFO]	93	SUCCESS	+1.0	
2020-12-13 06:21:38,081	[DEBUG]	
2020-12-13 06:21:39,365	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:21:40,210	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:21:41,022	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:21:41,998	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:21:42,000	[INFO]	98	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:21:42,954	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:21:43,793	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:21:47,177	[INFO]	101	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:21:47,178	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:21:50,579	[INFO]	102	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:21:50,582	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:21:51,417	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:21:54,894	[INFO]	104	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:21:54,896	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,29 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     return true;
+                 } if (nodesvisited.contains(node)) {
                      return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:21:55,638	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:21:55,640	[INFO]	106	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:21:55,641	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,29 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     return true;
+                 } if (nodesvisited.contains(node)) {
                      return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:21:56,629	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:22:00,041	[INFO]	108	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:22:00,043	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,28 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
--- 15,35 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     return true;
+                 } if (nodesvisited.contains(node)) {
                      return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-13 06:22:03,488	[INFO]	109	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:22:03,492	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,28 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
--- 16,35 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-13 06:22:04,438	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:22:07,926	[INFO]	111	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:22:07,929	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
--- 20,32 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-13 06:22:08,888	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:22:08,892	[INFO]	113	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:22:08,894	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:22:08,896	[INFO]	114	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:22:08,897	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-13 06:22:08,898	[INFO]	115	SUCCESS	+1.0	
2020-12-13 06:22:08,899	[DEBUG]	
2020-12-13 06:22:08,901	[INFO]	116	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:22:08,902	[DEBUG]	
2020-12-13 06:22:08,904	[INFO]	117	SUCCESS	+1.0	
2020-12-13 06:22:08,905	[DEBUG]	
2020-12-13 06:22:12,322	[INFO]	118	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:22:12,323	[INFO]	119	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:22:12,324	[DEBUG]	
2020-12-13 06:22:12,324	[INFO]	120	SUCCESS	+1.0	
2020-12-13 06:22:12,324	[DEBUG]	
2020-12-13 06:22:15,827	[INFO]	121	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:22:15,828	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-13 06:22:15,829	[INFO]	122	SUCCESS	+1.0	
2020-12-13 06:22:15,829	[DEBUG]	
2020-12-13 06:22:15,830	[INFO]	123	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-13 06:22:15,831	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:22:15,831	[INFO]	124	SUCCESS	+1.0	
2020-12-13 06:22:15,832	[DEBUG]	
2020-12-13 06:22:19,358	[INFO]	125	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:22:22,815	[INFO]	126	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:22:23,755	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:22:24,710	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:22:25,864	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:22:26,705	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:22:27,475	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:22:30,956	[INFO]	132	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:22:30,957	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-13 06:22:30,959	[INFO]	133	SUCCESS	+1.0	
2020-12-13 06:22:30,960	[DEBUG]	
2020-12-13 06:22:30,961	[INFO]	134	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:22:30,962	[DEBUG]	
2020-12-13 06:22:30,963	[INFO]	135	SUCCESS	+1.0	
2020-12-13 06:22:30,964	[DEBUG]	
2020-12-13 06:22:31,913	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-13 06:22:32,693	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:22:33,498	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:22:34,462	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:22:35,271	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-13 06:22:36,213	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:22:39,880	[INFO]	142	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:22:39,882	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-13 06:22:39,884	[INFO]	143	SUCCESS	+1.0	
2020-12-13 06:22:39,884	[DEBUG]	
2020-12-13 06:22:40,662	[INFO]	144	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:22:40,663	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:22:41,596	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:22:41,598	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:22:41,599	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-13 06:22:42,414	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:22:45,833	[INFO]	150	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:22:45,836	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-13 06:22:46,628	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-13 06:22:46,629	[INFO]	152	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:22:46,630	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-13 06:22:47,618	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-13 06:22:48,627	[INFO]	154	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:22:49,607	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-13 06:22:49,609	[INFO]	156	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:22:49,609	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-13 06:22:53,013	[INFO]	157	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:22:53,016	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,27 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
--- 20,31 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  }
                  return false;
              }

2020-12-13 06:22:53,018	[INFO]	158	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:22:53,020	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,27 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
--- 20,31 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  }
                  return false;
              }

2020-12-13 06:22:53,971	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-13 06:22:53,973	[INFO]	160	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:22:53,973	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,27 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
--- 20,31 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  }
                  return false;
              }

2020-12-13 06:22:57,394	[INFO]	161	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-13 06:22:57,397	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-13 06:22:57,399	[INFO]	162	SUCCESS	+1.0	
2020-12-13 06:22:57,399	[DEBUG]	
2020-12-13 06:22:58,353	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-13 06:22:59,346	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-13 06:23:00,328	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-13 06:23:01,325	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-13 06:23:04,750	[INFO]	167	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-13 06:23:08,096	[INFO]	168	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-13 06:23:11,521	[INFO]	169	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-13 06:23:15,014	[INFO]	170	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-13 06:23:15,974	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-13 06:23:16,776	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-13 06:23:20,129	[INFO]	173	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:23:20,130	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:23:20,130	[INFO]	==== END ====
2020-12-13 06:23:20,130	[INFO]	Reason: target fitness reached
2020-12-13 06:23:20,131	[INFO]	
2020-12-13 06:23:20,131	[INFO]	========== REPORT ==========
2020-12-13 06:23:20,131	[INFO]	==== Epoch 1 ====
2020-12-13 06:23:20,131	[INFO]	Termination: target fitness reached
2020-12-13 06:23:20,132	[INFO]	Number of interations: 112
2020-12-13 06:23:20,132	[INFO]	Best fitness: 0.0
2020-12-13 06:23:20,132	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:23:20,132	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:23:20,132	[INFO]	==== Epoch 2 ====
2020-12-13 06:23:20,132	[INFO]	Termination: target fitness reached
2020-12-13 06:23:20,132	[INFO]	Number of interations: 334
2020-12-13 06:23:20,132	[INFO]	Best fitness: 0.0
2020-12-13 06:23:20,132	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:23:20,132	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:23:20,132	[INFO]	==== Epoch 3 ====
2020-12-13 06:23:20,132	[INFO]	Termination: target fitness reached
2020-12-13 06:23:20,133	[INFO]	Number of interations: 11
2020-12-13 06:23:20,133	[INFO]	Best fitness: 0.0
2020-12-13 06:23:20,133	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:23:20,133	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:23:20,133	[INFO]	==== Epoch 4 ====
2020-12-13 06:23:20,133	[INFO]	Termination: target fitness reached
2020-12-13 06:23:20,133	[INFO]	Number of interations: 124
2020-12-13 06:23:20,133	[INFO]	Best fitness: 0.0
2020-12-13 06:23:20,133	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:23:20,133	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:23:20,133	[INFO]	==== Epoch 5 ====
2020-12-13 06:23:20,133	[INFO]	Termination: target fitness reached
2020-12-13 06:23:20,134	[INFO]	Number of interations: 99
2020-12-13 06:23:20,134	[INFO]	Best fitness: 0.0
2020-12-13 06:23:20,134	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:23:20,134	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:23:20,134	[INFO]	==== Epoch 6 ====
2020-12-13 06:23:20,134	[INFO]	Termination: target fitness reached
2020-12-13 06:23:20,134	[INFO]	Number of interations: 253
2020-12-13 06:23:20,134	[INFO]	Best fitness: 0.0
2020-12-13 06:23:20,134	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:23:20,134	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:23:20,134	[INFO]	==== Epoch 7 ====
2020-12-13 06:23:20,134	[INFO]	Termination: target fitness reached
2020-12-13 06:23:20,135	[INFO]	Number of interations: 68
2020-12-13 06:23:20,135	[INFO]	Best fitness: 0.0
2020-12-13 06:23:20,135	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:23:20,135	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:23:20,135	[INFO]	==== Epoch 8 ====
2020-12-13 06:23:20,135	[INFO]	Termination: target fitness reached
2020-12-13 06:23:20,135	[INFO]	Number of interations: 239
2020-12-13 06:23:20,135	[INFO]	Best fitness: 0.0
2020-12-13 06:23:20,135	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:23:20,135	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:23:20,135	[INFO]	==== Epoch 9 ====
2020-12-13 06:23:20,135	[INFO]	Termination: target fitness reached
2020-12-13 06:23:20,135	[INFO]	Number of interations: 235
2020-12-13 06:23:20,136	[INFO]	Best fitness: 0.0
2020-12-13 06:23:20,136	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:23:20,136	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:23:20,136	[INFO]	==== Epoch 10 ====
2020-12-13 06:23:20,136	[INFO]	Termination: target fitness reached
2020-12-13 06:23:20,136	[INFO]	Number of interations: 210
2020-12-13 06:23:20,136	[INFO]	Best fitness: 0.0
2020-12-13 06:23:20,136	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:23:20,136	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:23:20,136	[INFO]	==== Epoch 11 ====
2020-12-13 06:23:20,136	[INFO]	Termination: target fitness reached
2020-12-13 06:23:20,137	[INFO]	Number of interations: 64
2020-12-13 06:23:20,137	[INFO]	Best fitness: 0.0
2020-12-13 06:23:20,137	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:23:20,137	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:23:20,137	[INFO]	==== Epoch 12 ====
2020-12-13 06:23:20,137	[INFO]	Termination: step budget
2020-12-13 06:23:20,137	[INFO]	Number of interations: 500
2020-12-13 06:23:20,137	[INFO]	==== Epoch 13 ====
2020-12-13 06:23:20,137	[INFO]	Termination: target fitness reached
2020-12-13 06:23:20,137	[INFO]	Number of interations: 201
2020-12-13 06:23:20,137	[INFO]	Best fitness: 0.0
2020-12-13 06:23:20,137	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:23:20,138	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:23:20,138	[INFO]	==== Epoch 14 ====
2020-12-13 06:23:20,138	[INFO]	Termination: target fitness reached
2020-12-13 06:23:20,138	[INFO]	Number of interations: 23
2020-12-13 06:23:20,138	[INFO]	Best fitness: 0.0
2020-12-13 06:23:20,138	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:23:20,138	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-13 06:23:20,138	[INFO]	==== Epoch 15 ====
2020-12-13 06:23:20,138	[INFO]	Termination: target fitness reached
2020-12-13 06:23:20,138	[INFO]	Number of interations: 355
2020-12-13 06:23:20,138	[INFO]	Best fitness: 0.0
2020-12-13 06:23:20,139	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:23:20,139	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:23:20,139	[INFO]	==== Epoch 16 ====
2020-12-13 06:23:20,139	[INFO]	Termination: target fitness reached
2020-12-13 06:23:20,139	[INFO]	Number of interations: 64
2020-12-13 06:23:20,139	[INFO]	Best fitness: 0.0
2020-12-13 06:23:20,139	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-13 06:23:20,139	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:23:20,139	[INFO]	==== Epoch 17 ====
2020-12-13 06:23:20,139	[INFO]	Termination: target fitness reached
2020-12-13 06:23:20,139	[INFO]	Number of interations: 121
2020-12-13 06:23:20,139	[INFO]	Best fitness: 0.0
2020-12-13 06:23:20,140	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:23:20,140	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:23:20,140	[INFO]	==== Epoch 18 ====
2020-12-13 06:23:20,140	[INFO]	Termination: target fitness reached
2020-12-13 06:23:20,140	[INFO]	Number of interations: 31
2020-12-13 06:23:20,140	[INFO]	Best fitness: 0.0
2020-12-13 06:23:20,140	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:23:20,140	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:23:20,140	[INFO]	==== Epoch 19 ====
2020-12-13 06:23:20,140	[INFO]	Termination: target fitness reached
2020-12-13 06:23:20,140	[INFO]	Number of interations: 192
2020-12-13 06:23:20,141	[INFO]	Best fitness: 0.0
2020-12-13 06:23:20,141	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:23:20,141	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:23:20,141	[INFO]	==== Epoch 20 ====
2020-12-13 06:23:20,141	[INFO]	Termination: target fitness reached
2020-12-13 06:23:20,141	[INFO]	Number of interations: 173
2020-12-13 06:23:20,141	[INFO]	Best fitness: 0.0
2020-12-13 06:23:20,141	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-13 06:23:20,141	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-13 06:23:20,148	[INFO]	Experiment duration: 4372.5469789505005
