<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="FLATTEN.java"><package>package <name>java_programs</name>;</package>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>*</name></name>;</import>
<comment type="block">/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */</comment>

<comment type="block" format="javadoc">/**
 *
 * @author derricklin
 */</comment>
<class><specifier>public</specifier> class <name>FLATTEN</name> <block>{
    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>Object</name></type> <name>flatten</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>arr</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<if_stmt><if>if <condition>(<expr><name>arr</name> <operator>instanceof</operator> <name>ArrayList</name></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>ArrayList</name></type> <name>narr</name> <init>= <expr><operator>(</operator><name>ArrayList</name><operator>)</operator> <name>arr</name></expr></init></decl>;</decl_stmt>
	    <decl_stmt><decl><type><name>ArrayList</name></type> <name>result</name> <init>= <expr><operator>new</operator> <call><name>ArrayList</name><argument_list>(<argument><expr><literal type="number">50</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	    <for>for <control>(<init><decl><type><name>Object</name></type> <name>x</name> <range>: <expr><name>narr</name></expr></range></decl></init>)</control> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><name>x</name> <operator>instanceof</operator> <name>ArrayList</name></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>addAll</name></name><argument_list>(<argument><expr><operator>(</operator><name>ArrayList</name><operator>)</operator> <call><name>flatten</name><argument_list>(<argument><expr><name>x</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if> <else>else <block>{<block_content>
                    <expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name>flatten</name><argument_list>(<argument><expr><name>x</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>
            </block_content>}</block></for>
            <return>return <expr><name>result</name></expr>;</return>
	</block_content>}</block></if> <else>else <block>{<block_content>
	    <return>return <expr><call><name>flatten</name><argument_list>(<argument><expr><name>arr</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></else></if_stmt>
    </block_content>}</block></function>
}</block></class>
</unit>
