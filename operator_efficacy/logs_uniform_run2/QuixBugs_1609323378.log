2020-12-30 11:16:18,915	[INFO]	Path to the temporal program variants: ./.pyggi/tmp_variants/QuixBugs/1609323378
2020-12-30 11:16:18,916	[INFO]	========== EXPERIMENT FOR ['java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml']  ==========
2020-12-30 11:16:18,916	[INFO]	modification points:
 ['./if[1]', './if[1]/return[1]', './if[2]', './if[2]/operator_comp[1]', './if[2]/return[1]', './decl_stmt[1]', './decl_stmt[2]', './return[1]', './return[1]/operator_comp[1]']
2020-12-30 11:16:18,916	[INFO]	number of statements and comparisons: 7, 2
2020-12-30 11:16:18,916	[INFO]	========== EPOCH 1 ==========
2020-12-30 11:16:18,916	[INFO]	==== WARMUP ====
2020-12-30 11:16:22,181	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 11:16:22,181	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 11:16:25,507	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 11:16:25,507	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 11:16:28,821	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 11:16:28,822	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 11:16:32,097	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-30 11:16:32,097	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 11:16:32,097	[INFO]	==== START ====
2020-12-30 11:16:33,045	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:16:36,105	[INFO]	2	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:16:39,403	[INFO]	3	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 11:16:40,130	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:16:43,447	[INFO]	5	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 11:16:44,183	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:16:45,103	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:16:46,037	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:16:46,988	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:16:50,305	[INFO]	10	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:16:50,306	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:16:50,306	[INFO]	11	SUCCESS	+4.0	
2020-12-30 11:16:50,307	[DEBUG]	
2020-12-30 11:16:53,620	[INFO]	12	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:16:53,621	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:16:53,621	[INFO]	13	SUCCESS	+4.0	
2020-12-30 11:16:53,622	[DEBUG]	
2020-12-30 11:16:56,861	[INFO]	14	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:17:00,162	[INFO]	15	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:17:00,164	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 11:17:00,166	[INFO]	16	SUCCESS	+4.0	
2020-12-30 11:17:00,166	[DEBUG]	
2020-12-30 11:17:01,100	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:17:04,421	[INFO]	18	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 11:17:04,421	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 11:17:07,522	[INFO]	19	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 11:17:07,523	[INFO]	20	SUCCESS	+4.0	
2020-12-30 11:17:07,523	[DEBUG]	
2020-12-30 11:17:08,436	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:17:09,178	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:17:10,083	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:17:10,835	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:17:13,970	[INFO]	25	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 11:17:13,971	[INFO]	26	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 11:17:13,971	[DEBUG]	
2020-12-30 11:17:13,972	[INFO]	27	SUCCESS	+4.0	
2020-12-30 11:17:13,972	[DEBUG]	
2020-12-30 11:17:14,907	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:17:15,809	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:17:28,917	[INFO]	30	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:17:29,766	[INFO]	31	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:17:30,518	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:17:30,520	[INFO]	33	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:17:30,520	[DEBUG]	
2020-12-30 11:17:31,444	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:17:32,382	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:17:32,383	[INFO]	36	SUCCESS	+4.0	
2020-12-30 11:17:32,383	[DEBUG]	
2020-12-30 11:17:32,384	[INFO]	37	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:17:32,384	[DEBUG]	
2020-12-30 11:17:32,385	[INFO]	38	SUCCESS	+4.0	
2020-12-30 11:17:32,385	[DEBUG]	
2020-12-30 11:17:32,385	[INFO]	39	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:17:32,386	[DEBUG]	
2020-12-30 11:17:32,386	[INFO]	40	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:17:32,387	[DEBUG]	
2020-12-30 11:17:32,387	[INFO]	41	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 11:17:32,388	[INFO]	42	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:17:32,388	[DEBUG]	
2020-12-30 11:17:32,389	[INFO]	43	SUCCESS	+4.0	
2020-12-30 11:17:32,389	[DEBUG]	
2020-12-30 11:17:33,128	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:17:34,036	[INFO]	45	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:17:34,037	[INFO]	46	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:17:37,188	[INFO]	47	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 11:17:38,138	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:17:41,441	[INFO]	49	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 11:17:42,344	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:17:43,111	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:17:43,112	[INFO]	52	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 11:17:44,052	[INFO]	53	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:17:44,055	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:17:45,001	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:17:45,769	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:17:46,676	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:17:47,609	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:17:48,521	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:17:49,444	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:17:50,200	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:17:50,202	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:17:50,202	[INFO]	63	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:17:50,203	[DEBUG]	
2020-12-30 11:17:50,203	[INFO]	64	SUCCESS	+4.0	
2020-12-30 11:17:50,203	[DEBUG]	
2020-12-30 11:17:50,204	[INFO]	65	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:17:50,204	[DEBUG]	
2020-12-30 11:17:50,205	[INFO]	66	SUCCESS	+4.0	
2020-12-30 11:17:50,205	[DEBUG]	
2020-12-30 11:17:51,111	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:17:51,865	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:17:52,764	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:17:53,698	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:17:54,453	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:17:55,382	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:17:55,383	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:17:56,293	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:17:59,421	[INFO]	75	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 11:17:59,422	[INFO]	76	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 11:18:02,762	[INFO]	77	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:18:02,763	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:18:02,764	[INFO]	78	SUCCESS	+4.0	
2020-12-30 11:18:02,764	[DEBUG]	
2020-12-30 11:18:03,488	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:18:07,715	[INFO]	80	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:18:08,404	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:18:11,423	[INFO]	82	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:18:12,353	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:18:12,355	[INFO]	84	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:18:13,297	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:18:13,298	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:18:13,300	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:18:14,232	[INFO]	88	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:18:14,233	[INFO]	89	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:18:14,995	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:18:15,729	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:18:15,730	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:18:16,636	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:18:17,547	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:18:20,895	[INFO]	95	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:18:20,896	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:18:21,643	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:18:21,644	[INFO]	97	SUCCESS	+4.0	
2020-12-30 11:18:21,644	[DEBUG]	
2020-12-30 11:18:21,645	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:18:21,646	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:18:22,382	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:18:25,713	[INFO]	101	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:18:25,714	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:18:29,022	[INFO]	102	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:18:29,023	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:18:32,280	[INFO]	103	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:18:32,280	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:18:32,281	[INFO]	104	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 11:18:32,282	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:18:32,282	[INFO]	105	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 11:18:32,283	[DEBUG]	
2020-12-30 11:18:32,283	[INFO]	106	SUCCESS	+4.0	
2020-12-30 11:18:32,284	[DEBUG]	
2020-12-30 11:18:32,284	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:18:32,285	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:18:33,192	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:18:34,123	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:18:37,235	[INFO]	111	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:18:37,970	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:18:41,106	[INFO]	113	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:18:42,030	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:18:42,032	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:18:42,965	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:18:43,718	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:18:44,464	[INFO]	118	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:18:45,348	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:18:46,110	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:18:46,112	[INFO]	121	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:18:46,112	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:18:46,113	[INFO]	122	SUCCESS	+4.0	
2020-12-30 11:18:46,113	[DEBUG]	
2020-12-30 11:18:46,851	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:18:47,609	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:18:47,610	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:18:48,492	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:18:48,494	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:18:49,420	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:18:52,721	[INFO]	129	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:18:52,721	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 11:18:52,722	[INFO]	130	SUCCESS	+4.0	
2020-12-30 11:18:52,722	[DEBUG]	
2020-12-30 11:18:55,998	[INFO]	131	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:18:56,000	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 11:18:56,909	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:18:57,662	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:18:57,664	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:18:57,664	[INFO]	135	SUCCESS	+4.0	
2020-12-30 11:18:57,664	[DEBUG]	
2020-12-30 11:18:58,593	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:18:58,595	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:19:02,191	[INFO]	138	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:19:02,192	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:19:05,754	[INFO]	139	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 11:19:05,755	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,25 ****
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 11:19:06,651	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:19:10,953	[INFO]	141	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:19:11,648	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:19:15,320	[INFO]	143	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 11:19:15,321	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 11:19:15,321	[INFO]	144	SUCCESS	+4.0	
2020-12-30 11:19:15,321	[DEBUG]	
2020-12-30 11:19:16,044	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:19:16,803	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:19:16,805	[INFO]	147	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 11:19:17,698	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:19:20,801	[INFO]	149	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:19:20,803	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:19:21,558	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:19:21,559	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:19:22,469	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:19:23,247	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:19:24,000	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:19:24,909	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:19:24,910	[INFO]	157	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 11:19:24,910	[DEBUG]	
2020-12-30 11:19:24,911	[INFO]	158	SUCCESS	+4.0	
2020-12-30 11:19:24,911	[DEBUG]	
2020-12-30 11:19:25,878	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:19:26,651	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:19:29,911	[INFO]	161	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:19:29,912	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:19:29,913	[INFO]	162	SUCCESS	+4.0	
2020-12-30 11:19:29,913	[DEBUG]	
2020-12-30 11:19:29,914	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:19:30,838	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:19:34,139	[INFO]	165	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 11:19:34,140	[INFO]	166	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:19:34,140	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:19:34,870	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:19:38,166	[INFO]	168	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 11:19:38,167	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,25 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 14,28 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 11:19:38,168	[INFO]	169	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:19:38,169	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,25 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 14,28 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 11:19:38,169	[INFO]	170	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:19:38,170	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:19:38,170	[INFO]	171	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:19:38,171	[DEBUG]	
2020-12-30 11:19:39,093	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:19:39,888	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:19:39,889	[INFO]	174	SUCCESS	+4.0	
2020-12-30 11:19:39,889	[DEBUG]	
2020-12-30 11:19:40,637	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:19:40,639	[INFO]	176	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:19:40,639	[DEBUG]	
2020-12-30 11:19:40,639	[INFO]	177	SUCCESS	+4.0	
2020-12-30 11:19:40,640	[DEBUG]	
2020-12-30 11:19:40,640	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:19:43,939	[INFO]	179	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:19:43,940	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 11:19:43,941	[INFO]	180	SUCCESS	+4.0	
2020-12-30 11:19:43,941	[DEBUG]	
2020-12-30 11:19:44,855	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:19:45,781	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:19:49,055	[INFO]	183	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 11:19:49,799	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:19:50,705	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:19:53,749	[INFO]	186	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:19:57,021	[INFO]	187	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 11:19:57,022	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 11:19:57,022	[INFO]	188	SUCCESS	+4.0	
2020-12-30 11:19:57,023	[DEBUG]	
2020-12-30 11:19:57,024	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:19:57,966	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:19:57,968	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:19:58,738	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:19:58,740	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:19:59,475	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:19:59,476	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:20:00,237	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:20:01,176	[INFO]	197	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:20:01,179	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:20:05,438	[INFO]	199	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:20:05,439	[INFO]	200	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:20:09,830	[INFO]	201	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:20:09,831	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:20:10,683	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:20:10,684	[INFO]	203	SUCCESS	+4.0	
2020-12-30 11:20:10,684	[DEBUG]	
2020-12-30 11:20:11,603	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:20:12,357	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:20:13,282	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:20:14,216	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:20:15,119	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:20:16,041	[INFO]	209	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:20:16,042	[INFO]	210	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:20:16,043	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:20:16,044	[INFO]	212	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:20:19,184	[INFO]	213	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 11:20:19,934	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:20:20,697	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:20:21,615	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:20:22,546	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:20:22,547	[INFO]	218	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:20:22,548	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:20:27,068	[INFO]	220	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:20:27,068	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:20:27,787	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:20:27,788	[INFO]	222	SUCCESS	+4.0	
2020-12-30 11:20:27,789	[DEBUG]	
2020-12-30 11:20:27,789	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:20:28,512	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:20:31,783	[INFO]	225	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:20:31,785	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:20:35,138	[INFO]	226	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:20:36,349	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:20:37,402	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:20:38,698	[INFO]	229	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:20:39,478	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:20:39,479	[INFO]	231	SUCCESS	+4.0	
2020-12-30 11:20:39,479	[DEBUG]	
2020-12-30 11:20:42,783	[INFO]	232	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 11:20:42,784	[INFO]	233	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:20:42,784	[DEBUG]	
2020-12-30 11:20:43,709	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:20:43,710	[INFO]	235	SUCCESS	+4.0	
2020-12-30 11:20:43,710	[DEBUG]	
2020-12-30 11:20:44,637	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:20:47,955	[INFO]	237	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:20:47,956	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 11:20:47,956	[INFO]	238	SUCCESS	+4.0	
2020-12-30 11:20:47,957	[DEBUG]	
2020-12-30 11:20:48,861	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:20:49,785	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:20:50,535	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:20:50,536	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:20:50,537	[INFO]	243	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:20:50,537	[DEBUG]	
2020-12-30 11:20:51,480	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:20:51,481	[INFO]	245	SUCCESS	+4.0	
2020-12-30 11:20:51,481	[DEBUG]	
2020-12-30 11:20:52,380	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:20:53,305	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:20:54,088	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:20:57,342	[INFO]	249	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:20:57,343	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 11:20:58,258	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:20:58,259	[INFO]	251	SUCCESS	+4.0	
2020-12-30 11:20:58,259	[DEBUG]	
2020-12-30 11:20:59,204	[INFO]	252	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:21:02,346	[INFO]	253	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 11:21:02,347	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:21:02,348	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:21:02,348	[INFO]	256	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:21:02,348	[DEBUG]	
2020-12-30 11:21:02,349	[INFO]	257	SUCCESS	+4.0	
2020-12-30 11:21:02,349	[DEBUG]	
2020-12-30 11:21:05,637	[INFO]	258	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:21:05,638	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 11:21:05,639	[INFO]	259	SUCCESS	+4.0	
2020-12-30 11:21:05,639	[DEBUG]	
2020-12-30 11:21:06,559	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:21:07,466	[INFO]	261	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:21:07,467	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:21:08,224	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:21:09,131	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:21:10,066	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:21:10,068	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:21:11,002	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:21:11,753	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:21:12,687	[INFO]	269	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:21:13,614	[INFO]	270	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:21:14,390	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:21:15,286	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:21:16,054	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:21:19,344	[INFO]	274	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:21:19,345	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:21:20,089	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:21:20,090	[INFO]	276	SUCCESS	+4.0	
2020-12-30 11:21:20,090	[DEBUG]	
2020-12-30 11:21:23,143	[INFO]	277	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:21:23,937	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:21:24,849	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:21:28,122	[INFO]	280	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:21:28,123	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:21:28,124	[INFO]	281	SUCCESS	+4.0	
2020-12-30 11:21:28,124	[DEBUG]	
2020-12-30 11:21:29,042	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:21:32,115	[INFO]	283	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 11:21:32,116	[INFO]	284	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:21:33,054	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:21:33,812	[INFO]	286	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:21:34,534	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:21:37,855	[INFO]	288	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:21:37,856	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:21:42,082	[INFO]	289	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:21:42,083	[INFO]	290	SUCCESS	+4.0	
2020-12-30 11:21:42,083	[DEBUG]	
2020-12-30 11:21:42,084	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:21:42,948	[INFO]	292	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:21:42,950	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:21:43,696	[INFO]	294	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:21:44,603	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:21:44,604	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:21:44,605	[INFO]	297	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:21:44,605	[DEBUG]	
2020-12-30 11:21:45,366	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:21:46,270	[INFO]	299	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:21:46,271	[INFO]	300	SUCCESS	+4.0	
2020-12-30 11:21:46,272	[DEBUG]	
2020-12-30 11:21:46,272	[INFO]	301	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:21:46,273	[DEBUG]	
2020-12-30 11:21:46,273	[INFO]	302	SUCCESS	+4.0	
2020-12-30 11:21:46,273	[DEBUG]	
2020-12-30 11:21:46,274	[INFO]	303	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 11:21:46,274	[DEBUG]	
2020-12-30 11:21:46,275	[INFO]	304	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:21:46,276	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:21:46,276	[INFO]	305	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:21:46,277	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:21:47,202	[INFO]	306	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:21:47,203	[INFO]	307	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:21:47,204	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:21:47,204	[INFO]	308	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 11:21:47,204	[DEBUG]	
2020-12-30 11:21:48,131	[INFO]	309	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:21:48,132	[INFO]	310	SUCCESS	+4.0	
2020-12-30 11:21:48,132	[DEBUG]	
2020-12-30 11:21:48,133	[INFO]	311	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:21:48,895	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:21:48,896	[INFO]	313	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:21:49,845	[INFO]	314	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:21:49,846	[INFO]	315	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:21:49,846	[DEBUG]	
2020-12-30 11:21:49,847	[INFO]	316	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:21:49,847	[INFO]	317	SUCCESS	+4.0	
2020-12-30 11:21:49,848	[DEBUG]	
2020-12-30 11:21:50,755	[INFO]	318	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:21:51,503	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:21:52,240	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:21:55,334	[INFO]	321	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 11:21:56,103	[INFO]	322	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:21:57,026	[INFO]	323	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:21:57,958	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:21:58,874	[INFO]	325	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:22:02,199	[INFO]	326	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:22:02,200	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:22:03,101	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:22:03,102	[INFO]	328	SUCCESS	+4.0	
2020-12-30 11:22:03,102	[DEBUG]	
2020-12-30 11:22:06,427	[INFO]	329	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 11:22:07,187	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:22:08,088	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:22:08,089	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:22:09,014	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:22:09,940	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:22:09,941	[INFO]	335	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:22:09,942	[INFO]	336	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:22:10,689	[INFO]	337	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:22:13,966	[INFO]	338	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:22:13,966	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 11:22:13,967	[INFO]	339	SUCCESS	+4.0	
2020-12-30 11:22:13,968	[DEBUG]	
2020-12-30 11:22:13,968	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:22:17,057	[INFO]	341	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:22:17,058	[INFO]	342	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 11:22:17,059	[DEBUG]	
2020-12-30 11:22:17,967	[INFO]	343	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:22:17,968	[INFO]	344	SUCCESS	+4.0	
2020-12-30 11:22:17,969	[DEBUG]	
2020-12-30 11:22:18,715	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:22:21,851	[INFO]	346	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 11:22:21,852	[INFO]	347	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 11:22:22,775	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:22:23,674	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:22:24,630	[INFO]	350	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:22:25,556	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:22:26,473	[INFO]	352	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:22:27,449	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:22:28,401	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:22:32,018	[INFO]	355	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:22:32,018	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:22:35,004	[INFO]	356	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:22:35,005	[INFO]	357	SUCCESS	+4.0	
2020-12-30 11:22:35,005	[DEBUG]	
2020-12-30 11:22:35,912	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:22:35,913	[INFO]	359	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 11:22:35,913	[DEBUG]	
2020-12-30 11:22:35,914	[INFO]	360	SUCCESS	+4.0	
2020-12-30 11:22:35,914	[DEBUG]	
2020-12-30 11:22:36,716	[INFO]	361	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:22:37,439	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:22:38,344	[INFO]	363	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:22:38,345	[INFO]	364	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 11:22:39,256	[INFO]	365	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:22:42,404	[INFO]	366	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 11:22:43,305	[INFO]	367	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:22:44,244	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:22:45,169	[INFO]	369	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:22:46,101	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:22:49,280	[INFO]	371	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 11:22:50,038	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:22:50,938	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:22:51,707	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:22:51,709	[INFO]	375	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 11:22:52,446	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:22:53,215	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:22:54,146	[INFO]	378	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:22:55,066	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:22:58,402	[INFO]	380	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 11:22:58,403	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 11:22:58,403	[INFO]	381	SUCCESS	+4.0	
2020-12-30 11:22:58,404	[DEBUG]	
2020-12-30 11:22:58,404	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:23:01,832	[INFO]	383	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:23:01,833	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:23:02,603	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:23:02,605	[INFO]	385	SUCCESS	+4.0	
2020-12-30 11:23:02,605	[DEBUG]	
2020-12-30 11:23:03,578	[INFO]	386	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:23:04,510	[INFO]	387	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:23:08,728	[INFO]	388	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:23:09,857	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:23:10,734	[INFO]	390	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:23:11,771	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:23:12,827	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:23:12,829	[INFO]	393	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:23:12,830	[DEBUG]	
2020-12-30 11:23:12,831	[INFO]	394	SUCCESS	+4.0	
2020-12-30 11:23:12,832	[DEBUG]	
2020-12-30 11:23:13,706	[INFO]	395	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:23:15,022	[INFO]	396	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:23:16,433	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:23:17,788	[INFO]	398	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:23:21,032	[INFO]	399	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:23:21,803	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:23:35,614	[INFO]	401	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:23:36,548	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:23:37,485	[INFO]	403	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:23:41,018	[INFO]	404	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:23:41,019	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:23:41,020	[INFO]	405	SUCCESS	+4.0	
2020-12-30 11:23:41,020	[DEBUG]	
2020-12-30 11:23:41,963	[INFO]	406	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:23:42,779	[INFO]	407	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:23:43,584	[INFO]	408	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:23:46,832	[INFO]	409	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:23:50,314	[INFO]	410	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:23:50,315	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:23:50,316	[INFO]	411	SUCCESS	+4.0	
2020-12-30 11:23:50,316	[DEBUG]	
2020-12-30 11:23:51,099	[INFO]	412	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:23:51,913	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:23:51,914	[INFO]	414	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 11:23:52,887	[INFO]	415	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:23:53,865	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:23:53,867	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:23:57,342	[INFO]	418	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 11:23:57,343	[INFO]	419	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:23:58,142	[INFO]	420	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:23:58,143	[INFO]	421	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:23:58,144	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:23:59,066	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:23:59,067	[INFO]	423	SUCCESS	+4.0	
2020-12-30 11:23:59,068	[DEBUG]	
2020-12-30 11:24:02,353	[INFO]	424	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 11:24:03,588	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:24:04,582	[INFO]	426	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:24:05,561	[INFO]	427	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:24:06,373	[INFO]	428	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:24:09,676	[INFO]	429	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:24:12,915	[INFO]	430	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 11:24:13,880	[INFO]	431	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:24:17,649	[INFO]	432	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:24:17,649	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:24:21,468	[INFO]	433	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 11:24:21,469	[INFO]	434	SUCCESS	+4.0	
2020-12-30 11:24:21,469	[DEBUG]	
2020-12-30 11:24:21,470	[INFO]	435	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 11:24:21,470	[DEBUG]	
2020-12-30 11:24:22,377	[INFO]	436	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:24:22,378	[INFO]	437	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:24:22,379	[INFO]	438	SUCCESS	+4.0	
2020-12-30 11:24:22,379	[DEBUG]	
2020-12-30 11:24:23,526	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:24:23,528	[INFO]	440	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:24:23,529	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:24:24,352	[INFO]	442	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:24:24,354	[INFO]	443	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:24:25,263	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:24:26,191	[INFO]	445	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:24:27,097	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:24:27,837	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:24:27,838	[INFO]	448	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:24:27,839	[DEBUG]	
2020-12-30 11:24:27,839	[INFO]	449	SUCCESS	+4.0	
2020-12-30 11:24:27,839	[DEBUG]	
2020-12-30 11:24:28,722	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:24:29,486	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:24:32,795	[INFO]	452	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 11:24:37,210	[INFO]	453	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:24:37,211	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:24:37,212	[INFO]	454	SUCCESS	+4.0	
2020-12-30 11:24:37,212	[DEBUG]	
2020-12-30 11:24:38,054	[INFO]	455	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:24:38,814	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:24:39,731	[INFO]	457	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:24:40,689	[INFO]	458	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:24:41,645	[INFO]	459	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:24:41,646	[INFO]	460	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:24:41,646	[DEBUG]	
2020-12-30 11:24:41,647	[INFO]	461	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:24:41,647	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:24:41,648	[INFO]	462	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:24:41,648	[DEBUG]	
2020-12-30 11:24:41,649	[INFO]	463	SUCCESS	+4.0	
2020-12-30 11:24:41,649	[DEBUG]	
2020-12-30 11:24:42,413	[INFO]	464	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:24:43,351	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:24:44,276	[INFO]	466	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:24:45,044	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:24:45,953	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:24:45,954	[INFO]	469	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 11:24:46,703	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:24:49,818	[INFO]	471	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 11:24:49,819	[INFO]	472	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:24:49,820	[INFO]	473	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:24:49,820	[DEBUG]	
2020-12-30 11:24:49,821	[INFO]	474	SUCCESS	+4.0	
2020-12-30 11:24:49,821	[DEBUG]	
2020-12-30 11:24:50,733	[INFO]	475	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:24:51,480	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:24:52,394	[INFO]	477	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:24:53,296	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:24:54,224	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:24:54,225	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:24:54,226	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:24:54,227	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:24:54,986	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:24:58,272	[INFO]	484	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:24:58,273	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 11:24:58,274	[INFO]	485	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:24:58,274	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 11:24:58,275	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:24:59,192	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:24:59,194	[INFO]	488	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:24:59,194	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 11:25:00,129	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:25:00,130	[INFO]	490	SUCCESS	+4.0	
2020-12-30 11:25:00,130	[DEBUG]	
2020-12-30 11:25:01,068	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:25:04,520	[INFO]	492	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:25:04,521	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 11:25:17,922	[INFO]	493	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:25:17,922	[INFO]	494	SUCCESS	+4.0	
2020-12-30 11:25:17,923	[DEBUG]	
2020-12-30 11:25:18,813	[INFO]	495	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:25:18,814	[INFO]	496	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 11:25:19,606	[INFO]	497	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:25:19,608	[INFO]	498	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:25:20,592	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:25:21,392	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:25:21,392	[INFO]	==== END ====
2020-12-30 11:25:21,392	[INFO]	Reason: step budget
2020-12-30 11:25:21,393	[INFO]	
2020-12-30 11:25:21,393	[INFO]	========== EPOCH 2 ==========
2020-12-30 11:25:21,393	[INFO]	==== WARMUP ====
2020-12-30 11:25:24,918	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 11:25:24,918	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 11:25:28,287	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 11:25:28,287	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 11:25:31,569	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 11:25:31,569	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 11:25:34,846	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-30 11:25:34,847	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 11:25:34,847	[INFO]	==== START ====
2020-12-30 11:25:35,949	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:25:39,309	[INFO]	2	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:25:39,311	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:25:39,312	[INFO]	3	SUCCESS	+4.0	
2020-12-30 11:25:39,313	[DEBUG]	
2020-12-30 11:25:42,456	[INFO]	4	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:25:43,389	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:25:46,577	[INFO]	6	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 11:25:47,543	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:25:48,538	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:25:49,509	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:25:50,312	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:25:50,313	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:25:54,673	[INFO]	12	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 11:25:58,078	[INFO]	13	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:25:58,079	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 11:25:59,200	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:26:03,381	[INFO]	15	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 11:26:03,383	[INFO]	16	SUCCESS	+4.0	
2020-12-30 11:26:03,384	[DEBUG]	
2020-12-30 11:26:04,604	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:26:05,706	[INFO]	18	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:26:07,013	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:26:08,004	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:26:08,006	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:26:08,007	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:26:08,977	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:26:13,240	[INFO]	24	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:26:16,452	[INFO]	25	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:26:16,453	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 11:26:19,730	[INFO]	26	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 11:26:20,649	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:26:21,562	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:26:21,563	[INFO]	29	SUCCESS	+4.0	
2020-12-30 11:26:21,563	[DEBUG]	
2020-12-30 11:26:22,486	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:26:26,139	[INFO]	31	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:26:26,140	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:26:26,140	[INFO]	32	SUCCESS	+4.0	
2020-12-30 11:26:26,141	[DEBUG]	
2020-12-30 11:26:26,141	[INFO]	33	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 11:26:26,142	[DEBUG]	
2020-12-30 11:26:27,047	[INFO]	34	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:26:27,048	[INFO]	35	SUCCESS	+4.0	
2020-12-30 11:26:27,049	[DEBUG]	
2020-12-30 11:26:27,050	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:26:27,969	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:26:28,727	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:26:29,622	[INFO]	39	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:26:32,934	[INFO]	40	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 11:26:32,935	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:26:33,847	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:26:34,801	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:26:35,716	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:26:36,485	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:26:37,237	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:26:37,238	[INFO]	47	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 11:26:38,175	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:26:38,176	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:26:38,177	[INFO]	50	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:26:38,177	[DEBUG]	
2020-12-30 11:26:38,178	[INFO]	51	SUCCESS	+4.0	
2020-12-30 11:26:38,178	[DEBUG]	
2020-12-30 11:26:38,179	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:26:39,120	[INFO]	53	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:26:39,869	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:26:40,814	[INFO]	55	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:26:40,815	[INFO]	56	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:26:41,749	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:26:42,535	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:26:43,315	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:26:44,290	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:26:45,272	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:26:46,242	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:26:47,196	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:26:47,198	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:26:48,167	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:26:52,633	[INFO]	66	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:26:55,733	[INFO]	67	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:26:56,705	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:26:56,706	[INFO]	69	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:26:56,706	[DEBUG]	
2020-12-30 11:26:56,707	[INFO]	70	SUCCESS	+4.0	
2020-12-30 11:26:56,707	[DEBUG]	
2020-12-30 11:26:57,658	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:26:58,460	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:26:59,432	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:27:00,411	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:27:03,760	[INFO]	75	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 11:27:04,725	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:27:05,701	[INFO]	77	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:27:06,617	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:27:06,619	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:27:06,620	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:27:07,547	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:27:08,657	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:27:08,659	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:27:09,459	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:27:10,212	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:27:13,946	[INFO]	86	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:27:13,947	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 11:27:14,837	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:27:14,838	[INFO]	88	SUCCESS	+4.0	
2020-12-30 11:27:14,838	[DEBUG]	
2020-12-30 11:27:15,935	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:27:15,938	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:27:19,553	[INFO]	91	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:27:19,554	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:27:19,555	[INFO]	92	SUCCESS	+4.0	
2020-12-30 11:27:19,555	[DEBUG]	
2020-12-30 11:27:19,556	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:27:22,995	[INFO]	94	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 11:27:24,044	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:27:25,061	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:27:26,118	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:27:27,119	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:27:27,120	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:27:27,121	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:27:27,122	[INFO]	101	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:27:27,122	[DEBUG]	
2020-12-30 11:27:28,110	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:27:28,112	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:27:28,112	[INFO]	104	SUCCESS	+4.0	
2020-12-30 11:27:28,112	[DEBUG]	
2020-12-30 11:27:28,113	[INFO]	105	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:27:28,113	[DEBUG]	
2020-12-30 11:27:28,114	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:27:28,115	[INFO]	107	SUCCESS	+4.0	
2020-12-30 11:27:28,115	[DEBUG]	
2020-12-30 11:27:28,116	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:27:33,597	[INFO]	109	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:27:34,797	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:27:36,316	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:27:37,907	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:27:37,909	[INFO]	113	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:27:37,909	[DEBUG]	
2020-12-30 11:27:38,944	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:27:42,516	[INFO]	115	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:27:42,517	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:27:46,381	[INFO]	116	SUCCESS	 8.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 11:27:46,383	[INFO]	117	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:27:46,383	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:27:46,384	[INFO]	118	SUCCESS	+4.0	
2020-12-30 11:27:46,384	[DEBUG]	
2020-12-30 11:27:46,385	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:27:46,386	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:27:46,386	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:27:50,013	[INFO]	122	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:27:50,014	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:27:50,957	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:27:50,958	[INFO]	124	SUCCESS	+4.0	
2020-12-30 11:27:50,958	[DEBUG]	
2020-12-30 11:27:51,903	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:27:52,888	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:27:53,704	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:27:53,705	[INFO]	128	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:27:53,706	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:27:54,482	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:27:55,419	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:27:55,420	[INFO]	131	SUCCESS	+4.0	
2020-12-30 11:27:55,421	[DEBUG]	
2020-12-30 11:27:56,373	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:27:57,296	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:27:57,298	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:27:57,298	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:27:57,299	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:27:57,300	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:27:57,300	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:27:58,277	[INFO]	139	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:27:59,055	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:28:00,038	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:28:00,808	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:28:01,727	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:28:02,669	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:28:05,911	[INFO]	145	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:28:06,809	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:28:07,576	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:28:10,827	[INFO]	148	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:28:10,828	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:28:15,533	[INFO]	150	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:28:16,380	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:28:16,384	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:28:17,920	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:28:19,240	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:28:19,242	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:28:24,010	[INFO]	156	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:28:24,011	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 11:28:25,121	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:28:25,123	[INFO]	158	SUCCESS	+4.0	
2020-12-30 11:28:25,123	[DEBUG]	
2020-12-30 11:28:31,688	[INFO]	159	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:28:31,689	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:28:32,881	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:28:48,687	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:28:49,791	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:28:50,813	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:28:51,804	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:28:51,806	[INFO]	165	SUCCESS	+4.0	
2020-12-30 11:28:51,806	[DEBUG]	
2020-12-30 11:28:52,802	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:28:52,804	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:28:53,843	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:28:54,783	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:28:58,129	[INFO]	170	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:28:59,148	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:29:00,155	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:29:03,916	[INFO]	173	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:29:03,917	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:29:05,005	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:29:05,006	[INFO]	175	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:29:05,007	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:29:05,832	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:29:06,783	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:29:06,784	[INFO]	178	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:29:06,785	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:29:07,584	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:29:08,608	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:29:08,609	[INFO]	181	SUCCESS	+4.0	
2020-12-30 11:29:08,609	[DEBUG]	
2020-12-30 11:29:09,416	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:29:09,418	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:29:10,354	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:29:11,285	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:29:12,205	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:29:12,942	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:29:16,145	[INFO]	188	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 11:29:16,146	[INFO]	189	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:29:16,146	[DEBUG]	
2020-12-30 11:29:16,147	[INFO]	190	SUCCESS	+4.0	
2020-12-30 11:29:16,147	[DEBUG]	
2020-12-30 11:29:17,103	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:29:17,104	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:29:18,099	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:29:22,752	[INFO]	194	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:29:22,753	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:29:22,754	[INFO]	195	SUCCESS	+4.0	
2020-12-30 11:29:22,754	[DEBUG]	
2020-12-30 11:29:24,458	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:29:25,640	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:29:26,638	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:29:26,640	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:29:27,425	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:29:27,427	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:29:27,427	[INFO]	202	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:29:27,428	[DEBUG]	
2020-12-30 11:29:28,194	[INFO]	203	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:29:43,396	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:29:43,397	[INFO]	205	SUCCESS	+4.0	
2020-12-30 11:29:43,397	[DEBUG]	
2020-12-30 11:29:44,164	[INFO]	206	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:29:47,484	[INFO]	207	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:29:51,269	[INFO]	208	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:29:51,270	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:29:54,917	[INFO]	209	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 11:29:55,812	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:29:55,814	[INFO]	211	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:29:55,815	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:29:55,815	[INFO]	212	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:29:55,816	[DEBUG]	
2020-12-30 11:29:56,758	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:29:56,759	[INFO]	214	SUCCESS	+4.0	
2020-12-30 11:29:56,759	[DEBUG]	
2020-12-30 11:29:57,741	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:30:02,179	[INFO]	216	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:30:02,953	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:30:03,721	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:30:04,526	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:30:04,527	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:30:05,298	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:30:05,300	[INFO]	222	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:30:05,300	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:30:05,301	[INFO]	223	SUCCESS	+4.0	
2020-12-30 11:30:05,301	[DEBUG]	
2020-12-30 11:30:05,302	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:30:05,303	[INFO]	225	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:30:05,303	[DEBUG]	
2020-12-30 11:30:06,256	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:30:07,220	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:30:10,609	[INFO]	228	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 11:30:10,610	[INFO]	229	SUCCESS	+4.0	
2020-12-30 11:30:10,611	[DEBUG]	
2020-12-30 11:30:11,402	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:30:12,364	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:30:13,161	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:30:14,156	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:30:15,160	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:30:16,156	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:30:16,158	[INFO]	236	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:30:16,158	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:30:16,962	[INFO]	237	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:30:17,747	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:30:17,748	[INFO]	239	SUCCESS	+4.0	
2020-12-30 11:30:17,749	[DEBUG]	
2020-12-30 11:30:17,749	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:30:21,252	[INFO]	241	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:30:21,253	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:30:21,254	[INFO]	242	SUCCESS	+4.0	
2020-12-30 11:30:21,254	[DEBUG]	
2020-12-30 11:30:21,255	[INFO]	243	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:30:26,064	[INFO]	244	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:30:26,065	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:30:26,824	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:30:27,791	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:30:27,792	[INFO]	247	SUCCESS	+4.0	
2020-12-30 11:30:27,792	[DEBUG]	
2020-12-30 11:30:27,793	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:30:28,751	[INFO]	249	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:30:32,247	[INFO]	250	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 11:30:32,248	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:30:32,249	[INFO]	252	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 11:30:33,242	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:30:33,243	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:30:34,212	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:30:34,213	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:30:37,738	[INFO]	257	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 11:30:37,740	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:30:41,132	[INFO]	259	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:30:41,133	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:30:41,908	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:30:41,909	[INFO]	261	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:30:41,910	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:30:41,910	[INFO]	262	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:30:41,910	[DEBUG]	
2020-12-30 11:30:41,911	[INFO]	263	SUCCESS	+4.0	
2020-12-30 11:30:41,911	[DEBUG]	
2020-12-30 11:30:45,207	[INFO]	264	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:30:45,208	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:30:45,208	[INFO]	265	SUCCESS	+4.0	
2020-12-30 11:30:45,209	[DEBUG]	
2020-12-30 11:30:45,210	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:30:46,574	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:30:47,529	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:30:47,530	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:30:47,531	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:30:48,330	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:30:49,294	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:30:50,194	[INFO]	273	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:30:51,138	[INFO]	274	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:30:51,139	[INFO]	275	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:30:51,139	[DEBUG]	
2020-12-30 11:30:51,140	[INFO]	276	SUCCESS	+4.0	
2020-12-30 11:30:51,140	[DEBUG]	
2020-12-30 11:30:52,084	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:30:55,392	[INFO]	278	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 11:30:55,393	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 11:30:55,394	[INFO]	279	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:30:56,300	[INFO]	280	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:30:56,301	[INFO]	281	SUCCESS	+4.0	
2020-12-30 11:30:56,301	[DEBUG]	
2020-12-30 11:30:57,073	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:30:57,074	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:30:57,075	[INFO]	284	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:30:57,831	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:30:57,832	[INFO]	286	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:30:57,832	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:30:57,833	[INFO]	287	SUCCESS	+4.0	
2020-12-30 11:30:57,833	[DEBUG]	
2020-12-30 11:30:58,766	[INFO]	288	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:30:58,768	[INFO]	289	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:30:58,768	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:30:58,769	[INFO]	290	SUCCESS	+4.0	
2020-12-30 11:30:58,769	[DEBUG]	
2020-12-30 11:30:58,770	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:31:02,116	[INFO]	292	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:31:02,117	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 11:31:02,118	[INFO]	293	SUCCESS	+4.0	
2020-12-30 11:31:02,118	[DEBUG]	
2020-12-30 11:31:02,119	[INFO]	294	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:31:02,119	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:31:03,343	[INFO]	296	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:31:04,122	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:31:05,071	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:31:09,346	[INFO]	299	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:31:09,347	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:31:09,348	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:31:12,622	[INFO]	302	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 11:31:13,367	[INFO]	303	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:31:16,462	[INFO]	304	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:31:17,424	[INFO]	305	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:31:18,220	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:31:22,551	[INFO]	307	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:31:22,552	[INFO]	308	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:31:23,256	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:31:24,174	[INFO]	310	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:31:25,164	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:31:26,118	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:31:26,119	[INFO]	313	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 11:31:26,120	[INFO]	314	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:31:26,888	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:31:26,889	[INFO]	316	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:31:26,890	[INFO]	317	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:31:26,890	[DEBUG]	
2020-12-30 11:31:26,890	[INFO]	318	SUCCESS	+4.0	
2020-12-30 11:31:26,891	[DEBUG]	
2020-12-30 11:31:27,651	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:31:28,569	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:31:29,483	[INFO]	321	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:31:30,415	[INFO]	322	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:31:31,436	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:31:32,191	[INFO]	324	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:31:32,192	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:31:32,963	[INFO]	326	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:31:33,717	[INFO]	327	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:31:34,648	[INFO]	328	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:31:35,550	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:31:36,506	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:31:37,432	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:31:37,433	[INFO]	332	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:31:38,188	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:31:38,189	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:31:41,487	[INFO]	335	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:31:41,489	[INFO]	336	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:31:41,490	[INFO]	337	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:31:42,419	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:31:43,349	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:31:44,293	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:31:45,058	[INFO]	341	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:31:45,969	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:31:45,970	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:31:49,631	[INFO]	344	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:31:49,632	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 11:31:49,632	[INFO]	345	SUCCESS	+4.0	
2020-12-30 11:31:49,633	[DEBUG]	
2020-12-30 11:31:50,598	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:31:53,847	[INFO]	347	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 11:31:57,041	[INFO]	348	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 11:31:57,044	[INFO]	349	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:31:57,046	[INFO]	350	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:32:00,333	[INFO]	351	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 11:32:01,104	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:32:01,105	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:32:01,853	[INFO]	354	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:32:04,904	[INFO]	355	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:32:05,842	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:32:06,598	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:32:09,961	[INFO]	358	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:32:09,961	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:32:09,962	[INFO]	359	SUCCESS	+4.0	
2020-12-30 11:32:09,962	[DEBUG]	
2020-12-30 11:32:10,706	[INFO]	360	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:32:11,644	[INFO]	361	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:32:12,396	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:32:12,397	[INFO]	363	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:32:12,398	[INFO]	364	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:32:13,336	[INFO]	365	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:32:14,268	[INFO]	366	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:32:14,269	[INFO]	367	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:32:14,269	[DEBUG]	
2020-12-30 11:32:14,270	[INFO]	368	SUCCESS	+4.0	
2020-12-30 11:32:14,270	[DEBUG]	
2020-12-30 11:32:17,604	[INFO]	369	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:32:17,606	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 11:32:18,553	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:32:18,553	[INFO]	371	SUCCESS	+4.0	
2020-12-30 11:32:18,554	[DEBUG]	
2020-12-30 11:32:19,316	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:32:20,227	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:32:21,179	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:32:21,180	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:32:22,103	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:32:22,876	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:32:24,031	[INFO]	378	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:32:24,981	[INFO]	379	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:32:24,982	[INFO]	380	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 11:32:24,982	[DEBUG]	
2020-12-30 11:32:24,983	[INFO]	381	SUCCESS	+4.0	
2020-12-30 11:32:24,983	[DEBUG]	
2020-12-30 11:32:24,984	[INFO]	382	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:32:24,984	[DEBUG]	
2020-12-30 11:32:24,984	[INFO]	383	SUCCESS	+4.0	
2020-12-30 11:32:24,984	[DEBUG]	
2020-12-30 11:32:29,233	[INFO]	384	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:32:29,234	[INFO]	385	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:32:32,229	[INFO]	386	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:32:35,534	[INFO]	387	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:32:35,535	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:32:35,536	[INFO]	388	SUCCESS	+4.0	
2020-12-30 11:32:35,536	[DEBUG]	
2020-12-30 11:32:38,678	[INFO]	389	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:32:38,679	[INFO]	390	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:32:38,680	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:32:39,462	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:32:39,463	[INFO]	393	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:32:40,377	[INFO]	394	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:32:41,384	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:32:42,335	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:32:43,279	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:32:43,281	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:32:44,204	[INFO]	399	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:32:44,205	[INFO]	400	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:32:44,205	[DEBUG]	
2020-12-30 11:32:47,423	[INFO]	401	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 11:32:48,348	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:32:48,349	[INFO]	403	SUCCESS	+4.0	
2020-12-30 11:32:48,349	[DEBUG]	
2020-12-30 11:32:49,280	[INFO]	404	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:32:49,282	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:32:50,023	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:32:50,024	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:32:50,935	[INFO]	408	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:33:04,228	[INFO]	409	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:33:04,927	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:33:05,850	[INFO]	411	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:33:05,851	[INFO]	412	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:33:05,852	[INFO]	413	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:33:05,853	[INFO]	414	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:33:05,853	[DEBUG]	
2020-12-30 11:33:05,853	[INFO]	415	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:33:06,752	[INFO]	416	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:33:06,753	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:33:06,754	[INFO]	418	SUCCESS	+4.0	
2020-12-30 11:33:06,754	[DEBUG]	
2020-12-30 11:33:07,680	[INFO]	419	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:33:07,681	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:33:08,610	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:33:09,560	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:33:10,483	[INFO]	423	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:33:11,417	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:33:14,559	[INFO]	425	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:33:17,646	[INFO]	426	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:33:20,803	[INFO]	427	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 11:33:25,146	[INFO]	428	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:33:28,379	[INFO]	429	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:33:28,380	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:33:29,374	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:33:30,304	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:33:31,256	[INFO]	432	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:33:31,257	[INFO]	433	SUCCESS	+4.0	
2020-12-30 11:33:31,257	[DEBUG]	
2020-12-30 11:33:32,210	[INFO]	434	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:33:32,978	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:33:33,725	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:33:33,726	[INFO]	437	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:33:33,727	[DEBUG]	
2020-12-30 11:33:33,727	[INFO]	438	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:33:33,728	[DEBUG]	
2020-12-30 11:33:33,728	[INFO]	439	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:33:33,728	[DEBUG]	
2020-12-30 11:33:34,644	[INFO]	440	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:33:35,400	[INFO]	441	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:33:36,354	[INFO]	442	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:33:36,355	[INFO]	443	SUCCESS	+4.0	
2020-12-30 11:33:36,355	[DEBUG]	
2020-12-30 11:33:37,289	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:33:40,627	[INFO]	445	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 11:33:40,628	[INFO]	446	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:33:40,629	[INFO]	447	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 11:33:45,222	[INFO]	448	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:33:45,223	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:33:46,109	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:33:46,841	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:33:47,767	[INFO]	451	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:33:47,768	[INFO]	452	SUCCESS	+4.0	
2020-12-30 11:33:47,768	[DEBUG]	
2020-12-30 11:33:47,769	[INFO]	453	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:33:51,037	[INFO]	454	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:33:51,038	[INFO]	455	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:33:51,038	[DEBUG]	
2020-12-30 11:33:51,039	[INFO]	456	SUCCESS	+4.0	
2020-12-30 11:33:51,039	[DEBUG]	
2020-12-30 11:33:51,039	[INFO]	457	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:33:51,040	[DEBUG]	
2020-12-30 11:33:51,989	[INFO]	458	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:33:51,989	[INFO]	459	SUCCESS	+4.0	
2020-12-30 11:33:51,990	[DEBUG]	
2020-12-30 11:33:52,930	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:33:53,886	[INFO]	461	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:33:54,646	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:33:54,649	[INFO]	463	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:33:55,569	[INFO]	464	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:33:56,478	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:33:57,405	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:33:58,354	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:33:59,091	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:34:00,006	[INFO]	469	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:34:00,008	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:34:00,009	[INFO]	471	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:34:00,942	[INFO]	472	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:34:01,880	[INFO]	473	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:34:05,317	[INFO]	474	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 11:34:05,319	[INFO]	475	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:34:06,288	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:34:09,850	[INFO]	477	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:34:09,851	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 11:34:13,105	[INFO]	478	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:34:14,025	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:34:14,027	[INFO]	480	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:34:14,027	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 11:34:15,008	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:34:15,009	[INFO]	482	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:34:15,010	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 11:34:16,007	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:34:19,521	[INFO]	484	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 11:34:22,915	[INFO]	485	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 11:34:22,916	[INFO]	486	SUCCESS	+4.0	
2020-12-30 11:34:22,917	[DEBUG]	
2020-12-30 11:34:22,918	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:34:22,918	[INFO]	488	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:34:22,919	[DEBUG]	
2020-12-30 11:34:22,919	[INFO]	489	SUCCESS	+4.0	
2020-12-30 11:34:22,919	[DEBUG]	
2020-12-30 11:34:23,911	[INFO]	490	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:34:24,901	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:34:24,902	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:34:25,831	[INFO]	493	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:34:25,832	[INFO]	494	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 11:34:25,833	[INFO]	495	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:34:25,833	[DEBUG]	
2020-12-30 11:34:25,833	[INFO]	496	SUCCESS	+4.0	
2020-12-30 11:34:25,834	[DEBUG]	
2020-12-30 11:34:25,834	[INFO]	497	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:34:25,835	[DEBUG]	
2020-12-30 11:34:26,788	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:34:26,789	[INFO]	499	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:34:26,790	[INFO]	500	SUCCESS	+4.0	
2020-12-30 11:34:26,790	[DEBUG]	
2020-12-30 11:34:26,790	[INFO]	==== END ====
2020-12-30 11:34:26,790	[INFO]	Reason: step budget
2020-12-30 11:34:26,791	[INFO]	
2020-12-30 11:34:26,791	[INFO]	========== EPOCH 3 ==========
2020-12-30 11:34:26,791	[INFO]	==== WARMUP ====
2020-12-30 11:34:30,176	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 11:34:30,176	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 11:34:33,533	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 11:34:33,533	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 11:34:36,867	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 11:34:36,868	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 11:34:40,243	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-30 11:34:40,244	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 11:34:40,244	[INFO]	==== START ====
2020-12-30 11:34:44,778	[INFO]	1	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:34:44,778	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:34:44,779	[INFO]	2	SUCCESS	+4.0	
2020-12-30 11:34:44,779	[DEBUG]	
2020-12-30 11:34:48,350	[INFO]	3	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:34:48,351	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:34:48,352	[INFO]	4	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:34:48,352	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:34:49,246	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:34:50,171	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:34:51,101	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:34:52,045	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:34:52,047	[INFO]	9	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:34:52,047	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:34:52,798	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:34:53,704	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:34:53,705	[INFO]	12	SUCCESS	+4.0	
2020-12-30 11:34:53,705	[DEBUG]	
2020-12-30 11:34:54,460	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:34:55,377	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:34:56,311	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:34:57,238	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:34:58,160	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:34:59,122	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:34:59,879	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:35:03,188	[INFO]	20	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 11:35:04,102	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:35:05,069	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:35:05,070	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:35:05,071	[INFO]	24	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 11:35:05,072	[INFO]	25	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 11:35:05,072	[DEBUG]	
2020-12-30 11:35:05,072	[INFO]	26	SUCCESS	+4.0	
2020-12-30 11:35:05,073	[DEBUG]	
2020-12-30 11:35:05,073	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:35:08,471	[INFO]	28	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 11:35:09,220	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:35:10,040	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:35:10,043	[INFO]	31	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 11:35:10,044	[DEBUG]	
2020-12-30 11:35:10,045	[INFO]	32	SUCCESS	+4.0	
2020-12-30 11:35:10,045	[DEBUG]	
2020-12-30 11:35:10,047	[INFO]	33	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 11:35:10,047	[DEBUG]	
2020-12-30 11:35:10,049	[INFO]	34	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:35:10,049	[DEBUG]	
2020-12-30 11:35:10,050	[INFO]	35	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:35:10,051	[DEBUG]	
2020-12-30 11:35:10,052	[INFO]	36	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:35:10,053	[INFO]	37	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:35:10,054	[DEBUG]	
2020-12-30 11:35:10,850	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:35:14,280	[INFO]	39	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:35:14,281	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:35:14,282	[INFO]	40	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:35:14,282	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:35:14,283	[INFO]	41	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:35:14,284	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:35:15,091	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:35:15,093	[INFO]	43	SUCCESS	+4.0	
2020-12-30 11:35:15,094	[DEBUG]	
2020-12-30 11:35:18,404	[INFO]	44	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:35:18,406	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:35:19,379	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:35:20,363	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:35:21,341	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:35:22,315	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:35:23,123	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:35:27,643	[INFO]	51	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:35:28,562	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:35:28,563	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:35:28,564	[INFO]	54	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 11:35:28,564	[DEBUG]	
2020-12-30 11:35:29,519	[INFO]	55	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:35:29,520	[INFO]	56	SUCCESS	+4.0	
2020-12-30 11:35:29,520	[DEBUG]	
2020-12-30 11:35:30,511	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:35:45,205	[INFO]	58	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:35:48,458	[INFO]	59	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:35:48,459	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 11:35:49,388	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:35:49,389	[INFO]	61	SUCCESS	+4.0	
2020-12-30 11:35:49,389	[DEBUG]	
2020-12-30 11:35:50,156	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:35:51,108	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:35:51,109	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:35:51,863	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:35:55,220	[INFO]	66	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:35:55,222	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 11:35:56,148	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:35:59,477	[INFO]	68	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:35:59,478	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,23 ****
--- 14,29 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 11:36:00,393	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:36:01,174	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:36:01,175	[INFO]	71	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:36:01,175	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 11:36:02,082	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:36:03,024	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:36:03,025	[INFO]	74	SUCCESS	+4.0	
2020-12-30 11:36:03,025	[DEBUG]	
2020-12-30 11:36:06,182	[INFO]	75	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:36:06,183	[INFO]	76	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:36:06,183	[DEBUG]	
2020-12-30 11:36:06,184	[INFO]	77	SUCCESS	+4.0	
2020-12-30 11:36:06,184	[DEBUG]	
2020-12-30 11:36:07,107	[INFO]	78	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:36:07,874	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:36:08,798	[INFO]	80	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:36:08,799	[INFO]	81	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:36:08,799	[DEBUG]	
2020-12-30 11:36:09,704	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:36:10,661	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:36:10,662	[INFO]	84	SUCCESS	+4.0	
2020-12-30 11:36:10,662	[DEBUG]	
2020-12-30 11:36:13,981	[INFO]	85	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:36:13,982	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:36:13,982	[INFO]	86	SUCCESS	+4.0	
2020-12-30 11:36:13,983	[DEBUG]	
2020-12-30 11:36:14,753	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:36:18,059	[INFO]	88	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 11:36:18,976	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:36:18,977	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:36:19,911	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:36:19,913	[INFO]	92	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:36:24,274	[INFO]	93	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:36:25,117	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:36:25,871	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:36:29,182	[INFO]	96	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:36:30,084	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:36:30,085	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:36:31,044	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:36:31,800	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:36:32,720	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:36:32,721	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:36:32,722	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:36:33,671	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:36:34,588	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:36:35,370	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:36:35,373	[INFO]	107	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:36:35,374	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:36:35,375	[INFO]	108	SUCCESS	+4.0	
2020-12-30 11:36:35,376	[DEBUG]	
2020-12-30 11:36:36,308	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:36:36,310	[INFO]	110	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 11:36:36,310	[DEBUG]	
2020-12-30 11:36:36,311	[INFO]	111	SUCCESS	+4.0	
2020-12-30 11:36:36,311	[DEBUG]	
2020-12-30 11:36:36,312	[INFO]	112	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:36:36,312	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 11:36:37,108	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:36:37,109	[INFO]	114	SUCCESS	+4.0	
2020-12-30 11:36:37,110	[DEBUG]	
2020-12-30 11:36:37,110	[INFO]	115	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:36:37,896	[INFO]	116	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:36:37,899	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:36:38,849	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:36:39,660	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:36:39,662	[INFO]	120	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:36:39,662	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 11:36:39,663	[INFO]	121	SUCCESS	+4.0	
2020-12-30 11:36:39,663	[DEBUG]	
2020-12-30 11:36:39,664	[INFO]	122	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:36:39,664	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 11:36:40,455	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:36:40,457	[INFO]	124	SUCCESS	+4.0	
2020-12-30 11:36:40,458	[DEBUG]	
2020-12-30 11:36:41,282	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:36:42,078	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:36:42,852	[INFO]	127	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:36:42,854	[INFO]	128	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 11:36:42,854	[DEBUG]	
2020-12-30 11:36:42,855	[INFO]	129	SUCCESS	+4.0	
2020-12-30 11:36:42,855	[DEBUG]	
2020-12-30 11:36:46,324	[INFO]	130	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 11:36:47,290	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:36:48,245	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:36:49,204	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:36:52,660	[INFO]	134	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:36:52,661	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:36:52,662	[INFO]	135	SUCCESS	+4.0	
2020-12-30 11:36:52,662	[DEBUG]	
2020-12-30 11:36:53,647	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:36:53,650	[INFO]	137	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:36:53,651	[DEBUG]	
2020-12-30 11:36:53,652	[INFO]	138	SUCCESS	+4.0	
2020-12-30 11:36:53,652	[DEBUG]	
2020-12-30 11:36:54,623	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:36:54,624	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:36:55,585	[INFO]	141	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:36:56,552	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:36:57,515	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:37:00,899	[INFO]	144	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:37:01,806	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:37:02,536	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:37:03,296	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:37:16,472	[INFO]	148	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:37:17,161	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:37:20,267	[INFO]	150	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 11:37:20,269	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:37:24,538	[INFO]	152	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:37:25,394	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:37:25,396	[INFO]	154	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:37:25,396	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:37:26,318	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:37:26,319	[INFO]	156	SUCCESS	+4.0	
2020-12-30 11:37:26,319	[DEBUG]	
2020-12-30 11:37:29,510	[INFO]	157	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:37:30,420	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:37:30,421	[INFO]	159	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:37:30,422	[DEBUG]	
2020-12-30 11:37:30,422	[INFO]	160	SUCCESS	+4.0	
2020-12-30 11:37:30,423	[DEBUG]	
2020-12-30 11:37:33,581	[INFO]	161	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 11:37:33,583	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:37:33,584	[INFO]	163	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:37:33,585	[DEBUG]	
2020-12-30 11:37:33,586	[INFO]	164	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 11:37:33,586	[DEBUG]	
2020-12-30 11:37:34,517	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:37:34,518	[INFO]	166	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 11:37:34,518	[DEBUG]	
2020-12-30 11:37:34,518	[INFO]	167	SUCCESS	+4.0	
2020-12-30 11:37:34,519	[DEBUG]	
2020-12-30 11:37:34,519	[INFO]	168	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:37:34,520	[DEBUG]	
2020-12-30 11:37:34,520	[INFO]	169	SUCCESS	+4.0	
2020-12-30 11:37:34,520	[DEBUG]	
2020-12-30 11:37:35,271	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:37:35,272	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:37:35,273	[INFO]	172	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:37:35,273	[DEBUG]	
2020-12-30 11:37:38,578	[INFO]	173	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 11:37:38,580	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:37:39,509	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:37:39,510	[INFO]	176	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:37:39,510	[DEBUG]	
2020-12-30 11:37:39,511	[INFO]	177	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:37:39,511	[DEBUG]	
2020-12-30 11:37:40,259	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:37:40,260	[INFO]	179	SUCCESS	+4.0	
2020-12-30 11:37:40,260	[DEBUG]	
2020-12-30 11:37:41,021	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:37:41,774	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:37:41,776	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:37:41,778	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:37:42,665	[INFO]	184	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:37:43,593	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:37:44,533	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:37:45,448	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:37:49,087	[INFO]	188	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:37:49,087	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:37:49,088	[INFO]	189	SUCCESS	+4.0	
2020-12-30 11:37:49,088	[DEBUG]	
2020-12-30 11:37:53,264	[INFO]	190	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:37:54,140	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:38:07,357	[INFO]	192	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:38:07,358	[INFO]	193	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:38:08,241	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:38:08,242	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:38:09,000	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:38:09,001	[INFO]	197	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:38:09,002	[INFO]	198	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:38:09,002	[DEBUG]	
2020-12-30 11:38:09,003	[INFO]	199	SUCCESS	+4.0	
2020-12-30 11:38:09,003	[DEBUG]	
2020-12-30 11:38:09,941	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:38:10,913	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:38:15,176	[INFO]	202	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:38:18,429	[INFO]	203	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:38:18,430	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:38:18,431	[INFO]	204	SUCCESS	+4.0	
2020-12-30 11:38:18,431	[DEBUG]	
2020-12-30 11:38:18,432	[INFO]	205	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:38:18,432	[DEBUG]	
2020-12-30 11:38:18,433	[INFO]	206	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:38:18,433	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:38:18,434	[INFO]	207	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:38:18,434	[DEBUG]	
2020-12-30 11:38:18,435	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:38:18,435	[INFO]	209	SUCCESS	+4.0	
2020-12-30 11:38:18,436	[DEBUG]	
2020-12-30 11:38:19,352	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:38:20,124	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:38:21,073	[INFO]	212	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:38:21,981	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:38:22,918	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:38:22,919	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:38:22,920	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:38:23,875	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:38:23,876	[INFO]	218	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:38:23,877	[DEBUG]	
2020-12-30 11:38:24,840	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:38:24,841	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:38:24,842	[INFO]	221	SUCCESS	+4.0	
2020-12-30 11:38:24,842	[DEBUG]	
2020-12-30 11:38:28,375	[INFO]	222	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 11:38:28,377	[INFO]	223	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:38:28,377	[DEBUG]	
2020-12-30 11:38:31,933	[INFO]	224	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:38:31,934	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:38:32,900	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:38:32,901	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:38:33,685	[INFO]	228	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:38:33,686	[INFO]	229	SUCCESS	+4.0	
2020-12-30 11:38:33,687	[DEBUG]	
2020-12-30 11:38:34,473	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:38:37,773	[INFO]	231	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 11:38:37,775	[INFO]	232	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 11:38:38,756	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:38:39,706	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:38:40,505	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:38:41,295	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:38:42,144	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:38:43,125	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:38:43,942	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:38:48,685	[INFO]	240	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:38:48,686	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:38:48,686	[INFO]	241	SUCCESS	+4.0	
2020-12-30 11:38:48,687	[DEBUG]	
2020-12-30 11:38:49,568	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:38:53,032	[INFO]	243	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 11:38:56,523	[INFO]	244	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:38:56,524	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:38:59,700	[INFO]	245	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:38:59,701	[INFO]	246	SUCCESS	+4.0	
2020-12-30 11:38:59,702	[DEBUG]	
2020-12-30 11:38:59,702	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:39:02,769	[INFO]	248	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:39:06,194	[INFO]	249	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:39:06,196	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:39:07,182	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:39:07,184	[INFO]	251	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:39:07,184	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:39:10,751	[INFO]	252	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:39:10,752	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
--- 14,26 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:39:11,726	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:39:11,729	[INFO]	254	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:39:11,730	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
--- 14,26 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:39:11,731	[INFO]	255	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:39:11,732	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
--- 14,26 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:39:12,692	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:39:13,479	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:39:13,480	[INFO]	258	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:39:13,481	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
--- 14,26 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:39:13,481	[INFO]	259	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:39:13,482	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:39:14,494	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:39:15,472	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:39:15,473	[INFO]	262	SUCCESS	+4.0	
2020-12-30 11:39:15,474	[DEBUG]	
2020-12-30 11:39:16,266	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:39:19,757	[INFO]	264	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:39:19,759	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:39:20,737	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:39:21,713	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:39:22,673	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:39:23,720	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:39:23,721	[INFO]	269	SUCCESS	+4.0	
2020-12-30 11:39:23,722	[DEBUG]	
2020-12-30 11:39:24,705	[INFO]	270	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:39:25,665	[INFO]	271	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:39:26,462	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:39:26,463	[INFO]	273	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:39:27,401	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:39:28,315	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:39:28,316	[INFO]	276	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:39:28,316	[DEBUG]	
2020-12-30 11:39:29,231	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:39:29,233	[INFO]	278	SUCCESS	+4.0	
2020-12-30 11:39:29,233	[DEBUG]	
2020-12-30 11:39:32,544	[INFO]	279	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:39:35,853	[INFO]	280	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:39:35,854	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:39:35,855	[INFO]	281	SUCCESS	+4.0	
2020-12-30 11:39:35,855	[DEBUG]	
2020-12-30 11:39:36,781	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:39:37,709	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:39:37,710	[INFO]	284	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:39:38,634	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:39:39,542	[INFO]	286	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:39:40,293	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:39:40,295	[INFO]	288	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 11:39:40,295	[DEBUG]	
2020-12-30 11:39:40,296	[INFO]	289	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:39:40,296	[INFO]	290	SUCCESS	+4.0	
2020-12-30 11:39:40,297	[DEBUG]	
2020-12-30 11:39:41,286	[INFO]	291	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:39:42,218	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:39:42,219	[INFO]	293	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:39:42,220	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:39:42,220	[INFO]	294	SUCCESS	+4.0	
2020-12-30 11:39:42,221	[DEBUG]	
2020-12-30 11:39:45,858	[INFO]	295	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:39:45,859	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:39:45,860	[INFO]	296	SUCCESS	+4.0	
2020-12-30 11:39:45,860	[DEBUG]	
2020-12-30 11:39:45,861	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:39:46,582	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:39:59,795	[INFO]	299	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:39:59,796	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:40:04,034	[INFO]	301	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:40:07,257	[INFO]	302	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 11:40:08,005	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:40:11,391	[INFO]	304	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:40:11,392	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 11:40:11,394	[INFO]	305	SUCCESS	+4.0	
2020-12-30 11:40:11,395	[DEBUG]	
2020-12-30 11:40:12,165	[INFO]	306	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:40:12,913	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:40:13,669	[INFO]	308	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:40:14,418	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:40:14,421	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:40:14,423	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:40:15,358	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:40:15,359	[INFO]	313	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:40:15,360	[INFO]	314	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:40:18,511	[INFO]	315	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:40:18,513	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:40:21,784	[INFO]	317	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:40:21,785	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 11:40:21,786	[INFO]	318	SUCCESS	+4.0	
2020-12-30 11:40:21,786	[DEBUG]	
2020-12-30 11:40:22,545	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:40:23,306	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:40:24,073	[INFO]	321	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:40:24,074	[INFO]	322	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:40:27,180	[INFO]	323	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:40:27,928	[INFO]	324	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:40:28,875	[INFO]	325	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:40:29,659	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:40:29,662	[INFO]	327	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:40:30,570	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:40:31,481	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:40:31,482	[INFO]	330	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:40:31,483	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:40:32,249	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:40:35,764	[INFO]	332	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:40:35,765	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:40:36,707	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:40:36,709	[INFO]	334	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:40:36,709	[DEBUG]	
2020-12-30 11:40:37,641	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:40:38,558	[INFO]	336	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:40:38,559	[INFO]	337	SUCCESS	+4.0	
2020-12-30 11:40:38,559	[DEBUG]	
2020-12-30 11:40:39,359	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:40:40,105	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:40:41,068	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:40:42,017	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:40:45,370	[INFO]	342	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 11:40:46,305	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:40:47,228	[INFO]	344	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:40:48,164	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:40:51,815	[INFO]	346	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:40:51,816	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:40:51,817	[INFO]	347	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:40:51,817	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:40:51,818	[INFO]	348	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:40:51,818	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:40:52,543	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:40:52,544	[INFO]	350	SUCCESS	+4.0	
2020-12-30 11:40:52,544	[DEBUG]	
2020-12-30 11:40:53,327	[INFO]	351	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:40:54,228	[INFO]	352	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:40:54,977	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:40:54,978	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:40:55,882	[INFO]	355	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:40:58,926	[INFO]	356	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:40:58,928	[INFO]	357	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:40:58,928	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:40:58,929	[INFO]	358	SUCCESS	+4.0	
2020-12-30 11:40:58,929	[DEBUG]	
2020-12-30 11:41:12,161	[INFO]	359	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:41:13,020	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:41:13,021	[INFO]	361	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:41:16,292	[INFO]	362	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:41:16,293	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:41:16,294	[INFO]	363	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:41:16,295	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:41:19,643	[INFO]	364	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:41:19,644	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 11:41:22,971	[INFO]	365	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 11:41:22,972	[INFO]	366	SUCCESS	+4.0	
2020-12-30 11:41:22,972	[DEBUG]	
2020-12-30 11:41:22,973	[INFO]	367	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:41:22,974	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:41:22,974	[INFO]	368	SUCCESS	+4.0	
2020-12-30 11:41:22,974	[DEBUG]	
2020-12-30 11:41:23,917	[INFO]	369	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:41:23,919	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:41:23,919	[INFO]	371	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 11:41:23,920	[DEBUG]	
2020-12-30 11:41:27,241	[INFO]	372	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:41:27,242	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 11:41:27,242	[INFO]	373	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 11:41:27,243	[DEBUG]	
2020-12-30 11:41:27,243	[INFO]	374	SUCCESS	+4.0	
2020-12-30 11:41:27,244	[DEBUG]	
2020-12-30 11:41:28,019	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:41:28,924	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:41:29,894	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:41:29,895	[INFO]	378	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:41:29,896	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:41:30,801	[INFO]	380	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:41:31,543	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:41:32,470	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:41:33,400	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:41:34,322	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:41:35,075	[INFO]	385	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:41:38,397	[INFO]	386	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:41:38,398	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 11:41:38,399	[INFO]	387	SUCCESS	+4.0	
2020-12-30 11:41:38,399	[DEBUG]	
2020-12-30 11:41:39,148	[INFO]	388	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:41:40,068	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:41:43,426	[INFO]	390	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 11:41:43,427	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 11:41:46,757	[INFO]	391	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:41:46,758	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,25 ****
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 11:41:49,811	[INFO]	392	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:41:49,812	[INFO]	393	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 11:41:49,812	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 11:41:49,813	[INFO]	394	SUCCESS	+4.0	
2020-12-30 11:41:49,813	[DEBUG]	
2020-12-30 11:41:50,737	[INFO]	395	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:41:51,652	[INFO]	396	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:41:52,573	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:41:53,511	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:41:53,512	[INFO]	399	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:41:53,512	[DEBUG]	
2020-12-30 11:41:53,513	[INFO]	400	SUCCESS	+4.0	
2020-12-30 11:41:53,513	[DEBUG]	
2020-12-30 11:41:54,251	[INFO]	401	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:41:54,989	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:41:55,904	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:42:00,120	[INFO]	404	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:42:00,827	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:42:01,550	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:42:02,481	[INFO]	407	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:42:07,030	[INFO]	408	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:42:07,031	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:42:07,742	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:42:07,743	[INFO]	410	SUCCESS	+4.0	
2020-12-30 11:42:07,744	[DEBUG]	
2020-12-30 11:42:10,810	[INFO]	411	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:42:11,584	[INFO]	412	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:42:14,956	[INFO]	413	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:42:14,957	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:42:15,698	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:42:16,485	[INFO]	415	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:42:17,253	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:42:17,254	[INFO]	417	SUCCESS	+4.0	
2020-12-30 11:42:17,255	[DEBUG]	
2020-12-30 11:42:17,255	[INFO]	418	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:42:17,981	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:42:17,982	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:42:17,983	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:42:18,712	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:42:18,713	[INFO]	423	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:42:18,714	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:42:18,715	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:42:18,715	[INFO]	426	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:42:21,898	[INFO]	427	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 11:42:22,812	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:42:23,757	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:42:23,759	[INFO]	430	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 11:42:23,760	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 11:42:23,762	[INFO]	431	SUCCESS	+4.0	
2020-12-30 11:42:23,763	[DEBUG]	
2020-12-30 11:42:24,549	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:42:25,291	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:42:26,052	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:42:26,053	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:42:26,964	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:42:40,264	[INFO]	437	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:42:41,149	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:42:44,525	[INFO]	439	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:42:44,526	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:42:45,469	[INFO]	440	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:42:45,470	[INFO]	441	SUCCESS	+4.0	
2020-12-30 11:42:45,470	[DEBUG]	
2020-12-30 11:42:46,390	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:42:47,312	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:42:48,260	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:42:48,262	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:42:49,215	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:42:50,147	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:42:51,088	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:42:51,089	[INFO]	449	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:42:51,090	[INFO]	450	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:42:52,001	[INFO]	451	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:42:52,775	[INFO]	452	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:42:53,694	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:42:53,696	[INFO]	454	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:42:54,628	[INFO]	455	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:42:55,542	[INFO]	456	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:42:56,458	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:42:56,459	[INFO]	458	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:42:57,391	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:43:00,754	[INFO]	460	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 11:43:01,682	[INFO]	461	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:43:02,446	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:43:03,207	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:43:04,127	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:43:04,877	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:43:04,879	[INFO]	466	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:43:04,879	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:43:05,638	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:43:05,639	[INFO]	469	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:43:05,640	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:43:10,189	[INFO]	471	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:43:10,189	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:43:14,699	[INFO]	472	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:43:14,699	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,23 ****
--- 15,27 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 11:43:14,700	[INFO]	473	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:43:14,701	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:43:14,701	[INFO]	474	SUCCESS	+4.0	
2020-12-30 11:43:14,701	[DEBUG]	
2020-12-30 11:43:14,702	[INFO]	475	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:43:15,586	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:43:18,856	[INFO]	477	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 11:43:19,761	[INFO]	478	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:43:20,694	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:43:20,696	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:43:21,455	[INFO]	481	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:43:22,379	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:43:23,142	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:43:23,945	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:43:24,871	[INFO]	485	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:43:25,818	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:43:26,562	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:43:27,314	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:43:28,256	[INFO]	489	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:43:28,258	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:43:29,181	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:43:29,966	[INFO]	492	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:43:34,213	[INFO]	493	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:43:34,932	[INFO]	494	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:43:35,670	[INFO]	495	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:43:35,671	[INFO]	496	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:43:35,672	[INFO]	497	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:43:39,014	[INFO]	498	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:43:39,727	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:43:40,686	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:43:40,687	[INFO]	==== END ====
2020-12-30 11:43:40,687	[INFO]	Reason: step budget
2020-12-30 11:43:40,687	[INFO]	
2020-12-30 11:43:40,687	[INFO]	========== EPOCH 4 ==========
2020-12-30 11:43:40,688	[INFO]	==== WARMUP ====
2020-12-30 11:43:44,068	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 11:43:44,068	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 11:43:47,491	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 11:43:47,492	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 11:43:50,810	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 11:43:50,810	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 11:43:54,152	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-30 11:43:54,153	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 11:43:54,153	[INFO]	==== START ====
2020-12-30 11:43:57,369	[INFO]	1	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 11:43:58,303	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:43:59,065	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:43:59,994	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:44:00,784	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:44:01,539	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:44:04,682	[INFO]	7	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 11:44:04,683	[INFO]	8	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:44:04,683	[DEBUG]	
2020-12-30 11:44:04,684	[INFO]	9	SUCCESS	+4.0	
2020-12-30 11:44:04,684	[DEBUG]	
2020-12-30 11:44:08,013	[INFO]	10	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 11:44:08,923	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:44:09,856	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:44:10,799	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:44:10,800	[INFO]	14	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:44:10,801	[DEBUG]	
2020-12-30 11:44:11,744	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:44:12,689	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:44:12,690	[INFO]	17	SUCCESS	+4.0	
2020-12-30 11:44:12,690	[DEBUG]	
2020-12-30 11:44:13,457	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:44:14,189	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:44:15,113	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:44:15,114	[INFO]	21	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 11:44:15,114	[DEBUG]	
2020-12-30 11:44:15,115	[INFO]	22	SUCCESS	+4.0	
2020-12-30 11:44:15,115	[DEBUG]	
2020-12-30 11:44:16,077	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:44:19,387	[INFO]	24	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 11:44:20,305	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:44:21,233	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:44:22,147	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:44:22,148	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:44:22,909	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:44:23,684	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:44:24,618	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:44:27,918	[INFO]	32	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:44:28,860	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:44:29,833	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:44:33,069	[INFO]	35	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 11:44:37,521	[INFO]	36	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:44:37,521	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:44:37,522	[INFO]	37	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:44:37,523	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:44:38,221	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:44:39,137	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:44:43,697	[INFO]	40	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 11:44:43,699	[INFO]	41	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:44:43,699	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:44:44,541	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:44:44,543	[INFO]	43	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:44:44,543	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:44:44,544	[INFO]	44	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:44:44,545	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:44:44,545	[INFO]	45	SUCCESS	+4.0	
2020-12-30 11:44:44,545	[DEBUG]	
2020-12-30 11:44:44,546	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:44:45,470	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:44:46,389	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:44:47,314	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:44:47,315	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:44:50,428	[INFO]	51	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:44:51,361	[INFO]	52	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:44:52,120	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:44:53,048	[INFO]	54	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:44:53,785	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:44:54,532	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:44:55,442	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:44:56,385	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:44:56,387	[INFO]	59	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:44:59,545	[INFO]	60	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 11:45:00,465	[INFO]	61	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:45:01,250	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:45:04,540	[INFO]	63	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 11:45:05,473	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:45:06,223	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:45:07,163	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:45:07,914	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:45:08,816	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:45:09,725	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:45:12,903	[INFO]	70	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 11:45:13,658	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:45:17,015	[INFO]	72	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:45:17,016	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 11:45:17,017	[INFO]	73	SUCCESS	+4.0	
2020-12-30 11:45:17,017	[DEBUG]	
2020-12-30 11:45:17,018	[INFO]	74	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:45:17,018	[DEBUG]	
2020-12-30 11:45:17,019	[INFO]	75	SUCCESS	+4.0	
2020-12-30 11:45:17,019	[DEBUG]	
2020-12-30 11:45:17,020	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:45:17,743	[INFO]	77	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:45:20,876	[INFO]	78	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:45:20,877	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:45:24,022	[INFO]	80	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:45:24,023	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:45:24,024	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:45:24,025	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:45:24,939	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:45:24,941	[INFO]	85	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:45:24,941	[DEBUG]	
2020-12-30 11:45:25,897	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:45:26,853	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:45:26,855	[INFO]	88	SUCCESS	+4.0	
2020-12-30 11:45:26,856	[DEBUG]	
2020-12-30 11:45:27,766	[INFO]	89	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:45:28,518	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:45:29,462	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:45:29,463	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:45:29,464	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:45:30,264	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:45:31,017	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:45:31,018	[INFO]	96	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 11:45:31,019	[DEBUG]	
2020-12-30 11:45:31,019	[INFO]	97	SUCCESS	+4.0	
2020-12-30 11:45:31,019	[DEBUG]	
2020-12-30 11:45:31,020	[INFO]	98	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:45:31,021	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:45:31,021	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:45:31,022	[INFO]	101	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:45:31,022	[DEBUG]	
2020-12-30 11:45:31,770	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:45:31,772	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:45:31,772	[INFO]	104	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:45:31,773	[INFO]	105	SUCCESS	+4.0	
2020-12-30 11:45:31,773	[DEBUG]	
2020-12-30 11:45:32,672	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:45:36,107	[INFO]	107	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 11:45:37,406	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:45:38,709	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:45:38,711	[INFO]	110	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:45:39,717	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:45:44,499	[INFO]	112	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:45:44,499	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:45:44,500	[INFO]	113	SUCCESS	+4.0	
2020-12-30 11:45:44,501	[DEBUG]	
2020-12-30 11:45:45,430	[INFO]	114	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:45:46,202	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:45:49,301	[INFO]	116	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:45:50,237	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:45:51,002	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:45:51,932	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:45:52,668	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:45:53,405	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:45:56,465	[INFO]	122	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:45:59,790	[INFO]	123	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:46:00,711	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:46:04,051	[INFO]	125	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:46:04,052	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 11:46:04,053	[INFO]	126	SUCCESS	+4.0	
2020-12-30 11:46:04,053	[DEBUG]	
2020-12-30 11:46:04,054	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:46:04,966	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:46:05,708	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:46:06,448	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:46:09,605	[INFO]	131	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 11:46:10,518	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:46:11,278	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:46:14,426	[INFO]	134	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 11:46:15,166	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:46:15,167	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:46:18,446	[INFO]	137	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:46:18,447	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:46:19,395	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:46:20,354	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:46:20,355	[INFO]	140	SUCCESS	+4.0	
2020-12-30 11:46:20,356	[DEBUG]	
2020-12-30 11:46:20,357	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:46:20,357	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:46:23,689	[INFO]	143	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 11:46:24,464	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:46:25,378	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:46:25,379	[INFO]	146	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:46:25,379	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 11:46:26,309	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:46:26,311	[INFO]	148	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:46:26,311	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 11:46:26,312	[INFO]	149	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:46:26,313	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 11:46:27,251	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:46:27,252	[INFO]	151	SUCCESS	+4.0	
2020-12-30 11:46:27,252	[DEBUG]	
2020-12-30 11:46:28,012	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:46:28,013	[INFO]	153	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 11:46:28,013	[DEBUG]	
2020-12-30 11:46:28,014	[INFO]	154	SUCCESS	+4.0	
2020-12-30 11:46:28,014	[DEBUG]	
2020-12-30 11:46:31,353	[INFO]	155	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:46:31,354	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 11:46:32,272	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:46:32,273	[INFO]	157	SUCCESS	+4.0	
2020-12-30 11:46:32,273	[DEBUG]	
2020-12-30 11:46:35,358	[INFO]	158	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:46:35,359	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:46:36,287	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:46:37,257	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:46:41,519	[INFO]	162	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:46:41,520	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:46:42,211	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:46:43,131	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:46:43,132	[INFO]	166	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:46:43,132	[DEBUG]	
2020-12-30 11:46:43,133	[INFO]	167	SUCCESS	+4.0	
2020-12-30 11:46:43,133	[DEBUG]	
2020-12-30 11:46:43,134	[INFO]	168	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:46:43,135	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:46:44,047	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:46:44,049	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:46:44,814	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:46:45,718	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:46:46,485	[INFO]	174	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:46:50,963	[INFO]	175	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:46:50,963	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:46:50,964	[INFO]	176	SUCCESS	+4.0	
2020-12-30 11:46:50,964	[DEBUG]	
2020-12-30 11:46:51,855	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:46:52,777	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:46:55,968	[INFO]	179	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 11:47:09,140	[INFO]	180	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:47:12,380	[INFO]	181	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:47:12,381	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 11:47:12,383	[INFO]	182	SUCCESS	+4.0	
2020-12-30 11:47:12,383	[DEBUG]	
2020-12-30 11:47:13,309	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:47:13,310	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:47:13,311	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:47:16,435	[INFO]	186	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:47:17,202	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:47:20,529	[INFO]	188	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:47:21,279	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:47:24,574	[INFO]	190	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 11:47:24,575	[INFO]	191	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:47:24,576	[INFO]	192	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:47:24,576	[DEBUG]	
2020-12-30 11:47:25,495	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:47:26,233	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:47:26,234	[INFO]	195	SUCCESS	+4.0	
2020-12-30 11:47:26,234	[DEBUG]	
2020-12-30 11:47:27,158	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:47:27,159	[INFO]	197	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:47:28,137	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:47:28,138	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:47:28,139	[INFO]	200	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:47:28,140	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 11:47:28,140	[INFO]	201	SUCCESS	+4.0	
2020-12-30 11:47:28,141	[DEBUG]	
2020-12-30 11:47:31,489	[INFO]	202	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 11:47:31,490	[INFO]	203	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:47:31,490	[DEBUG]	
2020-12-30 11:47:31,491	[INFO]	204	SUCCESS	+4.0	
2020-12-30 11:47:31,491	[DEBUG]	
2020-12-30 11:47:32,400	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:47:32,401	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:47:33,329	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:47:34,243	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:47:35,001	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:47:35,002	[INFO]	210	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:47:35,002	[DEBUG]	
2020-12-30 11:47:35,003	[INFO]	211	SUCCESS	+4.0	
2020-12-30 11:47:35,003	[DEBUG]	
2020-12-30 11:47:38,337	[INFO]	212	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:47:38,338	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 11:47:39,269	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:47:42,614	[INFO]	214	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:47:42,615	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,24 ****
--- 17,30 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 11:47:42,616	[INFO]	215	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 11:47:42,617	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,24 ****
--- 17,30 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 11:47:42,618	[INFO]	216	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:47:42,618	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,24 ****
--- 17,30 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 11:47:43,541	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:47:44,292	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:47:44,294	[INFO]	219	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:47:44,294	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,24 ****
--- 17,30 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 11:47:44,295	[INFO]	220	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:47:44,295	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 11:47:45,054	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:47:45,970	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:47:45,972	[INFO]	223	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:47:45,972	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 11:47:45,973	[INFO]	224	SUCCESS	+4.0	
2020-12-30 11:47:45,973	[DEBUG]	
2020-12-30 11:47:46,897	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:47:47,811	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:47:51,036	[INFO]	227	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 11:47:51,947	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:47:52,683	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:47:56,055	[INFO]	230	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:47:59,473	[INFO]	231	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:47:59,474	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:48:00,386	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:48:00,387	[INFO]	233	SUCCESS	+4.0	
2020-12-30 11:48:00,387	[DEBUG]	
2020-12-30 11:48:01,332	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:48:01,334	[INFO]	235	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 11:48:01,334	[DEBUG]	
2020-12-30 11:48:02,267	[INFO]	236	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:48:02,268	[INFO]	237	SUCCESS	+4.0	
2020-12-30 11:48:02,269	[DEBUG]	
2020-12-30 11:48:03,207	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:48:04,152	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:48:04,907	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:48:04,908	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:48:04,909	[INFO]	242	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:48:04,909	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 11:48:04,910	[INFO]	243	SUCCESS	+4.0	
2020-12-30 11:48:04,910	[DEBUG]	
2020-12-30 11:48:04,911	[INFO]	244	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:48:04,911	[DEBUG]	
2020-12-30 11:48:04,911	[INFO]	245	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:48:04,912	[DEBUG]	
2020-12-30 11:48:05,834	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:48:05,835	[INFO]	247	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:48:05,836	[DEBUG]	
2020-12-30 11:48:06,592	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:48:06,593	[INFO]	249	SUCCESS	+4.0	
2020-12-30 11:48:06,594	[DEBUG]	
2020-12-30 11:48:06,595	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:48:07,550	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:48:07,551	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:48:08,481	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:48:09,403	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:48:12,789	[INFO]	255	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:48:12,790	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:48:12,790	[INFO]	256	SUCCESS	+4.0	
2020-12-30 11:48:12,790	[DEBUG]	
2020-12-30 11:48:12,791	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:48:26,127	[INFO]	258	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:48:29,354	[INFO]	259	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:48:29,355	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 11:48:29,355	[INFO]	260	SUCCESS	+4.0	
2020-12-30 11:48:29,356	[DEBUG]	
2020-12-30 11:48:29,356	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:48:30,274	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:48:30,275	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:48:31,212	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:48:32,174	[INFO]	265	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:48:33,113	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:48:33,882	[INFO]	267	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:48:34,805	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:48:38,430	[INFO]	269	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:48:38,431	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:48:39,345	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:48:39,346	[INFO]	271	SUCCESS	+4.0	
2020-12-30 11:48:39,346	[DEBUG]	
2020-12-30 11:48:40,262	[INFO]	272	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:48:41,267	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:48:42,266	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:48:55,633	[INFO]	275	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:48:58,666	[INFO]	276	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:48:58,668	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:48:58,669	[INFO]	278	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:48:58,669	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 11:48:59,586	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:48:59,587	[INFO]	280	SUCCESS	+4.0	
2020-12-30 11:48:59,588	[DEBUG]	
2020-12-30 11:49:00,351	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:49:01,296	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:49:02,224	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:49:02,226	[INFO]	284	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:49:02,226	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:49:02,227	[INFO]	285	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:49:02,228	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:49:02,229	[INFO]	286	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:49:02,229	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:49:03,162	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:49:04,106	[INFO]	288	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:49:04,108	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:49:04,109	[INFO]	290	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:49:04,110	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:49:05,034	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:49:05,036	[INFO]	292	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:49:05,036	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:49:05,037	[INFO]	293	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:49:05,038	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:49:05,965	[INFO]	294	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:49:05,966	[INFO]	295	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:49:05,966	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:49:05,967	[INFO]	296	SUCCESS	+4.0	
2020-12-30 11:49:05,967	[DEBUG]	
2020-12-30 11:49:09,142	[INFO]	297	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 11:49:09,897	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:49:10,828	[INFO]	299	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:49:14,131	[INFO]	300	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 11:49:15,070	[INFO]	301	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:49:18,222	[INFO]	302	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:49:19,129	[INFO]	303	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:49:19,907	[INFO]	304	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:49:20,657	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:49:20,658	[INFO]	306	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:49:21,420	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:49:25,672	[INFO]	308	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:49:25,673	[INFO]	309	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:49:25,674	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 11:49:25,674	[INFO]	310	SUCCESS	+4.0	
2020-12-30 11:49:25,674	[DEBUG]	
2020-12-30 11:49:25,675	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:49:25,676	[INFO]	312	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 11:49:28,917	[INFO]	313	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:49:28,918	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:49:29,856	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:49:33,179	[INFO]	315	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:49:33,181	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,25 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:49:33,961	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:49:38,627	[INFO]	317	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:49:38,628	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:49:39,497	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:49:44,314	[INFO]	319	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 11:49:44,316	[INFO]	320	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:49:44,316	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:49:44,317	[INFO]	321	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:49:44,317	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:49:44,318	[INFO]	322	SUCCESS	+4.0	
2020-12-30 11:49:44,318	[DEBUG]	
2020-12-30 11:49:45,021	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:49:45,023	[INFO]	324	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:49:45,023	[DEBUG]	
2020-12-30 11:49:45,024	[INFO]	325	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:49:45,024	[DEBUG]	
2020-12-30 11:49:45,952	[INFO]	326	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:49:45,954	[INFO]	327	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:49:45,954	[DEBUG]	
2020-12-30 11:49:45,954	[INFO]	328	SUCCESS	+4.0	
2020-12-30 11:49:45,955	[DEBUG]	
2020-12-30 11:49:46,892	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:49:50,079	[INFO]	330	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 11:49:51,016	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:49:51,017	[INFO]	332	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 11:49:51,777	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:49:52,707	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:49:52,708	[INFO]	335	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 11:49:53,630	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:49:54,561	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:49:55,487	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:49:56,265	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:49:57,016	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:49:57,775	[INFO]	341	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:49:58,542	[INFO]	342	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:50:01,896	[INFO]	343	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 11:50:02,838	[INFO]	344	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:50:02,840	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:50:02,841	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:50:06,178	[INFO]	347	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:50:06,178	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:50:06,179	[INFO]	348	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:50:06,180	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:50:06,181	[INFO]	349	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:50:06,181	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:50:06,182	[INFO]	350	SUCCESS	+4.0	
2020-12-30 11:50:06,182	[DEBUG]	
2020-12-30 11:50:09,330	[INFO]	351	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 11:50:10,084	[INFO]	352	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:50:10,860	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:50:10,861	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:50:10,862	[INFO]	355	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:50:10,862	[DEBUG]	
2020-12-30 11:50:11,771	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:50:11,772	[INFO]	357	SUCCESS	+4.0	
2020-12-30 11:50:11,772	[DEBUG]	
2020-12-30 11:50:12,715	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:50:12,716	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:50:12,717	[INFO]	360	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:50:15,924	[INFO]	361	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 11:50:20,396	[INFO]	362	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:50:23,608	[INFO]	363	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:50:23,609	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:50:27,178	[INFO]	365	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:50:30,477	[INFO]	366	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 11:50:30,477	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 11:50:31,462	[INFO]	367	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:50:31,463	[INFO]	368	SUCCESS	+4.0	
2020-12-30 11:50:31,463	[DEBUG]	
2020-12-30 11:50:31,464	[INFO]	369	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 11:50:31,465	[INFO]	370	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:50:32,232	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:50:33,161	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:50:33,162	[INFO]	373	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:50:33,162	[DEBUG]	
2020-12-30 11:50:33,163	[INFO]	374	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:50:33,163	[DEBUG]	
2020-12-30 11:50:33,164	[INFO]	375	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:50:33,164	[DEBUG]	
2020-12-30 11:50:33,165	[INFO]	376	SUCCESS	+4.0	
2020-12-30 11:50:33,165	[DEBUG]	
2020-12-30 11:50:34,109	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:50:37,423	[INFO]	378	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 11:50:38,152	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:50:39,081	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:50:39,082	[INFO]	381	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 11:50:39,082	[DEBUG]	
2020-12-30 11:50:40,012	[INFO]	382	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:50:43,352	[INFO]	383	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 11:50:43,353	[INFO]	384	SUCCESS	+4.0	
2020-12-30 11:50:43,353	[DEBUG]	
2020-12-30 11:50:43,354	[INFO]	385	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:50:43,354	[DEBUG]	
2020-12-30 11:50:43,355	[INFO]	386	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:50:43,355	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:50:43,356	[INFO]	387	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:50:43,356	[DEBUG]	
2020-12-30 11:50:43,357	[INFO]	388	SUCCESS	+4.0	
2020-12-30 11:50:43,357	[DEBUG]	
2020-12-30 11:50:44,130	[INFO]	389	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:50:44,901	[INFO]	390	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:50:45,803	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:50:46,718	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:50:46,719	[INFO]	393	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:50:46,720	[DEBUG]	
2020-12-30 11:50:47,654	[INFO]	394	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:50:47,655	[INFO]	395	SUCCESS	+4.0	
2020-12-30 11:50:47,655	[DEBUG]	
2020-12-30 11:50:51,933	[INFO]	396	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:50:52,816	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:50:53,562	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:50:53,564	[INFO]	399	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:50:54,468	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:50:55,367	[INFO]	401	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:50:56,318	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:50:56,319	[INFO]	403	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 11:50:57,270	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:51:00,387	[INFO]	405	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:51:01,304	[INFO]	406	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:51:04,725	[INFO]	407	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 11:51:04,728	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:51:08,092	[INFO]	409	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:51:08,093	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:51:09,011	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:51:09,941	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:51:10,707	[INFO]	412	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:51:11,641	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:51:14,988	[INFO]	414	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 11:51:14,989	[INFO]	415	SUCCESS	+4.0	
2020-12-30 11:51:14,989	[DEBUG]	
2020-12-30 11:51:14,990	[INFO]	416	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:51:18,150	[INFO]	417	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 11:51:18,153	[INFO]	418	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:51:18,155	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:51:18,157	[INFO]	420	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:51:18,159	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:51:21,349	[INFO]	422	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 11:51:21,350	[INFO]	423	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 11:51:25,679	[INFO]	424	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:51:25,680	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:51:28,665	[INFO]	426	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:51:29,605	[INFO]	427	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:51:30,547	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:51:31,495	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:51:31,496	[INFO]	430	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 11:51:44,756	[INFO]	431	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:51:47,938	[INFO]	432	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 11:51:51,276	[INFO]	433	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:51:51,277	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 11:51:51,278	[INFO]	434	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:51:51,278	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 11:51:51,279	[INFO]	435	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:51:51,280	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 11:51:52,049	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:51:55,411	[INFO]	437	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:51:55,412	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,23 ****
--- 14,29 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 11:51:55,413	[INFO]	438	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:51:55,413	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 11:51:56,165	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:51:57,092	[INFO]	440	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:51:57,093	[INFO]	441	SUCCESS	+4.0	
2020-12-30 11:51:57,093	[DEBUG]	
2020-12-30 11:51:57,857	[INFO]	442	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:51:58,756	[INFO]	443	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:51:59,690	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:51:59,691	[INFO]	445	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:51:59,692	[INFO]	446	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 11:51:59,692	[DEBUG]	
2020-12-30 11:51:59,693	[INFO]	447	SUCCESS	+4.0	
2020-12-30 11:51:59,693	[DEBUG]	
2020-12-30 11:52:00,654	[INFO]	448	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:52:01,412	[INFO]	449	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:52:02,340	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:52:03,251	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:52:03,252	[INFO]	452	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:52:03,252	[DEBUG]	
2020-12-30 11:52:04,202	[INFO]	453	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:52:05,123	[INFO]	454	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:52:05,124	[INFO]	455	SUCCESS	+4.0	
2020-12-30 11:52:05,124	[DEBUG]	
2020-12-30 11:52:06,027	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:52:06,796	[INFO]	457	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:52:10,127	[INFO]	458	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 11:52:10,127	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 11:52:10,128	[INFO]	459	SUCCESS	+4.0	
2020-12-30 11:52:10,128	[DEBUG]	
2020-12-30 11:52:10,869	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:52:11,771	[INFO]	461	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:52:12,696	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:52:13,451	[INFO]	463	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:52:16,587	[INFO]	464	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 11:52:17,517	[INFO]	465	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:52:18,426	[INFO]	466	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:52:19,198	[INFO]	467	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:52:19,199	[INFO]	468	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 11:52:19,199	[DEBUG]	
2020-12-30 11:52:20,127	[INFO]	469	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:52:21,056	[INFO]	470	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:52:21,993	[INFO]	471	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:52:22,915	[INFO]	472	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:52:22,916	[INFO]	473	SUCCESS	+4.0	
2020-12-30 11:52:22,916	[DEBUG]	
2020-12-30 11:52:22,917	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:52:26,082	[INFO]	475	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:52:27,023	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:52:30,397	[INFO]	477	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:52:30,397	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 11:52:30,398	[INFO]	478	SUCCESS	+4.0	
2020-12-30 11:52:30,398	[DEBUG]	
2020-12-30 11:52:33,520	[INFO]	479	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:52:34,430	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:52:35,369	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:52:35,370	[INFO]	482	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 11:52:36,302	[INFO]	483	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:52:39,689	[INFO]	484	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:52:39,690	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:52:40,464	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:52:40,466	[INFO]	486	SUCCESS	+4.0	
2020-12-30 11:52:40,467	[DEBUG]	
2020-12-30 11:52:40,468	[INFO]	487	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 11:52:41,423	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:52:41,424	[INFO]	489	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 11:52:41,424	[DEBUG]	
2020-12-30 11:52:41,425	[INFO]	490	SUCCESS	+4.0	
2020-12-30 11:52:41,425	[DEBUG]	
2020-12-30 11:52:41,426	[INFO]	491	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:52:41,426	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:52:42,368	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:52:43,127	[INFO]	493	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:52:43,129	[INFO]	494	SUCCESS	+4.0	
2020-12-30 11:52:43,130	[DEBUG]	
2020-12-30 11:52:43,132	[INFO]	495	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:52:43,132	[DEBUG]	
2020-12-30 11:52:46,280	[INFO]	496	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 11:52:50,590	[INFO]	497	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:52:50,591	[INFO]	498	SUCCESS	+4.0	
2020-12-30 11:52:50,591	[DEBUG]	
2020-12-30 11:52:54,755	[INFO]	499	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:52:55,609	[INFO]	500	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:52:55,610	[INFO]	==== END ====
2020-12-30 11:52:55,610	[INFO]	Reason: step budget
2020-12-30 11:52:55,610	[INFO]	
2020-12-30 11:52:55,610	[INFO]	========== EPOCH 5 ==========
2020-12-30 11:52:55,611	[INFO]	==== WARMUP ====
2020-12-30 11:52:58,914	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 11:52:58,914	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 11:53:02,239	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 11:53:02,239	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 11:53:05,591	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 11:53:05,591	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 11:53:08,889	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-30 11:53:08,889	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 11:53:08,889	[INFO]	==== START ====
2020-12-30 11:53:09,629	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:53:12,941	[INFO]	2	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:53:12,941	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:53:12,942	[INFO]	3	SUCCESS	+4.0	
2020-12-30 11:53:12,942	[DEBUG]	
2020-12-30 11:53:12,943	[INFO]	4	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:53:12,943	[DEBUG]	
2020-12-30 11:53:12,944	[INFO]	5	SUCCESS	+4.0	
2020-12-30 11:53:12,944	[DEBUG]	
2020-12-30 11:53:12,945	[INFO]	6	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:53:12,945	[DEBUG]	
2020-12-30 11:53:12,946	[INFO]	7	SUCCESS	+4.0	
2020-12-30 11:53:12,946	[DEBUG]	
2020-12-30 11:53:13,888	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:53:13,889	[INFO]	9	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:53:13,890	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:53:14,649	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:53:14,650	[INFO]	11	SUCCESS	+4.0	
2020-12-30 11:53:14,650	[DEBUG]	
2020-12-30 11:53:15,549	[INFO]	12	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:53:16,306	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:53:17,070	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:53:17,823	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:53:18,739	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:53:21,868	[INFO]	17	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:53:22,814	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:53:22,815	[INFO]	19	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 11:53:22,815	[DEBUG]	
2020-12-30 11:53:23,551	[INFO]	20	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:53:23,552	[INFO]	21	SUCCESS	+4.0	
2020-12-30 11:53:23,552	[DEBUG]	
2020-12-30 11:53:24,329	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:53:25,073	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:53:25,811	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:53:26,734	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:53:27,668	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:53:31,009	[INFO]	27	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:53:31,010	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 11:53:31,010	[INFO]	28	SUCCESS	+4.0	
2020-12-30 11:53:31,011	[DEBUG]	
2020-12-30 11:53:31,771	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:53:32,719	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:53:33,661	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:53:37,317	[INFO]	32	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:53:37,318	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:53:38,239	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:53:38,240	[INFO]	34	SUCCESS	+4.0	
2020-12-30 11:53:38,240	[DEBUG]	
2020-12-30 11:53:39,171	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:53:40,132	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:53:41,308	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:53:42,478	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:53:43,845	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:53:43,846	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:53:48,247	[INFO]	41	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:53:48,248	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:53:51,712	[INFO]	42	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:53:51,713	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,23 ****
--- 17,29 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 11:53:51,714	[INFO]	43	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:53:51,714	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:53:55,055	[INFO]	44	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:53:55,859	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:53:56,860	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:53:56,861	[INFO]	47	SUCCESS	+4.0	
2020-12-30 11:53:56,861	[DEBUG]	
2020-12-30 11:53:57,806	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:53:58,738	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:53:59,655	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:54:03,040	[INFO]	51	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:54:03,042	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:54:03,042	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:54:03,850	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:54:04,799	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:54:04,800	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:54:05,559	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:54:06,485	[INFO]	58	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:54:09,588	[INFO]	59	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:54:10,523	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:54:11,455	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:54:11,456	[INFO]	62	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:54:11,456	[DEBUG]	
2020-12-30 11:54:11,457	[INFO]	63	SUCCESS	+4.0	
2020-12-30 11:54:11,457	[DEBUG]	
2020-12-30 11:54:12,207	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:54:13,139	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:54:14,096	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:54:17,681	[INFO]	67	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 11:54:18,519	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:54:18,520	[INFO]	69	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:54:18,520	[DEBUG]	
2020-12-30 11:54:19,226	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:54:19,227	[INFO]	71	SUCCESS	+4.0	
2020-12-30 11:54:19,228	[DEBUG]	
2020-12-30 11:54:19,959	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:54:19,960	[INFO]	73	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:54:19,960	[DEBUG]	
2020-12-30 11:54:19,961	[INFO]	74	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:54:19,962	[INFO]	75	SUCCESS	+4.0	
2020-12-30 11:54:19,962	[DEBUG]	
2020-12-30 11:54:20,908	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:54:21,692	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:54:35,029	[INFO]	78	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:54:35,750	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:54:35,751	[INFO]	80	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 11:54:36,678	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:54:36,681	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:54:36,682	[INFO]	83	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:54:36,683	[DEBUG]	
2020-12-30 11:54:36,685	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:54:37,432	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:54:37,434	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:54:38,195	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:54:39,090	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:54:39,091	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:54:39,092	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:54:39,092	[INFO]	91	SUCCESS	+4.0	
2020-12-30 11:54:39,093	[DEBUG]	
2020-12-30 11:54:40,032	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:54:41,026	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:54:41,027	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:54:41,971	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:54:41,973	[INFO]	96	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:54:41,973	[DEBUG]	
2020-12-30 11:54:45,118	[INFO]	97	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:54:45,119	[INFO]	98	SUCCESS	+4.0	
2020-12-30 11:54:45,119	[DEBUG]	
2020-12-30 11:54:45,120	[INFO]	99	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 11:54:45,120	[DEBUG]	
2020-12-30 11:54:48,803	[INFO]	100	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:54:48,804	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:54:52,487	[INFO]	101	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 11:54:52,488	[INFO]	102	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 11:54:52,489	[DEBUG]	
2020-12-30 11:54:52,489	[INFO]	103	SUCCESS	+4.0	
2020-12-30 11:54:52,489	[DEBUG]	
2020-12-30 11:54:53,412	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:54:54,170	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:54:54,172	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:54:57,325	[INFO]	107	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 11:54:58,250	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:54:59,041	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:54:59,042	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:54:59,806	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:55:04,123	[INFO]	112	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:55:04,124	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:55:04,814	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:55:08,102	[INFO]	115	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 11:55:08,852	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:55:09,783	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:55:10,720	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:55:13,899	[INFO]	119	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:55:14,831	[INFO]	120	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:55:15,775	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:55:15,776	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:55:16,697	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:55:17,623	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:55:17,624	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:55:18,553	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:55:19,502	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:55:20,502	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:55:21,441	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:55:22,230	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:55:22,979	[INFO]	131	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:55:22,981	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:55:27,276	[INFO]	133	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:55:28,164	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:55:29,099	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:55:30,070	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:55:31,003	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:55:34,376	[INFO]	138	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:55:34,377	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:55:34,378	[INFO]	139	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:55:34,378	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:55:35,438	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:55:36,483	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:55:36,485	[INFO]	142	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:55:36,485	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:55:37,781	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:55:37,783	[INFO]	144	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:55:37,784	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:55:37,785	[INFO]	145	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:55:37,786	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:55:37,787	[INFO]	146	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:55:37,787	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:55:37,789	[INFO]	147	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:55:37,789	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:55:38,816	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:55:38,818	[INFO]	149	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:55:38,818	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:55:39,633	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:55:39,635	[INFO]	151	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:55:39,635	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 11:55:40,397	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:55:40,398	[INFO]	153	SUCCESS	+4.0	
2020-12-30 11:55:40,398	[DEBUG]	
2020-12-30 11:55:41,212	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:55:42,182	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:55:42,183	[INFO]	156	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 11:55:42,184	[DEBUG]	
2020-12-30 11:55:43,170	[INFO]	157	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:55:44,086	[INFO]	158	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:55:44,088	[INFO]	159	SUCCESS	+4.0	
2020-12-30 11:55:44,089	[DEBUG]	
2020-12-30 11:55:45,170	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:55:45,977	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:55:49,409	[INFO]	162	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:55:49,410	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 11:55:49,411	[INFO]	163	SUCCESS	+4.0	
2020-12-30 11:55:49,411	[DEBUG]	
2020-12-30 11:55:52,593	[INFO]	164	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 11:55:52,595	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:55:53,352	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:55:54,266	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:55:58,775	[INFO]	168	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:55:58,775	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:55:58,776	[INFO]	169	SUCCESS	+4.0	
2020-12-30 11:55:58,776	[DEBUG]	
2020-12-30 11:55:59,492	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:55:59,494	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:56:00,424	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:56:01,181	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:56:02,076	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:56:03,070	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:56:03,824	[INFO]	176	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:56:04,746	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:56:08,092	[INFO]	178	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:56:08,093	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 11:56:08,094	[INFO]	179	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:56:08,095	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 11:56:08,096	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:56:09,023	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:56:12,256	[INFO]	182	SUCCESS	 8.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 11:56:12,257	[INFO]	183	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:56:12,258	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 11:56:12,258	[INFO]	184	SUCCESS	+4.0	
2020-12-30 11:56:12,258	[DEBUG]	
2020-12-30 11:56:13,173	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:56:13,175	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:56:14,149	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:56:15,117	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:56:16,022	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:56:16,946	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:56:16,947	[INFO]	191	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:56:17,896	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:56:18,832	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:56:19,743	[INFO]	194	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:56:22,879	[INFO]	195	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:56:26,304	[INFO]	196	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:56:26,305	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:56:30,557	[INFO]	197	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:56:33,830	[INFO]	198	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:56:33,831	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
--- 14,26 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:56:37,154	[INFO]	199	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 11:56:40,528	[INFO]	200	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:56:40,529	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 11:56:40,529	[INFO]	201	SUCCESS	+4.0	
2020-12-30 11:56:40,530	[DEBUG]	
2020-12-30 11:56:41,514	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:56:41,516	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:56:44,725	[INFO]	204	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:56:48,443	[INFO]	205	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:56:48,444	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:56:48,444	[INFO]	206	SUCCESS	+4.0	
2020-12-30 11:56:48,444	[DEBUG]	
2020-12-30 11:56:48,445	[INFO]	207	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:56:48,446	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 11:56:48,446	[INFO]	208	SUCCESS	+4.0	
2020-12-30 11:56:48,446	[DEBUG]	
2020-12-30 11:56:49,375	[INFO]	209	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:56:50,120	[INFO]	210	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:56:51,052	[INFO]	211	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:56:51,982	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:56:52,754	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:56:52,757	[INFO]	214	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:56:52,758	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 11:56:52,759	[INFO]	215	SUCCESS	+4.0	
2020-12-30 11:56:52,760	[DEBUG]	
2020-12-30 11:56:52,762	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:56:52,763	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:56:52,764	[INFO]	218	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 11:56:52,764	[DEBUG]	
2020-12-30 11:56:53,522	[INFO]	219	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:56:54,422	[INFO]	220	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:56:57,632	[INFO]	221	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 11:56:57,633	[INFO]	222	SUCCESS	+4.0	
2020-12-30 11:56:57,633	[DEBUG]	
2020-12-30 11:56:58,569	[INFO]	223	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:56:59,329	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:57:02,750	[INFO]	225	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 11:57:02,751	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:57:05,893	[INFO]	227	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:57:10,164	[INFO]	228	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:57:13,513	[INFO]	229	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:57:13,514	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 11:57:13,515	[INFO]	230	SUCCESS	+4.0	
2020-12-30 11:57:13,515	[DEBUG]	
2020-12-30 11:57:14,422	[INFO]	231	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:57:15,379	[INFO]	232	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:57:15,380	[INFO]	233	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:57:15,381	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 11:57:18,760	[INFO]	234	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 11:57:19,695	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:57:19,696	[INFO]	236	SUCCESS	+4.0	
2020-12-30 11:57:19,696	[DEBUG]	
2020-12-30 11:57:20,645	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:57:20,646	[INFO]	238	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:57:20,647	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:57:20,647	[INFO]	240	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 11:57:20,648	[DEBUG]	
2020-12-30 11:57:21,597	[INFO]	241	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:57:21,598	[INFO]	242	SUCCESS	+4.0	
2020-12-30 11:57:21,598	[DEBUG]	
2020-12-30 11:57:24,861	[INFO]	243	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 11:57:25,796	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:57:26,781	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:57:27,571	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:57:30,740	[INFO]	247	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 11:57:31,666	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:57:31,667	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:57:31,667	[INFO]	250	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:57:31,668	[DEBUG]	
2020-12-30 11:57:31,668	[INFO]	251	SUCCESS	+4.0	
2020-12-30 11:57:31,668	[DEBUG]	
2020-12-30 11:57:35,024	[INFO]	252	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:57:35,025	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:57:35,025	[INFO]	253	SUCCESS	+4.0	
2020-12-30 11:57:35,025	[DEBUG]	
2020-12-30 11:57:35,794	[INFO]	254	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:57:36,717	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:57:37,477	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:57:38,230	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:57:38,974	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:57:39,905	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:57:40,703	[INFO]	260	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:57:41,468	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:57:42,389	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:57:43,324	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:57:44,254	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:57:47,924	[INFO]	265	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:57:47,925	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:57:51,033	[INFO]	266	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:57:51,034	[INFO]	267	SUCCESS	+4.0	
2020-12-30 11:57:51,034	[DEBUG]	
2020-12-30 11:57:51,035	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:57:51,942	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:57:52,900	[INFO]	270	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:57:53,664	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:57:53,665	[INFO]	272	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:57:54,599	[INFO]	273	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:57:55,348	[INFO]	274	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:57:55,349	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:57:56,270	[INFO]	276	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:58:00,574	[INFO]	277	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:58:01,427	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:58:01,428	[INFO]	279	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:58:01,429	[DEBUG]	
2020-12-30 11:58:01,429	[INFO]	280	SUCCESS	+4.0	
2020-12-30 11:58:01,430	[DEBUG]	
2020-12-30 11:58:02,370	[INFO]	281	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:58:03,322	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:58:03,323	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:58:03,324	[INFO]	284	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:58:04,254	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:58:04,255	[INFO]	286	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:58:04,256	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:58:07,438	[INFO]	288	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 11:58:07,439	[INFO]	289	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:58:10,789	[INFO]	290	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 11:58:10,790	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 11:58:10,791	[INFO]	291	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:58:10,792	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 11:58:10,792	[INFO]	292	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:58:10,792	[DEBUG]	
2020-12-30 11:58:10,793	[INFO]	293	SUCCESS	+4.0	
2020-12-30 11:58:10,793	[DEBUG]	
2020-12-30 11:58:14,093	[INFO]	294	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 11:58:14,846	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:58:15,787	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:58:16,730	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:58:19,919	[INFO]	298	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 11:58:20,881	[INFO]	299	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:58:21,829	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:58:22,782	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:58:25,945	[INFO]	302	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:58:25,946	[INFO]	303	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:58:25,946	[DEBUG]	
2020-12-30 11:58:25,947	[INFO]	304	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:58:25,948	[INFO]	305	SUCCESS	+4.0	
2020-12-30 11:58:25,948	[DEBUG]	
2020-12-30 11:58:29,292	[INFO]	306	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 11:58:29,292	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 11:58:29,293	[INFO]	307	SUCCESS	+4.0	
2020-12-30 11:58:29,293	[DEBUG]	
2020-12-30 11:58:30,233	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:58:33,651	[INFO]	309	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 11:58:33,652	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:58:47,269	[INFO]	311	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:58:47,986	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:58:48,910	[INFO]	313	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:58:49,854	[INFO]	314	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:58:50,779	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:58:50,780	[INFO]	316	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:58:51,731	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:58:56,304	[INFO]	318	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:58:56,305	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:58:56,305	[INFO]	319	SUCCESS	+4.0	
2020-12-30 11:58:56,306	[DEBUG]	
2020-12-30 11:58:59,331	[INFO]	320	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:59:00,100	[INFO]	321	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:59:01,051	[INFO]	322	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:59:02,023	[INFO]	323	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:59:02,954	[INFO]	324	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:59:02,955	[INFO]	325	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 11:59:02,956	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 11:59:06,292	[INFO]	326	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:59:07,231	[INFO]	327	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:59:10,448	[INFO]	328	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 11:59:10,449	[INFO]	329	SUCCESS	+4.0	
2020-12-30 11:59:10,449	[DEBUG]	
2020-12-30 11:59:11,215	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:59:12,132	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:59:12,134	[INFO]	332	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:59:12,134	[DEBUG]	
2020-12-30 11:59:12,134	[INFO]	333	SUCCESS	+4.0	
2020-12-30 11:59:12,135	[DEBUG]	
2020-12-30 11:59:13,087	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:59:13,840	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:59:14,619	[INFO]	336	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:59:17,776	[INFO]	337	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 11:59:17,778	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:59:21,132	[INFO]	339	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 11:59:22,054	[INFO]	340	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:59:22,055	[INFO]	341	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 11:59:22,056	[DEBUG]	
2020-12-30 11:59:22,809	[INFO]	342	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:59:22,811	[INFO]	343	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:59:22,811	[DEBUG]	
2020-12-30 11:59:26,034	[INFO]	344	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 11:59:26,036	[INFO]	345	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:59:26,036	[DEBUG]	
2020-12-30 11:59:26,037	[INFO]	346	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:59:26,037	[DEBUG]	
2020-12-30 11:59:26,802	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:59:27,758	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 11:59:27,759	[INFO]	349	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:59:27,760	[DEBUG]	
2020-12-30 11:59:27,760	[INFO]	350	SUCCESS	+4.0	
2020-12-30 11:59:27,760	[DEBUG]	
2020-12-30 11:59:27,761	[INFO]	351	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:59:27,762	[INFO]	352	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:59:27,762	[DEBUG]	
2020-12-30 11:59:28,705	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:59:28,706	[INFO]	354	SUCCESS	+4.0	
2020-12-30 11:59:28,707	[DEBUG]	
2020-12-30 11:59:29,639	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:59:30,574	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:59:31,518	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:59:32,282	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:59:36,795	[INFO]	359	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:59:36,796	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:59:37,688	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:59:37,689	[INFO]	361	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 11:59:37,690	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:59:37,691	[INFO]	362	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 11:59:37,691	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:59:37,692	[INFO]	363	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:59:37,692	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 11:59:38,622	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:59:39,560	[INFO]	365	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:59:39,561	[INFO]	366	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 11:59:39,562	[DEBUG]	
2020-12-30 11:59:39,562	[INFO]	367	SUCCESS	+4.0	
2020-12-30 11:59:39,562	[DEBUG]	
2020-12-30 11:59:40,520	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 11:59:41,469	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:59:44,540	[INFO]	370	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 11:59:45,477	[INFO]	371	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 11:59:46,239	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:59:46,240	[INFO]	373	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 11:59:46,241	[DEBUG]	
2020-12-30 11:59:46,241	[INFO]	374	SUCCESS	+4.0	
2020-12-30 11:59:46,241	[DEBUG]	
2020-12-30 11:59:47,003	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 11:59:47,942	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 11:59:51,105	[INFO]	377	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 11:59:52,051	[INFO]	378	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 11:59:52,848	[INFO]	379	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 11:59:52,850	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 11:59:56,242	[INFO]	381	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 11:59:56,243	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 11:59:57,171	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:00:00,531	[INFO]	383	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:00:00,532	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,23 ****
--- 16,29 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:00:00,533	[INFO]	384	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:00:00,533	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:00:00,534	[INFO]	385	SUCCESS	+4.0	
2020-12-30 12:00:00,534	[DEBUG]	
2020-12-30 12:00:01,291	[INFO]	386	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:00:01,293	[INFO]	387	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:00:01,293	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:00:01,293	[INFO]	388	SUCCESS	+4.0	
2020-12-30 12:00:01,294	[DEBUG]	
2020-12-30 12:00:02,191	[INFO]	389	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:00:03,153	[INFO]	390	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:00:06,505	[INFO]	391	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:00:06,506	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:00:07,262	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:00:07,263	[INFO]	393	SUCCESS	+4.0	
2020-12-30 12:00:07,263	[DEBUG]	
2020-12-30 12:00:08,185	[INFO]	394	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:00:11,417	[INFO]	395	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 12:00:12,353	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:00:13,283	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:00:13,285	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:00:14,226	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:00:15,018	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:00:15,949	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:00:16,899	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:00:16,900	[INFO]	403	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:00:16,900	[DEBUG]	
2020-12-30 12:00:17,669	[INFO]	404	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:00:17,671	[INFO]	405	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:00:17,671	[DEBUG]	
2020-12-30 12:00:17,671	[INFO]	406	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:00:17,672	[DEBUG]	
2020-12-30 12:00:18,606	[INFO]	407	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:00:19,381	[INFO]	408	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:00:19,384	[INFO]	409	SUCCESS	+4.0	
2020-12-30 12:00:19,385	[DEBUG]	
2020-12-30 12:00:19,386	[INFO]	410	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:00:19,387	[DEBUG]	
2020-12-30 12:00:23,635	[INFO]	411	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:00:23,636	[INFO]	412	SUCCESS	+4.0	
2020-12-30 12:00:23,636	[DEBUG]	
2020-12-30 12:00:26,971	[INFO]	413	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:00:26,972	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:00:26,972	[INFO]	414	SUCCESS	+4.0	
2020-12-30 12:00:26,973	[DEBUG]	
2020-12-30 12:00:26,973	[INFO]	415	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:00:27,936	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:00:28,882	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:00:29,821	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:00:30,758	[INFO]	419	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:00:31,703	[INFO]	420	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:00:31,704	[INFO]	421	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:00:31,705	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:00:32,656	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:00:33,628	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:00:34,570	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:00:34,573	[INFO]	425	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:00:34,573	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:00:34,574	[INFO]	426	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:00:34,575	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:00:38,103	[INFO]	427	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:00:38,104	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,25 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:00:38,105	[INFO]	428	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:00:38,105	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:00:38,106	[INFO]	429	SUCCESS	+4.0	
2020-12-30 12:00:38,106	[DEBUG]	
2020-12-30 12:00:39,020	[INFO]	430	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:00:40,032	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:00:40,831	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:00:40,832	[INFO]	433	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:00:40,832	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:00:44,206	[INFO]	434	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 12:00:45,136	[INFO]	435	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:00:45,137	[INFO]	436	SUCCESS	+4.0	
2020-12-30 12:00:45,137	[DEBUG]	
2020-12-30 12:00:46,080	[INFO]	437	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:00:46,082	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:00:46,083	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:00:47,034	[INFO]	440	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:00:47,975	[INFO]	441	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:00:48,752	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:00:49,501	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:00:49,503	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:00:49,503	[INFO]	445	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:00:49,504	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:00:49,504	[INFO]	446	SUCCESS	+4.0	
2020-12-30 12:00:49,505	[DEBUG]	
2020-12-30 12:00:50,447	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:00:50,448	[INFO]	448	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:00:50,448	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:00:50,449	[INFO]	449	SUCCESS	+4.0	
2020-12-30 12:00:50,449	[DEBUG]	
2020-12-30 12:00:50,450	[INFO]	450	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:00:50,451	[INFO]	451	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:00:50,451	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:00:51,387	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:00:52,332	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:00:53,090	[INFO]	454	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:00:53,859	[INFO]	455	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:00:53,860	[INFO]	456	SUCCESS	+4.0	
2020-12-30 12:00:53,860	[DEBUG]	
2020-12-30 12:00:54,751	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:00:55,504	[INFO]	458	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:00:56,428	[INFO]	459	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:00:57,372	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:01:00,591	[INFO]	461	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 12:01:01,539	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:01:06,093	[INFO]	463	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:01:06,093	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:01:06,094	[INFO]	464	SUCCESS	+4.0	
2020-12-30 12:01:06,094	[DEBUG]	
2020-12-30 12:01:09,210	[INFO]	465	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:01:09,951	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:01:09,952	[INFO]	467	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:01:09,952	[DEBUG]	
2020-12-30 12:01:10,879	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:01:10,880	[INFO]	469	SUCCESS	+4.0	
2020-12-30 12:01:10,880	[DEBUG]	
2020-12-30 12:01:11,819	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:01:16,122	[INFO]	471	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:01:16,123	[INFO]	472	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:01:16,124	[DEBUG]	
2020-12-30 12:01:19,344	[INFO]	473	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:01:19,345	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:01:19,347	[INFO]	474	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:01:19,347	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:01:19,348	[INFO]	475	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:01:19,348	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:01:20,124	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:01:20,125	[INFO]	477	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:01:23,495	[INFO]	478	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:01:23,496	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:01:23,497	[INFO]	479	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:01:23,498	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:01:24,460	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:01:27,823	[INFO]	481	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:01:27,824	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:01:27,825	[INFO]	482	SUCCESS	+4.0	
2020-12-30 12:01:27,825	[DEBUG]	
2020-12-30 12:01:28,752	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:01:29,519	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:01:29,521	[INFO]	485	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:01:29,521	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:01:29,522	[INFO]	486	SUCCESS	+4.0	
2020-12-30 12:01:29,522	[DEBUG]	
2020-12-30 12:01:30,412	[INFO]	487	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:01:31,175	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:01:31,176	[INFO]	489	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:01:31,930	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:01:31,931	[INFO]	491	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:01:31,931	[DEBUG]	
2020-12-30 12:01:32,677	[INFO]	492	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:01:33,580	[INFO]	493	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:01:33,581	[INFO]	494	SUCCESS	+4.0	
2020-12-30 12:01:33,581	[DEBUG]	
2020-12-30 12:01:33,582	[INFO]	495	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:01:34,350	[INFO]	496	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:01:35,288	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:01:36,221	[INFO]	498	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:01:36,223	[INFO]	499	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:01:36,223	[DEBUG]	
2020-12-30 12:01:37,156	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:01:37,157	[INFO]	==== END ====
2020-12-30 12:01:37,157	[INFO]	Reason: step budget
2020-12-30 12:01:37,157	[INFO]	
2020-12-30 12:01:37,157	[INFO]	========== EPOCH 6 ==========
2020-12-30 12:01:37,158	[INFO]	==== WARMUP ====
2020-12-30 12:01:40,523	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 12:01:40,523	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:01:43,924	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 12:01:43,924	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:01:47,266	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 12:01:47,266	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:01:50,553	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-30 12:01:50,553	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:01:50,554	[INFO]	==== START ====
2020-12-30 12:01:51,326	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:01:51,328	[INFO]	2	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:01:51,328	[DEBUG]	
2020-12-30 12:01:51,328	[INFO]	3	SUCCESS	+4.0	
2020-12-30 12:01:51,328	[DEBUG]	
2020-12-30 12:01:54,527	[INFO]	4	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 12:01:54,528	[INFO]	5	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:01:54,528	[DEBUG]	
2020-12-30 12:01:54,529	[INFO]	6	SUCCESS	+4.0	
2020-12-30 12:01:54,529	[DEBUG]	
2020-12-30 12:01:55,449	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:01:59,165	[INFO]	8	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:01:59,166	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:02:00,110	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:02:00,112	[INFO]	10	SUCCESS	+4.0	
2020-12-30 12:02:00,112	[DEBUG]	
2020-12-30 12:02:01,039	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:02:05,559	[INFO]	12	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:02:05,559	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:02:05,560	[INFO]	13	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:02:05,561	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:02:06,459	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:02:06,461	[INFO]	15	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:02:06,461	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:02:06,462	[INFO]	16	SUCCESS	+4.0	
2020-12-30 12:02:06,462	[DEBUG]	
2020-12-30 12:02:06,463	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:02:07,366	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:02:08,291	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:02:09,055	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:02:09,814	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:02:13,173	[INFO]	22	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:02:16,500	[INFO]	23	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:02:16,501	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:02:16,502	[INFO]	24	SUCCESS	+4.0	
2020-12-30 12:02:16,502	[DEBUG]	
2020-12-30 12:02:17,426	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:02:18,350	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:02:19,347	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:02:20,136	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:02:21,073	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:02:22,037	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:02:22,960	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:02:26,305	[INFO]	32	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:02:26,306	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:02:26,307	[INFO]	33	SUCCESS	+4.0	
2020-12-30 12:02:26,307	[DEBUG]	
2020-12-30 12:02:29,563	[INFO]	34	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 12:02:32,769	[INFO]	35	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 12:02:33,544	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:02:36,909	[INFO]	37	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:02:36,910	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:02:36,910	[INFO]	38	SUCCESS	+4.0	
2020-12-30 12:02:36,911	[DEBUG]	
2020-12-30 12:02:41,197	[INFO]	39	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:02:42,079	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:02:42,081	[INFO]	41	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:02:42,081	[DEBUG]	
2020-12-30 12:02:42,973	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:02:42,974	[INFO]	43	SUCCESS	+4.0	
2020-12-30 12:02:42,974	[DEBUG]	
2020-12-30 12:02:43,734	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:02:43,736	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:02:44,479	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:02:44,480	[INFO]	47	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:02:44,480	[DEBUG]	
2020-12-30 12:02:45,409	[INFO]	48	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:02:45,410	[INFO]	49	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:02:45,411	[INFO]	50	SUCCESS	+4.0	
2020-12-30 12:02:45,411	[DEBUG]	
2020-12-30 12:02:45,412	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:02:48,545	[INFO]	52	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:02:48,546	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:02:51,883	[INFO]	54	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:02:51,884	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:02:52,847	[INFO]	55	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:02:56,110	[INFO]	56	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:02:56,111	[INFO]	57	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:02:56,112	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:02:56,914	[INFO]	58	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:02:56,916	[INFO]	59	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:02:56,917	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:03:00,758	[INFO]	60	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:03:00,759	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,25 ****
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:03:00,760	[INFO]	61	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:03:00,760	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:03:00,760	[INFO]	62	SUCCESS	+4.0	
2020-12-30 12:03:00,761	[DEBUG]	
2020-12-30 12:03:00,761	[INFO]	63	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:03:00,761	[DEBUG]	
2020-12-30 12:03:00,762	[INFO]	64	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:03:00,762	[DEBUG]	
2020-12-30 12:03:00,763	[INFO]	65	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:03:00,763	[DEBUG]	
2020-12-30 12:03:01,694	[INFO]	66	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:03:01,695	[INFO]	67	SUCCESS	+4.0	
2020-12-30 12:03:01,695	[DEBUG]	
2020-12-30 12:03:01,696	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:03:02,691	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:03:02,693	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:03:03,705	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:03:07,393	[INFO]	72	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:03:07,394	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:03:07,395	[INFO]	73	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:03:07,395	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:03:08,128	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:03:11,476	[INFO]	75	SUCCESS	 8.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 12:03:11,477	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:03:11,478	[INFO]	77	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:03:11,479	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:03:12,388	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:03:12,392	[INFO]	79	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:03:12,393	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:03:12,394	[INFO]	80	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:03:12,395	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:03:12,397	[INFO]	81	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:03:12,397	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:03:12,398	[INFO]	82	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:03:12,399	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:03:13,177	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:03:14,090	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:03:15,042	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:03:15,043	[INFO]	86	SUCCESS	+4.0	
2020-12-30 12:03:15,043	[DEBUG]	
2020-12-30 12:03:18,150	[INFO]	87	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:03:19,105	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:03:20,034	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:03:20,036	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:03:20,810	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:03:21,712	[INFO]	92	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:03:25,109	[INFO]	93	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:03:25,109	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:03:25,110	[INFO]	94	SUCCESS	+4.0	
2020-12-30 12:03:25,110	[DEBUG]	
2020-12-30 12:03:25,111	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:03:25,851	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:03:26,769	[INFO]	97	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:03:40,098	[INFO]	98	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:03:41,014	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:03:44,096	[INFO]	100	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:03:45,018	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:03:45,803	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:03:49,014	[INFO]	103	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 12:03:49,015	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:03:49,786	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:03:50,567	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:03:51,472	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:03:52,252	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:03:52,253	[INFO]	109	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:03:52,254	[DEBUG]	
2020-12-30 12:03:53,165	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:03:53,166	[INFO]	111	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:03:53,167	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:03:53,168	[INFO]	112	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:03:53,168	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:03:54,108	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:03:54,109	[INFO]	114	SUCCESS	+4.0	
2020-12-30 12:03:54,109	[DEBUG]	
2020-12-30 12:03:54,110	[INFO]	115	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:03:54,112	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:03:57,457	[INFO]	117	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:03:57,458	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:03:57,459	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:04:00,814	[INFO]	119	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 12:04:00,817	[INFO]	120	SUCCESS	+4.0	
2020-12-30 12:04:00,818	[DEBUG]	
2020-12-30 12:04:00,820	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:04:01,780	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:04:02,720	[INFO]	123	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:04:03,470	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:04:04,426	[INFO]	125	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:04:07,783	[INFO]	126	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:04:07,784	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:04:11,072	[INFO]	127	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:04:11,072	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,25 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 14,28 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:04:12,033	[INFO]	128	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:04:12,805	[INFO]	129	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:04:13,743	[INFO]	130	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:04:14,666	[INFO]	131	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:04:14,667	[INFO]	132	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:04:14,668	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:04:14,668	[INFO]	133	SUCCESS	+4.0	
2020-12-30 12:04:14,668	[DEBUG]	
2020-12-30 12:04:18,053	[INFO]	134	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:04:18,054	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:04:21,447	[INFO]	135	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:04:21,448	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,25 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 13,28 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:04:21,449	[INFO]	136	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:04:21,449	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,25 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 13,28 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:04:21,450	[INFO]	137	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:04:21,450	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:04:22,195	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:04:22,196	[INFO]	139	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:04:22,197	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:04:22,978	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:04:22,979	[INFO]	141	SUCCESS	+4.0	
2020-12-30 12:04:22,979	[DEBUG]	
2020-12-30 12:04:26,386	[INFO]	142	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 12:04:26,388	[INFO]	143	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:04:26,388	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:04:27,327	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:04:28,305	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:04:29,087	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:04:29,852	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:04:33,186	[INFO]	148	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:04:33,186	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,22 ****
--- 13,28 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:04:36,554	[INFO]	149	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:04:36,555	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:04:37,476	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:04:37,477	[INFO]	151	SUCCESS	+4.0	
2020-12-30 12:04:37,478	[DEBUG]	
2020-12-30 12:04:37,479	[INFO]	152	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:04:37,479	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:04:37,480	[INFO]	153	SUCCESS	+4.0	
2020-12-30 12:04:37,480	[DEBUG]	
2020-12-30 12:04:38,419	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:04:41,791	[INFO]	155	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:04:41,792	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:04:46,338	[INFO]	156	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:04:46,339	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,23 ****
--- 15,27 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:04:46,340	[INFO]	157	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:04:46,341	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:04:46,341	[INFO]	158	SUCCESS	+4.0	
2020-12-30 12:04:46,341	[DEBUG]	
2020-12-30 12:04:47,220	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:04:50,569	[INFO]	160	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:04:53,954	[INFO]	161	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:04:53,955	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:04:54,861	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:04:54,862	[INFO]	163	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:04:54,863	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:04:55,806	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:04:56,565	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:04:56,566	[INFO]	166	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:04:56,566	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:04:59,933	[INFO]	167	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:04:59,934	[INFO]	168	SUCCESS	+4.0	
2020-12-30 12:04:59,934	[DEBUG]	
2020-12-30 12:04:59,935	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:04:59,936	[INFO]	170	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:04:59,936	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:04:59,937	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:04:59,938	[INFO]	172	SUCCESS	+4.0	
2020-12-30 12:04:59,938	[DEBUG]	
2020-12-30 12:05:00,698	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:05:00,699	[INFO]	174	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 12:05:00,700	[INFO]	175	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:05:00,700	[DEBUG]	
2020-12-30 12:05:00,700	[INFO]	176	SUCCESS	+4.0	
2020-12-30 12:05:00,701	[DEBUG]	
2020-12-30 12:05:01,647	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:05:02,576	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:05:03,516	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:05:03,517	[INFO]	180	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:05:03,517	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:05:03,518	[INFO]	181	SUCCESS	+4.0	
2020-12-30 12:05:03,518	[DEBUG]	
2020-12-30 12:05:04,460	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:05:05,237	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:05:05,238	[INFO]	184	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:05:05,239	[DEBUG]	
2020-12-30 12:05:08,589	[INFO]	185	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:05:08,590	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:05:09,331	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:05:10,243	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:05:11,184	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:05:12,126	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:05:12,127	[INFO]	190	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:05:12,127	[DEBUG]	
2020-12-30 12:05:12,128	[INFO]	191	SUCCESS	+4.0	
2020-12-30 12:05:12,128	[DEBUG]	
2020-12-30 12:05:16,415	[INFO]	192	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:05:16,416	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:05:17,298	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:05:18,050	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:05:18,820	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:05:19,546	[INFO]	197	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:05:20,345	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:05:21,097	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:05:24,523	[INFO]	200	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 12:05:25,459	[INFO]	201	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:05:25,460	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:05:26,420	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:05:27,189	[INFO]	204	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:05:27,963	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:05:27,964	[INFO]	206	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:05:28,877	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:05:29,659	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:05:29,660	[INFO]	209	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:05:29,660	[DEBUG]	
2020-12-30 12:05:29,661	[INFO]	210	SUCCESS	+4.0	
2020-12-30 12:05:29,661	[DEBUG]	
2020-12-30 12:05:30,563	[INFO]	211	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:05:31,328	[INFO]	212	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:05:31,329	[INFO]	213	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 12:05:34,565	[INFO]	214	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 12:05:35,712	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:05:35,714	[INFO]	216	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:05:36,985	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:05:38,101	[INFO]	218	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:05:43,166	[INFO]	219	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:05:43,168	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:05:44,097	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:05:45,077	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:05:46,078	[INFO]	223	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:05:46,080	[INFO]	224	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:05:46,080	[DEBUG]	
2020-12-30 12:05:46,081	[INFO]	225	SUCCESS	+4.0	
2020-12-30 12:05:46,081	[DEBUG]	
2020-12-30 12:05:50,042	[INFO]	226	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:05:50,043	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:05:51,342	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:05:52,360	[INFO]	229	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:05:53,469	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:05:56,796	[INFO]	231	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 12:05:57,729	[INFO]	232	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:05:58,650	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:05:59,671	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:05:59,672	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:06:00,647	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:06:01,450	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:06:01,451	[INFO]	238	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:06:02,464	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:06:03,460	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:06:06,795	[INFO]	241	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:06:07,759	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:06:08,753	[INFO]	243	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:06:08,755	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:06:08,755	[INFO]	245	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:06:08,756	[DEBUG]	
2020-12-30 12:06:08,756	[INFO]	246	SUCCESS	+4.0	
2020-12-30 12:06:08,756	[DEBUG]	
2020-12-30 12:06:08,757	[INFO]	247	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:06:08,757	[DEBUG]	
2020-12-30 12:06:08,758	[INFO]	248	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:06:08,759	[INFO]	249	SUCCESS	+4.0	
2020-12-30 12:06:08,759	[DEBUG]	
2020-12-30 12:06:09,795	[INFO]	250	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:06:09,797	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:06:09,798	[INFO]	252	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:06:09,798	[DEBUG]	
2020-12-30 12:06:09,799	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:06:09,799	[INFO]	254	SUCCESS	+4.0	
2020-12-30 12:06:09,800	[DEBUG]	
2020-12-30 12:06:13,352	[INFO]	255	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:06:13,353	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:06:16,834	[INFO]	256	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:06:16,835	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:06:17,855	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:06:18,850	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:06:22,411	[INFO]	259	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 12:06:22,413	[INFO]	260	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:06:22,414	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:06:22,415	[INFO]	261	SUCCESS	+4.0	
2020-12-30 12:06:22,416	[DEBUG]	
2020-12-30 12:06:23,318	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:06:24,243	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:06:25,017	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:06:25,978	[INFO]	265	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:06:25,979	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:06:25,980	[INFO]	267	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:06:25,981	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:06:26,970	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:06:31,885	[INFO]	269	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:06:31,885	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,23 ****
--- 15,27 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:06:32,784	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:06:32,785	[INFO]	271	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:06:32,786	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,23 ****
--- 15,27 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:06:37,769	[INFO]	272	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:06:37,770	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,23 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }
--- 14,30 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
!             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:06:42,242	[INFO]	273	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:06:42,243	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,24 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
!             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:06:46,878	[INFO]	274	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:06:46,879	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 13,27 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!             return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
!             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:06:46,880	[INFO]	275	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:06:46,880	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,24 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
!             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:06:46,881	[INFO]	276	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:06:46,881	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,24 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
!             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:06:50,189	[INFO]	277	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:06:50,190	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:06:50,190	[INFO]	278	SUCCESS	+4.0	
2020-12-30 12:06:50,190	[DEBUG]	
2020-12-30 12:06:51,117	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:06:54,279	[INFO]	280	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 12:06:55,042	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:06:55,798	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:07:00,138	[INFO]	283	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:07:01,082	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:07:01,994	[INFO]	285	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:07:02,989	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:07:03,950	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:07:04,723	[INFO]	288	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:07:18,656	[INFO]	289	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:07:19,360	[INFO]	290	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:07:20,255	[INFO]	291	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:07:23,527	[INFO]	292	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:07:23,529	[INFO]	293	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:07:23,529	[DEBUG]	
2020-12-30 12:07:24,522	[INFO]	294	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:07:25,503	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:07:25,504	[INFO]	296	SUCCESS	+4.0	
2020-12-30 12:07:25,504	[DEBUG]	
2020-12-30 12:07:29,138	[INFO]	297	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:07:29,139	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:07:29,140	[INFO]	298	SUCCESS	+4.0	
2020-12-30 12:07:29,140	[DEBUG]	
2020-12-30 12:07:30,113	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:07:30,903	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:07:31,879	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:07:35,456	[INFO]	302	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:07:35,457	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:07:39,922	[INFO]	303	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:07:39,923	[INFO]	304	SUCCESS	+4.0	
2020-12-30 12:07:39,924	[DEBUG]	
2020-12-30 12:07:43,419	[INFO]	305	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 12:07:43,420	[INFO]	306	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:07:44,395	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:07:45,190	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:07:45,191	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:07:48,676	[INFO]	310	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:07:48,677	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:07:49,653	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:07:49,655	[INFO]	312	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:07:49,655	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:07:49,656	[INFO]	313	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:07:49,657	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:07:50,467	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:07:50,468	[INFO]	315	SUCCESS	+4.0	
2020-12-30 12:07:50,468	[DEBUG]	
2020-12-30 12:07:51,436	[INFO]	316	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:07:52,413	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:07:53,383	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:07:53,385	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:07:54,185	[INFO]	320	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:07:57,738	[INFO]	321	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:07:57,739	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:07:58,688	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:07:58,689	[INFO]	323	SUCCESS	+4.0	
2020-12-30 12:07:58,689	[DEBUG]	
2020-12-30 12:07:59,622	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:08:00,550	[INFO]	325	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:08:01,331	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:08:02,074	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:08:03,014	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:08:03,933	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:08:04,923	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:08:05,862	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:08:06,796	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:08:10,125	[INFO]	333	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:08:10,126	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:08:11,083	[INFO]	334	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:08:11,084	[INFO]	335	SUCCESS	+4.0	
2020-12-30 12:08:11,084	[DEBUG]	
2020-12-30 12:08:11,845	[INFO]	336	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:08:15,153	[INFO]	337	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 12:08:15,154	[INFO]	338	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:08:15,154	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:08:16,090	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:08:17,020	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:08:17,022	[INFO]	341	SUCCESS	+4.0	
2020-12-30 12:08:17,022	[DEBUG]	
2020-12-30 12:08:17,940	[INFO]	342	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:08:17,941	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:08:18,883	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:08:19,818	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:08:20,584	[INFO]	346	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:08:21,357	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:08:22,119	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:08:22,120	[INFO]	349	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:08:22,867	[INFO]	350	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:08:22,869	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:08:26,018	[INFO]	352	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:08:26,019	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:08:26,020	[INFO]	354	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:08:26,935	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:08:27,887	[INFO]	356	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:08:31,023	[INFO]	357	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:08:31,024	[INFO]	358	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:08:31,025	[DEBUG]	
2020-12-30 12:08:31,025	[INFO]	359	SUCCESS	+4.0	
2020-12-30 12:08:31,025	[DEBUG]	
2020-12-30 12:08:31,810	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:08:31,811	[INFO]	361	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:08:32,765	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:08:32,766	[INFO]	363	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:08:32,766	[DEBUG]	
2020-12-30 12:08:32,767	[INFO]	364	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:08:32,768	[INFO]	365	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:08:32,768	[INFO]	366	SUCCESS	+4.0	
2020-12-30 12:08:32,768	[DEBUG]	
2020-12-30 12:08:36,245	[INFO]	367	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:08:37,212	[INFO]	368	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:08:38,204	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:08:41,839	[INFO]	370	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 12:08:46,377	[INFO]	371	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:08:47,281	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:08:47,282	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:08:48,253	[INFO]	374	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:08:49,234	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:08:50,201	[INFO]	376	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:08:50,203	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:08:51,195	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:08:52,009	[INFO]	379	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:08:52,010	[INFO]	380	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:08:53,003	[INFO]	381	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:08:53,999	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:08:54,773	[INFO]	383	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:08:58,082	[INFO]	384	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:09:01,558	[INFO]	385	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 12:09:04,834	[INFO]	386	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:09:04,835	[INFO]	387	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:09:04,836	[DEBUG]	
2020-12-30 12:09:04,836	[INFO]	388	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:09:04,837	[DEBUG]	
2020-12-30 12:09:05,802	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:09:05,803	[INFO]	390	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:09:05,804	[DEBUG]	
2020-12-30 12:09:05,804	[INFO]	391	SUCCESS	+4.0	
2020-12-30 12:09:05,804	[DEBUG]	
2020-12-30 12:09:06,611	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:09:07,401	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:09:10,688	[INFO]	394	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:09:10,689	[INFO]	395	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:09:10,690	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:09:14,206	[INFO]	397	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:09:14,207	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:09:14,208	[INFO]	398	SUCCESS	+4.0	
2020-12-30 12:09:14,208	[DEBUG]	
2020-12-30 12:09:15,005	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:09:18,434	[INFO]	400	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:09:18,435	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:09:18,435	[INFO]	401	SUCCESS	+4.0	
2020-12-30 12:09:18,436	[DEBUG]	
2020-12-30 12:09:19,208	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:09:19,961	[INFO]	403	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:09:20,717	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:09:20,718	[INFO]	405	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:09:21,650	[INFO]	406	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:09:21,652	[INFO]	407	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:09:21,652	[DEBUG]	
2020-12-30 12:09:21,653	[INFO]	408	SUCCESS	+4.0	
2020-12-30 12:09:21,653	[DEBUG]	
2020-12-30 12:09:22,590	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:09:22,592	[INFO]	410	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:09:23,362	[INFO]	411	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:09:23,363	[INFO]	412	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:09:23,364	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:09:23,365	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:09:26,714	[INFO]	415	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:09:26,715	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:09:26,716	[INFO]	416	SUCCESS	+4.0	
2020-12-30 12:09:26,716	[DEBUG]	
2020-12-30 12:09:26,717	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:09:30,132	[INFO]	418	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:09:30,133	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:09:30,134	[INFO]	419	SUCCESS	+4.0	
2020-12-30 12:09:30,134	[DEBUG]	
2020-12-30 12:09:30,921	[INFO]	420	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:09:31,882	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:09:31,884	[INFO]	422	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:09:31,884	[DEBUG]	
2020-12-30 12:09:32,689	[INFO]	423	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:09:36,485	[INFO]	424	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:09:36,486	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:09:37,256	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:09:37,257	[INFO]	426	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:09:37,257	[DEBUG]	
2020-12-30 12:09:37,258	[INFO]	427	SUCCESS	+4.0	
2020-12-30 12:09:37,258	[DEBUG]	
2020-12-30 12:09:38,052	[INFO]	428	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:09:38,055	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:09:38,829	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:09:38,830	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:09:39,639	[INFO]	432	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:09:39,641	[INFO]	433	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:09:39,641	[INFO]	434	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:09:39,642	[DEBUG]	
2020-12-30 12:09:39,642	[INFO]	435	SUCCESS	+4.0	
2020-12-30 12:09:39,643	[DEBUG]	
2020-12-30 12:09:40,668	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:09:41,639	[INFO]	437	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:09:42,635	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:09:43,648	[INFO]	439	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:09:43,649	[INFO]	440	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:09:43,650	[DEBUG]	
2020-12-30 12:09:43,651	[INFO]	441	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:09:43,651	[INFO]	442	SUCCESS	+4.0	
2020-12-30 12:09:43,651	[DEBUG]	
2020-12-30 12:09:44,641	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:09:44,642	[INFO]	444	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:09:44,643	[DEBUG]	
2020-12-30 12:09:44,644	[INFO]	445	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:09:44,644	[INFO]	446	SUCCESS	+4.0	
2020-12-30 12:09:44,645	[DEBUG]	
2020-12-30 12:09:45,649	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:09:49,026	[INFO]	448	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 12:09:50,010	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:09:50,823	[INFO]	450	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:09:50,825	[INFO]	451	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:09:51,611	[INFO]	452	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:09:55,130	[INFO]	453	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:09:55,130	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:09:56,113	[INFO]	454	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:09:56,114	[INFO]	455	SUCCESS	+4.0	
2020-12-30 12:09:56,115	[DEBUG]	
2020-12-30 12:09:59,581	[INFO]	456	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:10:00,553	[INFO]	457	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:10:00,555	[INFO]	458	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:10:01,353	[INFO]	459	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:10:02,328	[INFO]	460	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:10:03,161	[INFO]	461	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:10:04,136	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:10:04,930	[INFO]	463	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:10:05,730	[INFO]	464	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:10:05,731	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:10:05,732	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:10:05,733	[INFO]	467	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:10:05,734	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:10:09,097	[INFO]	469	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 12:10:10,070	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:10:10,072	[INFO]	471	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 12:10:10,072	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:10:11,033	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:10:12,027	[INFO]	474	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:10:13,018	[INFO]	475	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:10:13,990	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:10:14,980	[INFO]	477	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:10:15,922	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:10:16,703	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:10:17,616	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:10:18,376	[INFO]	481	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:10:21,612	[INFO]	482	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:10:25,200	[INFO]	483	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:10:26,173	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:10:27,146	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:10:30,688	[INFO]	486	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:10:30,689	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:10:31,672	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:10:31,674	[INFO]	488	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:10:31,674	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:10:32,458	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:10:32,459	[INFO]	490	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:10:32,460	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:10:33,463	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:10:34,422	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:10:37,979	[INFO]	493	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 12:10:37,980	[INFO]	494	SUCCESS	+4.0	
2020-12-30 12:10:37,981	[DEBUG]	
2020-12-30 12:10:37,981	[INFO]	495	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:10:37,982	[DEBUG]	
2020-12-30 12:10:38,947	[INFO]	496	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:10:38,948	[INFO]	497	SUCCESS	+4.0	
2020-12-30 12:10:38,948	[DEBUG]	
2020-12-30 12:10:42,506	[INFO]	498	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:10:42,507	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:10:45,793	[INFO]	499	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:10:45,794	[INFO]	500	SUCCESS	+4.0	
2020-12-30 12:10:45,795	[DEBUG]	
2020-12-30 12:10:45,795	[INFO]	==== END ====
2020-12-30 12:10:45,795	[INFO]	Reason: step budget
2020-12-30 12:10:45,795	[INFO]	
2020-12-30 12:10:45,795	[INFO]	========== EPOCH 7 ==========
2020-12-30 12:10:45,796	[INFO]	==== WARMUP ====
2020-12-30 12:10:49,298	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 12:10:49,298	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:10:52,842	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 12:10:52,842	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:10:56,380	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 12:10:56,381	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:10:59,890	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-30 12:10:59,890	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:10:59,890	[INFO]	==== START ====
2020-12-30 12:11:00,697	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:11:01,485	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:11:05,013	[INFO]	3	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 12:11:08,347	[INFO]	4	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:11:09,244	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:11:10,168	[INFO]	6	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:11:11,131	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:11:11,927	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:11:12,700	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:11:13,450	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:11:14,202	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:11:15,147	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:11:16,077	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:11:16,079	[INFO]	14	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:11:16,079	[DEBUG]	
2020-12-30 12:11:16,079	[INFO]	15	SUCCESS	+4.0	
2020-12-30 12:11:16,080	[DEBUG]	
2020-12-30 12:11:16,080	[INFO]	16	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:11:20,635	[INFO]	17	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:11:20,636	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:11:20,637	[INFO]	18	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:11:20,637	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:11:21,526	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:11:21,528	[INFO]	20	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:11:21,528	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:11:22,276	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:11:23,027	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:11:23,028	[INFO]	23	SUCCESS	+4.0	
2020-12-30 12:11:23,028	[DEBUG]	
2020-12-30 12:11:23,988	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:11:28,309	[INFO]	25	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:11:29,026	[INFO]	26	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:11:32,167	[INFO]	27	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 12:11:33,076	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:11:36,435	[INFO]	29	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:11:36,436	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:11:36,436	[INFO]	30	SUCCESS	+4.0	
2020-12-30 12:11:36,437	[DEBUG]	
2020-12-30 12:11:37,208	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:11:37,210	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:11:37,211	[INFO]	33	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 12:11:38,158	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:11:41,463	[INFO]	35	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 12:11:42,235	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:11:43,191	[INFO]	37	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:11:43,193	[INFO]	38	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:11:43,193	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:11:43,194	[INFO]	39	SUCCESS	+4.0	
2020-12-30 12:11:43,194	[DEBUG]	
2020-12-30 12:11:43,195	[INFO]	40	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:11:43,195	[DEBUG]	
2020-12-30 12:11:43,195	[INFO]	41	SUCCESS	+4.0	
2020-12-30 12:11:43,196	[DEBUG]	
2020-12-30 12:11:43,196	[INFO]	42	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:11:43,197	[INFO]	43	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:11:44,131	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:11:44,905	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:11:44,906	[INFO]	46	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:11:44,906	[DEBUG]	
2020-12-30 12:11:44,907	[INFO]	47	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:11:44,907	[DEBUG]	
2020-12-30 12:11:44,908	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:11:44,909	[INFO]	49	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:11:44,909	[DEBUG]	
2020-12-30 12:11:44,910	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:11:45,665	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:11:45,666	[INFO]	52	SUCCESS	+4.0	
2020-12-30 12:11:45,666	[DEBUG]	
2020-12-30 12:11:45,667	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:11:45,667	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:11:46,599	[INFO]	55	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:11:47,368	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:11:48,286	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:11:51,509	[INFO]	58	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 12:11:52,439	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:11:52,440	[INFO]	60	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:11:55,793	[INFO]	61	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 12:11:55,794	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:11:59,107	[INFO]	63	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:11:59,108	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:11:59,108	[INFO]	64	SUCCESS	+4.0	
2020-12-30 12:11:59,109	[DEBUG]	
2020-12-30 12:12:02,255	[INFO]	65	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:12:03,179	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:12:03,951	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:12:04,870	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:12:05,815	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:12:09,026	[INFO]	70	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:12:09,956	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:12:10,877	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:12:11,793	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:12:11,794	[INFO]	74	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:12:11,794	[DEBUG]	
2020-12-30 12:12:11,795	[INFO]	75	SUCCESS	+4.0	
2020-12-30 12:12:11,795	[DEBUG]	
2020-12-30 12:12:12,738	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:12:13,653	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:12:16,993	[INFO]	78	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:12:20,338	[INFO]	79	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:12:20,339	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:12:21,283	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:12:24,692	[INFO]	81	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:12:24,693	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,25 ****
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 17,28 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:12:24,693	[INFO]	82	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:12:24,694	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:12:28,065	[INFO]	83	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:12:28,066	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,24 ****
--- 17,30 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:12:28,817	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:12:32,010	[INFO]	85	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 12:12:36,353	[INFO]	86	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:12:39,650	[INFO]	87	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:12:39,651	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:12:39,652	[INFO]	88	SUCCESS	+4.0	
2020-12-30 12:12:39,652	[DEBUG]	
2020-12-30 12:12:42,817	[INFO]	89	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:12:42,819	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:12:43,584	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:12:44,345	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:12:45,092	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:12:46,008	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:12:46,929	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:12:47,878	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:12:51,205	[INFO]	97	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 12:12:52,143	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:12:55,371	[INFO]	99	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 12:12:56,319	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:12:57,252	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:13:00,631	[INFO]	102	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:13:00,632	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:13:00,633	[INFO]	103	SUCCESS	+4.0	
2020-12-30 12:13:00,633	[DEBUG]	
2020-12-30 12:13:00,634	[INFO]	104	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:13:00,634	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:13:00,635	[INFO]	105	SUCCESS	+4.0	
2020-12-30 12:13:00,635	[DEBUG]	
2020-12-30 12:13:00,636	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:13:03,986	[INFO]	107	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 12:13:03,988	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:13:04,732	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:13:05,668	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:13:08,942	[INFO]	111	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 12:13:12,275	[INFO]	112	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:13:12,276	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:13:12,277	[INFO]	113	SUCCESS	+4.0	
2020-12-30 12:13:12,277	[DEBUG]	
2020-12-30 12:13:13,036	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:13:13,038	[INFO]	115	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:13:13,038	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:13:16,101	[INFO]	116	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:13:16,102	[INFO]	117	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:13:16,103	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:13:16,868	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:13:16,870	[INFO]	119	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:13:16,870	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:13:20,184	[INFO]	120	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:13:20,185	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,22 ****
--- 14,28 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:13:23,355	[INFO]	121	SUCCESS	 8.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 12:13:23,356	[INFO]	122	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:13:23,357	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:13:24,301	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:13:24,302	[INFO]	124	SUCCESS	+4.0	
2020-12-30 12:13:24,302	[DEBUG]	
2020-12-30 12:13:25,078	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:13:26,065	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:13:39,354	[INFO]	127	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:13:40,243	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:13:41,210	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:13:42,155	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:13:42,931	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:13:43,685	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:13:47,048	[INFO]	133	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 12:13:47,050	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:13:47,802	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:13:48,736	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:13:48,738	[INFO]	137	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:13:48,738	[DEBUG]	
2020-12-30 12:13:48,739	[INFO]	138	SUCCESS	+4.0	
2020-12-30 12:13:48,739	[DEBUG]	
2020-12-30 12:13:49,499	[INFO]	139	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:13:49,500	[INFO]	140	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:13:49,500	[DEBUG]	
2020-12-30 12:13:50,447	[INFO]	141	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:13:50,449	[INFO]	142	SUCCESS	+4.0	
2020-12-30 12:13:50,450	[DEBUG]	
2020-12-30 12:13:51,392	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:13:55,622	[INFO]	144	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:13:58,921	[INFO]	145	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:13:58,922	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:13:58,922	[INFO]	146	SUCCESS	+4.0	
2020-12-30 12:13:58,922	[DEBUG]	
2020-12-30 12:13:59,871	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:14:00,825	[INFO]	148	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:14:01,759	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:14:01,760	[INFO]	150	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:14:01,761	[INFO]	151	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:14:01,762	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:14:02,549	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:14:05,852	[INFO]	153	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:14:05,853	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,26 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!         if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:14:05,854	[INFO]	154	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:14:05,854	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:14:06,785	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:14:06,786	[INFO]	156	SUCCESS	+4.0	
2020-12-30 12:14:06,787	[DEBUG]	
2020-12-30 12:14:06,787	[INFO]	157	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:14:07,734	[INFO]	158	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:14:08,689	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:14:12,040	[INFO]	160	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 12:14:12,041	[INFO]	161	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:14:12,042	[DEBUG]	
2020-12-30 12:14:12,042	[INFO]	162	SUCCESS	+4.0	
2020-12-30 12:14:12,042	[DEBUG]	
2020-12-30 12:14:12,951	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:14:12,952	[INFO]	164	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:14:12,953	[DEBUG]	
2020-12-30 12:14:13,880	[INFO]	165	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:14:14,650	[INFO]	166	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:14:15,546	[INFO]	167	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:14:16,481	[INFO]	168	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:14:19,589	[INFO]	169	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:14:22,940	[INFO]	170	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:14:23,926	[INFO]	171	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:14:23,927	[INFO]	172	SUCCESS	+4.0	
2020-12-30 12:14:23,927	[DEBUG]	
2020-12-30 12:14:23,928	[INFO]	173	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:14:23,929	[INFO]	174	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 12:14:27,250	[INFO]	175	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:14:27,251	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:14:27,252	[INFO]	176	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:14:27,253	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:14:27,254	[INFO]	177	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:14:27,254	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:14:27,254	[INFO]	178	SUCCESS	+4.0	
2020-12-30 12:14:27,255	[DEBUG]	
2020-12-30 12:14:28,039	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:14:28,041	[INFO]	180	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:14:28,041	[DEBUG]	
2020-12-30 12:14:28,041	[INFO]	181	SUCCESS	+4.0	
2020-12-30 12:14:28,042	[DEBUG]	
2020-12-30 12:14:31,219	[INFO]	182	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 12:14:31,220	[INFO]	183	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:14:31,221	[DEBUG]	
2020-12-30 12:14:31,222	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:14:31,222	[INFO]	185	SUCCESS	+4.0	
2020-12-30 12:14:31,222	[DEBUG]	
2020-12-30 12:14:32,137	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:14:32,138	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:14:32,139	[INFO]	188	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:14:32,139	[DEBUG]	
2020-12-30 12:14:33,081	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:14:33,082	[INFO]	190	SUCCESS	+4.0	
2020-12-30 12:14:33,083	[DEBUG]	
2020-12-30 12:14:33,083	[INFO]	191	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:14:34,026	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:14:34,804	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:14:39,100	[INFO]	194	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:14:39,829	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:14:40,769	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:14:41,730	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:14:44,978	[INFO]	198	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:14:45,952	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:14:45,953	[INFO]	200	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:14:45,954	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:14:46,940	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:14:46,943	[INFO]	203	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:14:46,945	[INFO]	204	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:14:46,945	[DEBUG]	
2020-12-30 12:14:46,946	[INFO]	205	SUCCESS	+4.0	
2020-12-30 12:14:46,947	[DEBUG]	
2020-12-30 12:14:47,897	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:14:51,063	[INFO]	207	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 12:14:51,821	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:14:52,736	[INFO]	209	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:14:52,737	[INFO]	210	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:14:52,738	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:14:53,684	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:14:53,685	[INFO]	212	SUCCESS	+4.0	
2020-12-30 12:14:53,686	[DEBUG]	
2020-12-30 12:14:53,686	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:14:53,687	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:14:56,901	[INFO]	215	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 12:14:57,815	[INFO]	216	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:14:58,748	[INFO]	217	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:14:59,687	[INFO]	218	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:15:00,637	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:15:01,552	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:15:04,914	[INFO]	221	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 12:15:08,078	[INFO]	222	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 12:15:08,079	[INFO]	223	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:15:08,827	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:15:09,754	[INFO]	225	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:15:09,755	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:15:09,756	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:15:10,523	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:15:11,465	[INFO]	229	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:15:12,393	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:15:15,731	[INFO]	231	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:15:15,732	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:15:16,655	[INFO]	232	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:15:16,656	[INFO]	233	SUCCESS	+4.0	
2020-12-30 12:15:16,656	[DEBUG]	
2020-12-30 12:15:17,419	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:15:17,420	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:15:20,563	[INFO]	236	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:15:21,329	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:15:21,331	[INFO]	238	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:15:22,261	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:15:23,224	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:15:23,226	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:15:23,227	[INFO]	242	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:15:23,228	[DEBUG]	
2020-12-30 12:15:23,229	[INFO]	243	SUCCESS	+4.0	
2020-12-30 12:15:23,229	[DEBUG]	
2020-12-30 12:15:23,230	[INFO]	244	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:15:24,185	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:15:24,955	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:15:28,265	[INFO]	247	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:15:28,266	[INFO]	248	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 12:15:28,267	[INFO]	249	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:15:29,019	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:15:29,953	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:15:29,954	[INFO]	252	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:15:29,954	[DEBUG]	
2020-12-30 12:15:30,883	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:15:30,884	[INFO]	254	SUCCESS	+4.0	
2020-12-30 12:15:30,884	[DEBUG]	
2020-12-30 12:15:31,794	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:15:32,570	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:15:32,572	[INFO]	257	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:15:32,572	[DEBUG]	
2020-12-30 12:15:32,573	[INFO]	258	SUCCESS	+4.0	
2020-12-30 12:15:32,573	[DEBUG]	
2020-12-30 12:15:33,491	[INFO]	259	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:15:34,425	[INFO]	260	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:15:35,251	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:15:35,253	[INFO]	262	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:15:35,253	[DEBUG]	
2020-12-30 12:15:35,253	[INFO]	263	SUCCESS	+4.0	
2020-12-30 12:15:35,254	[DEBUG]	
2020-12-30 12:15:35,255	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:15:35,255	[INFO]	265	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:15:35,256	[DEBUG]	
2020-12-30 12:15:36,235	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:15:37,270	[INFO]	267	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:15:38,567	[INFO]	268	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:15:38,569	[INFO]	269	SUCCESS	+4.0	
2020-12-30 12:15:38,569	[DEBUG]	
2020-12-30 12:15:38,571	[INFO]	270	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:15:38,571	[DEBUG]	
2020-12-30 12:15:39,579	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:15:39,580	[INFO]	272	SUCCESS	+4.0	
2020-12-30 12:15:39,581	[DEBUG]	
2020-12-30 12:15:40,555	[INFO]	273	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:15:41,502	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:15:42,274	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:15:43,052	[INFO]	276	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:15:43,969	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:15:43,970	[INFO]	278	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:15:43,970	[DEBUG]	
2020-12-30 12:15:43,971	[INFO]	279	SUCCESS	+4.0	
2020-12-30 12:15:43,971	[DEBUG]	
2020-12-30 12:15:47,287	[INFO]	280	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:15:50,464	[INFO]	281	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:15:51,227	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:15:51,228	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:15:51,980	[INFO]	284	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:15:51,981	[INFO]	285	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:15:51,981	[DEBUG]	
2020-12-30 12:15:51,981	[INFO]	286	SUCCESS	+4.0	
2020-12-30 12:15:51,982	[DEBUG]	
2020-12-30 12:15:52,723	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:15:55,936	[INFO]	288	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 12:15:56,879	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:15:57,649	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:15:57,651	[INFO]	291	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:15:57,651	[DEBUG]	
2020-12-30 12:15:58,599	[INFO]	292	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:15:58,602	[INFO]	293	SUCCESS	+4.0	
2020-12-30 12:15:58,602	[DEBUG]	
2020-12-30 12:15:59,529	[INFO]	294	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:15:59,530	[INFO]	295	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:15:59,530	[DEBUG]	
2020-12-30 12:16:02,651	[INFO]	296	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:16:02,652	[INFO]	297	SUCCESS	+4.0	
2020-12-30 12:16:02,652	[DEBUG]	
2020-12-30 12:16:02,653	[INFO]	298	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:16:03,585	[INFO]	299	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:16:04,332	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:16:05,105	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:16:05,854	[INFO]	302	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:16:05,855	[INFO]	303	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 12:16:06,770	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:16:06,772	[INFO]	305	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:16:07,722	[INFO]	306	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:16:07,723	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:16:11,107	[INFO]	308	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:16:11,108	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:16:11,109	[INFO]	309	SUCCESS	+4.0	
2020-12-30 12:16:11,109	[DEBUG]	
2020-12-30 12:16:11,110	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:16:11,111	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:16:12,026	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:16:12,968	[INFO]	313	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:16:13,892	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:16:13,893	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:16:14,666	[INFO]	316	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:16:14,668	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:16:14,669	[INFO]	318	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:16:15,407	[INFO]	319	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:16:16,339	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:16:17,284	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:16:18,221	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:16:19,137	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:16:19,904	[INFO]	324	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:16:20,851	[INFO]	325	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:16:21,773	[INFO]	326	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:16:25,214	[INFO]	327	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:16:25,215	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:16:25,215	[INFO]	328	SUCCESS	+4.0	
2020-12-30 12:16:25,216	[DEBUG]	
2020-12-30 12:16:26,117	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:16:26,119	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:16:27,082	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:16:28,035	[INFO]	332	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:16:41,455	[INFO]	333	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:16:42,158	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:16:43,061	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:16:44,033	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:16:45,019	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:16:45,945	[INFO]	338	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:16:46,729	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:16:46,733	[INFO]	340	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:16:50,061	[INFO]	341	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:16:50,062	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:16:50,064	[INFO]	342	SUCCESS	+4.0	
2020-12-30 12:16:50,065	[DEBUG]	
2020-12-30 12:16:50,066	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:16:53,397	[INFO]	344	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:16:54,347	[INFO]	345	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:16:55,107	[INFO]	346	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:16:56,057	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:16:59,384	[INFO]	348	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:16:59,385	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:17:00,298	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:17:01,253	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:17:01,254	[INFO]	351	SUCCESS	+4.0	
2020-12-30 12:17:01,254	[DEBUG]	
2020-12-30 12:17:02,186	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:17:03,113	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:17:03,878	[INFO]	354	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:17:03,880	[INFO]	355	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:17:03,880	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:17:04,805	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:17:07,982	[INFO]	357	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 12:17:07,983	[INFO]	358	SUCCESS	+4.0	
2020-12-30 12:17:07,983	[DEBUG]	
2020-12-30 12:17:11,307	[INFO]	359	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 12:17:12,221	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:17:15,553	[INFO]	361	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:17:15,554	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:17:16,320	[INFO]	362	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:17:16,321	[INFO]	363	SUCCESS	+4.0	
2020-12-30 12:17:16,322	[DEBUG]	
2020-12-30 12:17:17,294	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:17:18,267	[INFO]	365	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:17:18,269	[INFO]	366	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:17:19,226	[INFO]	367	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:17:19,979	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:17:20,918	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:17:21,873	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:17:22,663	[INFO]	371	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:17:23,574	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:17:27,863	[INFO]	373	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:17:28,761	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:17:29,690	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:17:30,474	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:17:31,394	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:17:32,147	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:17:35,515	[INFO]	379	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:17:35,516	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:17:35,517	[INFO]	380	SUCCESS	+4.0	
2020-12-30 12:17:35,517	[DEBUG]	
2020-12-30 12:17:36,441	[INFO]	381	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:17:39,789	[INFO]	382	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:17:40,736	[INFO]	383	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:17:40,737	[INFO]	384	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:17:41,479	[INFO]	385	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:17:41,481	[INFO]	386	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:17:42,402	[INFO]	387	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:17:42,403	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:17:42,404	[INFO]	389	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:17:42,405	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:17:43,346	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:17:56,597	[INFO]	392	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:17:56,598	[INFO]	393	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:18:01,023	[INFO]	394	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:18:01,023	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:18:01,024	[INFO]	395	SUCCESS	+4.0	
2020-12-30 12:18:01,024	[DEBUG]	
2020-12-30 12:18:01,025	[INFO]	396	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:18:01,025	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:18:01,726	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:18:02,451	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:18:02,452	[INFO]	399	SUCCESS	+4.0	
2020-12-30 12:18:02,453	[DEBUG]	
2020-12-30 12:18:02,454	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:18:03,197	[INFO]	401	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:18:03,956	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:18:03,958	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:18:03,958	[INFO]	404	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:18:03,959	[DEBUG]	
2020-12-30 12:18:03,959	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:18:03,960	[INFO]	406	SUCCESS	+4.0	
2020-12-30 12:18:03,960	[DEBUG]	
2020-12-30 12:18:03,961	[INFO]	407	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:18:04,888	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:18:08,271	[INFO]	409	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:18:08,272	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:18:08,274	[INFO]	410	SUCCESS	+4.0	
2020-12-30 12:18:08,274	[DEBUG]	
2020-12-30 12:18:09,042	[INFO]	411	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:18:12,366	[INFO]	412	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:18:12,367	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:18:12,367	[INFO]	413	SUCCESS	+4.0	
2020-12-30 12:18:12,367	[DEBUG]	
2020-12-30 12:18:15,534	[INFO]	414	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:18:16,330	[INFO]	415	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:18:17,073	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:18:20,397	[INFO]	417	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:18:20,398	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:18:21,313	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:18:21,314	[INFO]	419	SUCCESS	+4.0	
2020-12-30 12:18:21,315	[DEBUG]	
2020-12-30 12:18:22,229	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:18:23,011	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:18:26,171	[INFO]	422	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:18:27,092	[INFO]	423	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:18:28,022	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:18:28,990	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:18:29,910	[INFO]	426	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:18:30,861	[INFO]	427	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:18:30,864	[INFO]	428	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:18:30,865	[DEBUG]	
2020-12-30 12:18:34,221	[INFO]	429	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:18:34,978	[INFO]	430	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:18:34,979	[INFO]	431	SUCCESS	+4.0	
2020-12-30 12:18:34,980	[DEBUG]	
2020-12-30 12:18:35,730	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:18:35,731	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:18:36,676	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:18:37,435	[INFO]	435	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:18:37,436	[INFO]	436	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:18:37,437	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:18:37,437	[INFO]	437	SUCCESS	+4.0	
2020-12-30 12:18:37,437	[DEBUG]	
2020-12-30 12:18:38,373	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:18:38,374	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:18:41,576	[INFO]	440	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 12:18:41,578	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:18:42,543	[INFO]	442	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:18:43,306	[INFO]	443	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:18:43,307	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:18:46,544	[INFO]	445	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:18:46,545	[INFO]	446	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:18:46,546	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:18:49,899	[INFO]	448	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 12:18:53,578	[INFO]	449	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:18:53,579	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:18:54,484	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:18:58,105	[INFO]	451	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:18:58,107	[INFO]	452	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:18:58,107	[DEBUG]	
2020-12-30 12:18:59,018	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:18:59,020	[INFO]	454	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:18:59,021	[DEBUG]	
2020-12-30 12:18:59,021	[INFO]	455	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:18:59,022	[DEBUG]	
2020-12-30 12:18:59,022	[INFO]	456	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:18:59,023	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:18:59,761	[INFO]	457	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:19:00,679	[INFO]	458	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:19:00,680	[INFO]	459	SUCCESS	+4.0	
2020-12-30 12:19:00,680	[DEBUG]	
2020-12-30 12:19:00,681	[INFO]	460	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:19:00,682	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:19:01,451	[INFO]	461	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:19:01,452	[INFO]	462	SUCCESS	+4.0	
2020-12-30 12:19:01,452	[DEBUG]	
2020-12-30 12:19:02,369	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:19:05,767	[INFO]	464	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 12:19:08,852	[INFO]	465	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:19:12,146	[INFO]	466	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:19:12,147	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:19:13,096	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:19:13,909	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:19:13,910	[INFO]	469	SUCCESS	+4.0	
2020-12-30 12:19:13,910	[DEBUG]	
2020-12-30 12:19:14,817	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:19:15,600	[INFO]	471	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:19:16,360	[INFO]	472	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:19:17,288	[INFO]	473	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:19:18,204	[INFO]	474	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:19:18,206	[INFO]	475	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:19:19,147	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:19:19,148	[INFO]	477	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:19:19,148	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:19:19,149	[INFO]	478	SUCCESS	+4.0	
2020-12-30 12:19:19,149	[DEBUG]	
2020-12-30 12:19:19,961	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:19:20,921	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:19:21,842	[INFO]	481	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:19:22,787	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:19:23,560	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:19:26,906	[INFO]	484	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:19:26,907	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:19:27,835	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:19:27,836	[INFO]	486	SUCCESS	+4.0	
2020-12-30 12:19:27,836	[DEBUG]	
2020-12-30 12:19:31,303	[INFO]	487	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 12:19:31,305	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:19:32,233	[INFO]	489	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:19:32,989	[INFO]	490	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:19:33,905	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:19:34,655	[INFO]	492	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:19:34,657	[INFO]	493	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:19:34,657	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:19:34,657	[INFO]	494	SUCCESS	+4.0	
2020-12-30 12:19:34,658	[DEBUG]	
2020-12-30 12:19:35,562	[INFO]	495	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:19:35,563	[INFO]	496	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:19:36,318	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:19:36,319	[INFO]	498	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:19:36,320	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:19:36,321	[INFO]	499	SUCCESS	+4.0	
2020-12-30 12:19:36,321	[DEBUG]	
2020-12-30 12:19:37,247	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:19:37,247	[INFO]	==== END ====
2020-12-30 12:19:37,248	[INFO]	Reason: step budget
2020-12-30 12:19:37,248	[INFO]	
2020-12-30 12:19:37,248	[INFO]	========== EPOCH 8 ==========
2020-12-30 12:19:37,249	[INFO]	==== WARMUP ====
2020-12-30 12:19:40,608	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 12:19:40,608	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:19:43,969	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 12:19:43,969	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:19:47,293	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 12:19:47,293	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:19:50,603	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-30 12:19:50,603	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:19:50,604	[INFO]	==== START ====
2020-12-30 12:19:50,604	[INFO]	1	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:19:50,605	[DEBUG]	
2020-12-30 12:19:51,524	[INFO]	2	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:19:51,525	[INFO]	3	SUCCESS	+4.0	
2020-12-30 12:19:51,525	[DEBUG]	
2020-12-30 12:19:54,713	[INFO]	4	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 12:19:55,484	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:19:56,434	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:19:57,344	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:19:58,286	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:20:01,632	[INFO]	9	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:20:01,633	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:20:01,633	[INFO]	10	SUCCESS	+4.0	
2020-12-30 12:20:01,634	[DEBUG]	
2020-12-30 12:20:04,799	[INFO]	11	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:20:05,721	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:20:06,494	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:20:07,430	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:20:07,432	[INFO]	15	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:20:07,432	[DEBUG]	
2020-12-30 12:20:07,432	[INFO]	16	SUCCESS	+4.0	
2020-12-30 12:20:07,433	[DEBUG]	
2020-12-30 12:20:08,355	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:20:08,356	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:20:09,300	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:20:10,064	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:20:13,170	[INFO]	21	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:20:13,944	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:20:14,711	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:20:15,481	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:20:16,250	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:20:17,172	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:20:18,104	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:20:21,258	[INFO]	28	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 12:20:22,172	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:20:23,091	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:20:23,092	[INFO]	31	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:20:23,092	[DEBUG]	
2020-12-30 12:20:23,903	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:20:23,904	[INFO]	33	SUCCESS	+4.0	
2020-12-30 12:20:23,905	[DEBUG]	
2020-12-30 12:20:23,906	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:20:23,906	[INFO]	35	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:20:23,906	[DEBUG]	
2020-12-30 12:20:24,663	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:20:24,664	[INFO]	37	SUCCESS	+4.0	
2020-12-30 12:20:24,665	[DEBUG]	
2020-12-30 12:20:25,428	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:20:26,164	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:20:27,134	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:20:30,500	[INFO]	41	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:20:31,427	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:20:32,387	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:20:33,153	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:20:36,781	[INFO]	45	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:20:36,782	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:20:37,746	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:20:37,747	[INFO]	47	SUCCESS	+4.0	
2020-12-30 12:20:37,747	[DEBUG]	
2020-12-30 12:20:38,698	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:20:39,622	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:20:39,623	[INFO]	50	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:20:39,624	[DEBUG]	
2020-12-30 12:20:39,624	[INFO]	51	SUCCESS	+4.0	
2020-12-30 12:20:39,624	[DEBUG]	
2020-12-30 12:20:39,625	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:20:40,610	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:20:40,612	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:20:41,556	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:20:41,558	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:20:41,559	[INFO]	57	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:20:41,559	[DEBUG]	
2020-12-30 12:20:42,493	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:20:42,494	[INFO]	59	SUCCESS	+4.0	
2020-12-30 12:20:42,495	[DEBUG]	
2020-12-30 12:20:42,495	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:20:45,657	[INFO]	61	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:20:46,592	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:20:47,322	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:20:47,324	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:20:50,703	[INFO]	65	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:20:50,705	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:20:50,705	[INFO]	67	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:20:54,992	[INFO]	68	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:20:55,879	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:20:56,615	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:20:56,616	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:21:01,171	[INFO]	72	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:21:01,171	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:21:01,172	[INFO]	73	SUCCESS	+4.0	
2020-12-30 12:21:01,172	[DEBUG]	
2020-12-30 12:21:02,071	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:21:02,983	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:21:03,754	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:21:04,751	[INFO]	77	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:21:05,706	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:21:06,638	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:21:09,878	[INFO]	80	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 12:21:10,815	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:21:14,179	[INFO]	82	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:21:14,180	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:21:15,114	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:21:15,115	[INFO]	84	SUCCESS	+4.0	
2020-12-30 12:21:15,115	[DEBUG]	
2020-12-30 12:21:18,455	[INFO]	85	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:21:18,456	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:21:19,227	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:21:22,391	[INFO]	87	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:21:22,392	[INFO]	88	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:21:22,393	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:21:25,544	[INFO]	89	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:21:25,546	[INFO]	90	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:21:25,546	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:21:25,547	[INFO]	91	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:21:25,548	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:21:25,548	[INFO]	92	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:21:25,549	[DEBUG]	
2020-12-30 12:21:25,549	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:21:25,550	[INFO]	94	SUCCESS	+4.0	
2020-12-30 12:21:25,550	[DEBUG]	
2020-12-30 12:21:26,479	[INFO]	95	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:21:27,248	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:21:27,249	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:21:30,459	[INFO]	98	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 12:21:31,379	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:21:32,156	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:21:33,112	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:21:34,042	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:21:34,043	[INFO]	103	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:21:34,044	[DEBUG]	
2020-12-30 12:21:34,808	[INFO]	104	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:21:35,729	[INFO]	105	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:21:35,730	[INFO]	106	SUCCESS	+4.0	
2020-12-30 12:21:35,731	[DEBUG]	
2020-12-30 12:21:36,487	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:21:36,489	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:21:37,246	[INFO]	109	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:21:38,163	[INFO]	110	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:21:39,100	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:21:42,461	[INFO]	112	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 12:21:42,462	[INFO]	113	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:21:42,462	[DEBUG]	
2020-12-30 12:21:42,463	[INFO]	114	SUCCESS	+4.0	
2020-12-30 12:21:42,463	[DEBUG]	
2020-12-30 12:21:42,464	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:21:42,464	[INFO]	116	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:21:42,465	[DEBUG]	
2020-12-30 12:21:43,381	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:21:43,382	[INFO]	118	SUCCESS	+4.0	
2020-12-30 12:21:43,382	[DEBUG]	
2020-12-30 12:21:43,383	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:21:46,790	[INFO]	120	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:21:46,791	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:21:47,535	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:21:47,536	[INFO]	122	SUCCESS	+4.0	
2020-12-30 12:21:47,536	[DEBUG]	
2020-12-30 12:21:48,299	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:21:48,301	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:21:48,302	[INFO]	125	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:21:48,302	[DEBUG]	
2020-12-30 12:21:48,303	[INFO]	126	SUCCESS	+4.0	
2020-12-30 12:21:48,304	[DEBUG]	
2020-12-30 12:21:49,219	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:21:50,174	[INFO]	128	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:21:53,526	[INFO]	129	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:21:53,527	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:21:53,528	[INFO]	130	SUCCESS	+4.0	
2020-12-30 12:21:53,528	[DEBUG]	
2020-12-30 12:21:54,439	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:21:55,379	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:21:56,150	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:22:00,448	[INFO]	134	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:22:01,316	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:22:02,234	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:22:05,482	[INFO]	137	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 12:22:06,427	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:22:07,196	[INFO]	139	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:22:08,120	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:22:09,053	[INFO]	141	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:22:09,055	[INFO]	142	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:22:09,055	[DEBUG]	
2020-12-30 12:22:09,988	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:22:09,990	[INFO]	144	SUCCESS	+4.0	
2020-12-30 12:22:09,990	[DEBUG]	
2020-12-30 12:22:13,343	[INFO]	145	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:22:13,343	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:22:13,344	[INFO]	146	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:22:13,345	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:22:13,346	[INFO]	147	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:22:13,346	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:22:13,346	[INFO]	148	SUCCESS	+4.0	
2020-12-30 12:22:13,347	[DEBUG]	
2020-12-30 12:22:14,294	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:22:15,230	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:22:16,163	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:22:16,166	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:22:19,515	[INFO]	153	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:22:20,290	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:22:20,291	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:22:21,209	[INFO]	156	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:22:22,130	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:22:22,131	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:22:22,906	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:22:26,262	[INFO]	160	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:22:26,262	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:22:26,263	[INFO]	161	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:22:26,264	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:22:26,264	[INFO]	162	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:22:26,265	[DEBUG]	
2020-12-30 12:22:27,177	[INFO]	163	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:22:28,125	[INFO]	164	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:22:29,072	[INFO]	165	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:22:29,074	[INFO]	166	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:22:32,212	[INFO]	167	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:22:33,128	[INFO]	168	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:22:33,885	[INFO]	169	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:22:33,886	[INFO]	170	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:22:33,887	[INFO]	171	SUCCESS	+4.0	
2020-12-30 12:22:33,887	[DEBUG]	
2020-12-30 12:22:37,489	[INFO]	172	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:22:37,490	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:22:37,491	[INFO]	173	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:22:37,492	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:22:37,493	[INFO]	174	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:22:37,493	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:22:37,494	[INFO]	175	SUCCESS	+4.0	
2020-12-30 12:22:37,494	[DEBUG]	
2020-12-30 12:22:38,421	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:22:38,422	[INFO]	177	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:22:41,825	[INFO]	178	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:22:41,826	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:22:42,759	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:22:43,514	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:22:43,516	[INFO]	181	SUCCESS	+4.0	
2020-12-30 12:22:43,517	[DEBUG]	
2020-12-30 12:22:46,680	[INFO]	182	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:22:47,647	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:22:48,586	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:22:48,588	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:22:49,335	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:22:50,260	[INFO]	187	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:22:51,042	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:22:51,960	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:22:51,962	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:22:51,962	[INFO]	191	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:22:51,962	[DEBUG]	
2020-12-30 12:22:51,963	[INFO]	192	SUCCESS	+4.0	
2020-12-30 12:22:51,963	[DEBUG]	
2020-12-30 12:23:05,332	[INFO]	193	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:23:08,582	[INFO]	194	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:23:08,583	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:23:08,584	[INFO]	195	SUCCESS	+4.0	
2020-12-30 12:23:08,584	[DEBUG]	
2020-12-30 12:23:09,511	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:23:09,513	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:23:09,514	[INFO]	198	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:23:09,515	[DEBUG]	
2020-12-30 12:23:09,515	[INFO]	199	SUCCESS	+4.0	
2020-12-30 12:23:09,516	[DEBUG]	
2020-12-30 12:23:12,911	[INFO]	200	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:23:13,692	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:23:14,640	[INFO]	202	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:23:14,641	[INFO]	203	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:23:14,642	[DEBUG]	
2020-12-30 12:23:14,642	[INFO]	204	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:23:14,643	[INFO]	205	SUCCESS	+4.0	
2020-12-30 12:23:14,643	[DEBUG]	
2020-12-30 12:23:18,009	[INFO]	206	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:23:18,010	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:23:21,368	[INFO]	207	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 12:23:22,298	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:23:23,255	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:23:23,256	[INFO]	210	SUCCESS	+4.0	
2020-12-30 12:23:23,256	[DEBUG]	
2020-12-30 12:23:24,056	[INFO]	211	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:23:24,832	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:23:27,977	[INFO]	213	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 12:23:27,978	[INFO]	214	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 12:23:28,927	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:23:29,898	[INFO]	216	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:23:29,899	[INFO]	217	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:23:29,900	[DEBUG]	
2020-12-30 12:23:30,674	[INFO]	218	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:23:30,675	[INFO]	219	SUCCESS	+4.0	
2020-12-30 12:23:30,675	[DEBUG]	
2020-12-30 12:23:31,590	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:23:32,546	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:23:33,453	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:23:34,238	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:23:34,242	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:23:35,182	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:23:36,134	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:23:37,078	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:23:37,080	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:23:37,080	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:23:37,837	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:23:41,023	[INFO]	231	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:23:44,406	[INFO]	232	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 12:23:47,783	[INFO]	233	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:23:47,784	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:23:47,785	[INFO]	234	SUCCESS	+4.0	
2020-12-30 12:23:47,785	[DEBUG]	
2020-12-30 12:23:48,537	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:23:49,309	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:23:49,310	[INFO]	237	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:23:50,203	[INFO]	238	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:23:51,134	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:23:51,906	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:23:55,307	[INFO]	241	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:23:55,308	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:23:55,309	[INFO]	242	SUCCESS	+4.0	
2020-12-30 12:23:55,309	[DEBUG]	
2020-12-30 12:23:55,310	[INFO]	243	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:23:55,310	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:23:58,974	[INFO]	244	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:23:58,975	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:23:59,880	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:24:00,827	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:24:04,202	[INFO]	247	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:24:04,203	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:24:05,142	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:24:05,143	[INFO]	249	SUCCESS	+4.0	
2020-12-30 12:24:05,143	[DEBUG]	
2020-12-30 12:24:05,144	[INFO]	250	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:24:05,907	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:24:06,848	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:24:06,849	[INFO]	253	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:24:06,850	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:24:06,851	[INFO]	254	SUCCESS	+4.0	
2020-12-30 12:24:06,851	[DEBUG]	
2020-12-30 12:24:07,607	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:24:08,520	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:24:08,521	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:24:09,270	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:24:09,272	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:24:10,040	[INFO]	260	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:24:13,350	[INFO]	261	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:24:14,132	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:24:14,134	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:24:14,134	[INFO]	264	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:24:14,135	[DEBUG]	
2020-12-30 12:24:14,135	[INFO]	265	SUCCESS	+4.0	
2020-12-30 12:24:14,135	[DEBUG]	
2020-12-30 12:24:14,883	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:24:28,185	[INFO]	267	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:24:28,868	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:24:32,264	[INFO]	269	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 12:24:32,265	[INFO]	270	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:24:32,265	[DEBUG]	
2020-12-30 12:24:32,266	[INFO]	271	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:24:32,266	[DEBUG]	
2020-12-30 12:24:32,267	[INFO]	272	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:24:32,267	[DEBUG]	
2020-12-30 12:24:32,268	[INFO]	273	SUCCESS	+4.0	
2020-12-30 12:24:32,268	[DEBUG]	
2020-12-30 12:24:33,176	[INFO]	274	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:24:33,177	[INFO]	275	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:24:33,178	[DEBUG]	
2020-12-30 12:24:33,178	[INFO]	276	SUCCESS	+4.0	
2020-12-30 12:24:33,178	[DEBUG]	
2020-12-30 12:24:36,475	[INFO]	277	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 12:24:36,476	[INFO]	278	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:24:36,476	[DEBUG]	
2020-12-30 12:24:39,613	[INFO]	279	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 12:24:40,376	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:24:40,377	[INFO]	281	SUCCESS	+4.0	
2020-12-30 12:24:40,377	[DEBUG]	
2020-12-30 12:24:43,786	[INFO]	282	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:24:43,786	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:24:44,730	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:24:44,731	[INFO]	284	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:24:44,732	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:24:47,839	[INFO]	285	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:24:47,840	[INFO]	286	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:24:47,841	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:24:47,842	[INFO]	287	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:24:47,842	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:24:51,200	[INFO]	288	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 12:24:51,201	[INFO]	289	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:24:51,201	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:24:51,202	[INFO]	290	SUCCESS	+4.0	
2020-12-30 12:24:51,202	[DEBUG]	
2020-12-30 12:24:52,135	[INFO]	291	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:24:53,085	[INFO]	292	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:24:54,003	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:24:54,763	[INFO]	294	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:24:54,764	[INFO]	295	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 12:24:55,720	[INFO]	296	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:24:56,487	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:24:57,392	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:24:57,394	[INFO]	299	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:24:57,394	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:24:58,326	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:24:59,126	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:25:00,040	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:25:00,041	[INFO]	303	SUCCESS	+4.0	
2020-12-30 12:25:00,041	[DEBUG]	
2020-12-30 12:25:00,823	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:25:01,742	[INFO]	305	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:25:02,686	[INFO]	306	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:25:02,687	[INFO]	307	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:25:02,688	[DEBUG]	
2020-12-30 12:25:02,688	[INFO]	308	SUCCESS	+4.0	
2020-12-30 12:25:02,688	[DEBUG]	
2020-12-30 12:25:02,689	[INFO]	309	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:25:02,690	[INFO]	310	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:25:05,809	[INFO]	311	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:25:10,386	[INFO]	312	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:25:10,387	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:25:14,880	[INFO]	313	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:25:14,882	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:25:19,041	[INFO]	314	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:25:22,366	[INFO]	315	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:25:22,367	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:25:25,764	[INFO]	316	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:25:25,765	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,25 ****
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 17,28 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:25:26,676	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:25:30,031	[INFO]	318	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:25:30,031	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:25:30,032	[INFO]	319	SUCCESS	+4.0	
2020-12-30 12:25:30,032	[DEBUG]	
2020-12-30 12:25:30,794	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:25:31,548	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:25:32,294	[INFO]	322	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:25:33,226	[INFO]	323	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:25:34,158	[INFO]	324	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:25:38,208	[INFO]	325	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:25:39,518	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:25:40,446	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:25:40,448	[INFO]	328	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:25:45,915	[INFO]	329	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:25:46,766	[INFO]	330	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:25:50,166	[INFO]	331	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:25:50,167	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:25:50,169	[INFO]	332	SUCCESS	+4.0	
2020-12-30 12:25:50,169	[DEBUG]	
2020-12-30 12:25:51,084	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:25:52,012	[INFO]	334	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:25:52,948	[INFO]	335	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:25:56,304	[INFO]	336	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:25:57,228	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:25:57,230	[INFO]	338	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:25:57,230	[DEBUG]	
2020-12-30 12:25:57,230	[INFO]	339	SUCCESS	+4.0	
2020-12-30 12:25:57,231	[DEBUG]	
2020-12-30 12:25:58,196	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:25:59,120	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:26:00,051	[INFO]	342	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:26:00,052	[INFO]	343	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:26:00,053	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:26:00,053	[INFO]	344	SUCCESS	+4.0	
2020-12-30 12:26:00,053	[DEBUG]	
2020-12-30 12:26:03,415	[INFO]	345	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 12:26:04,194	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:26:04,195	[INFO]	347	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:26:04,196	[INFO]	348	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:26:04,196	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:26:07,644	[INFO]	349	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:26:07,645	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,25 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 13,28 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:26:07,646	[INFO]	350	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:26:07,647	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,25 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 13,28 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:26:08,410	[INFO]	351	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:26:08,413	[INFO]	352	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:26:08,414	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:26:09,329	[INFO]	353	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:26:09,330	[INFO]	354	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:26:09,330	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:26:09,331	[INFO]	355	SUCCESS	+4.0	
2020-12-30 12:26:09,331	[DEBUG]	
2020-12-30 12:26:10,237	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:26:10,239	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:26:10,239	[INFO]	358	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:26:10,240	[DEBUG]	
2020-12-30 12:26:10,240	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:26:10,241	[INFO]	360	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:26:10,242	[INFO]	361	SUCCESS	+4.0	
2020-12-30 12:26:10,242	[DEBUG]	
2020-12-30 12:26:13,393	[INFO]	362	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:26:14,341	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:26:14,342	[INFO]	364	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:26:15,284	[INFO]	365	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:26:16,220	[INFO]	366	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:26:17,139	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:26:18,088	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:26:18,089	[INFO]	369	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:26:18,089	[DEBUG]	
2020-12-30 12:26:19,028	[INFO]	370	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:26:19,995	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:26:19,998	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:26:20,000	[INFO]	373	SUCCESS	+4.0	
2020-12-30 12:26:20,000	[DEBUG]	
2020-12-30 12:26:20,919	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:26:21,686	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:26:22,454	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:26:23,389	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:26:24,164	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:26:27,312	[INFO]	379	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:26:27,313	[INFO]	380	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:26:27,313	[DEBUG]	
2020-12-30 12:26:27,314	[INFO]	381	SUCCESS	+4.0	
2020-12-30 12:26:27,314	[DEBUG]	
2020-12-30 12:26:30,651	[INFO]	382	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:26:30,652	[INFO]	383	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:26:31,566	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:26:32,347	[INFO]	385	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:26:32,348	[INFO]	386	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:26:32,348	[DEBUG]	
2020-12-30 12:26:33,122	[INFO]	387	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:26:33,123	[INFO]	388	SUCCESS	+4.0	
2020-12-30 12:26:33,124	[DEBUG]	
2020-12-30 12:26:33,124	[INFO]	389	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:26:33,125	[DEBUG]	
2020-12-30 12:26:33,125	[INFO]	390	SUCCESS	+4.0	
2020-12-30 12:26:33,125	[DEBUG]	
2020-12-30 12:26:33,880	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:26:33,882	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:26:33,882	[INFO]	393	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:26:33,883	[DEBUG]	
2020-12-30 12:26:33,883	[INFO]	394	SUCCESS	+4.0	
2020-12-30 12:26:33,883	[DEBUG]	
2020-12-30 12:26:34,803	[INFO]	395	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:26:34,804	[INFO]	396	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:26:34,804	[DEBUG]	
2020-12-30 12:26:34,805	[INFO]	397	SUCCESS	+4.0	
2020-12-30 12:26:34,805	[DEBUG]	
2020-12-30 12:26:35,729	[INFO]	398	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:26:36,484	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:26:37,398	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:26:38,348	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:26:39,279	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:26:40,210	[INFO]	403	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:26:40,212	[INFO]	404	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:26:40,212	[DEBUG]	
2020-12-30 12:26:40,212	[INFO]	405	SUCCESS	+4.0	
2020-12-30 12:26:40,213	[DEBUG]	
2020-12-30 12:26:41,171	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:26:42,129	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:26:42,130	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:26:45,450	[INFO]	409	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 12:26:45,451	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:26:45,452	[INFO]	411	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:26:45,452	[DEBUG]	
2020-12-30 12:26:46,181	[INFO]	412	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:26:46,182	[INFO]	413	SUCCESS	+4.0	
2020-12-30 12:26:46,183	[DEBUG]	
2020-12-30 12:26:49,491	[INFO]	414	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:26:49,492	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:26:50,246	[INFO]	415	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:26:53,683	[INFO]	416	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:26:53,684	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,24 ****
--- 17,30 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:26:53,685	[INFO]	417	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:26:53,686	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:26:54,423	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:26:55,386	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:26:55,388	[INFO]	420	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:26:55,388	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,24 ****
--- 17,30 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:26:56,334	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:26:59,704	[INFO]	422	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:26:59,705	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:27:02,871	[INFO]	423	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 12:27:02,872	[INFO]	424	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:27:02,873	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:27:02,874	[INFO]	425	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:27:02,874	[DEBUG]	
2020-12-30 12:27:02,875	[INFO]	426	SUCCESS	+4.0	
2020-12-30 12:27:02,875	[DEBUG]	
2020-12-30 12:27:06,530	[INFO]	427	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:27:06,531	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:27:06,532	[INFO]	428	SUCCESS	+4.0	
2020-12-30 12:27:06,532	[DEBUG]	
2020-12-30 12:27:07,287	[INFO]	429	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:27:07,289	[INFO]	430	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:27:07,289	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:27:07,289	[INFO]	431	SUCCESS	+4.0	
2020-12-30 12:27:07,290	[DEBUG]	
2020-12-30 12:27:07,290	[INFO]	432	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:27:07,291	[DEBUG]	
2020-12-30 12:27:08,058	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:27:08,059	[INFO]	434	SUCCESS	+4.0	
2020-12-30 12:27:08,059	[DEBUG]	
2020-12-30 12:27:08,957	[INFO]	435	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:27:09,896	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:27:10,846	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:27:14,248	[INFO]	438	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:27:17,407	[INFO]	439	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 12:27:18,144	[INFO]	440	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:27:19,075	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:27:22,228	[INFO]	442	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:27:23,003	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:27:23,958	[INFO]	444	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:27:23,960	[INFO]	445	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:27:23,960	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:27:23,961	[INFO]	446	SUCCESS	+4.0	
2020-12-30 12:27:23,961	[DEBUG]	
2020-12-30 12:27:24,910	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:27:25,835	[INFO]	448	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:27:26,608	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:27:30,889	[INFO]	450	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:27:31,755	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:27:32,700	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:27:32,701	[INFO]	453	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:27:32,701	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:27:32,702	[INFO]	454	SUCCESS	+4.0	
2020-12-30 12:27:32,702	[DEBUG]	
2020-12-30 12:27:32,703	[INFO]	455	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:27:32,703	[INFO]	456	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:27:32,704	[DEBUG]	
2020-12-30 12:27:32,704	[INFO]	457	SUCCESS	+4.0	
2020-12-30 12:27:32,704	[DEBUG]	
2020-12-30 12:27:33,466	[INFO]	458	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:27:33,467	[INFO]	459	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:27:33,468	[DEBUG]	
2020-12-30 12:27:33,468	[INFO]	460	SUCCESS	+4.0	
2020-12-30 12:27:33,468	[DEBUG]	
2020-12-30 12:27:34,432	[INFO]	461	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:27:35,362	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:27:35,363	[INFO]	463	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:27:35,364	[DEBUG]	
2020-12-30 12:27:35,365	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:27:35,365	[INFO]	465	SUCCESS	+4.0	
2020-12-30 12:27:35,366	[DEBUG]	
2020-12-30 12:27:35,366	[INFO]	466	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:27:35,367	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:27:36,141	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:27:37,055	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:27:37,057	[INFO]	469	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 12:27:37,057	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:27:37,058	[INFO]	470	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:27:37,058	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:27:37,059	[INFO]	471	SUCCESS	+4.0	
2020-12-30 12:27:37,059	[DEBUG]	
2020-12-30 12:27:38,000	[INFO]	472	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:27:38,776	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:27:38,778	[INFO]	474	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 12:27:39,532	[INFO]	475	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:27:40,614	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:27:41,434	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:27:44,808	[INFO]	478	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:27:44,809	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:27:44,810	[INFO]	479	SUCCESS	+4.0	
2020-12-30 12:27:44,810	[DEBUG]	
2020-12-30 12:27:45,736	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:27:46,511	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:27:47,439	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:27:48,215	[INFO]	483	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:27:52,492	[INFO]	484	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:27:52,494	[INFO]	485	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:27:52,494	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:27:52,494	[INFO]	486	SUCCESS	+4.0	
2020-12-30 12:27:52,495	[DEBUG]	
2020-12-30 12:27:53,223	[INFO]	487	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:27:56,290	[INFO]	488	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:27:57,050	[INFO]	489	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:28:01,555	[INFO]	490	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:28:01,556	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:28:01,557	[INFO]	491	SUCCESS	+4.0	
2020-12-30 12:28:01,557	[DEBUG]	
2020-12-30 12:28:02,463	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:28:02,465	[INFO]	493	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:28:02,465	[DEBUG]	
2020-12-30 12:28:02,465	[INFO]	494	SUCCESS	+4.0	
2020-12-30 12:28:02,466	[DEBUG]	
2020-12-30 12:28:02,466	[INFO]	495	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:28:02,466	[DEBUG]	
2020-12-30 12:28:02,467	[INFO]	496	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:28:02,468	[INFO]	497	SUCCESS	+4.0	
2020-12-30 12:28:02,468	[DEBUG]	
2020-12-30 12:28:03,204	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:28:06,592	[INFO]	499	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:28:06,593	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:28:07,519	[INFO]	500	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:28:07,520	[INFO]	==== END ====
2020-12-30 12:28:07,520	[INFO]	Reason: step budget
2020-12-30 12:28:07,521	[INFO]	
2020-12-30 12:28:07,521	[INFO]	========== EPOCH 9 ==========
2020-12-30 12:28:07,521	[INFO]	==== WARMUP ====
2020-12-30 12:28:10,880	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 12:28:10,880	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:28:14,199	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 12:28:14,199	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:28:17,603	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 12:28:17,604	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:28:20,960	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-30 12:28:20,960	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:28:20,960	[INFO]	==== START ====
2020-12-30 12:28:24,369	[INFO]	1	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:28:24,370	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:28:27,746	[INFO]	2	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:28:27,747	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,27 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:28:27,748	[INFO]	3	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:28:27,748	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:28:28,511	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:28:29,267	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:28:29,268	[INFO]	6	SUCCESS	+4.0	
2020-12-30 12:28:29,268	[DEBUG]	
2020-12-30 12:28:30,224	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:28:33,623	[INFO]	8	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:28:33,624	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:28:36,978	[INFO]	9	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 12:28:37,897	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:28:37,898	[INFO]	11	SUCCESS	+4.0	
2020-12-30 12:28:37,898	[DEBUG]	
2020-12-30 12:28:38,831	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:28:39,776	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:28:40,829	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:28:40,830	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:28:44,152	[INFO]	16	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 12:28:45,164	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:28:45,166	[INFO]	18	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:28:45,166	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:28:45,167	[INFO]	19	SUCCESS	+4.0	
2020-12-30 12:28:45,167	[DEBUG]	
2020-12-30 12:28:45,168	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:28:48,923	[INFO]	21	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:28:48,924	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:28:49,680	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:28:49,681	[INFO]	23	SUCCESS	+4.0	
2020-12-30 12:28:49,682	[DEBUG]	
2020-12-30 12:28:50,671	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:28:51,626	[INFO]	25	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:28:51,628	[INFO]	26	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:28:51,628	[DEBUG]	
2020-12-30 12:28:52,563	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:28:52,564	[INFO]	28	SUCCESS	+4.0	
2020-12-30 12:28:52,564	[DEBUG]	
2020-12-30 12:28:55,948	[INFO]	29	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:28:55,949	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:28:56,700	[INFO]	30	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:28:56,701	[INFO]	31	SUCCESS	+4.0	
2020-12-30 12:28:56,701	[DEBUG]	
2020-12-30 12:28:57,606	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:28:58,526	[INFO]	33	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:28:58,528	[INFO]	34	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:28:58,528	[DEBUG]	
2020-12-30 12:28:58,528	[INFO]	35	SUCCESS	+4.0	
2020-12-30 12:28:58,529	[DEBUG]	
2020-12-30 12:29:01,875	[INFO]	36	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 12:29:02,802	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:29:02,803	[INFO]	38	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:29:02,803	[DEBUG]	
2020-12-30 12:29:02,804	[INFO]	39	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:29:02,804	[DEBUG]	
2020-12-30 12:29:02,805	[INFO]	40	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:29:02,805	[DEBUG]	
2020-12-30 12:29:05,995	[INFO]	41	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 12:29:05,996	[INFO]	42	SUCCESS	+4.0	
2020-12-30 12:29:05,996	[DEBUG]	
2020-12-30 12:29:06,731	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:29:06,732	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:29:06,733	[INFO]	45	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:29:06,733	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:29:06,734	[INFO]	46	SUCCESS	+4.0	
2020-12-30 12:29:06,734	[DEBUG]	
2020-12-30 12:29:07,642	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:29:07,644	[INFO]	48	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:29:07,644	[DEBUG]	
2020-12-30 12:29:08,567	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:29:09,495	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:29:10,279	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:29:11,184	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:29:11,940	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:29:15,241	[INFO]	54	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:29:15,996	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:29:15,997	[INFO]	56	SUCCESS	+4.0	
2020-12-30 12:29:15,997	[DEBUG]	
2020-12-30 12:29:15,998	[INFO]	57	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:29:15,998	[DEBUG]	
2020-12-30 12:29:16,925	[INFO]	58	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:29:16,926	[INFO]	59	SUCCESS	+4.0	
2020-12-30 12:29:16,926	[DEBUG]	
2020-12-30 12:29:17,839	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:29:17,840	[INFO]	61	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:29:17,841	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:29:17,841	[INFO]	62	SUCCESS	+4.0	
2020-12-30 12:29:17,841	[DEBUG]	
2020-12-30 12:29:18,591	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:29:18,592	[INFO]	64	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:29:18,593	[INFO]	65	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:29:18,593	[DEBUG]	
2020-12-30 12:29:18,594	[INFO]	66	SUCCESS	+4.0	
2020-12-30 12:29:18,594	[DEBUG]	
2020-12-30 12:29:31,944	[INFO]	67	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:29:31,946	[INFO]	68	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:29:31,946	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:29:31,947	[INFO]	69	SUCCESS	+4.0	
2020-12-30 12:29:31,947	[DEBUG]	
2020-12-30 12:29:32,642	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:29:32,643	[INFO]	71	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:29:32,644	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:29:32,644	[INFO]	72	SUCCESS	+4.0	
2020-12-30 12:29:32,645	[DEBUG]	
2020-12-30 12:29:32,645	[INFO]	73	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:29:32,645	[DEBUG]	
2020-12-30 12:29:32,646	[INFO]	74	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:29:32,647	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:29:32,647	[INFO]	75	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:29:32,648	[DEBUG]	
2020-12-30 12:29:32,648	[INFO]	76	SUCCESS	+4.0	
2020-12-30 12:29:32,648	[DEBUG]	
2020-12-30 12:29:33,556	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:29:33,557	[INFO]	78	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:29:33,557	[DEBUG]	
2020-12-30 12:29:33,558	[INFO]	79	SUCCESS	+4.0	
2020-12-30 12:29:33,558	[DEBUG]	
2020-12-30 12:29:33,559	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:29:34,302	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:29:37,455	[INFO]	82	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 12:29:38,230	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:29:39,155	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:29:40,095	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:29:43,507	[INFO]	86	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:29:43,507	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:29:43,508	[INFO]	87	SUCCESS	+4.0	
2020-12-30 12:29:43,508	[DEBUG]	
2020-12-30 12:29:44,423	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:29:45,347	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:29:46,122	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:29:47,060	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:29:50,477	[INFO]	92	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:29:50,478	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:29:51,378	[INFO]	93	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:29:52,324	[INFO]	94	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:29:53,268	[INFO]	95	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:29:54,207	[INFO]	96	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:29:55,135	[INFO]	97	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:29:56,080	[INFO]	98	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:29:57,005	[INFO]	99	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:29:57,007	[INFO]	100	SUCCESS	+4.0	
2020-12-30 12:29:57,007	[DEBUG]	
2020-12-30 12:29:57,938	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:29:58,882	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:29:59,658	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:30:02,805	[INFO]	104	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:30:02,806	[INFO]	105	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:30:02,807	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:30:02,807	[INFO]	106	SUCCESS	+4.0	
2020-12-30 12:30:02,807	[DEBUG]	
2020-12-30 12:30:03,577	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:30:04,332	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:30:05,262	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:30:05,264	[INFO]	110	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:30:05,264	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:30:06,020	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:30:06,021	[INFO]	112	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:30:06,022	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:30:09,400	[INFO]	113	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:30:09,401	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,23 ****
--- 16,29 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:30:10,135	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:30:10,136	[INFO]	115	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:30:10,137	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,23 ****
--- 16,29 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:30:10,138	[INFO]	116	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:30:10,139	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,23 ****
--- 16,29 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:30:11,083	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:30:12,009	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:30:15,334	[INFO]	119	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:30:15,336	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,25 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 16,31 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:30:15,337	[INFO]	120	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:30:15,337	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,25 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 16,31 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:30:18,662	[INFO]	121	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:30:18,663	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,25 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 16,28 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:30:18,664	[INFO]	122	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:30:18,664	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:30:22,017	[INFO]	123	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:30:22,018	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,27 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:30:22,019	[INFO]	124	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:30:22,019	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:30:25,382	[INFO]	125	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:30:25,383	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:30:25,384	[INFO]	126	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:30:25,384	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:30:28,561	[INFO]	127	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 12:30:29,335	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:30:30,262	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:30:30,263	[INFO]	130	SUCCESS	+4.0	
2020-12-30 12:30:30,263	[DEBUG]	
2020-12-30 12:30:33,397	[INFO]	131	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 12:30:34,339	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:30:34,341	[INFO]	133	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:30:34,341	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:30:34,342	[INFO]	134	SUCCESS	+4.0	
2020-12-30 12:30:34,342	[DEBUG]	
2020-12-30 12:30:35,220	[INFO]	135	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:30:35,999	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:30:39,316	[INFO]	137	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 12:30:40,231	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:30:41,008	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:30:41,009	[INFO]	140	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:30:41,010	[DEBUG]	
2020-12-30 12:30:44,304	[INFO]	141	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:30:44,304	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:30:44,305	[INFO]	142	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:30:44,306	[DEBUG]	
2020-12-30 12:30:44,306	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:30:45,234	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:30:45,235	[INFO]	145	SUCCESS	+4.0	
2020-12-30 12:30:45,235	[DEBUG]	
2020-12-30 12:30:45,236	[INFO]	146	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:30:45,236	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:30:45,237	[INFO]	147	SUCCESS	+4.0	
2020-12-30 12:30:45,237	[DEBUG]	
2020-12-30 12:30:46,193	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:30:46,194	[INFO]	149	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:30:46,195	[DEBUG]	
2020-12-30 12:30:49,525	[INFO]	150	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:30:50,458	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:30:51,393	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:30:51,394	[INFO]	153	SUCCESS	+4.0	
2020-12-30 12:30:51,394	[DEBUG]	
2020-12-30 12:30:52,167	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:30:52,931	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:30:52,932	[INFO]	156	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:30:52,932	[DEBUG]	
2020-12-30 12:30:53,844	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:30:53,845	[INFO]	158	SUCCESS	+4.0	
2020-12-30 12:30:53,845	[DEBUG]	
2020-12-30 12:30:54,603	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:30:54,605	[INFO]	160	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:30:54,605	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:30:54,606	[INFO]	161	SUCCESS	+4.0	
2020-12-30 12:30:54,606	[DEBUG]	
2020-12-30 12:30:54,607	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:30:55,351	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:30:55,353	[INFO]	164	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:30:56,105	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:30:56,107	[INFO]	166	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:30:56,107	[DEBUG]	
2020-12-30 12:30:56,107	[INFO]	167	SUCCESS	+4.0	
2020-12-30 12:30:56,108	[DEBUG]	
2020-12-30 12:30:57,040	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:30:57,043	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:30:57,045	[INFO]	170	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:30:57,046	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:30:57,047	[INFO]	171	SUCCESS	+4.0	
2020-12-30 12:30:57,048	[DEBUG]	
2020-12-30 12:31:01,617	[INFO]	172	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:31:01,618	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:31:01,619	[INFO]	173	SUCCESS	+4.0	
2020-12-30 12:31:01,619	[DEBUG]	
2020-12-30 12:31:01,620	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:31:04,788	[INFO]	175	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 12:31:04,789	[INFO]	176	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:31:04,789	[DEBUG]	
2020-12-30 12:31:05,549	[INFO]	177	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:31:06,516	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:31:07,258	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:31:08,028	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:31:08,951	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:31:08,952	[INFO]	182	SUCCESS	+4.0	
2020-12-30 12:31:08,953	[DEBUG]	
2020-12-30 12:31:09,901	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:31:10,680	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:31:11,588	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:31:12,524	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:31:12,526	[INFO]	187	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:31:12,526	[DEBUG]	
2020-12-30 12:31:13,291	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:31:13,292	[INFO]	189	SUCCESS	+4.0	
2020-12-30 12:31:13,292	[DEBUG]	
2020-12-30 12:31:13,293	[INFO]	190	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:31:13,293	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:31:13,294	[INFO]	191	SUCCESS	+4.0	
2020-12-30 12:31:13,294	[DEBUG]	
2020-12-30 12:31:13,295	[INFO]	192	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:31:14,066	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:31:17,415	[INFO]	194	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:31:17,416	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:31:17,417	[INFO]	195	SUCCESS	+4.0	
2020-12-30 12:31:17,417	[DEBUG]	
2020-12-30 12:31:18,149	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:31:19,075	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:31:19,077	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:31:19,998	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:31:20,951	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:31:24,365	[INFO]	201	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:31:24,366	[INFO]	202	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:31:24,366	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:31:25,125	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:31:25,126	[INFO]	204	SUCCESS	+4.0	
2020-12-30 12:31:25,126	[DEBUG]	
2020-12-30 12:31:26,049	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:31:26,051	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:31:26,051	[INFO]	207	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:31:26,052	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:31:26,052	[INFO]	208	SUCCESS	+4.0	
2020-12-30 12:31:26,053	[DEBUG]	
2020-12-30 12:31:26,990	[INFO]	209	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:31:27,745	[INFO]	210	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:31:27,746	[INFO]	211	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:31:27,747	[INFO]	212	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:31:27,748	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:31:27,749	[INFO]	213	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:31:27,749	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:31:30,947	[INFO]	214	SUCCESS	 8.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 12:31:30,948	[INFO]	215	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:31:30,948	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:31:31,871	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:31:36,203	[INFO]	217	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:31:36,204	[INFO]	218	SUCCESS	+4.0	
2020-12-30 12:31:36,204	[DEBUG]	
2020-12-30 12:31:37,045	[INFO]	219	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:31:37,047	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:31:37,966	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:31:37,968	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:31:38,717	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:31:39,614	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:31:43,064	[INFO]	225	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:31:43,065	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:31:43,066	[INFO]	226	SUCCESS	+4.0	
2020-12-30 12:31:43,066	[DEBUG]	
2020-12-30 12:31:43,799	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:31:44,561	[INFO]	228	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:31:45,299	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:31:45,301	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:31:45,302	[INFO]	231	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:31:45,302	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:31:45,303	[INFO]	232	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:31:45,303	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:31:45,304	[INFO]	233	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:31:45,304	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:31:45,305	[INFO]	234	SUCCESS	+4.0	
2020-12-30 12:31:45,305	[DEBUG]	
2020-12-30 12:31:48,434	[INFO]	235	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:31:49,205	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:31:52,254	[INFO]	237	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:31:52,255	[INFO]	238	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:31:52,256	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:31:52,256	[INFO]	239	SUCCESS	+4.0	
2020-12-30 12:31:52,257	[DEBUG]	
2020-12-30 12:31:53,042	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:31:56,363	[INFO]	241	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:31:56,364	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:31:56,365	[INFO]	242	SUCCESS	+4.0	
2020-12-30 12:31:56,365	[DEBUG]	
2020-12-30 12:31:56,366	[INFO]	243	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:31:59,686	[INFO]	244	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:31:59,687	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:31:59,688	[INFO]	245	SUCCESS	+4.0	
2020-12-30 12:31:59,688	[DEBUG]	
2020-12-30 12:32:02,863	[INFO]	246	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 12:32:02,864	[INFO]	247	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:32:02,865	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:32:03,799	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:32:04,715	[INFO]	249	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:32:04,716	[INFO]	250	SUCCESS	+4.0	
2020-12-30 12:32:04,716	[DEBUG]	
2020-12-30 12:32:05,489	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:32:05,491	[INFO]	252	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:32:05,491	[DEBUG]	
2020-12-30 12:32:06,406	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:32:07,336	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:32:07,337	[INFO]	255	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:32:07,338	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:32:10,679	[INFO]	256	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:32:10,680	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 13,23 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             
+         } if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:32:10,681	[INFO]	257	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:32:10,681	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:32:11,433	[INFO]	258	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:32:11,434	[INFO]	259	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:32:11,434	[DEBUG]	
2020-12-30 12:32:12,348	[INFO]	260	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:32:13,281	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:32:14,046	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:32:14,047	[INFO]	263	SUCCESS	+4.0	
2020-12-30 12:32:14,047	[DEBUG]	
2020-12-30 12:32:14,979	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:32:15,909	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:32:16,704	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:32:17,641	[INFO]	267	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:32:21,934	[INFO]	268	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:32:22,805	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:32:22,806	[INFO]	270	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:32:22,807	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:32:22,807	[INFO]	271	SUCCESS	+4.0	
2020-12-30 12:32:22,808	[DEBUG]	
2020-12-30 12:32:23,737	[INFO]	272	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:32:24,713	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:32:25,657	[INFO]	274	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:32:39,027	[INFO]	275	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:32:39,745	[INFO]	276	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:32:40,722	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:32:43,867	[INFO]	278	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:32:44,793	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:32:45,735	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:32:46,496	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:32:47,441	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:32:47,443	[INFO]	283	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:32:47,444	[DEBUG]	
2020-12-30 12:32:47,445	[INFO]	284	SUCCESS	+4.0	
2020-12-30 12:32:47,445	[DEBUG]	
2020-12-30 12:32:48,391	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:32:49,326	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:32:50,271	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:32:53,573	[INFO]	288	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:32:54,478	[INFO]	289	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:32:55,242	[INFO]	290	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:32:56,178	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:32:56,935	[INFO]	292	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:32:57,857	[INFO]	293	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:32:58,774	[INFO]	294	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:33:02,076	[INFO]	295	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:33:02,077	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:33:02,847	[INFO]	296	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:33:02,849	[INFO]	297	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:33:02,849	[DEBUG]	
2020-12-30 12:33:02,850	[INFO]	298	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:33:02,850	[DEBUG]	
2020-12-30 12:33:03,591	[INFO]	299	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:33:03,593	[INFO]	300	SUCCESS	+4.0	
2020-12-30 12:33:03,593	[DEBUG]	
2020-12-30 12:33:04,523	[INFO]	301	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:33:05,305	[INFO]	302	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:33:05,307	[INFO]	303	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:33:05,308	[DEBUG]	
2020-12-30 12:33:05,310	[INFO]	304	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:33:05,312	[INFO]	305	SUCCESS	+4.0	
2020-12-30 12:33:05,312	[DEBUG]	
2020-12-30 12:33:08,662	[INFO]	306	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:33:08,663	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:33:09,596	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:33:09,597	[INFO]	308	SUCCESS	+4.0	
2020-12-30 12:33:09,597	[DEBUG]	
2020-12-30 12:33:10,357	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:33:13,704	[INFO]	310	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:33:13,705	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:33:13,705	[INFO]	311	SUCCESS	+4.0	
2020-12-30 12:33:13,706	[DEBUG]	
2020-12-30 12:33:14,618	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:33:17,843	[INFO]	313	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 12:33:18,775	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:33:19,541	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:33:20,471	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:33:21,417	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:33:21,418	[INFO]	318	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:33:21,419	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:33:21,419	[INFO]	319	SUCCESS	+4.0	
2020-12-30 12:33:21,420	[DEBUG]	
2020-12-30 12:33:22,342	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:33:25,713	[INFO]	321	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:33:25,714	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:33:26,466	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:33:26,467	[INFO]	323	SUCCESS	+4.0	
2020-12-30 12:33:26,468	[DEBUG]	
2020-12-30 12:33:27,380	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:33:28,316	[INFO]	325	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:33:29,269	[INFO]	326	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:33:30,176	[INFO]	327	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:33:30,178	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:33:30,178	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:33:30,939	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:33:30,940	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:33:30,941	[INFO]	332	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:33:30,942	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:33:30,942	[INFO]	333	SUCCESS	+4.0	
2020-12-30 12:33:30,942	[DEBUG]	
2020-12-30 12:33:31,868	[INFO]	334	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:33:32,809	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:33:32,810	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:33:33,756	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:33:37,088	[INFO]	338	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:33:37,832	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:33:38,586	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:33:39,320	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:33:40,084	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:33:41,037	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:33:41,038	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:33:45,278	[INFO]	345	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:33:46,181	[INFO]	346	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:33:46,933	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:33:47,852	[INFO]	348	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:33:52,405	[INFO]	349	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:33:52,406	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:33:53,107	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:33:53,109	[INFO]	351	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:33:53,109	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:33:53,110	[INFO]	352	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:33:53,111	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:33:53,111	[INFO]	353	SUCCESS	+4.0	
2020-12-30 12:33:53,111	[DEBUG]	
2020-12-30 12:33:54,039	[INFO]	354	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:33:54,786	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:33:54,787	[INFO]	356	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:33:54,788	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:33:58,146	[INFO]	358	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 12:33:58,903	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:34:02,080	[INFO]	360	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 12:34:02,082	[INFO]	361	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:34:02,842	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:34:06,178	[INFO]	363	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:34:06,179	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:34:07,101	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:34:08,065	[INFO]	365	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:34:08,066	[INFO]	366	SUCCESS	+4.0	
2020-12-30 12:34:08,066	[DEBUG]	
2020-12-30 12:34:08,821	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:34:08,822	[INFO]	368	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:34:08,823	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:34:09,755	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:34:09,756	[INFO]	370	SUCCESS	+4.0	
2020-12-30 12:34:09,756	[DEBUG]	
2020-12-30 12:34:14,020	[INFO]	371	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:34:17,269	[INFO]	372	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:34:17,270	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:34:17,271	[INFO]	373	SUCCESS	+4.0	
2020-12-30 12:34:17,271	[DEBUG]	
2020-12-30 12:34:17,272	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:34:17,273	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:34:17,274	[INFO]	376	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:34:17,274	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:34:18,215	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:34:18,216	[INFO]	378	SUCCESS	+4.0	
2020-12-30 12:34:18,217	[DEBUG]	
2020-12-30 12:34:18,217	[INFO]	379	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:34:18,218	[DEBUG]	
2020-12-30 12:34:18,218	[INFO]	380	SUCCESS	+4.0	
2020-12-30 12:34:18,218	[DEBUG]	
2020-12-30 12:34:21,577	[INFO]	381	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 12:34:22,514	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:34:23,455	[INFO]	383	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:34:23,456	[INFO]	384	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:34:23,456	[DEBUG]	
2020-12-30 12:34:23,457	[INFO]	385	SUCCESS	+4.0	
2020-12-30 12:34:23,457	[DEBUG]	
2020-12-30 12:34:24,435	[INFO]	386	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:34:25,223	[INFO]	387	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:34:26,170	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:34:29,363	[INFO]	389	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:34:33,625	[INFO]	390	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:34:36,762	[INFO]	391	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 12:34:36,763	[INFO]	392	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:34:36,763	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:34:40,121	[INFO]	393	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:34:40,122	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,25 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:34:40,123	[INFO]	394	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:34:40,123	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:34:40,903	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:34:41,856	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:34:42,810	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:34:45,912	[INFO]	398	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:34:46,687	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:34:46,688	[INFO]	400	SUCCESS	+4.0	
2020-12-30 12:34:46,688	[DEBUG]	
2020-12-30 12:34:47,609	[INFO]	401	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:34:50,948	[INFO]	402	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:34:50,949	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:34:51,869	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:34:51,870	[INFO]	404	SUCCESS	+4.0	
2020-12-30 12:34:51,870	[DEBUG]	
2020-12-30 12:34:52,647	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:34:53,577	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:34:54,516	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:34:55,454	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:34:56,367	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:34:56,368	[INFO]	410	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:34:56,368	[DEBUG]	
2020-12-30 12:34:57,133	[INFO]	411	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:34:57,134	[INFO]	412	SUCCESS	+4.0	
2020-12-30 12:34:57,134	[DEBUG]	
2020-12-30 12:35:00,286	[INFO]	413	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 12:35:01,251	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:35:02,035	[INFO]	415	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:35:02,938	[INFO]	416	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:35:02,939	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:35:02,940	[INFO]	418	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:35:06,100	[INFO]	419	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:35:07,008	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:35:07,009	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:35:07,973	[INFO]	422	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:35:08,917	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:35:12,093	[INFO]	424	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 12:35:12,094	[INFO]	425	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:35:12,094	[DEBUG]	
2020-12-30 12:35:12,095	[INFO]	426	SUCCESS	+4.0	
2020-12-30 12:35:12,095	[DEBUG]	
2020-12-30 12:35:12,096	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:35:15,467	[INFO]	428	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:35:15,468	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:35:15,469	[INFO]	429	SUCCESS	+4.0	
2020-12-30 12:35:15,469	[DEBUG]	
2020-12-30 12:35:16,394	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:35:17,310	[INFO]	431	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:35:18,248	[INFO]	432	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:35:19,009	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:35:19,930	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:35:20,883	[INFO]	435	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:35:21,825	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:35:22,743	[INFO]	437	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:35:25,957	[INFO]	438	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:35:25,958	[INFO]	439	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:35:29,294	[INFO]	440	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:35:29,295	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:35:29,296	[INFO]	441	SUCCESS	+4.0	
2020-12-30 12:35:29,296	[DEBUG]	
2020-12-30 12:35:30,060	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:35:30,061	[INFO]	443	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:35:30,061	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:35:30,062	[INFO]	444	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:35:30,063	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:35:33,414	[INFO]	445	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:35:33,415	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,24 ****
--- 14,30 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:35:33,416	[INFO]	446	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:35:33,417	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,24 ****
--- 14,30 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:35:34,190	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:35:35,170	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:35:35,173	[INFO]	449	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:35:35,174	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,24 ****
--- 14,30 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:35:39,737	[INFO]	450	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:35:39,738	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,24 ****
--- 14,33 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:35:40,551	[INFO]	451	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:35:40,553	[INFO]	452	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:35:40,553	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,24 ****
--- 14,33 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:35:40,554	[INFO]	453	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:35:40,555	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,24 ****
--- 14,33 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:35:40,556	[INFO]	454	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:35:40,557	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,24 ****
--- 14,33 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:35:44,010	[INFO]	455	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:35:44,011	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
--- 14,26 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:35:47,311	[INFO]	456	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:35:47,312	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:35:47,313	[INFO]	457	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:35:47,314	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:35:48,272	[INFO]	458	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:35:49,189	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:35:50,196	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:35:50,201	[INFO]	461	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:35:50,203	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:35:50,206	[INFO]	462	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:35:50,208	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:35:51,129	[INFO]	463	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:35:52,069	[INFO]	464	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:35:52,070	[INFO]	465	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:35:52,070	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:35:55,295	[INFO]	466	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 12:35:55,297	[INFO]	467	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:35:55,297	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:35:55,298	[INFO]	468	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:35:55,298	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:35:55,299	[INFO]	469	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:35:56,217	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:35:57,141	[INFO]	471	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:35:57,900	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:35:58,636	[INFO]	473	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:35:59,374	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:35:59,375	[INFO]	475	SUCCESS	+4.0	
2020-12-30 12:35:59,376	[DEBUG]	
2020-12-30 12:36:02,694	[INFO]	476	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 12:36:03,617	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:36:04,544	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:36:04,545	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:36:05,345	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:36:08,646	[INFO]	481	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:36:08,647	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:36:08,647	[INFO]	482	SUCCESS	+4.0	
2020-12-30 12:36:08,648	[DEBUG]	
2020-12-30 12:36:08,648	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:36:09,409	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:36:10,344	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:36:13,450	[INFO]	486	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:36:14,194	[INFO]	487	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:36:14,953	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:36:18,296	[INFO]	489	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:36:18,297	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:36:19,086	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:36:22,242	[INFO]	491	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 12:36:23,009	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:36:23,012	[INFO]	493	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:36:23,013	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:36:24,017	[INFO]	494	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:36:24,018	[INFO]	495	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:36:24,019	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:36:24,972	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:36:28,386	[INFO]	497	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 12:36:28,387	[INFO]	498	SUCCESS	+4.0	
2020-12-30 12:36:28,387	[DEBUG]	
2020-12-30 12:36:28,388	[INFO]	499	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:36:28,388	[DEBUG]	
2020-12-30 12:36:28,389	[INFO]	500	SUCCESS	+4.0	
2020-12-30 12:36:28,389	[DEBUG]	
2020-12-30 12:36:28,389	[INFO]	==== END ====
2020-12-30 12:36:28,389	[INFO]	Reason: step budget
2020-12-30 12:36:28,389	[INFO]	
2020-12-30 12:36:28,390	[INFO]	========== EPOCH 10 ==========
2020-12-30 12:36:28,390	[INFO]	==== WARMUP ====
2020-12-30 12:36:31,741	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 12:36:31,741	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:36:35,130	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 12:36:35,130	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:36:38,398	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 12:36:38,399	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:36:41,806	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-30 12:36:41,806	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:36:41,806	[INFO]	==== START ====
2020-12-30 12:36:41,807	[INFO]	1	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:36:41,807	[DEBUG]	
2020-12-30 12:36:41,808	[INFO]	2	SUCCESS	+4.0	
2020-12-30 12:36:41,808	[DEBUG]	
2020-12-30 12:36:41,809	[INFO]	3	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:36:41,809	[DEBUG]	
2020-12-30 12:36:41,809	[INFO]	4	SUCCESS	+4.0	
2020-12-30 12:36:41,810	[DEBUG]	
2020-12-30 12:36:45,221	[INFO]	5	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:36:45,222	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:36:45,223	[INFO]	6	SUCCESS	+4.0	
2020-12-30 12:36:45,223	[DEBUG]	
2020-12-30 12:36:48,559	[INFO]	7	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:36:48,559	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:36:48,560	[INFO]	8	SUCCESS	+4.0	
2020-12-30 12:36:48,560	[DEBUG]	
2020-12-30 12:36:51,905	[INFO]	9	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:36:51,905	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:36:51,906	[INFO]	10	SUCCESS	+4.0	
2020-12-30 12:36:51,906	[DEBUG]	
2020-12-30 12:36:52,838	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:36:53,773	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:36:54,726	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:36:57,874	[INFO]	14	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:36:58,790	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:36:59,717	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:37:03,026	[INFO]	17	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:37:03,981	[INFO]	18	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:37:07,581	[INFO]	19	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:37:07,582	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:37:10,662	[INFO]	20	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:37:10,663	[INFO]	21	SUCCESS	+4.0	
2020-12-30 12:37:10,664	[DEBUG]	
2020-12-30 12:37:11,596	[INFO]	22	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:37:12,353	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:37:13,294	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:37:14,254	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:37:15,033	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:37:15,793	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:37:16,713	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:37:17,628	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:37:18,416	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:37:18,417	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:37:18,418	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:37:18,418	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:37:19,323	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:37:19,324	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:37:19,325	[INFO]	36	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:37:19,325	[DEBUG]	
2020-12-30 12:37:19,325	[INFO]	37	SUCCESS	+4.0	
2020-12-30 12:37:19,326	[DEBUG]	
2020-12-30 12:37:19,326	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:37:19,327	[INFO]	39	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:37:20,257	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:37:20,259	[INFO]	41	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:37:20,259	[DEBUG]	
2020-12-30 12:37:20,260	[INFO]	42	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:37:20,261	[DEBUG]	
2020-12-30 12:37:20,261	[INFO]	43	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:37:20,262	[DEBUG]	
2020-12-30 12:37:20,262	[INFO]	44	SUCCESS	+4.0	
2020-12-30 12:37:20,262	[DEBUG]	
2020-12-30 12:37:23,643	[INFO]	45	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:37:23,644	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:37:24,613	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:37:24,614	[INFO]	47	SUCCESS	+4.0	
2020-12-30 12:37:24,614	[DEBUG]	
2020-12-30 12:37:25,536	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:37:26,296	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:37:27,041	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:37:27,043	[INFO]	51	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:37:27,043	[DEBUG]	
2020-12-30 12:37:30,360	[INFO]	52	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:37:31,109	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:37:31,869	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:37:32,608	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:37:32,609	[INFO]	56	SUCCESS	+4.0	
2020-12-30 12:37:32,609	[DEBUG]	
2020-12-30 12:37:32,610	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:37:33,543	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:37:34,308	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:37:35,254	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:37:36,002	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:37:36,003	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:37:36,004	[INFO]	63	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:37:36,004	[DEBUG]	
2020-12-30 12:37:36,005	[INFO]	64	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:37:36,005	[INFO]	65	SUCCESS	+4.0	
2020-12-30 12:37:36,006	[DEBUG]	
2020-12-30 12:37:39,350	[INFO]	66	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:37:39,351	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:37:42,610	[INFO]	67	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 12:37:43,538	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:37:43,539	[INFO]	69	SUCCESS	+4.0	
2020-12-30 12:37:43,539	[DEBUG]	
2020-12-30 12:37:43,540	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:37:43,541	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:37:43,542	[INFO]	72	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:37:43,542	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:37:44,328	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:37:44,328	[INFO]	74	SUCCESS	+4.0	
2020-12-30 12:37:44,329	[DEBUG]	
2020-12-30 12:37:45,254	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:37:46,199	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:37:46,948	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:37:47,863	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:37:47,866	[INFO]	79	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:37:47,866	[DEBUG]	
2020-12-30 12:37:48,611	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:37:48,613	[INFO]	81	SUCCESS	+4.0	
2020-12-30 12:37:48,613	[DEBUG]	
2020-12-30 12:37:51,699	[INFO]	82	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:37:52,629	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:37:53,553	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:37:54,507	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:37:55,442	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:37:55,444	[INFO]	87	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:37:55,444	[DEBUG]	
2020-12-30 12:37:55,445	[INFO]	88	SUCCESS	+4.0	
2020-12-30 12:37:55,445	[DEBUG]	
2020-12-30 12:37:56,374	[INFO]	89	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:37:57,161	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:37:57,911	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:37:57,912	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:38:01,265	[INFO]	93	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 12:38:04,413	[INFO]	94	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 12:38:04,414	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:38:05,351	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:38:06,310	[INFO]	97	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:38:06,312	[INFO]	98	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:38:09,485	[INFO]	99	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 12:38:10,413	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:38:11,180	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:38:14,536	[INFO]	102	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:38:14,536	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:38:15,511	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:38:16,298	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:38:17,241	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:38:17,242	[INFO]	106	SUCCESS	+4.0	
2020-12-30 12:38:17,242	[DEBUG]	
2020-12-30 12:38:17,243	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:38:18,008	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:38:18,009	[INFO]	109	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:38:18,010	[DEBUG]	
2020-12-30 12:38:18,011	[INFO]	110	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 12:38:18,011	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:38:18,911	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:38:18,912	[INFO]	113	SUCCESS	+4.0	
2020-12-30 12:38:18,912	[DEBUG]	
2020-12-30 12:38:18,913	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:38:19,655	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:38:23,067	[INFO]	116	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:38:23,068	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:38:23,069	[INFO]	117	SUCCESS	+4.0	
2020-12-30 12:38:23,069	[DEBUG]	
2020-12-30 12:38:24,045	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:38:25,001	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:38:25,002	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:38:25,746	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:38:25,748	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:38:25,748	[INFO]	123	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:38:25,749	[DEBUG]	
2020-12-30 12:38:25,749	[INFO]	124	SUCCESS	+4.0	
2020-12-30 12:38:25,750	[DEBUG]	
2020-12-30 12:38:29,106	[INFO]	125	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:38:29,106	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:38:29,108	[INFO]	126	SUCCESS	+4.0	
2020-12-30 12:38:29,108	[DEBUG]	
2020-12-30 12:38:29,109	[INFO]	127	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:38:32,491	[INFO]	128	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 12:38:33,412	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:38:34,184	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:38:34,948	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:38:35,861	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:38:36,806	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:38:37,739	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:38:38,708	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:38:39,467	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:38:40,234	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:38:43,689	[INFO]	138	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 12:38:44,464	[INFO]	139	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:38:45,280	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:38:46,287	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:38:46,289	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:38:47,090	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:38:48,047	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:38:48,048	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:38:48,981	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:38:48,982	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:38:48,983	[INFO]	148	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 12:38:49,752	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:38:50,643	[INFO]	150	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:38:53,763	[INFO]	151	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:38:54,542	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:38:55,443	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:38:56,367	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:38:56,368	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:38:59,465	[INFO]	156	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:39:00,220	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:39:00,222	[INFO]	158	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:39:00,972	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:39:00,974	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:39:00,974	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:39:01,719	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:39:02,650	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:39:03,596	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:39:03,597	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:39:04,518	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:39:04,519	[INFO]	167	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:39:04,519	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:39:04,520	[INFO]	168	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:39:04,520	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:39:05,467	[INFO]	169	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:39:06,400	[INFO]	170	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:39:06,402	[INFO]	171	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:39:06,402	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:39:06,403	[INFO]	172	SUCCESS	+4.0	
2020-12-30 12:39:06,403	[DEBUG]	
2020-12-30 12:39:07,350	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:39:08,318	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:39:09,252	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:39:09,253	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:39:09,254	[INFO]	177	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:39:09,254	[INFO]	178	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:39:09,255	[DEBUG]	
2020-12-30 12:39:09,255	[INFO]	179	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:39:09,256	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:39:12,661	[INFO]	180	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:39:12,662	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,25 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 16,28 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:39:13,398	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:39:13,400	[INFO]	182	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:39:13,400	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,25 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 16,28 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:39:16,835	[INFO]	183	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:39:16,836	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:39:16,837	[INFO]	184	SUCCESS	+4.0	
2020-12-30 12:39:16,837	[DEBUG]	
2020-12-30 12:39:17,757	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:39:18,684	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:39:22,071	[INFO]	187	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:39:22,072	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:39:22,073	[INFO]	188	SUCCESS	+4.0	
2020-12-30 12:39:22,073	[DEBUG]	
2020-12-30 12:39:23,003	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:39:23,984	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:39:27,327	[INFO]	191	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:39:28,065	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:39:28,997	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:39:29,955	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:39:30,883	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:39:34,243	[INFO]	196	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 12:39:34,244	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:39:35,175	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:39:35,176	[INFO]	199	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:39:35,176	[DEBUG]	
2020-12-30 12:39:35,177	[INFO]	200	SUCCESS	+4.0	
2020-12-30 12:39:35,177	[DEBUG]	
2020-12-30 12:39:35,178	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:39:35,954	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:39:35,955	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:39:36,691	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:39:37,622	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:39:37,623	[INFO]	206	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:39:37,624	[DEBUG]	
2020-12-30 12:39:37,624	[INFO]	207	SUCCESS	+4.0	
2020-12-30 12:39:37,624	[DEBUG]	
2020-12-30 12:39:37,625	[INFO]	208	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:39:37,625	[DEBUG]	
2020-12-30 12:39:37,626	[INFO]	209	SUCCESS	+4.0	
2020-12-30 12:39:37,626	[DEBUG]	
2020-12-30 12:39:37,627	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:39:38,541	[INFO]	211	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:39:41,736	[INFO]	212	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 12:39:41,738	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:39:45,086	[INFO]	214	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 12:39:45,836	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:39:48,916	[INFO]	216	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:39:49,842	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:39:49,843	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:39:49,844	[INFO]	219	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:39:49,844	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:39:49,845	[INFO]	220	SUCCESS	+4.0	
2020-12-30 12:39:49,845	[DEBUG]	
2020-12-30 12:39:53,153	[INFO]	221	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:39:53,154	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:39:57,477	[INFO]	222	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:39:58,353	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:39:59,287	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:39:59,288	[INFO]	225	SUCCESS	+4.0	
2020-12-30 12:39:59,288	[DEBUG]	
2020-12-30 12:39:59,289	[INFO]	226	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:39:59,289	[DEBUG]	
2020-12-30 12:40:03,913	[INFO]	227	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:40:03,914	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:40:04,618	[INFO]	228	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:40:05,535	[INFO]	229	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:40:05,536	[INFO]	230	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:40:05,537	[DEBUG]	
2020-12-30 12:40:05,537	[INFO]	231	SUCCESS	+4.0	
2020-12-30 12:40:05,537	[DEBUG]	
2020-12-30 12:40:08,928	[INFO]	232	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:40:08,929	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:40:12,054	[INFO]	233	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 12:40:15,303	[INFO]	234	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 12:40:15,304	[INFO]	235	SUCCESS	+4.0	
2020-12-30 12:40:15,304	[DEBUG]	
2020-12-30 12:40:16,256	[INFO]	236	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:40:16,258	[INFO]	237	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:40:16,258	[DEBUG]	
2020-12-30 12:40:17,199	[INFO]	238	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:40:17,201	[INFO]	239	SUCCESS	+4.0	
2020-12-30 12:40:17,201	[DEBUG]	
2020-12-30 12:40:20,871	[INFO]	240	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:40:20,872	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:40:20,872	[INFO]	241	SUCCESS	+4.0	
2020-12-30 12:40:20,873	[DEBUG]	
2020-12-30 12:40:21,775	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:40:24,983	[INFO]	243	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 12:40:25,743	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:40:26,518	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:40:27,454	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:40:28,400	[INFO]	247	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:40:41,899	[INFO]	248	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:40:44,962	[INFO]	249	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:40:45,726	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:40:46,646	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:40:47,429	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:40:50,618	[INFO]	253	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 12:40:51,367	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:40:54,728	[INFO]	255	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:40:59,022	[INFO]	256	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:40:59,023	[INFO]	257	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:40:59,024	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:40:59,025	[INFO]	258	SUCCESS	+4.0	
2020-12-30 12:40:59,025	[DEBUG]	
2020-12-30 12:40:59,892	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:41:00,817	[INFO]	260	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:41:01,600	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:41:01,601	[INFO]	262	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:41:02,550	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:41:05,914	[INFO]	264	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 12:41:06,838	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:41:06,840	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:41:06,841	[INFO]	267	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:41:06,841	[DEBUG]	
2020-12-30 12:41:06,841	[INFO]	268	SUCCESS	+4.0	
2020-12-30 12:41:06,842	[DEBUG]	
2020-12-30 12:41:10,250	[INFO]	269	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:41:10,251	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:41:11,177	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:41:14,534	[INFO]	271	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:41:14,535	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,23 ****
--- 17,29 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:41:14,536	[INFO]	272	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:41:14,537	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:41:15,483	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:41:16,438	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:41:17,411	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:41:17,412	[INFO]	276	SUCCESS	+4.0	
2020-12-30 12:41:17,412	[DEBUG]	
2020-12-30 12:41:18,170	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:41:19,090	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:41:22,559	[INFO]	279	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:41:22,560	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:41:22,561	[INFO]	280	SUCCESS	+4.0	
2020-12-30 12:41:22,561	[DEBUG]	
2020-12-30 12:41:23,454	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:41:23,455	[INFO]	282	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:41:23,456	[DEBUG]	
2020-12-30 12:41:23,456	[INFO]	283	SUCCESS	+4.0	
2020-12-30 12:41:23,456	[DEBUG]	
2020-12-30 12:41:24,426	[INFO]	284	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:41:25,194	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:41:38,517	[INFO]	286	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:41:41,792	[INFO]	287	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:41:41,793	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:41:42,572	[INFO]	288	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:41:42,574	[INFO]	289	SUCCESS	+4.0	
2020-12-30 12:41:42,575	[DEBUG]	
2020-12-30 12:41:42,577	[INFO]	290	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:41:42,577	[INFO]	291	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:41:42,578	[DEBUG]	
2020-12-30 12:41:42,578	[INFO]	292	SUCCESS	+4.0	
2020-12-30 12:41:42,579	[DEBUG]	
2020-12-30 12:41:42,580	[INFO]	293	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:41:43,506	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:41:43,507	[INFO]	295	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:41:43,508	[DEBUG]	
2020-12-30 12:41:43,508	[INFO]	296	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:41:43,509	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:41:43,510	[INFO]	297	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:41:43,510	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:41:43,510	[INFO]	298	SUCCESS	+4.0	
2020-12-30 12:41:43,511	[DEBUG]	
2020-12-30 12:41:46,880	[INFO]	299	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:41:46,880	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:41:46,881	[INFO]	300	SUCCESS	+4.0	
2020-12-30 12:41:46,881	[DEBUG]	
2020-12-30 12:41:46,882	[INFO]	301	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:41:46,882	[DEBUG]	
2020-12-30 12:41:46,883	[INFO]	302	SUCCESS	+4.0	
2020-12-30 12:41:46,883	[DEBUG]	
2020-12-30 12:41:47,819	[INFO]	303	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:41:47,821	[INFO]	304	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:41:47,822	[DEBUG]	
2020-12-30 12:41:48,769	[INFO]	305	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:41:49,711	[INFO]	306	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:41:49,713	[INFO]	307	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:41:49,713	[INFO]	308	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:41:49,714	[INFO]	309	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:41:49,715	[INFO]	310	SUCCESS	+4.0	
2020-12-30 12:41:49,715	[DEBUG]	
2020-12-30 12:41:50,654	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:41:51,580	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:41:51,582	[INFO]	313	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:41:51,582	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:41:54,879	[INFO]	314	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:41:54,881	[INFO]	315	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:41:54,881	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:41:54,882	[INFO]	316	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:41:54,883	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:41:54,884	[INFO]	317	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:41:54,884	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:41:55,828	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:41:56,754	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:41:59,930	[INFO]	320	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:42:00,880	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:42:01,678	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:42:02,438	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:42:02,439	[INFO]	324	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:42:02,440	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:42:02,440	[INFO]	325	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:42:02,441	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:42:03,355	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:42:03,356	[INFO]	327	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:42:03,357	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:42:03,358	[INFO]	328	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:42:03,358	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:42:03,359	[INFO]	329	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:42:03,359	[DEBUG]	
2020-12-30 12:42:03,359	[INFO]	330	SUCCESS	+4.0	
2020-12-30 12:42:03,360	[DEBUG]	
2020-12-30 12:42:04,298	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:42:04,299	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:42:04,300	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:42:05,072	[INFO]	334	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:42:05,074	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:42:05,810	[INFO]	336	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:42:06,729	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:42:07,501	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:42:08,255	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:42:09,207	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:42:09,965	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:42:10,733	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:42:11,466	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:42:14,819	[INFO]	344	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 12:42:15,746	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:42:15,748	[INFO]	346	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:42:15,748	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:42:16,504	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:42:16,505	[INFO]	348	SUCCESS	+4.0	
2020-12-30 12:42:16,505	[DEBUG]	
2020-12-30 12:42:16,506	[INFO]	349	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:42:16,506	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:42:16,507	[INFO]	350	SUCCESS	+4.0	
2020-12-30 12:42:16,507	[DEBUG]	
2020-12-30 12:42:17,420	[INFO]	351	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:42:17,421	[INFO]	352	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:42:17,421	[DEBUG]	
2020-12-30 12:42:17,422	[INFO]	353	SUCCESS	+4.0	
2020-12-30 12:42:17,422	[DEBUG]	
2020-12-30 12:42:17,423	[INFO]	354	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:42:17,423	[DEBUG]	
2020-12-30 12:42:18,179	[INFO]	355	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:42:18,181	[INFO]	356	SUCCESS	+4.0	
2020-12-30 12:42:18,181	[DEBUG]	
2020-12-30 12:42:21,568	[INFO]	357	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:42:21,568	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:42:21,569	[INFO]	358	SUCCESS	+4.0	
2020-12-30 12:42:21,569	[DEBUG]	
2020-12-30 12:42:22,493	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:42:22,495	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:42:22,495	[INFO]	361	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:42:22,495	[DEBUG]	
2020-12-30 12:42:22,496	[INFO]	362	SUCCESS	+4.0	
2020-12-30 12:42:22,496	[DEBUG]	
2020-12-30 12:42:25,706	[INFO]	363	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:42:26,637	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:42:27,586	[INFO]	365	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:42:30,989	[INFO]	366	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:42:30,990	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:42:30,991	[INFO]	367	SUCCESS	+4.0	
2020-12-30 12:42:30,991	[DEBUG]	
2020-12-30 12:42:31,935	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:42:35,295	[INFO]	369	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:42:35,297	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:42:35,298	[INFO]	370	SUCCESS	+4.0	
2020-12-30 12:42:35,298	[DEBUG]	
2020-12-30 12:42:38,506	[INFO]	371	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 12:42:39,427	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:42:39,428	[INFO]	373	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:42:39,428	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:42:39,429	[INFO]	374	SUCCESS	+4.0	
2020-12-30 12:42:39,429	[DEBUG]	
2020-12-30 12:42:39,430	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:42:42,644	[INFO]	376	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 12:42:45,978	[INFO]	377	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:42:46,926	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:42:47,910	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:42:48,841	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:42:49,787	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:42:49,788	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:42:50,554	[INFO]	383	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:42:51,312	[INFO]	384	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:42:51,314	[INFO]	385	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:42:51,315	[INFO]	386	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:42:52,234	[INFO]	387	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:42:52,236	[INFO]	388	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:42:52,236	[DEBUG]	
2020-12-30 12:42:52,236	[INFO]	389	SUCCESS	+4.0	
2020-12-30 12:42:52,237	[DEBUG]	
2020-12-30 12:42:53,030	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:42:53,033	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:42:53,035	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:42:53,768	[INFO]	393	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:42:57,082	[INFO]	394	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 12:42:57,842	[INFO]	395	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:42:58,615	[INFO]	396	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:42:59,516	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:43:00,280	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:43:01,224	[INFO]	399	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:43:01,226	[INFO]	400	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:43:01,227	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:43:01,228	[INFO]	401	SUCCESS	+4.0	
2020-12-30 12:43:01,228	[DEBUG]	
2020-12-30 12:43:01,229	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:43:01,992	[INFO]	403	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:43:15,303	[INFO]	404	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:43:15,304	[INFO]	405	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:43:15,304	[DEBUG]	
2020-12-30 12:43:15,305	[INFO]	406	SUCCESS	+4.0	
2020-12-30 12:43:15,305	[DEBUG]	
2020-12-30 12:43:16,175	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:43:19,847	[INFO]	408	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:43:19,848	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:43:19,849	[INFO]	409	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:43:19,849	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:43:19,850	[INFO]	410	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:43:19,850	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:43:19,850	[INFO]	411	SUCCESS	+4.0	
2020-12-30 12:43:19,851	[DEBUG]	
2020-12-30 12:43:20,601	[INFO]	412	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:43:20,602	[INFO]	413	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:43:20,603	[DEBUG]	
2020-12-30 12:43:20,603	[INFO]	414	SUCCESS	+4.0	
2020-12-30 12:43:20,603	[DEBUG]	
2020-12-30 12:43:20,604	[INFO]	415	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:43:20,605	[INFO]	416	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:43:20,605	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:43:21,533	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:43:21,534	[INFO]	418	SUCCESS	+4.0	
2020-12-30 12:43:21,535	[DEBUG]	
2020-12-30 12:43:22,323	[INFO]	419	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:43:23,087	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:43:23,879	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:43:24,620	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:43:25,557	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:43:26,502	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:43:27,444	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:43:28,406	[INFO]	426	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:43:29,364	[INFO]	427	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:43:30,143	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:43:33,271	[INFO]	429	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:43:36,664	[INFO]	430	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:43:36,664	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:43:36,665	[INFO]	431	SUCCESS	+4.0	
2020-12-30 12:43:36,665	[DEBUG]	
2020-12-30 12:43:40,996	[INFO]	432	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:43:41,893	[INFO]	433	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:43:42,830	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:43:43,790	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:43:43,793	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:43:43,795	[INFO]	437	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:43:44,565	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:43:45,482	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:43:46,420	[INFO]	440	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:43:46,421	[INFO]	441	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:43:46,421	[DEBUG]	
2020-12-30 12:43:47,353	[INFO]	442	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:43:47,354	[INFO]	443	SUCCESS	+4.0	
2020-12-30 12:43:47,355	[DEBUG]	
2020-12-30 12:43:50,727	[INFO]	444	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:43:51,482	[INFO]	445	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:43:52,397	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:43:53,347	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:43:56,755	[INFO]	448	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:43:56,757	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:43:57,701	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:43:57,703	[INFO]	450	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:43:57,703	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:43:57,704	[INFO]	451	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:43:57,705	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:43:58,641	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:43:59,400	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:44:02,751	[INFO]	454	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 12:44:02,752	[INFO]	455	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:44:02,753	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:44:02,753	[INFO]	456	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:44:02,754	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:44:03,679	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:44:04,593	[INFO]	458	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:44:04,595	[INFO]	459	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:44:04,595	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:44:04,596	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:44:04,597	[INFO]	461	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:44:04,597	[DEBUG]	
2020-12-30 12:44:07,930	[INFO]	462	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:44:07,932	[INFO]	463	SUCCESS	+4.0	
2020-12-30 12:44:07,932	[DEBUG]	
2020-12-30 12:44:07,933	[INFO]	464	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:44:07,933	[DEBUG]	
2020-12-30 12:44:07,934	[INFO]	465	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:44:07,935	[INFO]	466	SUCCESS	+4.0	
2020-12-30 12:44:07,935	[DEBUG]	
2020-12-30 12:44:07,935	[INFO]	467	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:44:07,936	[DEBUG]	
2020-12-30 12:44:07,936	[INFO]	468	SUCCESS	+4.0	
2020-12-30 12:44:07,936	[DEBUG]	
2020-12-30 12:44:08,859	[INFO]	469	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:44:09,790	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:44:10,571	[INFO]	471	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:44:11,343	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:44:12,077	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:44:13,015	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:44:13,920	[INFO]	475	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:44:13,921	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:44:14,867	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:44:15,628	[INFO]	478	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:44:16,393	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:44:17,327	[INFO]	480	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:44:18,083	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:44:19,020	[INFO]	482	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:44:19,945	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:44:20,895	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:44:21,815	[INFO]	485	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:44:21,816	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:44:35,291	[INFO]	487	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:44:35,292	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:44:36,167	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:44:36,169	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:44:36,170	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:44:36,170	[INFO]	492	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:44:36,171	[DEBUG]	
2020-12-30 12:44:36,171	[INFO]	493	SUCCESS	+4.0	
2020-12-30 12:44:36,171	[DEBUG]	
2020-12-30 12:44:37,080	[INFO]	494	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:44:37,871	[INFO]	495	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:44:38,610	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:44:41,793	[INFO]	497	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:44:42,766	[INFO]	498	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:44:47,084	[INFO]	499	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:44:47,085	[INFO]	500	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:44:47,086	[INFO]	==== END ====
2020-12-30 12:44:47,086	[INFO]	Reason: step budget
2020-12-30 12:44:47,086	[INFO]	
2020-12-30 12:44:47,086	[INFO]	========== EPOCH 11 ==========
2020-12-30 12:44:47,086	[INFO]	==== WARMUP ====
2020-12-30 12:44:50,371	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 12:44:50,371	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:44:53,737	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 12:44:53,737	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:44:57,073	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 12:44:57,073	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:45:00,464	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-30 12:45:00,464	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:45:00,464	[INFO]	==== START ====
2020-12-30 12:45:00,465	[INFO]	1	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:45:00,465	[DEBUG]	
2020-12-30 12:45:03,818	[INFO]	2	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:45:03,819	[INFO]	3	SUCCESS	+4.0	
2020-12-30 12:45:03,819	[DEBUG]	
2020-12-30 12:45:04,799	[INFO]	4	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:45:05,757	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:45:06,502	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:45:06,503	[INFO]	7	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:45:06,503	[DEBUG]	
2020-12-30 12:45:06,504	[INFO]	8	SUCCESS	+4.0	
2020-12-30 12:45:06,504	[DEBUG]	
2020-12-30 12:45:07,444	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:45:08,381	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:45:09,335	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:45:22,701	[INFO]	12	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:45:22,702	[INFO]	13	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:45:22,703	[DEBUG]	
2020-12-30 12:45:22,703	[INFO]	14	SUCCESS	+4.0	
2020-12-30 12:45:22,703	[DEBUG]	
2020-12-30 12:45:23,570	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:45:27,912	[INFO]	16	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:45:28,628	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:45:29,559	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:45:29,560	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:45:29,561	[INFO]	20	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:45:29,561	[DEBUG]	
2020-12-30 12:45:29,562	[INFO]	21	SUCCESS	+4.0	
2020-12-30 12:45:29,562	[DEBUG]	
2020-12-30 12:45:30,514	[INFO]	22	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:45:30,517	[INFO]	23	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:45:30,518	[DEBUG]	
2020-12-30 12:45:31,441	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:45:32,371	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:45:33,137	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:45:33,890	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:45:34,643	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:45:34,644	[INFO]	29	SUCCESS	+4.0	
2020-12-30 12:45:34,644	[DEBUG]	
2020-12-30 12:45:39,054	[INFO]	30	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:45:40,264	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:45:40,265	[INFO]	32	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:45:40,265	[DEBUG]	
2020-12-30 12:45:41,501	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:45:42,821	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:45:44,083	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:45:45,145	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:45:45,147	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:45:48,442	[INFO]	38	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 12:45:48,444	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:45:49,199	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:45:49,201	[INFO]	41	SUCCESS	+4.0	
2020-12-30 12:45:49,201	[DEBUG]	
2020-12-30 12:45:52,564	[INFO]	42	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:45:52,566	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:45:52,566	[INFO]	43	SUCCESS	+4.0	
2020-12-30 12:45:52,567	[DEBUG]	
2020-12-30 12:45:53,519	[INFO]	44	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:45:58,061	[INFO]	45	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:45:58,061	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:45:58,062	[INFO]	46	SUCCESS	+4.0	
2020-12-30 12:45:58,062	[DEBUG]	
2020-12-30 12:45:58,772	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:45:59,714	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:45:59,717	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:45:59,719	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:46:03,165	[INFO]	51	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:46:03,166	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:46:04,089	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:46:04,090	[INFO]	53	SUCCESS	+4.0	
2020-12-30 12:46:04,090	[DEBUG]	
2020-12-30 12:46:07,339	[INFO]	54	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 12:46:07,340	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:46:08,269	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:46:09,063	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:46:09,064	[INFO]	58	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:46:09,064	[DEBUG]	
2020-12-30 12:46:09,065	[INFO]	59	SUCCESS	+4.0	
2020-12-30 12:46:09,065	[DEBUG]	
2020-12-30 12:46:09,066	[INFO]	60	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:46:09,066	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:46:09,813	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:46:10,794	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:46:10,795	[INFO]	63	SUCCESS	+4.0	
2020-12-30 12:46:10,795	[DEBUG]	
2020-12-30 12:46:11,735	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:46:15,060	[INFO]	65	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:46:15,061	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:46:18,473	[INFO]	66	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 12:46:18,474	[INFO]	67	SUCCESS	+4.0	
2020-12-30 12:46:18,475	[DEBUG]	
2020-12-30 12:46:19,383	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:46:20,327	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:46:20,329	[INFO]	70	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:46:20,329	[DEBUG]	
2020-12-30 12:46:20,329	[INFO]	71	SUCCESS	+4.0	
2020-12-30 12:46:20,330	[DEBUG]	
2020-12-30 12:46:21,275	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:46:24,673	[INFO]	73	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:46:24,674	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:46:24,675	[INFO]	74	SUCCESS	+4.0	
2020-12-30 12:46:24,675	[DEBUG]	
2020-12-30 12:46:25,437	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:46:28,809	[INFO]	76	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:46:28,809	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:46:29,596	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:46:29,597	[INFO]	78	SUCCESS	+4.0	
2020-12-30 12:46:29,597	[DEBUG]	
2020-12-30 12:46:29,598	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:46:29,599	[INFO]	80	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:46:29,599	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:46:30,346	[INFO]	81	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:46:30,347	[INFO]	82	SUCCESS	+4.0	
2020-12-30 12:46:30,347	[DEBUG]	
2020-12-30 12:46:31,281	[INFO]	83	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:46:34,599	[INFO]	84	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:46:35,376	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:46:35,377	[INFO]	86	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:46:35,377	[DEBUG]	
2020-12-30 12:46:35,378	[INFO]	87	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:46:36,127	[INFO]	88	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:46:37,050	[INFO]	89	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:46:37,051	[INFO]	90	SUCCESS	+4.0	
2020-12-30 12:46:37,051	[DEBUG]	
2020-12-30 12:46:37,052	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:46:37,053	[INFO]	92	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:46:37,053	[DEBUG]	
2020-12-30 12:46:37,054	[INFO]	93	SUCCESS	+4.0	
2020-12-30 12:46:37,054	[DEBUG]	
2020-12-30 12:46:37,054	[INFO]	94	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:46:37,055	[DEBUG]	
2020-12-30 12:46:37,055	[INFO]	95	SUCCESS	+4.0	
2020-12-30 12:46:37,055	[DEBUG]	
2020-12-30 12:46:37,808	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:46:38,744	[INFO]	97	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:46:39,665	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:46:43,106	[INFO]	99	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:46:43,107	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:46:43,107	[INFO]	100	SUCCESS	+4.0	
2020-12-30 12:46:43,108	[DEBUG]	
2020-12-30 12:46:43,875	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:46:44,629	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:46:47,770	[INFO]	103	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:46:47,772	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:46:47,773	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:46:47,775	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:46:48,538	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:46:49,451	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:46:49,452	[INFO]	109	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:46:49,453	[DEBUG]	
2020-12-30 12:46:49,453	[INFO]	110	SUCCESS	+4.0	
2020-12-30 12:46:49,453	[DEBUG]	
2020-12-30 12:46:49,454	[INFO]	111	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:46:49,454	[DEBUG]	
2020-12-30 12:46:49,455	[INFO]	112	SUCCESS	+4.0	
2020-12-30 12:46:49,455	[DEBUG]	
2020-12-30 12:46:50,378	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:46:50,381	[INFO]	114	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:46:50,381	[DEBUG]	
2020-12-30 12:46:50,382	[INFO]	115	SUCCESS	+4.0	
2020-12-30 12:46:50,382	[DEBUG]	
2020-12-30 12:46:50,384	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:46:50,385	[INFO]	117	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:46:50,385	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:46:51,152	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:46:51,153	[INFO]	119	SUCCESS	+4.0	
2020-12-30 12:46:51,153	[DEBUG]	
2020-12-30 12:46:52,075	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:46:52,078	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:46:53,010	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:46:53,772	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:46:57,145	[INFO]	124	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:46:57,146	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:46:57,146	[INFO]	125	SUCCESS	+4.0	
2020-12-30 12:46:57,147	[DEBUG]	
2020-12-30 12:46:57,147	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:46:57,148	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:46:58,076	[INFO]	128	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:46:58,079	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:46:58,863	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:46:59,767	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:47:04,309	[INFO]	132	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:47:04,310	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:47:07,364	[INFO]	133	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:47:08,131	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:47:08,132	[INFO]	135	SUCCESS	+4.0	
2020-12-30 12:47:08,132	[DEBUG]	
2020-12-30 12:47:08,880	[INFO]	136	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:47:09,796	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:47:09,797	[INFO]	138	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:47:09,797	[DEBUG]	
2020-12-30 12:47:10,572	[INFO]	139	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:47:10,573	[INFO]	140	SUCCESS	+4.0	
2020-12-30 12:47:10,573	[DEBUG]	
2020-12-30 12:47:11,500	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:47:14,839	[INFO]	142	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:47:14,840	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:47:18,023	[INFO]	143	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 12:47:18,024	[INFO]	144	SUCCESS	+4.0	
2020-12-30 12:47:18,024	[DEBUG]	
2020-12-30 12:47:18,025	[INFO]	145	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:47:18,025	[DEBUG]	
2020-12-30 12:47:18,954	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:47:18,955	[INFO]	147	SUCCESS	+4.0	
2020-12-30 12:47:18,955	[DEBUG]	
2020-12-30 12:47:19,728	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:47:20,491	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:47:20,492	[INFO]	150	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:47:20,493	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:47:20,494	[INFO]	152	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:47:20,494	[DEBUG]	
2020-12-30 12:47:20,495	[INFO]	153	SUCCESS	+4.0	
2020-12-30 12:47:20,495	[DEBUG]	
2020-12-30 12:47:20,496	[INFO]	154	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:47:20,496	[DEBUG]	
2020-12-30 12:47:20,497	[INFO]	155	SUCCESS	+4.0	
2020-12-30 12:47:20,497	[DEBUG]	
2020-12-30 12:47:20,497	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:47:20,498	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:47:23,864	[INFO]	158	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:47:23,865	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:47:23,867	[INFO]	159	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:47:23,867	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:47:24,794	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:47:28,039	[INFO]	161	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 12:47:28,041	[INFO]	162	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:47:28,041	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:47:28,042	[INFO]	163	SUCCESS	+4.0	
2020-12-30 12:47:28,042	[DEBUG]	
2020-12-30 12:47:28,795	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:47:29,760	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:47:29,761	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:47:30,524	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:47:31,450	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:47:31,451	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:47:34,814	[INFO]	170	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 12:47:35,570	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:47:48,868	[INFO]	172	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:47:49,756	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:47:53,036	[INFO]	174	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:47:53,037	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:47:53,038	[INFO]	175	SUCCESS	+4.0	
2020-12-30 12:47:53,038	[DEBUG]	
2020-12-30 12:47:56,406	[INFO]	176	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:47:56,407	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:47:56,408	[INFO]	177	SUCCESS	+4.0	
2020-12-30 12:47:56,408	[DEBUG]	
2020-12-30 12:47:57,172	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:47:58,090	[INFO]	179	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:47:59,020	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:47:59,021	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:47:59,778	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:48:00,700	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:48:00,701	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:48:01,439	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:48:02,371	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:48:02,372	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:48:02,373	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:48:02,374	[INFO]	189	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:48:02,374	[DEBUG]	
2020-12-30 12:48:03,326	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:48:04,259	[INFO]	191	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:48:07,651	[INFO]	192	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:48:07,652	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:48:07,653	[INFO]	193	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:48:07,654	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:48:08,412	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:48:08,413	[INFO]	195	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:48:08,414	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:48:09,182	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:48:09,183	[INFO]	197	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:48:09,184	[DEBUG]	
2020-12-30 12:48:09,185	[INFO]	198	SUCCESS	+4.0	
2020-12-30 12:48:09,185	[DEBUG]	
2020-12-30 12:48:12,505	[INFO]	199	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:48:13,291	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:48:14,049	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:48:14,825	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:48:15,735	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:48:16,645	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:48:17,433	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:48:17,434	[INFO]	206	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:48:17,434	[DEBUG]	
2020-12-30 12:48:17,435	[INFO]	207	SUCCESS	+4.0	
2020-12-30 12:48:17,435	[DEBUG]	
2020-12-30 12:48:17,436	[INFO]	208	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:48:17,436	[DEBUG]	
2020-12-30 12:48:17,437	[INFO]	209	SUCCESS	+4.0	
2020-12-30 12:48:17,437	[DEBUG]	
2020-12-30 12:48:21,112	[INFO]	210	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:48:21,113	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:48:21,114	[INFO]	211	SUCCESS	+4.0	
2020-12-30 12:48:21,114	[DEBUG]	
2020-12-30 12:48:21,115	[INFO]	212	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:48:21,115	[DEBUG]	
2020-12-30 12:48:21,115	[INFO]	213	SUCCESS	+4.0	
2020-12-30 12:48:21,116	[DEBUG]	
2020-12-30 12:48:24,496	[INFO]	214	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:48:24,496	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:48:24,497	[INFO]	215	SUCCESS	+4.0	
2020-12-30 12:48:24,497	[DEBUG]	
2020-12-30 12:48:25,413	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:48:26,191	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:48:29,389	[INFO]	218	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 12:48:30,317	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:48:34,608	[INFO]	220	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:48:35,328	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:48:38,404	[INFO]	222	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:48:38,405	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:48:41,841	[INFO]	224	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:48:41,842	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:48:41,842	[INFO]	225	SUCCESS	+4.0	
2020-12-30 12:48:41,843	[DEBUG]	
2020-12-30 12:48:42,820	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:48:43,841	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:48:44,821	[INFO]	228	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:48:45,843	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:48:46,849	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:48:46,851	[INFO]	231	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:48:47,788	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:48:48,740	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:48:49,671	[INFO]	234	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:48:53,015	[INFO]	235	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 12:48:53,783	[INFO]	236	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:48:53,786	[INFO]	237	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:48:53,787	[DEBUG]	
2020-12-30 12:48:53,789	[INFO]	238	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:48:53,790	[DEBUG]	
2020-12-30 12:48:53,791	[INFO]	239	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:48:53,792	[DEBUG]	
2020-12-30 12:48:53,793	[INFO]	240	SUCCESS	+4.0	
2020-12-30 12:48:53,794	[DEBUG]	
2020-12-30 12:48:54,716	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:48:57,932	[INFO]	242	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 12:49:01,112	[INFO]	243	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:49:02,025	[INFO]	244	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:49:02,784	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:49:03,534	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:49:04,457	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:49:04,459	[INFO]	248	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:49:04,459	[DEBUG]	
2020-12-30 12:49:07,857	[INFO]	249	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 12:49:07,858	[INFO]	250	SUCCESS	+4.0	
2020-12-30 12:49:07,858	[DEBUG]	
2020-12-30 12:49:07,859	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:49:08,800	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:49:09,721	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:49:09,722	[INFO]	254	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:49:10,494	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:49:11,450	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:49:11,452	[INFO]	257	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:49:11,452	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:49:11,453	[INFO]	258	SUCCESS	+4.0	
2020-12-30 12:49:11,453	[DEBUG]	
2020-12-30 12:49:12,369	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:49:13,156	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:49:13,914	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:49:13,915	[INFO]	262	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:49:13,915	[DEBUG]	
2020-12-30 12:49:13,916	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:49:13,917	[INFO]	264	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:49:13,917	[DEBUG]	
2020-12-30 12:49:13,918	[INFO]	265	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:49:13,918	[DEBUG]	
2020-12-30 12:49:13,918	[INFO]	266	SUCCESS	+4.0	
2020-12-30 12:49:13,919	[DEBUG]	
2020-12-30 12:49:17,532	[INFO]	267	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:49:17,533	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:49:18,464	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:49:18,465	[INFO]	269	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:49:18,466	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:49:18,467	[INFO]	270	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:49:18,467	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:49:18,468	[INFO]	271	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:49:18,468	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:49:21,997	[INFO]	272	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:49:21,998	[INFO]	273	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:49:21,999	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:49:21,999	[INFO]	274	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:49:22,000	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:49:25,360	[INFO]	275	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 12:49:26,320	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:49:26,323	[INFO]	277	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:49:26,324	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:49:26,327	[INFO]	278	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:49:26,328	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:49:26,329	[INFO]	279	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:49:26,331	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:49:26,333	[INFO]	280	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:49:26,334	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:49:26,336	[INFO]	281	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:49:26,337	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:49:27,283	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:49:27,284	[INFO]	283	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:49:27,285	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:49:30,600	[INFO]	284	SUCCESS	 8.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 12:49:30,601	[INFO]	285	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:49:30,601	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:49:30,602	[INFO]	286	SUCCESS	+4.0	
2020-12-30 12:49:30,602	[DEBUG]	
2020-12-30 12:49:31,516	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:49:32,275	[INFO]	288	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:49:33,006	[INFO]	289	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:49:36,110	[INFO]	290	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:49:36,866	[INFO]	291	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:49:36,867	[INFO]	292	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:49:36,868	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:49:37,781	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:49:37,782	[INFO]	294	SUCCESS	+4.0	
2020-12-30 12:49:37,783	[DEBUG]	
2020-12-30 12:49:37,784	[INFO]	295	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:49:37,784	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:49:38,562	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:49:38,566	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:49:39,355	[INFO]	299	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:49:43,644	[INFO]	300	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:49:43,645	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:49:44,359	[INFO]	302	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:49:45,269	[INFO]	303	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:49:45,270	[INFO]	304	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:49:45,270	[DEBUG]	
2020-12-30 12:49:46,189	[INFO]	305	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:49:46,190	[INFO]	306	SUCCESS	+4.0	
2020-12-30 12:49:46,191	[DEBUG]	
2020-12-30 12:49:46,946	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:49:47,882	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:49:47,883	[INFO]	309	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:49:47,884	[DEBUG]	
2020-12-30 12:49:48,642	[INFO]	310	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:49:52,030	[INFO]	311	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:49:52,031	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:49:52,032	[INFO]	312	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:49:52,033	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:49:52,033	[INFO]	313	SUCCESS	+4.0	
2020-12-30 12:49:52,033	[DEBUG]	
2020-12-30 12:49:52,941	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:49:53,703	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:49:54,617	[INFO]	316	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:49:54,618	[INFO]	317	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:49:55,362	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:49:58,722	[INFO]	319	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:49:58,723	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:49:59,649	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:49:59,650	[INFO]	321	SUCCESS	+4.0	
2020-12-30 12:49:59,650	[DEBUG]	
2020-12-30 12:50:00,421	[INFO]	322	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:50:03,789	[INFO]	323	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:50:03,790	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:50:03,791	[INFO]	324	SUCCESS	+4.0	
2020-12-30 12:50:03,791	[DEBUG]	
2020-12-30 12:50:03,792	[INFO]	325	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:50:03,792	[DEBUG]	
2020-12-30 12:50:07,170	[INFO]	326	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:50:07,171	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:50:07,937	[INFO]	327	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:50:08,855	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:50:09,612	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:50:12,977	[INFO]	330	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:50:12,979	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 13,25 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:50:12,981	[INFO]	331	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:50:12,982	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:50:12,984	[INFO]	332	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:50:12,984	[DEBUG]	
2020-12-30 12:50:16,269	[INFO]	333	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:50:16,270	[INFO]	334	SUCCESS	+4.0	
2020-12-30 12:50:16,270	[DEBUG]	
2020-12-30 12:50:17,205	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:50:18,144	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:50:19,067	[INFO]	337	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:50:19,068	[INFO]	338	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:50:19,069	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:50:19,843	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:50:19,844	[INFO]	340	SUCCESS	+4.0	
2020-12-30 12:50:19,844	[DEBUG]	
2020-12-30 12:50:19,845	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:50:23,054	[INFO]	342	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 12:50:23,056	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:50:23,057	[INFO]	344	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 12:50:23,057	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:50:23,985	[INFO]	346	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:50:27,190	[INFO]	347	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 12:50:28,106	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:50:29,046	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:50:29,969	[INFO]	350	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:50:29,971	[INFO]	351	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:50:30,906	[INFO]	352	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:50:30,909	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:50:30,911	[INFO]	354	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:50:30,913	[INFO]	355	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:50:30,914	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:50:30,916	[INFO]	356	SUCCESS	+4.0	
2020-12-30 12:50:30,916	[DEBUG]	
2020-12-30 12:50:31,829	[INFO]	357	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:50:32,757	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:50:33,686	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:50:34,623	[INFO]	360	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:50:34,625	[INFO]	361	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:50:38,106	[INFO]	362	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 12:50:38,875	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:50:38,876	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:50:39,816	[INFO]	365	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:50:39,817	[INFO]	366	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:50:40,790	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:50:41,724	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:50:44,872	[INFO]	369	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:50:44,874	[INFO]	370	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:50:44,874	[DEBUG]	
2020-12-30 12:50:44,875	[INFO]	371	SUCCESS	+4.0	
2020-12-30 12:50:44,875	[DEBUG]	
2020-12-30 12:50:47,993	[INFO]	372	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:50:48,900	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:50:49,833	[INFO]	374	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:50:49,834	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:50:53,221	[INFO]	376	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:50:53,222	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:50:53,224	[INFO]	377	SUCCESS	+4.0	
2020-12-30 12:50:53,224	[DEBUG]	
2020-12-30 12:50:54,152	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:50:57,361	[INFO]	379	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 12:50:58,136	[INFO]	380	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:50:59,088	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:50:59,848	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:51:03,048	[INFO]	383	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 12:51:03,809	[INFO]	384	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:51:03,812	[INFO]	385	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:51:03,814	[INFO]	386	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:51:03,815	[DEBUG]	
2020-12-30 12:51:03,816	[INFO]	387	SUCCESS	+4.0	
2020-12-30 12:51:03,817	[DEBUG]	
2020-12-30 12:51:03,818	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:51:03,820	[INFO]	389	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:51:03,820	[DEBUG]	
2020-12-30 12:51:04,761	[INFO]	390	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:51:04,762	[INFO]	391	SUCCESS	+4.0	
2020-12-30 12:51:04,762	[DEBUG]	
2020-12-30 12:51:05,535	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:51:06,309	[INFO]	393	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:51:07,237	[INFO]	394	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:51:07,239	[INFO]	395	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:51:07,240	[DEBUG]	
2020-12-30 12:51:07,241	[INFO]	396	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 12:51:07,242	[INFO]	397	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:51:07,243	[DEBUG]	
2020-12-30 12:51:07,244	[INFO]	398	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:51:07,244	[DEBUG]	
2020-12-30 12:51:07,246	[INFO]	399	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:51:07,246	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:51:08,182	[INFO]	400	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:51:08,184	[INFO]	401	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:51:08,184	[DEBUG]	
2020-12-30 12:51:08,185	[INFO]	402	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:51:08,185	[INFO]	403	SUCCESS	+4.0	
2020-12-30 12:51:08,185	[DEBUG]	
2020-12-30 12:51:11,529	[INFO]	404	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:51:11,530	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:51:11,531	[INFO]	405	SUCCESS	+4.0	
2020-12-30 12:51:11,531	[DEBUG]	
2020-12-30 12:51:12,285	[INFO]	406	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:51:12,287	[INFO]	407	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:51:12,287	[DEBUG]	
2020-12-30 12:51:12,288	[INFO]	408	SUCCESS	+4.0	
2020-12-30 12:51:12,288	[DEBUG]	
2020-12-30 12:51:13,223	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:51:13,224	[INFO]	410	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:51:13,224	[DEBUG]	
2020-12-30 12:51:13,225	[INFO]	411	SUCCESS	+4.0	
2020-12-30 12:51:13,225	[DEBUG]	
2020-12-30 12:51:16,430	[INFO]	412	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 12:51:16,431	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:51:16,432	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:51:16,433	[INFO]	415	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:51:17,368	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:51:20,755	[INFO]	417	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:51:20,755	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:51:20,756	[INFO]	418	SUCCESS	+4.0	
2020-12-30 12:51:20,756	[DEBUG]	
2020-12-30 12:51:20,757	[INFO]	419	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 12:51:20,758	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:51:20,759	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:51:21,510	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:51:21,511	[INFO]	423	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:51:21,512	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:51:22,421	[INFO]	425	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:51:23,203	[INFO]	426	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:51:26,556	[INFO]	427	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 12:51:27,470	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:51:28,244	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:51:28,245	[INFO]	430	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:51:28,994	[INFO]	431	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:51:28,995	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:51:29,950	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:51:29,952	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:51:33,287	[INFO]	435	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:51:33,288	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:51:33,289	[INFO]	436	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:51:33,289	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:51:33,290	[INFO]	437	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:51:33,290	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:51:36,388	[INFO]	438	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:51:36,389	[INFO]	439	SUCCESS	+4.0	
2020-12-30 12:51:36,389	[DEBUG]	
2020-12-30 12:51:36,390	[INFO]	440	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:51:36,390	[INFO]	441	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:51:36,391	[DEBUG]	
2020-12-30 12:51:36,391	[INFO]	442	SUCCESS	+4.0	
2020-12-30 12:51:36,391	[DEBUG]	
2020-12-30 12:51:37,322	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:51:37,324	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:51:38,249	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:51:38,251	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:51:39,018	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:51:39,019	[INFO]	448	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:51:39,020	[INFO]	449	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:51:39,020	[DEBUG]	
2020-12-30 12:51:39,966	[INFO]	450	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:51:43,657	[INFO]	451	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:51:43,657	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:51:47,017	[INFO]	452	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:51:47,018	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,25 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:51:50,258	[INFO]	453	SUCCESS	 8.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 12:51:50,260	[INFO]	454	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:51:50,260	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:51:50,261	[INFO]	455	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:51:50,261	[DEBUG]	
2020-12-30 12:51:50,261	[INFO]	456	SUCCESS	+4.0	
2020-12-30 12:51:50,262	[DEBUG]	
2020-12-30 12:51:50,999	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:51:51,938	[INFO]	458	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:51:52,917	[INFO]	459	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:51:53,861	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:51:57,052	[INFO]	461	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 12:51:57,970	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:51:58,742	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:51:59,682	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:52:00,643	[INFO]	465	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:52:04,028	[INFO]	466	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:52:04,029	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:52:04,030	[INFO]	467	SUCCESS	+4.0	
2020-12-30 12:52:04,030	[DEBUG]	
2020-12-30 12:52:04,031	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:52:07,129	[INFO]	469	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:52:08,028	[INFO]	470	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:52:08,813	[INFO]	471	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:52:12,150	[INFO]	472	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:52:12,150	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:52:13,085	[INFO]	473	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:52:13,086	[INFO]	474	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:52:13,087	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:52:13,087	[INFO]	475	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:52:13,088	[DEBUG]	
2020-12-30 12:52:13,088	[INFO]	476	SUCCESS	+4.0	
2020-12-30 12:52:13,088	[DEBUG]	
2020-12-30 12:52:13,089	[INFO]	477	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 12:52:13,828	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:52:13,830	[INFO]	479	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 12:52:13,830	[DEBUG]	
2020-12-30 12:52:13,830	[INFO]	480	SUCCESS	+4.0	
2020-12-30 12:52:13,831	[DEBUG]	
2020-12-30 12:52:14,590	[INFO]	481	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:52:15,341	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:52:16,271	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:52:17,192	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:52:17,194	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:52:17,965	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:52:18,895	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:52:19,815	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:52:22,940	[INFO]	489	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:52:23,718	[INFO]	490	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:52:24,673	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:52:25,613	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:52:25,615	[INFO]	493	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:52:30,194	[INFO]	494	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:52:30,195	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:52:34,748	[INFO]	495	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:52:34,748	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,24 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:52:34,749	[INFO]	496	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:52:34,750	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:52:34,750	[INFO]	497	SUCCESS	+4.0	
2020-12-30 12:52:34,750	[DEBUG]	
2020-12-30 12:52:34,751	[INFO]	498	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:52:35,631	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:52:36,408	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:52:36,408	[INFO]	==== END ====
2020-12-30 12:52:36,408	[INFO]	Reason: step budget
2020-12-30 12:52:36,409	[INFO]	
2020-12-30 12:52:36,409	[INFO]	========== EPOCH 12 ==========
2020-12-30 12:52:36,409	[INFO]	==== WARMUP ====
2020-12-30 12:52:39,806	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 12:52:39,807	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:52:43,193	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 12:52:43,193	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:52:46,539	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 12:52:46,539	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:52:49,939	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-30 12:52:49,939	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 12:52:49,939	[INFO]	==== START ====
2020-12-30 12:52:50,850	[INFO]	1	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:52:51,643	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:52:52,545	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:52:53,311	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:52:54,063	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:52:54,986	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:52:55,934	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:52:56,701	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:52:57,638	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:52:58,556	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:52:59,489	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:53:00,249	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:53:01,178	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:53:01,180	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:53:04,375	[INFO]	15	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 12:53:04,376	[INFO]	16	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:53:04,377	[DEBUG]	
2020-12-30 12:53:05,359	[INFO]	17	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:53:06,136	[INFO]	18	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:53:06,137	[INFO]	19	SUCCESS	+4.0	
2020-12-30 12:53:06,137	[DEBUG]	
2020-12-30 12:53:07,100	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:53:10,486	[INFO]	21	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:53:10,487	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:53:11,254	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:53:11,255	[INFO]	23	SUCCESS	+4.0	
2020-12-30 12:53:11,255	[DEBUG]	
2020-12-30 12:53:14,464	[INFO]	24	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 12:53:15,230	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:53:16,149	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:53:17,074	[INFO]	27	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:53:20,454	[INFO]	28	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:53:20,455	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:53:23,531	[INFO]	29	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:53:24,323	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:53:24,324	[INFO]	31	SUCCESS	+4.0	
2020-12-30 12:53:24,324	[DEBUG]	
2020-12-30 12:53:24,325	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:53:27,702	[INFO]	33	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:53:27,703	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:53:28,445	[INFO]	34	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:53:28,446	[INFO]	35	SUCCESS	+4.0	
2020-12-30 12:53:28,447	[DEBUG]	
2020-12-30 12:53:29,395	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:53:30,353	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:53:31,093	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:53:32,067	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:53:33,007	[INFO]	40	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:53:33,774	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:53:34,966	[INFO]	42	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:53:36,151	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:53:36,153	[INFO]	44	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:53:37,414	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:53:42,699	[INFO]	46	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:53:42,709	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:53:42,713	[INFO]	47	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:53:42,721	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:53:42,729	[INFO]	48	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:53:42,731	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:53:50,374	[INFO]	49	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:53:51,492	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:53:52,744	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:53:52,745	[INFO]	52	SUCCESS	+4.0	
2020-12-30 12:53:52,745	[DEBUG]	
2020-12-30 12:53:53,795	[INFO]	53	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:53:53,797	[INFO]	54	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:53:53,798	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:53:54,814	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:53:54,816	[INFO]	56	SUCCESS	+4.0	
2020-12-30 12:53:54,816	[DEBUG]	
2020-12-30 12:53:56,124	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:53:57,474	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:53:57,475	[INFO]	59	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:53:57,476	[DEBUG]	
2020-12-30 12:53:57,476	[INFO]	60	SUCCESS	+4.0	
2020-12-30 12:53:57,477	[DEBUG]	
2020-12-30 12:53:58,586	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:53:59,820	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:54:04,073	[INFO]	63	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 12:54:05,312	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:54:05,314	[INFO]	65	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:54:05,314	[DEBUG]	
2020-12-30 12:54:05,315	[INFO]	66	SUCCESS	+4.0	
2020-12-30 12:54:05,315	[DEBUG]	
2020-12-30 12:54:06,512	[INFO]	67	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:54:06,514	[INFO]	68	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:54:06,514	[DEBUG]	
2020-12-30 12:54:06,515	[INFO]	69	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:54:06,515	[DEBUG]	
2020-12-30 12:54:06,516	[INFO]	70	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:54:06,516	[DEBUG]	
2020-12-30 12:54:06,517	[INFO]	71	SUCCESS	+4.0	
2020-12-30 12:54:06,517	[DEBUG]	
2020-12-30 12:54:11,240	[INFO]	72	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:54:15,851	[INFO]	73	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:54:19,385	[INFO]	74	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:54:20,117	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:54:20,894	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:54:21,825	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:54:21,826	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:54:22,755	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:54:23,702	[INFO]	80	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:54:23,704	[INFO]	81	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:54:23,704	[DEBUG]	
2020-12-30 12:54:23,704	[INFO]	82	SUCCESS	+4.0	
2020-12-30 12:54:23,705	[DEBUG]	
2020-12-30 12:54:24,495	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:54:25,266	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:54:26,010	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:54:26,949	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:54:26,950	[INFO]	87	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:54:26,950	[DEBUG]	
2020-12-30 12:54:26,951	[INFO]	88	SUCCESS	+4.0	
2020-12-30 12:54:26,951	[DEBUG]	
2020-12-30 12:54:26,952	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:54:30,348	[INFO]	90	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:54:30,349	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:54:31,141	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:54:31,142	[INFO]	92	SUCCESS	+4.0	
2020-12-30 12:54:31,143	[DEBUG]	
2020-12-30 12:54:35,235	[INFO]	93	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:54:35,237	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:54:39,661	[INFO]	94	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:54:39,662	[INFO]	95	SUCCESS	+4.0	
2020-12-30 12:54:39,662	[DEBUG]	
2020-12-30 12:54:44,124	[INFO]	96	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:54:44,125	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:54:44,996	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:54:44,997	[INFO]	98	SUCCESS	+4.0	
2020-12-30 12:54:44,997	[DEBUG]	
2020-12-30 12:54:48,351	[INFO]	99	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:54:48,352	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:54:48,353	[INFO]	100	SUCCESS	+4.0	
2020-12-30 12:54:48,354	[DEBUG]	
2020-12-30 12:54:51,530	[INFO]	101	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:54:52,286	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:54:52,288	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:54:55,638	[INFO]	104	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:54:55,638	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:54:55,639	[INFO]	105	SUCCESS	+4.0	
2020-12-30 12:54:55,639	[DEBUG]	
2020-12-30 12:54:56,554	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:54:57,317	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:54:58,089	[INFO]	108	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:54:59,012	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:54:59,770	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:55:00,528	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:55:00,530	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:55:01,448	[INFO]	113	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:55:02,210	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:55:02,951	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:55:03,694	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:55:07,020	[INFO]	117	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:55:07,957	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:55:08,727	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:55:09,651	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:55:09,654	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:55:10,582	[INFO]	122	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:55:11,535	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:55:12,457	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:55:13,399	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:55:16,516	[INFO]	126	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:55:16,517	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:55:17,453	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:55:17,454	[INFO]	129	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:55:17,455	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:55:18,410	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:55:18,411	[INFO]	131	SUCCESS	+4.0	
2020-12-30 12:55:18,411	[DEBUG]	
2020-12-30 12:55:18,412	[INFO]	132	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:55:31,828	[INFO]	133	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:55:32,713	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:55:32,715	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:55:33,656	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:55:33,657	[INFO]	137	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:55:33,657	[DEBUG]	
2020-12-30 12:55:33,658	[INFO]	138	SUCCESS	+4.0	
2020-12-30 12:55:33,658	[DEBUG]	
2020-12-30 12:55:37,793	[INFO]	139	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:55:37,795	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:55:37,795	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:55:38,741	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:55:39,711	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:55:40,503	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:55:41,469	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:55:42,233	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:55:43,153	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:55:43,154	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:55:43,956	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:55:48,448	[INFO]	150	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:55:48,448	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:55:48,449	[INFO]	151	SUCCESS	+4.0	
2020-12-30 12:55:48,449	[DEBUG]	
2020-12-30 12:55:49,329	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:55:50,072	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:55:51,035	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:55:54,406	[INFO]	155	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:55:54,406	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:55:54,407	[INFO]	156	SUCCESS	+4.0	
2020-12-30 12:55:54,407	[DEBUG]	
2020-12-30 12:55:54,408	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:55:54,409	[INFO]	158	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:55:54,409	[DEBUG]	
2020-12-30 12:55:54,410	[INFO]	159	SUCCESS	+4.0	
2020-12-30 12:55:54,410	[DEBUG]	
2020-12-30 12:55:55,311	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:55:59,564	[INFO]	161	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:56:00,420	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:56:01,353	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:56:04,762	[INFO]	164	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 12:56:05,709	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:56:05,711	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:56:06,646	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:56:06,647	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:56:10,047	[INFO]	169	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:56:10,048	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 12:56:10,971	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:56:11,734	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:56:11,735	[INFO]	172	SUCCESS	+4.0	
2020-12-30 12:56:11,735	[DEBUG]	
2020-12-30 12:56:11,736	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:56:11,737	[INFO]	174	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:56:11,737	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:56:11,738	[INFO]	175	SUCCESS	+4.0	
2020-12-30 12:56:11,738	[DEBUG]	
2020-12-30 12:56:12,492	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:56:12,493	[INFO]	177	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:56:12,494	[DEBUG]	
2020-12-30 12:56:12,494	[INFO]	178	SUCCESS	+4.0	
2020-12-30 12:56:12,494	[DEBUG]	
2020-12-30 12:56:15,637	[INFO]	179	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 12:56:16,593	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:56:20,603	[INFO]	181	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:56:20,605	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:56:20,606	[INFO]	183	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:56:20,606	[DEBUG]	
2020-12-30 12:56:21,609	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:56:21,611	[INFO]	185	SUCCESS	+4.0	
2020-12-30 12:56:21,611	[DEBUG]	
2020-12-30 12:56:25,973	[INFO]	186	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:56:25,974	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:56:25,975	[INFO]	187	SUCCESS	+4.0	
2020-12-30 12:56:25,975	[DEBUG]	
2020-12-30 12:56:27,169	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:56:30,985	[INFO]	189	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:56:30,986	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:56:30,986	[INFO]	190	SUCCESS	+4.0	
2020-12-30 12:56:30,987	[DEBUG]	
2020-12-30 12:56:34,103	[INFO]	191	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:56:34,105	[INFO]	192	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:56:34,105	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 12:56:37,367	[INFO]	193	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 12:56:38,118	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:56:38,869	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:56:38,870	[INFO]	196	SUCCESS	+4.0	
2020-12-30 12:56:38,871	[DEBUG]	
2020-12-30 12:56:38,871	[INFO]	197	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:56:39,610	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:56:40,360	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:56:40,361	[INFO]	200	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:56:40,361	[DEBUG]	
2020-12-30 12:56:40,362	[INFO]	201	SUCCESS	+4.0	
2020-12-30 12:56:40,362	[DEBUG]	
2020-12-30 12:56:41,314	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:56:42,240	[INFO]	203	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:56:43,172	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:56:43,173	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:56:44,149	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:56:45,112	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:56:46,075	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:56:46,845	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:56:47,778	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:56:48,721	[INFO]	211	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:56:49,491	[INFO]	212	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:56:50,235	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:56:50,975	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:56:54,289	[INFO]	215	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:56:54,291	[INFO]	216	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:56:54,292	[INFO]	217	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:56:54,292	[DEBUG]	
2020-12-30 12:56:54,292	[INFO]	218	SUCCESS	+4.0	
2020-12-30 12:56:54,293	[DEBUG]	
2020-12-30 12:56:57,345	[INFO]	219	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:57:00,686	[INFO]	220	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:57:00,688	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:57:00,689	[INFO]	221	SUCCESS	+4.0	
2020-12-30 12:57:00,690	[DEBUG]	
2020-12-30 12:57:04,399	[INFO]	222	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:57:04,400	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:57:05,156	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:57:05,157	[INFO]	224	SUCCESS	+4.0	
2020-12-30 12:57:05,157	[DEBUG]	
2020-12-30 12:57:06,058	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:57:06,818	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:57:07,719	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:57:08,502	[INFO]	228	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:57:09,433	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:57:10,190	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:57:10,957	[INFO]	231	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:57:11,882	[INFO]	232	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:57:11,885	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:57:12,838	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:57:13,759	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:57:16,941	[INFO]	236	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:57:20,312	[INFO]	237	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:57:20,314	[INFO]	238	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:57:23,435	[INFO]	239	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:57:23,437	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:57:23,437	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:57:24,417	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:57:24,419	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:57:24,419	[INFO]	244	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:57:25,358	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:57:25,360	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:57:25,360	[INFO]	247	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:57:28,915	[INFO]	248	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 12:57:28,917	[INFO]	249	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:57:28,917	[DEBUG]	
2020-12-30 12:57:28,917	[INFO]	250	SUCCESS	+4.0	
2020-12-30 12:57:28,918	[DEBUG]	
2020-12-30 12:57:28,919	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:57:29,897	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:57:29,899	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:57:29,899	[INFO]	254	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:57:29,900	[DEBUG]	
2020-12-30 12:57:30,898	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:57:31,713	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:57:32,688	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:57:33,684	[INFO]	258	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:57:38,169	[INFO]	259	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:57:38,170	[INFO]	260	SUCCESS	+4.0	
2020-12-30 12:57:38,171	[DEBUG]	
2020-12-30 12:57:39,058	[INFO]	261	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:57:39,988	[INFO]	262	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:57:40,980	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:57:41,922	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:57:46,379	[INFO]	265	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:57:46,380	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:57:47,269	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:57:48,211	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:57:52,802	[INFO]	268	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:57:52,803	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,24 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:57:53,682	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:57:54,635	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:57:58,004	[INFO]	271	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:57:58,005	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 12:57:58,006	[INFO]	272	SUCCESS	+4.0	
2020-12-30 12:57:58,006	[DEBUG]	
2020-12-30 12:57:58,006	[INFO]	273	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:57:58,007	[DEBUG]	
2020-12-30 12:57:58,007	[INFO]	274	SUCCESS	+4.0	
2020-12-30 12:57:58,007	[DEBUG]	
2020-12-30 12:57:58,749	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:57:59,506	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:58:00,427	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:58:01,185	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:58:02,138	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:58:02,140	[INFO]	280	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:58:02,141	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:58:03,065	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:58:03,857	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:58:04,766	[INFO]	284	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:58:05,540	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:58:06,450	[INFO]	286	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:58:06,452	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:58:06,453	[INFO]	288	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:58:06,453	[DEBUG]	
2020-12-30 12:58:06,453	[INFO]	289	SUCCESS	+4.0	
2020-12-30 12:58:06,454	[DEBUG]	
2020-12-30 12:58:09,805	[INFO]	290	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 12:58:09,806	[INFO]	291	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:58:10,726	[INFO]	292	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:58:11,467	[INFO]	293	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:58:12,363	[INFO]	294	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:58:13,330	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:58:14,241	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:58:14,242	[INFO]	297	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:58:15,187	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:58:18,419	[INFO]	299	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 12:58:19,334	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:58:20,273	[INFO]	301	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:58:21,253	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:58:22,034	[INFO]	303	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:58:25,161	[INFO]	304	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:58:26,078	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:58:26,842	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:58:27,742	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:58:32,041	[INFO]	308	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:58:32,913	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:58:33,828	[INFO]	310	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:58:33,830	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:58:37,011	[INFO]	312	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 12:58:37,963	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:58:38,736	[INFO]	314	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:58:42,144	[INFO]	315	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:58:42,145	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:58:45,655	[INFO]	316	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:58:45,657	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,25 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 12:58:50,213	[INFO]	317	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:58:50,213	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:58:53,222	[INFO]	318	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:58:53,981	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:58:58,488	[INFO]	320	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:58:58,488	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
--- 14,24 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:58:58,489	[INFO]	321	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:58:58,489	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:58:59,383	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:58:59,385	[INFO]	323	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:58:59,385	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:59:00,138	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:59:04,750	[INFO]	325	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:59:04,751	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:59:05,467	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:59:05,468	[INFO]	327	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:59:05,469	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:59:06,380	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:59:06,382	[INFO]	329	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:59:06,382	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:59:06,383	[INFO]	330	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:59:06,384	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:59:09,802	[INFO]	331	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:59:09,802	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:59:09,803	[INFO]	332	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:59:09,804	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 12:59:09,805	[INFO]	333	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:59:09,805	[DEBUG]	
2020-12-30 12:59:09,805	[INFO]	334	SUCCESS	+4.0	
2020-12-30 12:59:09,806	[DEBUG]	
2020-12-30 12:59:09,806	[INFO]	335	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:59:09,807	[DEBUG]	
2020-12-30 12:59:09,807	[INFO]	336	SUCCESS	+4.0	
2020-12-30 12:59:09,808	[DEBUG]	
2020-12-30 12:59:10,741	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:59:11,692	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:59:12,457	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:59:13,215	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:59:16,581	[INFO]	341	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 12:59:16,581	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 12:59:16,582	[INFO]	342	SUCCESS	+4.0	
2020-12-30 12:59:16,582	[DEBUG]	
2020-12-30 12:59:17,460	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:59:20,830	[INFO]	344	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:59:20,831	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:59:20,834	[INFO]	345	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:59:20,835	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:59:20,837	[INFO]	346	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:59:20,837	[DEBUG]	
2020-12-30 12:59:20,838	[INFO]	347	SUCCESS	+4.0	
2020-12-30 12:59:20,839	[DEBUG]	
2020-12-30 12:59:20,840	[INFO]	348	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:59:20,841	[DEBUG]	
2020-12-30 12:59:24,072	[INFO]	349	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 12:59:24,073	[INFO]	350	SUCCESS	+4.0	
2020-12-30 12:59:24,073	[DEBUG]	
2020-12-30 12:59:24,074	[INFO]	351	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:59:24,074	[DEBUG]	
2020-12-30 12:59:24,074	[INFO]	352	SUCCESS	+4.0	
2020-12-30 12:59:24,075	[DEBUG]	
2020-12-30 12:59:25,000	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:59:25,968	[INFO]	354	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 12:59:26,910	[INFO]	355	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:59:26,911	[INFO]	356	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:59:26,911	[DEBUG]	
2020-12-30 12:59:26,912	[INFO]	357	SUCCESS	+4.0	
2020-12-30 12:59:26,912	[DEBUG]	
2020-12-30 12:59:27,835	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:59:31,166	[INFO]	359	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:59:31,167	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:59:31,168	[INFO]	360	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 12:59:31,169	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:59:31,169	[INFO]	361	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:59:31,170	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:59:31,170	[INFO]	362	SUCCESS	+4.0	
2020-12-30 12:59:31,170	[DEBUG]	
2020-12-30 12:59:34,563	[INFO]	363	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 12:59:35,506	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:59:38,718	[INFO]	365	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:59:39,658	[INFO]	366	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 12:59:42,844	[INFO]	367	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 12:59:42,845	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:59:43,587	[INFO]	369	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:59:44,514	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:59:44,516	[INFO]	371	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:59:44,516	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 12:59:44,517	[INFO]	372	SUCCESS	+4.0	
2020-12-30 12:59:44,517	[DEBUG]	
2020-12-30 12:59:45,281	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:59:46,197	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:59:47,124	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:59:47,895	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:59:47,897	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:59:48,642	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 12:59:49,622	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 12:59:50,575	[INFO]	380	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:59:51,493	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 12:59:51,494	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 12:59:52,434	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 12:59:52,435	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:59:53,370	[INFO]	385	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:59:53,371	[INFO]	386	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:59:54,349	[INFO]	387	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 12:59:55,120	[INFO]	388	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:59:55,121	[INFO]	389	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:59:55,121	[DEBUG]	
2020-12-30 12:59:55,122	[INFO]	390	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:59:55,122	[DEBUG]	
2020-12-30 12:59:55,846	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:59:55,847	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 12:59:55,848	[INFO]	393	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 12:59:55,848	[INFO]	394	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 12:59:55,849	[DEBUG]	
2020-12-30 12:59:59,179	[INFO]	395	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 12:59:59,180	[INFO]	396	SUCCESS	+4.0	
2020-12-30 12:59:59,180	[DEBUG]	
2020-12-30 12:59:59,181	[INFO]	397	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 12:59:59,181	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 12:59:59,936	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 12:59:59,938	[INFO]	399	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 12:59:59,938	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:00:04,570	[INFO]	400	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:00:04,571	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:00:04,573	[INFO]	401	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:00:04,573	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:00:05,458	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:00:05,460	[INFO]	403	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:00:05,461	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:00:06,206	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:00:10,675	[INFO]	405	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:00:11,373	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:00:11,375	[INFO]	407	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:00:11,376	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:00:12,292	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:00:12,293	[INFO]	409	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:00:12,294	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:00:12,295	[INFO]	410	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:00:12,295	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:00:12,296	[INFO]	411	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:00:12,297	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:00:16,883	[INFO]	412	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:00:16,884	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:00:21,268	[INFO]	413	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:00:21,269	[INFO]	414	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:00:21,270	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:00:24,348	[INFO]	415	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:00:25,285	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:00:25,287	[INFO]	417	SUCCESS	+4.0	
2020-12-30 13:00:25,287	[DEBUG]	
2020-12-30 13:00:26,250	[INFO]	418	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:00:27,016	[INFO]	419	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:00:27,943	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:00:28,711	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:00:31,870	[INFO]	422	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:00:31,872	[INFO]	423	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:00:31,872	[DEBUG]	
2020-12-30 13:00:34,995	[INFO]	424	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:00:38,361	[INFO]	425	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:00:42,715	[INFO]	426	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:00:42,716	[INFO]	427	SUCCESS	+4.0	
2020-12-30 13:00:42,717	[DEBUG]	
2020-12-30 13:00:43,438	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:00:44,208	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:00:45,158	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:00:45,931	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:00:46,880	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:00:47,838	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:00:51,525	[INFO]	434	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:00:51,526	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:00:51,527	[INFO]	435	SUCCESS	+4.0	
2020-12-30 13:00:51,527	[DEBUG]	
2020-12-30 13:00:52,300	[INFO]	436	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:00:53,222	[INFO]	437	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:00:53,223	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:00:56,535	[INFO]	439	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 13:00:56,536	[INFO]	440	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:00:56,537	[INFO]	441	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:00:56,538	[INFO]	442	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:00:56,538	[DEBUG]	
2020-12-30 13:00:57,485	[INFO]	443	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:00:57,488	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:00:57,489	[INFO]	445	SUCCESS	+4.0	
2020-12-30 13:00:57,490	[DEBUG]	
2020-12-30 13:00:58,255	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:00:58,256	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:00:59,171	[INFO]	448	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:01:02,507	[INFO]	449	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:01:02,508	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:01:05,866	[INFO]	450	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:01:05,867	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,25 ****
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:01:09,274	[INFO]	451	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:01:09,275	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:01:09,276	[INFO]	452	SUCCESS	+4.0	
2020-12-30 13:01:09,276	[DEBUG]	
2020-12-30 13:01:10,206	[INFO]	453	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:01:10,207	[INFO]	454	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:01:10,207	[DEBUG]	
2020-12-30 13:01:11,141	[INFO]	455	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:01:11,142	[INFO]	456	SUCCESS	+4.0	
2020-12-30 13:01:11,142	[DEBUG]	
2020-12-30 13:01:11,906	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:01:12,824	[INFO]	458	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:01:13,571	[INFO]	459	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:01:14,332	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:01:17,666	[INFO]	461	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:01:17,667	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:01:18,574	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:01:19,496	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:01:19,497	[INFO]	464	SUCCESS	+4.0	
2020-12-30 13:01:19,497	[DEBUG]	
2020-12-30 13:01:20,461	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:01:21,233	[INFO]	466	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:01:22,003	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:01:22,735	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:01:23,654	[INFO]	469	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:01:24,655	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:01:24,658	[INFO]	471	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:01:24,659	[INFO]	472	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:01:24,659	[DEBUG]	
2020-12-30 13:01:24,660	[INFO]	473	SUCCESS	+4.0	
2020-12-30 13:01:24,661	[DEBUG]	
2020-12-30 13:01:28,030	[INFO]	474	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:01:28,031	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:01:28,784	[INFO]	475	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:01:29,738	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:01:33,131	[INFO]	477	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:01:33,132	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 13,25 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:01:33,133	[INFO]	478	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:01:33,133	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:01:34,076	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:01:34,077	[INFO]	480	SUCCESS	+4.0	
2020-12-30 13:01:34,077	[DEBUG]	
2020-12-30 13:01:34,078	[INFO]	481	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:01:34,078	[DEBUG]	
2020-12-30 13:01:34,079	[INFO]	482	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:01:34,079	[DEBUG]	
2020-12-30 13:01:34,080	[INFO]	483	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:01:34,080	[DEBUG]	
2020-12-30 13:01:34,081	[INFO]	484	SUCCESS	+4.0	
2020-12-30 13:01:34,081	[DEBUG]	
2020-12-30 13:01:34,082	[INFO]	485	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:01:34,082	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:01:35,026	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:01:39,600	[INFO]	487	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:01:39,600	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,24 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
!             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:01:39,601	[INFO]	488	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:01:39,602	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,24 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
!             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:01:40,319	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:01:41,250	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:01:41,251	[INFO]	491	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:01:41,252	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:01:41,252	[INFO]	492	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:01:41,253	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:01:44,373	[INFO]	493	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:01:44,374	[INFO]	494	SUCCESS	+4.0	
2020-12-30 13:01:44,374	[DEBUG]	
2020-12-30 13:01:47,764	[INFO]	495	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:01:47,765	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:01:50,912	[INFO]	496	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 13:01:50,913	[INFO]	497	SUCCESS	+4.0	
2020-12-30 13:01:50,913	[DEBUG]	
2020-12-30 13:01:51,909	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:01:52,854	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:01:53,793	[INFO]	500	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:01:53,794	[INFO]	==== END ====
2020-12-30 13:01:53,794	[INFO]	Reason: step budget
2020-12-30 13:01:53,794	[INFO]	
2020-12-30 13:01:53,795	[INFO]	========== EPOCH 13 ==========
2020-12-30 13:01:53,795	[INFO]	==== WARMUP ====
2020-12-30 13:01:57,146	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 13:01:57,146	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:02:00,497	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 13:02:00,498	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:02:03,847	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 13:02:03,847	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:02:07,242	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-30 13:02:07,242	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:02:07,242	[INFO]	==== START ====
2020-12-30 13:02:08,188	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:02:08,950	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:02:09,714	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:02:10,462	[INFO]	4	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:02:11,215	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:02:12,160	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:02:12,161	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:02:13,128	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:02:13,130	[INFO]	9	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:02:13,130	[DEBUG]	
2020-12-30 13:02:14,067	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:02:14,068	[INFO]	11	SUCCESS	+4.0	
2020-12-30 13:02:14,068	[DEBUG]	
2020-12-30 13:02:17,327	[INFO]	12	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 13:02:20,497	[INFO]	13	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 13:02:21,263	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:02:22,190	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:02:22,948	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:02:23,694	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:02:24,482	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:02:25,429	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:02:26,375	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:02:27,144	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:02:27,145	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:02:30,546	[INFO]	23	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:02:30,547	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:02:31,313	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:02:31,315	[INFO]	25	SUCCESS	+4.0	
2020-12-30 13:02:31,315	[DEBUG]	
2020-12-30 13:02:31,316	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:02:32,234	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:02:32,236	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:02:35,565	[INFO]	29	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:02:35,566	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:02:36,343	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:02:36,346	[INFO]	31	SUCCESS	+4.0	
2020-12-30 13:02:36,346	[DEBUG]	
2020-12-30 13:02:36,348	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:02:37,110	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:02:38,017	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:02:38,018	[INFO]	35	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:02:38,018	[DEBUG]	
2020-12-30 13:02:38,783	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:02:38,784	[INFO]	37	SUCCESS	+4.0	
2020-12-30 13:02:38,784	[DEBUG]	
2020-12-30 13:02:38,785	[INFO]	38	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:02:38,785	[DEBUG]	
2020-12-30 13:02:38,786	[INFO]	39	SUCCESS	+4.0	
2020-12-30 13:02:38,786	[DEBUG]	
2020-12-30 13:02:39,721	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:02:39,722	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:02:40,715	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:02:43,930	[INFO]	43	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:02:47,304	[INFO]	44	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:02:47,306	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:02:47,307	[INFO]	45	SUCCESS	+4.0	
2020-12-30 13:02:47,308	[DEBUG]	
2020-12-30 13:02:47,309	[INFO]	46	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 13:02:47,311	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:02:48,247	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:02:49,204	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:02:49,205	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:02:50,150	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:02:51,070	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:02:52,007	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:02:52,762	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:02:52,763	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:02:52,764	[INFO]	56	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:02:52,765	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:02:53,696	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:02:54,631	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:02:55,570	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:02:55,571	[INFO]	60	SUCCESS	+4.0	
2020-12-30 13:02:55,572	[DEBUG]	
2020-12-30 13:02:56,535	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:02:57,306	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:02:58,257	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:02:58,259	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:02:59,179	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:03:00,149	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:03:01,133	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:03:02,095	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:03:02,885	[INFO]	69	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:03:07,395	[INFO]	70	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:03:07,395	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:03:07,396	[INFO]	71	SUCCESS	+4.0	
2020-12-30 13:03:07,396	[DEBUG]	
2020-12-30 13:03:08,273	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:03:09,030	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:03:09,031	[INFO]	74	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:03:09,032	[DEBUG]	
2020-12-30 13:03:09,032	[INFO]	75	SUCCESS	+4.0	
2020-12-30 13:03:09,032	[DEBUG]	
2020-12-30 13:03:12,234	[INFO]	76	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 13:03:16,564	[INFO]	77	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:03:16,565	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:03:19,648	[INFO]	79	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:03:19,650	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:03:23,008	[INFO]	81	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:03:23,008	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:03:23,988	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:03:24,918	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:03:25,714	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:03:26,636	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:03:27,385	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:03:27,386	[INFO]	87	SUCCESS	+4.0	
2020-12-30 13:03:27,386	[DEBUG]	
2020-12-30 13:03:28,142	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:03:29,065	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:03:29,836	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:03:29,838	[INFO]	91	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:03:29,838	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:03:29,839	[INFO]	92	SUCCESS	+4.0	
2020-12-30 13:03:29,839	[DEBUG]	
2020-12-30 13:03:30,764	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:03:31,687	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:03:35,114	[INFO]	95	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:03:35,115	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:03:35,116	[INFO]	96	SUCCESS	+4.0	
2020-12-30 13:03:35,116	[DEBUG]	
2020-12-30 13:03:35,117	[INFO]	97	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:03:35,117	[DEBUG]	
2020-12-30 13:03:35,118	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:03:35,118	[INFO]	99	SUCCESS	+4.0	
2020-12-30 13:03:35,119	[DEBUG]	
2020-12-30 13:03:35,119	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:03:35,120	[INFO]	101	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:03:35,121	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:03:36,023	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:03:36,930	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:03:37,875	[INFO]	105	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:03:37,876	[INFO]	106	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:03:37,876	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:03:37,877	[INFO]	107	SUCCESS	+4.0	
2020-12-30 13:03:37,877	[DEBUG]	
2020-12-30 13:03:38,808	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:03:38,809	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:03:38,810	[INFO]	110	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:03:38,810	[DEBUG]	
2020-12-30 13:03:38,810	[INFO]	111	SUCCESS	+4.0	
2020-12-30 13:03:38,811	[DEBUG]	
2020-12-30 13:03:38,811	[INFO]	112	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:03:38,812	[DEBUG]	
2020-12-30 13:03:39,576	[INFO]	113	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:03:39,577	[INFO]	114	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:03:39,578	[INFO]	115	SUCCESS	+4.0	
2020-12-30 13:03:39,578	[DEBUG]	
2020-12-30 13:03:43,201	[INFO]	116	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:03:43,202	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:03:44,100	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:03:44,876	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:03:48,495	[INFO]	119	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:03:48,496	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:03:49,399	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:03:53,712	[INFO]	121	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:03:54,581	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:03:54,582	[INFO]	123	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:03:54,582	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:03:55,322	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:03:55,323	[INFO]	125	SUCCESS	+4.0	
2020-12-30 13:03:55,323	[DEBUG]	
2020-12-30 13:03:56,083	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:03:56,839	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:03:57,774	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:03:57,776	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:04:01,087	[INFO]	130	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:04:01,089	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:04:01,092	[INFO]	131	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:04:01,093	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:04:04,319	[INFO]	132	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 13:04:05,058	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:04:06,009	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:04:06,940	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:04:07,906	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:04:07,907	[INFO]	137	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:04:07,907	[DEBUG]	
2020-12-30 13:04:08,843	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:04:12,203	[INFO]	139	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:04:12,977	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:04:12,978	[INFO]	141	SUCCESS	+4.0	
2020-12-30 13:04:12,978	[DEBUG]	
2020-12-30 13:04:13,916	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:04:17,291	[INFO]	143	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:04:17,292	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:04:17,293	[INFO]	144	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:04:17,294	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:04:20,676	[INFO]	145	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:04:23,832	[INFO]	146	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:04:23,834	[INFO]	147	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:04:23,834	[DEBUG]	
2020-12-30 13:04:23,834	[INFO]	148	SUCCESS	+4.0	
2020-12-30 13:04:23,835	[DEBUG]	
2020-12-30 13:04:24,801	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:04:25,734	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:04:26,493	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:04:29,763	[INFO]	152	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:04:30,471	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:04:30,472	[INFO]	154	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:04:30,473	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:04:31,396	[INFO]	156	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:04:32,355	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:04:32,356	[INFO]	158	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:04:32,357	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:04:32,358	[INFO]	160	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:04:32,358	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:04:33,114	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:04:33,115	[INFO]	162	SUCCESS	+4.0	
2020-12-30 13:04:33,115	[DEBUG]	
2020-12-30 13:04:33,116	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:04:34,055	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:04:34,056	[INFO]	165	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:04:34,056	[DEBUG]	
2020-12-30 13:04:37,251	[INFO]	166	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 13:04:37,252	[INFO]	167	SUCCESS	+4.0	
2020-12-30 13:04:37,252	[DEBUG]	
2020-12-30 13:04:37,994	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:04:38,915	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:04:39,841	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:04:39,842	[INFO]	171	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:04:39,843	[DEBUG]	
2020-12-30 13:04:39,844	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:04:40,833	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:04:41,801	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:04:41,802	[INFO]	175	SUCCESS	+4.0	
2020-12-30 13:04:41,802	[DEBUG]	
2020-12-30 13:04:42,577	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:04:43,513	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:04:46,917	[INFO]	178	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:04:46,918	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:04:46,919	[INFO]	179	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:04:46,919	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:04:50,250	[INFO]	180	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:04:50,251	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return "";
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:04:53,431	[INFO]	181	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:04:53,433	[INFO]	182	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:04:53,433	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return "";
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:04:53,434	[INFO]	183	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:04:53,434	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:04:56,746	[INFO]	184	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:04:56,747	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:04:56,748	[INFO]	185	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:04:56,749	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:04:57,675	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:04:57,677	[INFO]	187	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:04:57,677	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:04:57,678	[INFO]	188	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:04:57,678	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:05:01,067	[INFO]	189	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 13:05:01,069	[INFO]	190	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:05:01,069	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:05:01,070	[INFO]	191	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:05:01,070	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:05:01,071	[INFO]	192	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:05:01,072	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:05:01,073	[INFO]	193	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:05:01,073	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:05:01,074	[INFO]	194	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:05:01,074	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:05:01,075	[INFO]	195	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:05:01,076	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:05:01,076	[INFO]	196	SUCCESS	+4.0	
2020-12-30 13:05:01,076	[DEBUG]	
2020-12-30 13:05:01,077	[INFO]	197	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:05:01,078	[INFO]	198	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:05:01,078	[DEBUG]	
2020-12-30 13:05:01,845	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:05:04,973	[INFO]	200	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:05:05,930	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:05:05,932	[INFO]	202	SUCCESS	+4.0	
2020-12-30 13:05:05,932	[DEBUG]	
2020-12-30 13:05:09,123	[INFO]	203	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 13:05:10,057	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:05:10,825	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:05:11,752	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:05:12,687	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:05:12,688	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:05:13,620	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:05:14,400	[INFO]	210	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:05:15,140	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:05:15,924	[INFO]	212	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:05:19,041	[INFO]	213	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:05:19,973	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:05:20,782	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:05:21,701	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:05:22,641	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:05:22,643	[INFO]	218	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:05:22,643	[DEBUG]	
2020-12-30 13:05:23,418	[INFO]	219	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:05:23,419	[INFO]	220	SUCCESS	+4.0	
2020-12-30 13:05:23,419	[DEBUG]	
2020-12-30 13:05:23,420	[INFO]	221	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:05:24,380	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:05:27,753	[INFO]	223	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:05:27,754	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:05:27,755	[INFO]	224	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:05:27,756	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:05:27,757	[INFO]	225	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:05:27,757	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:05:27,757	[INFO]	226	SUCCESS	+4.0	
2020-12-30 13:05:27,758	[DEBUG]	
2020-12-30 13:05:27,758	[INFO]	227	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:05:27,758	[DEBUG]	
2020-12-30 13:05:27,759	[INFO]	228	SUCCESS	+4.0	
2020-12-30 13:05:27,759	[DEBUG]	
2020-12-30 13:05:31,091	[INFO]	229	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:05:34,391	[INFO]	230	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:05:38,581	[INFO]	231	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 13:05:39,650	[INFO]	232	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:05:39,652	[INFO]	233	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:05:39,653	[DEBUG]	
2020-12-30 13:05:39,654	[INFO]	234	SUCCESS	+4.0	
2020-12-30 13:05:39,654	[DEBUG]	
2020-12-30 13:05:40,631	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:05:40,632	[INFO]	236	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:05:41,724	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:05:41,726	[INFO]	238	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:05:41,726	[DEBUG]	
2020-12-30 13:05:42,798	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:05:44,084	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:05:44,085	[INFO]	241	SUCCESS	+4.0	
2020-12-30 13:05:44,085	[DEBUG]	
2020-12-30 13:05:47,460	[INFO]	242	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 13:05:48,412	[INFO]	243	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:05:48,413	[INFO]	244	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:05:48,413	[DEBUG]	
2020-12-30 13:05:49,337	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:05:49,338	[INFO]	246	SUCCESS	+4.0	
2020-12-30 13:05:49,339	[DEBUG]	
2020-12-30 13:05:50,128	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:05:51,044	[INFO]	248	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:05:51,045	[INFO]	249	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:05:51,046	[DEBUG]	
2020-12-30 13:05:51,046	[INFO]	250	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:05:51,047	[INFO]	251	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:05:51,047	[DEBUG]	
2020-12-30 13:05:51,805	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:05:51,806	[INFO]	253	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:05:51,806	[DEBUG]	
2020-12-30 13:05:51,807	[INFO]	254	SUCCESS	+4.0	
2020-12-30 13:05:51,807	[DEBUG]	
2020-12-30 13:05:52,727	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:05:53,649	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:05:54,424	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:05:54,425	[INFO]	258	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:05:54,425	[DEBUG]	
2020-12-30 13:05:54,426	[INFO]	259	SUCCESS	+4.0	
2020-12-30 13:05:54,426	[DEBUG]	
2020-12-30 13:05:55,352	[INFO]	260	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:05:56,113	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:05:57,017	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:05:57,019	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:06:00,376	[INFO]	264	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:06:00,377	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:06:01,314	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:06:01,315	[INFO]	266	SUCCESS	+4.0	
2020-12-30 13:06:01,315	[DEBUG]	
2020-12-30 13:06:04,983	[INFO]	267	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:06:04,983	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:06:04,984	[INFO]	268	SUCCESS	+4.0	
2020-12-30 13:06:04,984	[DEBUG]	
2020-12-30 13:06:04,985	[INFO]	269	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:06:04,985	[DEBUG]	
2020-12-30 13:06:05,918	[INFO]	270	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:06:06,678	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:06:07,453	[INFO]	272	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:06:07,454	[INFO]	273	SUCCESS	+4.0	
2020-12-30 13:06:07,454	[DEBUG]	
2020-12-30 13:06:07,455	[INFO]	274	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:06:07,455	[DEBUG]	
2020-12-30 13:06:07,456	[INFO]	275	SUCCESS	+4.0	
2020-12-30 13:06:07,456	[DEBUG]	
2020-12-30 13:06:20,694	[INFO]	276	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:06:21,415	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:06:22,198	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:06:22,199	[INFO]	279	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:06:22,200	[DEBUG]	
2020-12-30 13:06:22,200	[INFO]	280	SUCCESS	+4.0	
2020-12-30 13:06:22,201	[DEBUG]	
2020-12-30 13:06:22,201	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:06:22,202	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:06:22,952	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:06:22,953	[INFO]	284	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:06:22,953	[DEBUG]	
2020-12-30 13:06:22,954	[INFO]	285	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:06:22,955	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:06:22,955	[INFO]	286	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:06:22,956	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:06:23,716	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:06:23,718	[INFO]	288	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:06:23,718	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:06:23,719	[INFO]	289	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:06:23,720	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:06:24,533	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:06:24,535	[INFO]	291	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:06:24,535	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:06:24,536	[INFO]	292	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:06:24,536	[DEBUG]	
2020-12-30 13:06:27,938	[INFO]	293	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:06:27,939	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:06:27,940	[INFO]	294	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:06:27,940	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:06:28,851	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:06:28,852	[INFO]	296	SUCCESS	+4.0	
2020-12-30 13:06:28,852	[DEBUG]	
2020-12-30 13:06:29,803	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:06:30,566	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:06:31,305	[INFO]	299	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:06:32,241	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:06:33,004	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:06:33,921	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:06:33,922	[INFO]	303	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:06:33,922	[DEBUG]	
2020-12-30 13:06:34,875	[INFO]	304	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:06:34,876	[INFO]	305	SUCCESS	+4.0	
2020-12-30 13:06:34,876	[DEBUG]	
2020-12-30 13:06:35,648	[INFO]	306	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:06:35,650	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:06:36,587	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:06:37,397	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:06:38,169	[INFO]	310	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:06:38,170	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:06:39,088	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:06:39,090	[INFO]	313	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:06:39,090	[INFO]	314	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:06:39,091	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:06:42,495	[INFO]	316	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 13:06:43,432	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:06:46,817	[INFO]	318	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:06:46,818	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:06:47,590	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:06:50,922	[INFO]	320	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:06:50,923	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!             return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:06:51,884	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:06:55,299	[INFO]	322	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:06:58,650	[INFO]	323	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:06:58,651	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:06:58,652	[INFO]	324	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:06:58,653	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:06:59,591	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:07:02,838	[INFO]	326	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:07:06,162	[INFO]	327	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:07:07,102	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:07:10,291	[INFO]	329	SUCCESS	 8.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 13:07:10,293	[INFO]	330	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:07:10,293	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:07:10,294	[INFO]	331	SUCCESS	+4.0	
2020-12-30 13:07:10,294	[DEBUG]	
2020-12-30 13:07:10,295	[INFO]	332	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:07:10,295	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:07:11,221	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:07:11,222	[INFO]	334	SUCCESS	+4.0	
2020-12-30 13:07:11,223	[DEBUG]	
2020-12-30 13:07:14,350	[INFO]	335	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:07:15,281	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:07:15,283	[INFO]	337	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:07:15,284	[DEBUG]	
2020-12-30 13:07:15,285	[INFO]	338	SUCCESS	+4.0	
2020-12-30 13:07:15,285	[DEBUG]	
2020-12-30 13:07:18,467	[INFO]	339	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 13:07:21,673	[INFO]	340	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 13:07:22,610	[INFO]	341	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:07:23,530	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:07:23,531	[INFO]	343	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:07:23,531	[DEBUG]	
2020-12-30 13:07:23,532	[INFO]	344	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:07:23,533	[INFO]	345	SUCCESS	+4.0	
2020-12-30 13:07:23,533	[DEBUG]	
2020-12-30 13:07:24,491	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:07:24,492	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:07:25,420	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:07:26,365	[INFO]	349	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:07:27,146	[INFO]	350	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:07:28,102	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:07:28,104	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:07:28,104	[INFO]	353	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:07:28,105	[DEBUG]	
2020-12-30 13:07:28,105	[INFO]	354	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:07:28,106	[INFO]	355	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:07:28,107	[INFO]	356	SUCCESS	+4.0	
2020-12-30 13:07:28,107	[DEBUG]	
2020-12-30 13:07:28,887	[INFO]	357	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:07:29,692	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:07:29,693	[INFO]	359	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:07:29,694	[DEBUG]	
2020-12-30 13:07:30,617	[INFO]	360	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:07:30,618	[INFO]	361	SUCCESS	+4.0	
2020-12-30 13:07:30,618	[DEBUG]	
2020-12-30 13:07:30,619	[INFO]	362	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:07:31,539	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:07:32,457	[INFO]	364	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:07:32,458	[INFO]	365	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:07:35,809	[INFO]	366	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:07:35,810	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:07:35,811	[INFO]	367	SUCCESS	+4.0	
2020-12-30 13:07:35,812	[DEBUG]	
2020-12-30 13:07:36,787	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:07:37,717	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:07:38,493	[INFO]	370	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:07:39,407	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:07:42,563	[INFO]	372	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:07:42,565	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:07:42,566	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:07:43,482	[INFO]	375	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:07:44,414	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:07:44,416	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:07:45,333	[INFO]	378	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:07:46,098	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:07:46,099	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:07:46,100	[INFO]	381	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:07:46,101	[DEBUG]	
2020-12-30 13:07:49,421	[INFO]	382	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:07:49,422	[INFO]	383	SUCCESS	+4.0	
2020-12-30 13:07:49,422	[DEBUG]	
2020-12-30 13:07:49,423	[INFO]	384	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:07:49,423	[DEBUG]	
2020-12-30 13:07:50,329	[INFO]	385	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:07:50,330	[INFO]	386	SUCCESS	+4.0	
2020-12-30 13:07:50,330	[DEBUG]	
2020-12-30 13:07:51,276	[INFO]	387	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:07:51,277	[INFO]	388	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:07:51,277	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:07:52,244	[INFO]	389	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:07:52,246	[INFO]	390	SUCCESS	+4.0	
2020-12-30 13:07:52,247	[DEBUG]	
2020-12-30 13:07:52,249	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:07:53,018	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:07:53,019	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:07:57,311	[INFO]	394	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:07:58,019	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:08:01,163	[INFO]	396	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:08:02,103	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:08:03,040	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:08:03,958	[INFO]	399	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:08:04,724	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:08:05,464	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:08:06,368	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:08:07,130	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:08:08,071	[INFO]	404	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:08:08,822	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:08:08,824	[INFO]	406	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:08:08,824	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:08:09,713	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:08:12,863	[INFO]	409	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:08:26,242	[INFO]	410	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:08:26,243	[INFO]	411	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:08:26,243	[DEBUG]	
2020-12-30 13:08:29,381	[INFO]	412	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 13:08:29,383	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:08:30,139	[INFO]	414	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:08:30,140	[INFO]	415	SUCCESS	+4.0	
2020-12-30 13:08:30,140	[DEBUG]	
2020-12-30 13:08:31,077	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:08:31,855	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:08:31,857	[INFO]	418	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:08:31,858	[INFO]	419	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:08:31,858	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:08:32,790	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:08:32,792	[INFO]	422	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:08:36,148	[INFO]	423	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:08:36,149	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:08:36,150	[INFO]	424	SUCCESS	+4.0	
2020-12-30 13:08:36,150	[DEBUG]	
2020-12-30 13:08:37,083	[INFO]	425	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:08:37,084	[INFO]	426	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:08:37,084	[DEBUG]	
2020-12-30 13:08:37,848	[INFO]	427	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:08:37,850	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:08:38,787	[INFO]	429	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:08:38,788	[INFO]	430	SUCCESS	+4.0	
2020-12-30 13:08:38,788	[DEBUG]	
2020-12-30 13:08:38,789	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:08:38,790	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:08:39,802	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:08:39,803	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:08:40,637	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:08:40,639	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:08:41,401	[INFO]	437	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:08:41,402	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:08:42,379	[INFO]	439	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:08:43,196	[INFO]	440	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:08:43,197	[INFO]	441	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:08:43,197	[DEBUG]	
2020-12-30 13:08:43,198	[INFO]	442	SUCCESS	+4.0	
2020-12-30 13:08:43,198	[DEBUG]	
2020-12-30 13:08:44,145	[INFO]	443	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:08:45,115	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:08:45,116	[INFO]	445	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:08:45,901	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:08:45,902	[INFO]	447	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:08:45,902	[DEBUG]	
2020-12-30 13:08:49,097	[INFO]	448	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 13:08:49,100	[INFO]	449	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:08:49,101	[DEBUG]	
2020-12-30 13:08:49,102	[INFO]	450	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:08:49,103	[DEBUG]	
2020-12-30 13:08:49,104	[INFO]	451	SUCCESS	+4.0	
2020-12-30 13:08:49,104	[DEBUG]	
2020-12-30 13:08:49,105	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:08:50,040	[INFO]	453	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:08:50,805	[INFO]	454	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:08:51,558	[INFO]	455	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:08:51,560	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:08:52,494	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:08:55,868	[INFO]	458	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:08:55,869	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:08:56,643	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:08:57,532	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:08:58,448	[INFO]	461	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:08:59,403	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:09:00,180	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:09:00,181	[INFO]	464	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:09:00,182	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:09:00,183	[INFO]	465	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:09:00,183	[DEBUG]	
2020-12-30 13:09:01,106	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:09:01,107	[INFO]	467	SUCCESS	+4.0	
2020-12-30 13:09:01,107	[DEBUG]	
2020-12-30 13:09:02,031	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:09:05,221	[INFO]	469	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 13:09:06,163	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:09:06,164	[INFO]	471	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:09:06,164	[DEBUG]	
2020-12-30 13:09:06,940	[INFO]	472	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:09:06,941	[INFO]	473	SUCCESS	+4.0	
2020-12-30 13:09:06,941	[DEBUG]	
2020-12-30 13:09:07,683	[INFO]	474	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:09:08,627	[INFO]	475	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:09:09,391	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:09:10,305	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:09:11,247	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:09:11,248	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:09:11,249	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:09:12,333	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:09:12,335	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:09:13,134	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:09:14,049	[INFO]	484	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:09:15,011	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:09:15,956	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:09:15,958	[INFO]	487	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:09:19,638	[INFO]	488	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:09:19,638	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:09:20,390	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:09:21,112	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:09:21,871	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:09:22,793	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:09:22,794	[INFO]	493	SUCCESS	+4.0	
2020-12-30 13:09:22,794	[DEBUG]	
2020-12-30 13:09:23,574	[INFO]	494	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:09:24,500	[INFO]	495	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:09:24,501	[INFO]	496	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:09:25,252	[INFO]	497	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:09:25,254	[INFO]	498	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:09:25,254	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:09:26,011	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:09:26,012	[INFO]	500	SUCCESS	+4.0	
2020-12-30 13:09:26,012	[DEBUG]	
2020-12-30 13:09:26,012	[INFO]	==== END ====
2020-12-30 13:09:26,012	[INFO]	Reason: step budget
2020-12-30 13:09:26,013	[INFO]	
2020-12-30 13:09:26,013	[INFO]	========== EPOCH 14 ==========
2020-12-30 13:09:26,013	[INFO]	==== WARMUP ====
2020-12-30 13:09:29,330	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 13:09:29,330	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:09:32,676	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 13:09:32,677	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:09:35,972	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 13:09:35,973	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:09:39,318	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-30 13:09:39,318	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:09:39,318	[INFO]	==== START ====
2020-12-30 13:09:40,239	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:09:41,224	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:09:45,493	[INFO]	3	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:09:46,336	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:09:49,515	[INFO]	5	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 13:09:50,441	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:09:51,378	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:09:52,365	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:09:53,264	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:09:54,185	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:10:07,627	[INFO]	11	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:10:08,359	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:10:09,077	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:10:09,855	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:10:09,857	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:10:10,827	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:10:14,191	[INFO]	17	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 13:10:15,151	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:10:16,102	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:10:16,853	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:10:20,064	[INFO]	21	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:10:20,964	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:10:21,894	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:10:25,274	[INFO]	24	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:10:25,275	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:10:29,595	[INFO]	25	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:10:29,596	[INFO]	26	SUCCESS	+4.0	
2020-12-30 13:10:29,597	[DEBUG]	
2020-12-30 13:10:30,503	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:10:33,836	[INFO]	28	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:10:33,837	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:10:33,838	[INFO]	29	SUCCESS	+4.0	
2020-12-30 13:10:33,838	[DEBUG]	
2020-12-30 13:10:34,611	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:10:35,668	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:10:35,669	[INFO]	32	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:10:38,865	[INFO]	33	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 13:10:39,797	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:10:39,798	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:10:40,746	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:10:43,967	[INFO]	37	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:10:44,904	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:10:48,117	[INFO]	39	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:10:51,540	[INFO]	40	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:10:51,541	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:10:51,542	[INFO]	41	SUCCESS	+4.0	
2020-12-30 13:10:51,542	[DEBUG]	
2020-12-30 13:10:52,301	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:10:52,303	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:10:53,223	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:10:53,224	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:10:53,225	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:10:54,150	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:10:54,151	[INFO]	48	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:10:54,151	[DEBUG]	
2020-12-30 13:10:54,152	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:10:54,153	[INFO]	50	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:10:54,901	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:10:58,249	[INFO]	52	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:10:58,251	[INFO]	53	SUCCESS	+4.0	
2020-12-30 13:10:58,252	[DEBUG]	
2020-12-30 13:10:58,254	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:10:58,256	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:11:01,628	[INFO]	56	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:11:01,629	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:11:02,555	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:11:03,517	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:11:04,311	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:11:05,252	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:11:05,254	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:11:06,026	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:11:06,948	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:11:07,738	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:11:08,637	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:11:08,639	[INFO]	66	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:11:08,639	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:11:08,640	[INFO]	67	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:11:08,640	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:11:08,641	[INFO]	68	SUCCESS	+4.0	
2020-12-30 13:11:08,641	[DEBUG]	
2020-12-30 13:11:08,642	[INFO]	69	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:11:09,416	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:11:10,148	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:11:13,515	[INFO]	72	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:11:13,516	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:11:13,516	[INFO]	73	SUCCESS	+4.0	
2020-12-30 13:11:13,517	[DEBUG]	
2020-12-30 13:11:14,461	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:11:14,462	[INFO]	75	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:11:14,462	[DEBUG]	
2020-12-30 13:11:14,462	[INFO]	76	SUCCESS	+4.0	
2020-12-30 13:11:14,463	[DEBUG]	
2020-12-30 13:11:15,389	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:11:18,800	[INFO]	78	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 13:11:19,735	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:11:24,070	[INFO]	80	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:11:24,071	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:11:24,772	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:11:25,666	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:11:25,667	[INFO]	84	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:11:26,604	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:11:26,605	[INFO]	86	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:11:26,605	[DEBUG]	
2020-12-30 13:11:26,606	[INFO]	87	SUCCESS	+4.0	
2020-12-30 13:11:26,606	[DEBUG]	
2020-12-30 13:11:27,565	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:11:28,326	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:11:29,262	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:11:30,202	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:11:30,203	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:11:30,204	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:11:33,403	[INFO]	94	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:11:36,778	[INFO]	95	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:11:36,779	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:11:36,779	[INFO]	96	SUCCESS	+4.0	
2020-12-30 13:11:36,780	[DEBUG]	
2020-12-30 13:11:37,712	[INFO]	97	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:11:37,715	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:11:38,472	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:11:38,473	[INFO]	100	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:11:38,474	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:11:38,475	[INFO]	101	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:11:38,475	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:11:38,476	[INFO]	102	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:11:38,476	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:11:39,370	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:11:42,561	[INFO]	104	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 13:11:43,321	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:11:43,323	[INFO]	106	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:11:43,323	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:11:43,324	[INFO]	107	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:11:43,324	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:11:43,325	[INFO]	108	SUCCESS	+4.0	
2020-12-30 13:11:43,325	[DEBUG]	
2020-12-30 13:11:44,059	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:11:44,827	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:11:45,572	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:11:45,574	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:11:46,330	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:11:49,674	[INFO]	114	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:11:49,675	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 13:11:49,676	[INFO]	115	SUCCESS	+4.0	
2020-12-30 13:11:49,676	[DEBUG]	
2020-12-30 13:11:50,431	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:11:50,432	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:11:51,361	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:11:54,704	[INFO]	119	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:11:54,705	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:11:55,637	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:11:56,574	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:11:56,575	[INFO]	122	SUCCESS	+4.0	
2020-12-30 13:11:56,575	[DEBUG]	
2020-12-30 13:11:57,506	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:11:58,454	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:11:58,456	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:12:01,805	[INFO]	126	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 13:12:02,747	[INFO]	127	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:12:03,528	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:12:04,266	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:12:05,182	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:12:06,117	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:12:07,059	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:12:11,394	[INFO]	133	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:12:12,103	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:12:15,420	[INFO]	135	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 13:12:16,327	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:12:16,328	[INFO]	137	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:12:16,329	[DEBUG]	
2020-12-30 13:12:16,329	[INFO]	138	SUCCESS	+4.0	
2020-12-30 13:12:16,329	[DEBUG]	
2020-12-30 13:12:16,330	[INFO]	139	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:12:17,272	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:12:20,967	[INFO]	141	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:12:20,968	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:12:21,892	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:12:21,893	[INFO]	143	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:12:21,893	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:12:22,830	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:12:22,832	[INFO]	145	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:12:22,832	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:12:22,833	[INFO]	146	SUCCESS	+4.0	
2020-12-30 13:12:22,833	[DEBUG]	
2020-12-30 13:12:23,616	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:12:24,591	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:12:25,519	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:12:26,304	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:12:27,050	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:12:30,284	[INFO]	152	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:12:31,180	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:12:32,096	[INFO]	154	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:12:32,874	[INFO]	155	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:12:33,619	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:12:38,152	[INFO]	157	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:12:38,153	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:12:38,153	[INFO]	158	SUCCESS	+4.0	
2020-12-30 13:12:38,153	[DEBUG]	
2020-12-30 13:12:39,022	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:12:39,937	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:12:40,925	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:12:40,927	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:12:41,867	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:12:41,869	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:12:46,189	[INFO]	165	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:12:46,901	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:12:47,811	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:12:51,165	[INFO]	168	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:12:51,165	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:12:51,166	[INFO]	169	SUCCESS	+4.0	
2020-12-30 13:12:51,166	[DEBUG]	
2020-12-30 13:12:54,337	[INFO]	170	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 13:12:54,339	[INFO]	171	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:12:54,339	[DEBUG]	
2020-12-30 13:12:54,340	[INFO]	172	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:12:54,340	[DEBUG]	
2020-12-30 13:12:54,341	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:12:54,341	[INFO]	174	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:12:54,342	[DEBUG]	
2020-12-30 13:12:54,342	[INFO]	175	SUCCESS	+4.0	
2020-12-30 13:12:54,342	[DEBUG]	
2020-12-30 13:12:54,343	[INFO]	176	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:12:54,343	[DEBUG]	
2020-12-30 13:12:55,268	[INFO]	177	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:12:56,215	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:12:56,216	[INFO]	179	SUCCESS	+4.0	
2020-12-30 13:12:56,217	[DEBUG]	
2020-12-30 13:12:56,218	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:12:57,169	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:12:58,119	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:12:58,894	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:13:03,173	[INFO]	184	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:13:03,175	[INFO]	185	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:13:03,176	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:13:03,177	[INFO]	186	SUCCESS	+4.0	
2020-12-30 13:13:03,177	[DEBUG]	
2020-12-30 13:13:04,042	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:13:07,367	[INFO]	188	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:13:07,369	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:13:08,293	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:13:09,279	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:13:10,051	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:13:10,800	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:13:13,934	[INFO]	194	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:13:13,935	[INFO]	195	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:13:13,935	[DEBUG]	
2020-12-30 13:13:14,703	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:13:14,704	[INFO]	197	SUCCESS	+4.0	
2020-12-30 13:13:14,705	[DEBUG]	
2020-12-30 13:13:14,705	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:13:14,706	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:13:14,707	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:13:18,034	[INFO]	201	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:13:18,957	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:13:19,698	[INFO]	203	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:13:20,469	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:13:21,379	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:13:22,143	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:13:35,595	[INFO]	207	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:13:36,480	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:13:37,251	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:13:41,549	[INFO]	210	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:13:42,416	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:13:43,343	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:13:46,746	[INFO]	213	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:13:46,747	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:13:46,748	[INFO]	214	SUCCESS	+4.0	
2020-12-30 13:13:46,748	[DEBUG]	
2020-12-30 13:13:50,111	[INFO]	215	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:13:50,113	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:13:50,881	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:13:50,882	[INFO]	217	SUCCESS	+4.0	
2020-12-30 13:13:50,883	[DEBUG]	
2020-12-30 13:13:51,801	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:13:52,752	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:13:53,704	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:13:54,683	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:13:55,457	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:13:55,458	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:13:56,219	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:13:57,119	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:13:58,029	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:13:58,976	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:13:59,738	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:13:59,739	[INFO]	229	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:13:59,740	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:14:03,114	[INFO]	231	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:14:03,115	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 13:14:03,890	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:14:03,891	[INFO]	233	SUCCESS	+4.0	
2020-12-30 13:14:03,891	[DEBUG]	
2020-12-30 13:14:03,892	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:14:04,855	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:14:05,816	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:14:06,758	[INFO]	237	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:14:06,759	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:14:07,702	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:14:07,703	[INFO]	240	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:14:07,704	[DEBUG]	
2020-12-30 13:14:07,704	[INFO]	241	SUCCESS	+4.0	
2020-12-30 13:14:07,705	[DEBUG]	
2020-12-30 13:14:08,639	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:14:09,685	[INFO]	243	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:14:10,628	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:14:13,766	[INFO]	245	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:14:13,767	[INFO]	246	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:14:14,526	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:14:14,527	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:14:14,528	[INFO]	249	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:14:15,451	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:14:16,370	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:14:17,312	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:14:18,299	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:14:19,076	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:14:20,028	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:14:20,992	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:14:24,277	[INFO]	257	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 13:14:25,201	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:14:25,202	[INFO]	259	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:14:25,203	[DEBUG]	
2020-12-30 13:14:25,203	[INFO]	260	SUCCESS	+4.0	
2020-12-30 13:14:25,203	[DEBUG]	
2020-12-30 13:14:25,204	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:14:26,149	[INFO]	262	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:14:26,931	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:14:27,684	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:14:27,686	[INFO]	265	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:14:28,613	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:14:32,021	[INFO]	267	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:14:32,022	[INFO]	268	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:14:32,023	[DEBUG]	
2020-12-30 13:14:32,023	[INFO]	269	SUCCESS	+4.0	
2020-12-30 13:14:32,023	[DEBUG]	
2020-12-30 13:14:32,781	[INFO]	270	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:14:33,718	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:14:34,482	[INFO]	272	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:14:35,399	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:14:35,400	[INFO]	274	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:14:36,184	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:14:36,943	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:14:40,262	[INFO]	277	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 13:14:40,264	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:14:43,731	[INFO]	279	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:14:44,630	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:14:47,813	[INFO]	281	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:14:48,759	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:14:48,760	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:14:52,199	[INFO]	284	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:14:52,200	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:14:52,201	[INFO]	285	SUCCESS	+4.0	
2020-12-30 13:14:52,201	[DEBUG]	
2020-12-30 13:14:52,928	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:14:52,929	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:14:53,854	[INFO]	288	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:14:54,787	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:14:55,715	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:14:55,716	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:14:55,717	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:14:55,718	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:14:55,719	[INFO]	294	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:14:55,719	[INFO]	295	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:14:55,719	[DEBUG]	
2020-12-30 13:14:55,720	[INFO]	296	SUCCESS	+4.0	
2020-12-30 13:14:55,720	[DEBUG]	
2020-12-30 13:14:56,667	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:14:57,649	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:14:57,651	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:14:58,424	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:15:02,932	[INFO]	301	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:15:02,932	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:15:03,795	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:15:04,547	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:15:05,473	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:15:05,474	[INFO]	305	SUCCESS	+4.0	
2020-12-30 13:15:05,474	[DEBUG]	
2020-12-30 13:15:08,851	[INFO]	306	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:15:08,852	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:15:08,853	[INFO]	307	SUCCESS	+4.0	
2020-12-30 13:15:08,853	[DEBUG]	
2020-12-30 13:15:09,614	[INFO]	308	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:15:10,383	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:15:10,384	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:15:11,289	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:15:12,239	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:15:12,240	[INFO]	313	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:15:12,240	[DEBUG]	
2020-12-30 13:15:12,241	[INFO]	314	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:15:12,241	[DEBUG]	
2020-12-30 13:15:15,591	[INFO]	315	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:15:15,592	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:15:15,593	[INFO]	316	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:15:15,593	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:15:16,512	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:15:16,513	[INFO]	318	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:15:16,513	[DEBUG]	
2020-12-30 13:15:16,514	[INFO]	319	SUCCESS	+4.0	
2020-12-30 13:15:16,514	[DEBUG]	
2020-12-30 13:15:16,515	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:15:17,450	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:15:20,812	[INFO]	322	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:15:20,813	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:15:21,593	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:15:24,968	[INFO]	325	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 13:15:24,969	[INFO]	326	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:15:24,969	[DEBUG]	
2020-12-30 13:15:24,970	[INFO]	327	SUCCESS	+4.0	
2020-12-30 13:15:24,970	[DEBUG]	
2020-12-30 13:15:25,710	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:15:26,629	[INFO]	329	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:15:26,630	[INFO]	330	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:15:26,630	[DEBUG]	
2020-12-30 13:15:26,631	[INFO]	331	SUCCESS	+4.0	
2020-12-30 13:15:26,631	[DEBUG]	
2020-12-30 13:15:27,543	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:15:28,492	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:15:28,494	[INFO]	334	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:15:28,494	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:15:29,268	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:15:29,269	[INFO]	336	SUCCESS	+4.0	
2020-12-30 13:15:29,270	[DEBUG]	
2020-12-30 13:15:30,202	[INFO]	337	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:15:30,983	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:15:30,984	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:15:30,985	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:15:30,986	[INFO]	341	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:15:34,144	[INFO]	342	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 13:15:34,894	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:15:36,374	[INFO]	344	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:15:40,588	[INFO]	345	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:15:43,954	[INFO]	346	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 13:15:43,955	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:15:44,939	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:15:45,920	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:15:49,385	[INFO]	350	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:15:49,387	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:15:49,389	[INFO]	351	SUCCESS	+4.0	
2020-12-30 13:15:49,389	[DEBUG]	
2020-12-30 13:15:49,391	[INFO]	352	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:15:49,391	[DEBUG]	
2020-12-30 13:15:49,393	[INFO]	353	SUCCESS	+4.0	
2020-12-30 13:15:49,393	[DEBUG]	
2020-12-30 13:15:49,395	[INFO]	354	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:15:49,395	[DEBUG]	
2020-12-30 13:15:49,396	[INFO]	355	SUCCESS	+4.0	
2020-12-30 13:15:49,396	[DEBUG]	
2020-12-30 13:15:50,321	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:15:50,322	[INFO]	357	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:15:50,323	[DEBUG]	
2020-12-30 13:15:53,679	[INFO]	358	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:15:53,680	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 13:15:53,680	[INFO]	359	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:15:53,681	[DEBUG]	
2020-12-30 13:15:54,445	[INFO]	360	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:15:54,447	[INFO]	361	SUCCESS	+4.0	
2020-12-30 13:15:54,447	[DEBUG]	
2020-12-30 13:15:55,228	[INFO]	362	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:15:56,150	[INFO]	363	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:16:00,436	[INFO]	364	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:16:00,437	[INFO]	365	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:16:00,437	[DEBUG]	
2020-12-30 13:16:00,437	[INFO]	366	SUCCESS	+4.0	
2020-12-30 13:16:00,438	[DEBUG]	
2020-12-30 13:16:00,438	[INFO]	367	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:16:00,438	[DEBUG]	
2020-12-30 13:16:01,306	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:16:04,645	[INFO]	369	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 13:16:04,646	[INFO]	370	SUCCESS	+4.0	
2020-12-30 13:16:04,646	[DEBUG]	
2020-12-30 13:16:04,647	[INFO]	371	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:16:04,647	[DEBUG]	
2020-12-30 13:16:05,580	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:16:05,581	[INFO]	373	SUCCESS	+4.0	
2020-12-30 13:16:05,581	[DEBUG]	
2020-12-30 13:16:08,969	[INFO]	374	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:16:08,969	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:16:08,970	[INFO]	375	SUCCESS	+4.0	
2020-12-30 13:16:08,970	[DEBUG]	
2020-12-30 13:16:09,714	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:16:12,832	[INFO]	377	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:16:15,954	[INFO]	378	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:16:16,892	[INFO]	379	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:16:20,273	[INFO]	380	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:16:20,273	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:16:20,274	[INFO]	381	SUCCESS	+4.0	
2020-12-30 13:16:20,274	[DEBUG]	
2020-12-30 13:16:20,275	[INFO]	382	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:16:20,276	[DEBUG]	
2020-12-30 13:16:24,561	[INFO]	383	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:16:25,273	[INFO]	384	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:16:25,274	[INFO]	385	SUCCESS	+4.0	
2020-12-30 13:16:25,274	[DEBUG]	
2020-12-30 13:16:26,223	[INFO]	386	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:16:29,406	[INFO]	387	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:16:30,338	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:16:31,276	[INFO]	389	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:16:32,194	[INFO]	390	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:16:33,152	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:16:33,154	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:16:33,154	[INFO]	393	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:16:33,926	[INFO]	394	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:16:37,281	[INFO]	395	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:16:38,196	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:16:38,198	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:16:38,199	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:16:38,199	[INFO]	399	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:16:38,200	[DEBUG]	
2020-12-30 13:16:38,200	[INFO]	400	SUCCESS	+4.0	
2020-12-30 13:16:38,200	[DEBUG]	
2020-12-30 13:16:38,964	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:16:39,866	[INFO]	402	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:16:39,867	[INFO]	403	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:16:39,868	[INFO]	404	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:16:39,868	[DEBUG]	
2020-12-30 13:16:39,869	[INFO]	405	SUCCESS	+4.0	
2020-12-30 13:16:39,869	[DEBUG]	
2020-12-30 13:16:39,870	[INFO]	406	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:16:39,870	[DEBUG]	
2020-12-30 13:16:39,870	[INFO]	407	SUCCESS	+4.0	
2020-12-30 13:16:39,870	[DEBUG]	
2020-12-30 13:16:39,871	[INFO]	408	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:16:39,872	[DEBUG]	
2020-12-30 13:16:39,873	[INFO]	409	SUCCESS	+4.0	
2020-12-30 13:16:39,873	[DEBUG]	
2020-12-30 13:16:40,875	[INFO]	410	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:16:40,878	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:16:41,817	[INFO]	412	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:16:42,604	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:16:42,605	[INFO]	414	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:16:43,532	[INFO]	415	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:16:46,684	[INFO]	416	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:16:47,443	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:16:48,393	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:16:49,325	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:16:50,253	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:16:51,213	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:16:52,159	[INFO]	422	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:16:53,103	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:16:54,029	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:16:54,943	[INFO]	425	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:16:58,286	[INFO]	426	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:16:58,286	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:16:58,287	[INFO]	427	SUCCESS	+4.0	
2020-12-30 13:16:58,287	[DEBUG]	
2020-12-30 13:16:59,225	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:16:59,984	[INFO]	429	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:16:59,986	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:16:59,986	[INFO]	431	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:17:03,282	[INFO]	432	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:17:04,061	[INFO]	433	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:17:04,062	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:17:07,383	[INFO]	435	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 13:17:10,739	[INFO]	436	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:17:10,740	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 13:17:10,741	[INFO]	437	SUCCESS	+4.0	
2020-12-30 13:17:10,741	[DEBUG]	
2020-12-30 13:17:11,511	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:17:14,823	[INFO]	439	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:17:15,584	[INFO]	440	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:17:16,349	[INFO]	441	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:17:17,091	[INFO]	442	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:17:20,305	[INFO]	443	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:17:20,307	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:17:21,070	[INFO]	445	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:17:21,071	[INFO]	446	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:17:21,071	[DEBUG]	
2020-12-30 13:17:21,072	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:17:21,073	[INFO]	448	SUCCESS	+4.0	
2020-12-30 13:17:21,073	[DEBUG]	
2020-12-30 13:17:21,074	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:17:21,075	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:17:21,075	[INFO]	451	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:17:21,076	[INFO]	452	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:17:21,076	[DEBUG]	
2020-12-30 13:17:21,076	[INFO]	453	SUCCESS	+4.0	
2020-12-30 13:17:21,077	[DEBUG]	
2020-12-30 13:17:21,825	[INFO]	454	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:17:22,757	[INFO]	455	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:17:22,758	[INFO]	456	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:17:22,758	[DEBUG]	
2020-12-30 13:17:23,701	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:17:24,491	[INFO]	458	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:17:24,492	[INFO]	459	SUCCESS	+4.0	
2020-12-30 13:17:24,493	[DEBUG]	
2020-12-30 13:17:25,286	[INFO]	460	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:17:25,289	[INFO]	461	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:17:25,291	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:17:25,292	[INFO]	463	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:17:26,039	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:17:26,041	[INFO]	465	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:17:26,041	[DEBUG]	
2020-12-30 13:17:29,783	[INFO]	466	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:17:29,785	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:17:29,786	[INFO]	467	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:17:29,787	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:17:29,788	[INFO]	468	SUCCESS	+4.0	
2020-12-30 13:17:29,788	[DEBUG]	
2020-12-30 13:17:30,708	[INFO]	469	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:17:31,651	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:17:44,995	[INFO]	471	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:17:44,996	[INFO]	472	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:17:44,996	[DEBUG]	
2020-12-30 13:17:45,701	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:17:45,702	[INFO]	474	SUCCESS	+4.0	
2020-12-30 13:17:45,702	[DEBUG]	
2020-12-30 13:17:46,621	[INFO]	475	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:17:47,380	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:17:48,310	[INFO]	477	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:17:51,680	[INFO]	478	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:17:51,681	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:17:51,682	[INFO]	479	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:17:51,682	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:17:51,683	[INFO]	480	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:17:51,683	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:17:51,684	[INFO]	481	SUCCESS	+4.0	
2020-12-30 13:17:51,684	[DEBUG]	
2020-12-30 13:17:52,619	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:17:53,574	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:17:56,964	[INFO]	484	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:18:00,053	[INFO]	485	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:18:00,817	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:18:00,818	[INFO]	487	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:18:00,818	[DEBUG]	
2020-12-30 13:18:00,819	[INFO]	488	SUCCESS	+4.0	
2020-12-30 13:18:00,819	[DEBUG]	
2020-12-30 13:18:00,820	[INFO]	489	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:18:00,820	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:18:01,751	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:18:01,752	[INFO]	491	SUCCESS	+4.0	
2020-12-30 13:18:01,752	[DEBUG]	
2020-12-30 13:18:01,752	[INFO]	492	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:18:01,753	[DEBUG]	
2020-12-30 13:18:02,691	[INFO]	493	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:18:02,692	[INFO]	494	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:18:03,616	[INFO]	495	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:18:06,724	[INFO]	496	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:18:06,725	[INFO]	497	SUCCESS	+4.0	
2020-12-30 13:18:06,726	[DEBUG]	
2020-12-30 13:18:06,726	[INFO]	498	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:18:06,727	[DEBUG]	
2020-12-30 13:18:07,642	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:18:07,643	[INFO]	500	SUCCESS	+4.0	
2020-12-30 13:18:07,643	[DEBUG]	
2020-12-30 13:18:07,643	[INFO]	==== END ====
2020-12-30 13:18:07,643	[INFO]	Reason: step budget
2020-12-30 13:18:07,644	[INFO]	
2020-12-30 13:18:07,644	[INFO]	========== EPOCH 15 ==========
2020-12-30 13:18:07,644	[INFO]	==== WARMUP ====
2020-12-30 13:18:10,980	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 13:18:10,980	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:18:14,340	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 13:18:14,340	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:18:17,729	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 13:18:17,729	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:18:21,077	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-30 13:18:21,077	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:18:21,078	[INFO]	==== START ====
2020-12-30 13:18:24,490	[INFO]	1	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:18:24,491	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:18:25,463	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:18:25,464	[INFO]	3	SUCCESS	+4.0	
2020-12-30 13:18:25,464	[DEBUG]	
2020-12-30 13:18:26,410	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:18:27,162	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:18:28,082	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:18:28,998	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:18:28,999	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:18:29,754	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:18:29,756	[INFO]	10	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:18:29,756	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:18:30,683	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:18:31,653	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:18:31,655	[INFO]	13	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:18:31,655	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:18:32,574	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:18:35,927	[INFO]	15	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:18:36,846	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:18:36,848	[INFO]	17	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:18:36,848	[DEBUG]	
2020-12-30 13:18:36,849	[INFO]	18	SUCCESS	+4.0	
2020-12-30 13:18:36,849	[DEBUG]	
2020-12-30 13:18:37,601	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:18:38,362	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:18:41,481	[INFO]	21	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:18:42,432	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:18:42,433	[INFO]	23	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:18:42,434	[DEBUG]	
2020-12-30 13:18:43,394	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:18:43,395	[INFO]	25	SUCCESS	+4.0	
2020-12-30 13:18:43,395	[DEBUG]	
2020-12-30 13:18:47,163	[INFO]	26	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:18:47,164	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:18:47,164	[INFO]	27	SUCCESS	+4.0	
2020-12-30 13:18:47,164	[DEBUG]	
2020-12-30 13:18:47,165	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:18:48,096	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:18:49,031	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:18:49,034	[INFO]	31	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:18:49,035	[DEBUG]	
2020-12-30 13:18:49,965	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:18:49,968	[INFO]	33	SUCCESS	+4.0	
2020-12-30 13:18:49,968	[DEBUG]	
2020-12-30 13:18:49,970	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:18:50,732	[INFO]	35	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:18:51,669	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:18:51,670	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:18:54,993	[INFO]	38	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:18:54,994	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:18:54,994	[INFO]	39	SUCCESS	+4.0	
2020-12-30 13:18:54,995	[DEBUG]	
2020-12-30 13:18:54,995	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:18:55,766	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:18:59,109	[INFO]	42	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:19:02,512	[INFO]	43	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:19:02,513	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:19:05,946	[INFO]	44	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:19:05,947	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!             return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:19:09,630	[INFO]	45	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:19:09,631	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 13,27 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!             return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
!             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:19:10,539	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:19:10,541	[INFO]	47	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:19:10,541	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 13,27 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!             return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
!             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:19:14,242	[INFO]	48	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:19:15,186	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:19:15,188	[INFO]	50	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:19:15,188	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!             return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:19:15,988	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:19:16,903	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:19:17,830	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:19:17,832	[INFO]	54	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:19:17,832	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:19:17,833	[INFO]	55	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:19:17,834	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:19:17,834	[INFO]	56	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:19:17,835	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:19:17,835	[INFO]	57	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:19:17,836	[DEBUG]	
2020-12-30 13:19:18,611	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:19:18,615	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:19:18,616	[INFO]	60	SUCCESS	+4.0	
2020-12-30 13:19:18,617	[DEBUG]	
2020-12-30 13:19:19,556	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:19:20,342	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:19:20,344	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:19:21,281	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:19:22,221	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:19:22,222	[INFO]	66	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:19:22,223	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:19:23,000	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:19:23,001	[INFO]	68	SUCCESS	+4.0	
2020-12-30 13:19:23,001	[DEBUG]	
2020-12-30 13:19:23,002	[INFO]	69	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:19:23,002	[DEBUG]	
2020-12-30 13:19:23,003	[INFO]	70	SUCCESS	+4.0	
2020-12-30 13:19:23,003	[DEBUG]	
2020-12-30 13:19:23,924	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:19:24,697	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:19:25,455	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:19:26,282	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:19:26,283	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:19:27,283	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:19:28,243	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:19:29,215	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:19:32,528	[INFO]	79	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:19:32,529	[INFO]	80	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:19:32,530	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:19:36,222	[INFO]	81	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:19:36,223	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:19:40,598	[INFO]	82	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:19:40,600	[INFO]	83	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:19:40,600	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:19:41,334	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:19:42,251	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:19:43,181	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:19:43,948	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:19:44,726	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:19:44,728	[INFO]	89	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:19:44,728	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:19:44,729	[INFO]	90	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:19:44,730	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:19:44,731	[INFO]	91	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:19:44,731	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:19:45,671	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:19:46,627	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:19:46,630	[INFO]	94	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:19:46,630	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:19:50,374	[INFO]	95	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:19:50,375	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,24 ****
--- 15,31 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:19:51,294	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:19:52,040	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:19:52,041	[INFO]	98	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:19:52,042	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,24 ****
--- 15,31 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:19:52,043	[INFO]	99	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:19:52,044	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,24 ****
--- 15,31 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:19:52,045	[INFO]	100	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:19:52,046	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,24 ****
--- 15,31 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:19:52,046	[INFO]	101	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:19:52,047	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:19:52,048	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:19:52,816	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:19:56,152	[INFO]	104	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:19:56,153	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:19:56,154	[INFO]	105	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:19:56,155	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:19:56,926	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:19:57,841	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:19:58,781	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:19:59,709	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:19:59,711	[INFO]	110	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:19:59,712	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:19:59,713	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:19:59,714	[INFO]	112	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:19:59,714	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:19:59,715	[INFO]	113	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:19:59,715	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:19:59,716	[INFO]	114	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:19:59,717	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:19:59,717	[INFO]	115	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:19:59,718	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:20:03,144	[INFO]	116	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:20:03,145	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,24 ****
--- 14,30 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:20:06,478	[INFO]	117	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:20:06,480	[INFO]	118	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:20:06,480	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,24 ****
--- 14,30 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:20:09,658	[INFO]	119	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:20:09,660	[INFO]	120	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:20:10,598	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:20:10,600	[INFO]	122	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:20:10,601	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:20:10,602	[INFO]	123	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:20:10,602	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:20:10,602	[INFO]	124	SUCCESS	+4.0	
2020-12-30 13:20:10,603	[DEBUG]	
2020-12-30 13:20:13,709	[INFO]	125	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:20:16,998	[INFO]	126	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:20:17,929	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:20:21,296	[INFO]	128	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:20:22,220	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:20:22,980	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:20:23,731	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:20:23,733	[INFO]	132	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:20:23,733	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:20:23,734	[INFO]	133	SUCCESS	+4.0	
2020-12-30 13:20:23,734	[DEBUG]	
2020-12-30 13:20:23,734	[INFO]	134	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:20:23,735	[DEBUG]	
2020-12-30 13:20:23,735	[INFO]	135	SUCCESS	+4.0	
2020-12-30 13:20:23,735	[DEBUG]	
2020-12-30 13:20:24,520	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:20:25,259	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:20:26,171	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:20:26,173	[INFO]	139	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:20:30,478	[INFO]	140	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:20:30,479	[INFO]	141	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:20:31,345	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:20:32,089	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:20:33,039	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:20:33,995	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:20:33,996	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:20:34,910	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:20:36,069	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:20:36,071	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:20:37,572	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:20:43,756	[INFO]	151	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:20:43,757	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:20:43,758	[INFO]	152	SUCCESS	+4.0	
2020-12-30 13:20:43,758	[DEBUG]	
2020-12-30 13:20:43,759	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:20:43,760	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:20:45,071	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:20:45,073	[INFO]	156	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:20:45,073	[DEBUG]	
2020-12-30 13:20:45,074	[INFO]	157	SUCCESS	+4.0	
2020-12-30 13:20:45,074	[DEBUG]	
2020-12-30 13:20:46,430	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:20:47,494	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:20:47,496	[INFO]	160	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:20:47,496	[DEBUG]	
2020-12-30 13:20:48,676	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:20:48,678	[INFO]	162	SUCCESS	+4.0	
2020-12-30 13:20:48,679	[DEBUG]	
2020-12-30 13:20:49,993	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:20:49,995	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:20:51,126	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:20:52,116	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:20:56,189	[INFO]	167	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 13:20:57,116	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:20:57,892	[INFO]	169	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:20:57,893	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:20:58,815	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:20:58,817	[INFO]	172	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:20:58,817	[DEBUG]	
2020-12-30 13:20:58,818	[INFO]	173	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:20:59,774	[INFO]	174	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:20:59,775	[INFO]	175	SUCCESS	+4.0	
2020-12-30 13:20:59,776	[DEBUG]	
2020-12-30 13:21:02,944	[INFO]	176	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:21:02,945	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:21:16,266	[INFO]	178	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:21:16,974	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:21:17,722	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:21:18,461	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:21:21,618	[INFO]	182	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:21:22,408	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:21:25,596	[INFO]	184	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:21:26,523	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:21:27,298	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:21:28,030	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:21:28,031	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:21:31,380	[INFO]	189	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:21:31,381	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 13:21:31,382	[INFO]	190	SUCCESS	+4.0	
2020-12-30 13:21:31,382	[DEBUG]	
2020-12-30 13:21:34,739	[INFO]	191	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:21:34,739	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:21:35,529	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:21:35,531	[INFO]	193	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:21:35,532	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:21:35,533	[INFO]	194	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:21:35,534	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:21:38,877	[INFO]	195	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:21:38,878	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,23 ****
--- 15,29 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:21:39,801	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:21:40,796	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:21:44,136	[INFO]	198	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:21:44,137	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,23 ****
--- 15,32 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:21:44,138	[INFO]	199	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:21:44,139	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,23 ****
--- 15,32 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:21:47,541	[INFO]	200	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:21:47,542	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:21:47,544	[INFO]	201	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:21:47,544	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:21:48,470	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:21:48,473	[INFO]	203	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:21:48,474	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:21:48,475	[INFO]	204	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:21:48,476	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:21:51,815	[INFO]	205	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:21:51,816	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:21:52,567	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:21:52,568	[INFO]	207	SUCCESS	+4.0	
2020-12-30 13:21:52,568	[DEBUG]	
2020-12-30 13:21:53,500	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:21:54,266	[INFO]	209	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:21:55,009	[INFO]	210	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:21:55,010	[INFO]	211	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:21:55,011	[INFO]	212	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:21:55,011	[DEBUG]	
2020-12-30 13:21:58,361	[INFO]	213	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:22:01,776	[INFO]	214	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:22:01,777	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:01,778	[INFO]	215	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:22:01,778	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:01,779	[INFO]	216	SUCCESS	+4.0	
2020-12-30 13:22:01,779	[DEBUG]	
2020-12-30 13:22:02,707	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:22:03,478	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:22:03,479	[INFO]	219	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:22:03,479	[DEBUG]	
2020-12-30 13:22:06,805	[INFO]	220	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:22:06,806	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:22:07,743	[INFO]	221	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:22:08,680	[INFO]	222	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:22:09,445	[INFO]	223	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:22:09,447	[INFO]	224	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:22:09,447	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:22:10,380	[INFO]	225	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:22:11,136	[INFO]	226	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:22:14,205	[INFO]	227	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:22:14,206	[INFO]	228	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:22:14,207	[DEBUG]	
2020-12-30 13:22:17,860	[INFO]	229	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:22:17,861	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:17,863	[INFO]	230	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:22:17,863	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:21,109	[INFO]	231	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:22:21,111	[INFO]	232	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:22:21,112	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:21,113	[INFO]	233	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:22:21,113	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:21,114	[INFO]	234	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:22:21,115	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:21,116	[INFO]	235	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:22:21,116	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:21,117	[INFO]	236	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:22:21,118	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:21,119	[INFO]	237	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:22:21,119	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:21,120	[INFO]	238	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:22:21,121	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:21,122	[INFO]	239	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:22:21,123	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:21,124	[INFO]	240	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:22:21,124	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:24,503	[INFO]	241	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:22:24,504	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:25,259	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:22:26,211	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:22:29,359	[INFO]	244	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:22:30,122	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:22:30,124	[INFO]	246	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:22:30,125	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:30,126	[INFO]	247	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:22:30,126	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:30,127	[INFO]	248	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:22:30,128	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:30,129	[INFO]	249	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:22:30,130	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:30,131	[INFO]	250	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:22:30,132	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:30,133	[INFO]	251	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:22:30,134	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:30,135	[INFO]	252	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:22:30,136	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:30,137	[INFO]	253	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:22:30,138	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:30,138	[INFO]	254	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:22:30,139	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:31,059	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:22:31,061	[INFO]	256	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:22:31,062	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:32,019	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:22:32,970	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:22:32,972	[INFO]	259	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:22:32,972	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:32,973	[INFO]	260	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:22:32,974	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:33,741	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:22:33,743	[INFO]	262	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:22:33,744	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:33,745	[INFO]	263	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:22:33,746	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:33,747	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:22:33,748	[INFO]	265	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:22:33,748	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:33,749	[INFO]	266	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:22:33,750	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:34,667	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:22:35,609	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:22:35,611	[INFO]	269	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:22:35,612	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:36,554	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:22:36,555	[INFO]	271	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:22:36,556	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:36,557	[INFO]	272	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:22:36,557	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:36,558	[INFO]	273	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:22:36,558	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:36,559	[INFO]	274	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:22:36,559	[DEBUG]	
2020-12-30 13:22:36,560	[INFO]	275	SUCCESS	+4.0	
2020-12-30 13:22:36,560	[DEBUG]	
2020-12-30 13:22:37,307	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:22:38,064	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:22:38,983	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:22:42,356	[INFO]	279	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:22:42,357	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:22:43,149	[INFO]	280	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:22:43,150	[INFO]	281	SUCCESS	+4.0	
2020-12-30 13:22:43,151	[DEBUG]	
2020-12-30 13:22:44,066	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:22:47,180	[INFO]	283	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:22:50,530	[INFO]	284	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:22:51,285	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:22:52,058	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:22:52,817	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:22:52,818	[INFO]	288	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:22:52,819	[INFO]	289	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:22:53,755	[INFO]	290	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:22:53,757	[INFO]	291	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:22:53,757	[DEBUG]	
2020-12-30 13:22:54,687	[INFO]	292	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:22:54,688	[INFO]	293	SUCCESS	+4.0	
2020-12-30 13:22:54,688	[DEBUG]	
2020-12-30 13:22:55,622	[INFO]	294	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:22:56,540	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:22:56,541	[INFO]	296	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:22:56,541	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:22:57,480	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:22:58,256	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:22:58,257	[INFO]	299	SUCCESS	+4.0	
2020-12-30 13:22:58,257	[DEBUG]	
2020-12-30 13:22:59,198	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:22:59,961	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:23:03,298	[INFO]	302	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 13:23:06,412	[INFO]	303	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:23:07,151	[INFO]	304	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:23:10,502	[INFO]	305	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:23:10,502	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:23:11,273	[INFO]	306	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:23:11,274	[INFO]	307	SUCCESS	+4.0	
2020-12-30 13:23:11,274	[DEBUG]	
2020-12-30 13:23:12,199	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:23:12,200	[INFO]	309	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:23:12,200	[DEBUG]	
2020-12-30 13:23:12,201	[INFO]	310	SUCCESS	+4.0	
2020-12-30 13:23:12,201	[DEBUG]	
2020-12-30 13:23:12,968	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:23:13,922	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:23:14,876	[INFO]	313	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:23:14,878	[INFO]	314	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:23:14,878	[DEBUG]	
2020-12-30 13:23:14,879	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:23:14,879	[INFO]	316	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:23:14,880	[DEBUG]	
2020-12-30 13:23:14,880	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:23:14,881	[INFO]	318	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:23:14,881	[DEBUG]	
2020-12-30 13:23:14,882	[INFO]	319	SUCCESS	+4.0	
2020-12-30 13:23:14,882	[DEBUG]	
2020-12-30 13:23:15,646	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:23:16,553	[INFO]	321	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:23:17,341	[INFO]	322	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:23:18,289	[INFO]	323	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:23:19,056	[INFO]	324	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:23:19,992	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:23:20,936	[INFO]	326	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:23:21,873	[INFO]	327	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:23:21,875	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:23:22,824	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:23:23,756	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:23:28,343	[INFO]	331	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:23:28,344	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:23:28,344	[INFO]	332	SUCCESS	+4.0	
2020-12-30 13:23:28,344	[DEBUG]	
2020-12-30 13:23:29,057	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:23:29,975	[INFO]	334	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:23:33,336	[INFO]	335	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:23:34,113	[INFO]	336	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:23:35,060	[INFO]	337	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:23:36,018	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:23:36,020	[INFO]	339	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:23:36,020	[DEBUG]	
2020-12-30 13:23:36,978	[INFO]	340	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:23:36,979	[INFO]	341	SUCCESS	+4.0	
2020-12-30 13:23:36,979	[DEBUG]	
2020-12-30 13:23:37,925	[INFO]	342	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:23:37,926	[INFO]	343	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 13:23:37,927	[INFO]	344	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:23:38,686	[INFO]	345	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:23:38,687	[INFO]	346	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:23:38,687	[INFO]	347	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:23:38,688	[DEBUG]	
2020-12-30 13:23:39,610	[INFO]	348	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:23:39,612	[INFO]	349	SUCCESS	+4.0	
2020-12-30 13:23:39,612	[DEBUG]	
2020-12-30 13:23:40,578	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:23:43,730	[INFO]	351	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:23:47,157	[INFO]	352	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:23:47,159	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:23:47,160	[INFO]	353	SUCCESS	+4.0	
2020-12-30 13:23:47,160	[DEBUG]	
2020-12-30 13:23:48,080	[INFO]	354	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:23:49,032	[INFO]	355	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:23:49,987	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:23:50,947	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:23:54,267	[INFO]	358	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:23:55,195	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:23:58,384	[INFO]	360	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 13:23:58,385	[INFO]	361	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:23:58,386	[DEBUG]	
2020-12-30 13:23:58,386	[INFO]	362	SUCCESS	+4.0	
2020-12-30 13:23:58,387	[DEBUG]	
2020-12-30 13:23:59,144	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:24:00,046	[INFO]	364	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:24:00,831	[INFO]	365	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:24:04,129	[INFO]	366	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:24:04,130	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:24:04,130	[INFO]	367	SUCCESS	+4.0	
2020-12-30 13:24:04,131	[DEBUG]	
2020-12-30 13:24:05,063	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:24:05,064	[INFO]	369	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:24:05,065	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:24:08,253	[INFO]	370	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:24:08,254	[INFO]	371	SUCCESS	+4.0	
2020-12-30 13:24:08,254	[DEBUG]	
2020-12-30 13:24:11,879	[INFO]	372	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:24:11,879	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:24:11,880	[INFO]	373	SUCCESS	+4.0	
2020-12-30 13:24:11,880	[DEBUG]	
2020-12-30 13:24:11,881	[INFO]	374	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:24:11,882	[INFO]	375	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:24:11,882	[DEBUG]	
2020-12-30 13:24:11,883	[INFO]	376	SUCCESS	+4.0	
2020-12-30 13:24:11,883	[DEBUG]	
2020-12-30 13:24:12,618	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:24:12,619	[INFO]	378	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:24:12,619	[DEBUG]	
2020-12-30 13:24:12,620	[INFO]	379	SUCCESS	+4.0	
2020-12-30 13:24:12,620	[DEBUG]	
2020-12-30 13:24:15,912	[INFO]	380	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:24:19,285	[INFO]	381	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:24:19,286	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:24:22,609	[INFO]	382	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:24:22,611	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,25 ****
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 18,28 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:24:23,357	[INFO]	383	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:24:26,768	[INFO]	384	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:24:26,768	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:24:30,192	[INFO]	385	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:24:33,295	[INFO]	386	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:24:33,296	[INFO]	387	SUCCESS	+4.0	
2020-12-30 13:24:33,297	[DEBUG]	
2020-12-30 13:24:34,061	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:24:34,809	[INFO]	389	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:24:34,811	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:24:34,812	[INFO]	391	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:24:34,812	[DEBUG]	
2020-12-30 13:24:35,708	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:24:35,709	[INFO]	393	SUCCESS	+4.0	
2020-12-30 13:24:35,709	[DEBUG]	
2020-12-30 13:24:36,486	[INFO]	394	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:24:37,414	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:24:40,862	[INFO]	396	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 13:24:40,864	[INFO]	397	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:24:40,864	[DEBUG]	
2020-12-30 13:24:40,865	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:24:40,866	[INFO]	399	SUCCESS	+4.0	
2020-12-30 13:24:40,866	[DEBUG]	
2020-12-30 13:24:40,867	[INFO]	400	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 13:24:41,786	[INFO]	401	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:24:45,167	[INFO]	402	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:24:46,106	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:24:46,108	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:24:47,058	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:24:47,839	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:24:47,842	[INFO]	407	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:24:48,800	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:24:49,694	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:25:03,246	[INFO]	410	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:25:03,964	[INFO]	411	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:25:07,306	[INFO]	412	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:25:07,307	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:25:08,233	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:25:08,234	[INFO]	414	SUCCESS	+4.0	
2020-12-30 13:25:08,235	[DEBUG]	
2020-12-30 13:25:08,235	[INFO]	415	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:25:09,014	[INFO]	416	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:25:09,960	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:25:10,894	[INFO]	418	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:25:10,895	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:25:10,896	[INFO]	420	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:25:10,896	[DEBUG]	
2020-12-30 13:25:10,897	[INFO]	421	SUCCESS	+4.0	
2020-12-30 13:25:10,897	[DEBUG]	
2020-12-30 13:25:11,856	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:25:11,858	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:25:11,859	[INFO]	424	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 13:25:11,860	[INFO]	425	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:25:11,860	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:25:11,861	[INFO]	426	SUCCESS	+4.0	
2020-12-30 13:25:11,861	[DEBUG]	
2020-12-30 13:25:12,784	[INFO]	427	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:25:13,779	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:25:13,780	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:25:13,781	[INFO]	430	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:25:13,782	[INFO]	431	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:25:13,782	[DEBUG]	
2020-12-30 13:25:17,432	[INFO]	432	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:25:17,433	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:25:17,434	[INFO]	433	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:25:17,434	[DEBUG]	
2020-12-30 13:25:17,435	[INFO]	434	SUCCESS	+4.0	
2020-12-30 13:25:17,435	[DEBUG]	
2020-12-30 13:25:17,436	[INFO]	435	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:25:17,436	[INFO]	436	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 13:25:17,437	[INFO]	437	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:25:17,438	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:25:18,365	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:25:19,296	[INFO]	440	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:25:20,240	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:25:23,368	[INFO]	442	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:25:24,355	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:25:24,356	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:25:24,357	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:25:25,121	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:25:25,124	[INFO]	447	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:25:25,125	[DEBUG]	
2020-12-30 13:25:25,126	[INFO]	448	SUCCESS	+4.0	
2020-12-30 13:25:25,127	[DEBUG]	
2020-12-30 13:25:28,517	[INFO]	449	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:25:28,518	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:25:28,519	[INFO]	450	SUCCESS	+4.0	
2020-12-30 13:25:28,519	[DEBUG]	
2020-12-30 13:25:28,520	[INFO]	451	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:25:28,520	[DEBUG]	
2020-12-30 13:25:28,521	[INFO]	452	SUCCESS	+4.0	
2020-12-30 13:25:28,521	[DEBUG]	
2020-12-30 13:25:29,271	[INFO]	453	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:25:30,191	[INFO]	454	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:25:30,967	[INFO]	455	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:25:30,971	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:25:31,894	[INFO]	457	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:25:31,895	[INFO]	458	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:25:31,896	[DEBUG]	
2020-12-30 13:25:31,896	[INFO]	459	SUCCESS	+4.0	
2020-12-30 13:25:31,896	[DEBUG]	
2020-12-30 13:25:31,897	[INFO]	460	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:25:31,897	[DEBUG]	
2020-12-30 13:25:31,898	[INFO]	461	SUCCESS	+4.0	
2020-12-30 13:25:31,898	[DEBUG]	
2020-12-30 13:25:35,149	[INFO]	462	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 13:25:35,151	[INFO]	463	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:25:35,153	[INFO]	464	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:25:36,118	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:25:36,120	[INFO]	466	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:25:36,904	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:25:37,840	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:25:37,841	[INFO]	469	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:25:37,842	[DEBUG]	
2020-12-30 13:25:41,241	[INFO]	470	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:25:41,242	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:25:41,243	[INFO]	471	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:25:41,243	[DEBUG]	
2020-12-30 13:25:42,019	[INFO]	472	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:25:42,020	[INFO]	473	SUCCESS	+4.0	
2020-12-30 13:25:42,020	[DEBUG]	
2020-12-30 13:25:45,216	[INFO]	474	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 13:25:46,157	[INFO]	475	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:25:47,090	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:25:47,870	[INFO]	477	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:25:48,810	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:25:48,813	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:25:49,756	[INFO]	480	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:26:03,114	[INFO]	481	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:26:03,828	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:26:04,568	[INFO]	483	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:26:05,503	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:26:05,504	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:26:06,283	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:26:07,065	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:26:07,067	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:26:08,008	[INFO]	489	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:26:08,948	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:26:08,949	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:26:08,950	[INFO]	492	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:26:08,951	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:26:09,721	[INFO]	493	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:26:09,722	[INFO]	494	SUCCESS	+4.0	
2020-12-30 13:26:09,723	[DEBUG]	
2020-12-30 13:26:13,076	[INFO]	495	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:26:13,077	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:26:13,838	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:26:27,129	[INFO]	497	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:26:27,130	[INFO]	498	SUCCESS	+4.0	
2020-12-30 13:26:27,130	[DEBUG]	
2020-12-30 13:26:27,131	[INFO]	499	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:26:27,131	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:26:28,014	[INFO]	500	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:26:28,014	[INFO]	==== END ====
2020-12-30 13:26:28,014	[INFO]	Reason: step budget
2020-12-30 13:26:28,015	[INFO]	
2020-12-30 13:26:28,015	[INFO]	========== EPOCH 16 ==========
2020-12-30 13:26:28,015	[INFO]	==== WARMUP ====
2020-12-30 13:26:31,359	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 13:26:31,359	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:26:34,730	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 13:26:34,730	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:26:38,092	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 13:26:38,093	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:26:41,457	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-30 13:26:41,457	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:26:41,458	[INFO]	==== START ====
2020-12-30 13:26:42,367	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:26:45,767	[INFO]	2	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:26:45,768	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:26:45,769	[INFO]	3	SUCCESS	+4.0	
2020-12-30 13:26:45,769	[DEBUG]	
2020-12-30 13:26:46,685	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:26:47,631	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:26:48,406	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:26:49,332	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:26:50,261	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:26:51,232	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:26:52,016	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:26:55,324	[INFO]	11	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 13:26:56,234	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:26:57,163	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:26:58,107	[INFO]	14	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:26:59,039	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:26:59,972	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:27:00,913	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:27:01,862	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:27:02,791	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:27:02,792	[INFO]	20	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:27:02,793	[DEBUG]	
2020-12-30 13:27:03,557	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:27:03,558	[INFO]	22	SUCCESS	+4.0	
2020-12-30 13:27:03,558	[DEBUG]	
2020-12-30 13:27:03,559	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:27:04,492	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:27:08,135	[INFO]	25	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:27:08,136	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:27:08,136	[INFO]	26	SUCCESS	+4.0	
2020-12-30 13:27:08,137	[DEBUG]	
2020-12-30 13:27:08,137	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:27:09,063	[INFO]	28	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:27:12,166	[INFO]	29	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:27:12,168	[INFO]	30	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:27:12,168	[DEBUG]	
2020-12-30 13:27:12,168	[INFO]	31	SUCCESS	+4.0	
2020-12-30 13:27:12,169	[DEBUG]	
2020-12-30 13:27:12,887	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:27:13,829	[INFO]	33	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:27:14,586	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:27:15,509	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:27:16,432	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:27:17,218	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:27:20,570	[INFO]	38	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:27:20,571	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:27:20,573	[INFO]	39	SUCCESS	+4.0	
2020-12-30 13:27:20,573	[DEBUG]	
2020-12-30 13:27:20,574	[INFO]	40	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:27:20,574	[DEBUG]	
2020-12-30 13:27:21,480	[INFO]	41	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:27:26,003	[INFO]	42	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:27:26,003	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:27:26,004	[INFO]	43	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:27:26,004	[DEBUG]	
2020-12-30 13:27:26,005	[INFO]	44	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:27:26,006	[INFO]	45	SUCCESS	+4.0	
2020-12-30 13:27:26,006	[DEBUG]	
2020-12-30 13:27:26,873	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:27:26,875	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:27:26,875	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:27:27,624	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:27:27,625	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:27:27,626	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:27:28,574	[INFO]	52	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:27:28,575	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:27:28,576	[INFO]	54	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:27:31,931	[INFO]	55	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:27:35,326	[INFO]	56	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:27:35,327	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:27:35,328	[INFO]	57	SUCCESS	+4.0	
2020-12-30 13:27:35,328	[DEBUG]	
2020-12-30 13:27:35,329	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:27:35,330	[INFO]	59	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:27:36,066	[INFO]	60	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:27:36,067	[INFO]	61	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:27:37,027	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:27:40,121	[INFO]	63	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:27:40,122	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:27:41,085	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:27:41,859	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:27:45,040	[INFO]	67	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 13:27:45,791	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:27:46,726	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:27:51,018	[INFO]	70	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:27:51,730	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:27:51,734	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:27:52,652	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:27:52,653	[INFO]	74	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:27:52,653	[DEBUG]	
2020-12-30 13:27:53,392	[INFO]	75	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:27:54,147	[INFO]	76	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:27:54,149	[INFO]	77	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:27:54,893	[INFO]	78	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:27:58,206	[INFO]	79	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:27:58,207	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:27:58,208	[INFO]	80	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:27:58,209	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:27:58,959	[INFO]	81	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:27:59,898	[INFO]	82	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:27:59,900	[INFO]	83	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 13:27:59,900	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:28:00,659	[INFO]	84	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:28:00,661	[INFO]	85	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:28:00,661	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:28:01,431	[INFO]	86	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:28:02,336	[INFO]	87	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:28:02,338	[INFO]	88	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:28:02,338	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:28:15,562	[INFO]	89	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:28:15,563	[INFO]	90	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:28:15,564	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:28:15,564	[INFO]	91	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:28:15,565	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:28:16,427	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:28:17,368	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:28:18,312	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:28:18,314	[INFO]	95	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:28:18,314	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:28:21,601	[INFO]	96	SUCCESS	 8.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 13:28:21,602	[INFO]	97	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:28:24,833	[INFO]	98	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:28:25,589	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:28:25,591	[INFO]	100	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:28:25,591	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:28:25,592	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:28:28,884	[INFO]	102	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 13:28:29,820	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:28:30,745	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:28:30,747	[INFO]	105	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:28:30,748	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:28:30,748	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:28:30,749	[INFO]	107	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:28:30,750	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:28:31,677	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:28:32,447	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:28:32,448	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:28:32,449	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:28:32,450	[INFO]	112	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:28:32,450	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:28:32,451	[INFO]	113	SUCCESS	+4.0	
2020-12-30 13:28:32,451	[DEBUG]	
2020-12-30 13:28:33,374	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:28:34,306	[INFO]	115	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:28:35,233	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:28:35,235	[INFO]	117	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:28:35,236	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:28:36,174	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:28:36,944	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:28:37,714	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:28:38,646	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:28:39,583	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:28:40,663	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:28:41,789	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:28:42,793	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:28:42,795	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:28:43,612	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:28:44,432	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:28:47,818	[INFO]	130	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:28:47,819	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 13:28:47,820	[INFO]	131	SUCCESS	+4.0	
2020-12-30 13:28:47,820	[DEBUG]	
2020-12-30 13:28:47,821	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:28:47,822	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:28:48,751	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:28:52,183	[INFO]	135	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:28:52,184	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:28:52,185	[INFO]	136	SUCCESS	+4.0	
2020-12-30 13:28:52,185	[DEBUG]	
2020-12-30 13:28:52,960	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:28:52,962	[INFO]	138	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:28:52,962	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:28:52,963	[INFO]	139	SUCCESS	+4.0	
2020-12-30 13:28:52,963	[DEBUG]	
2020-12-30 13:28:53,712	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:28:56,863	[INFO]	141	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 13:28:56,865	[INFO]	142	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:28:56,865	[DEBUG]	
2020-12-30 13:28:57,779	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:28:57,781	[INFO]	144	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:28:57,781	[INFO]	145	SUCCESS	+4.0	
2020-12-30 13:28:57,782	[DEBUG]	
2020-12-30 13:29:01,005	[INFO]	146	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:29:04,379	[INFO]	147	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:29:04,379	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:29:04,380	[INFO]	148	SUCCESS	+4.0	
2020-12-30 13:29:04,380	[DEBUG]	
2020-12-30 13:29:05,285	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:29:06,230	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:29:09,487	[INFO]	151	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 13:29:10,229	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:29:11,152	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:29:11,154	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:29:12,087	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:29:12,089	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:29:12,090	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:29:16,377	[INFO]	158	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:29:16,378	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:29:17,273	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:29:17,275	[INFO]	161	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:29:17,275	[DEBUG]	
2020-12-30 13:29:30,873	[INFO]	162	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:29:30,874	[INFO]	163	SUCCESS	+4.0	
2020-12-30 13:29:30,874	[DEBUG]	
2020-12-30 13:29:30,875	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:29:31,778	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:29:32,539	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:29:33,492	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:29:34,518	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:29:34,520	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:29:35,322	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:29:36,269	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:29:36,270	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:29:37,225	[INFO]	173	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:29:38,202	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:29:41,494	[INFO]	175	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:29:42,451	[INFO]	176	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:29:43,246	[INFO]	177	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:29:44,178	[INFO]	178	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:29:44,179	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:29:44,940	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:29:49,468	[INFO]	181	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:29:49,469	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:29:49,470	[INFO]	182	SUCCESS	+4.0	
2020-12-30 13:29:49,470	[DEBUG]	
2020-12-30 13:29:50,349	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:29:50,351	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:29:53,543	[INFO]	185	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 13:29:54,465	[INFO]	186	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:29:55,405	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:29:56,347	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:29:57,094	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:29:57,095	[INFO]	190	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:29:57,096	[DEBUG]	
2020-12-30 13:29:57,096	[INFO]	191	SUCCESS	+4.0	
2020-12-30 13:29:57,096	[DEBUG]	
2020-12-30 13:29:57,097	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:29:58,031	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:29:58,958	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:29:59,924	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:30:03,214	[INFO]	196	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 13:30:16,591	[INFO]	197	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:30:17,305	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:30:18,042	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:30:18,786	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:30:18,787	[INFO]	201	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:30:18,788	[DEBUG]	
2020-12-30 13:30:22,159	[INFO]	202	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:30:22,160	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:30:22,161	[INFO]	203	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:30:22,161	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:30:22,161	[INFO]	204	SUCCESS	+4.0	
2020-12-30 13:30:22,162	[DEBUG]	
2020-12-30 13:30:22,162	[INFO]	205	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:30:22,163	[INFO]	206	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:30:22,163	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:30:25,418	[INFO]	207	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 13:30:25,419	[INFO]	208	SUCCESS	+4.0	
2020-12-30 13:30:25,419	[DEBUG]	
2020-12-30 13:30:25,420	[INFO]	209	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:30:28,762	[INFO]	210	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 13:30:29,699	[INFO]	211	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:30:29,700	[INFO]	212	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:30:30,656	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:30:31,591	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:30:32,534	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:30:33,490	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:30:33,491	[INFO]	217	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:30:33,491	[DEBUG]	
2020-12-30 13:30:33,492	[INFO]	218	SUCCESS	+4.0	
2020-12-30 13:30:33,492	[DEBUG]	
2020-12-30 13:30:34,445	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:30:35,542	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:30:36,871	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:30:37,940	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:30:39,171	[INFO]	223	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:30:42,502	[INFO]	224	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 13:30:46,017	[INFO]	225	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:30:46,922	[INFO]	226	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:30:46,924	[INFO]	227	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:30:46,924	[DEBUG]	
2020-12-30 13:30:47,693	[INFO]	228	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:30:47,694	[INFO]	229	SUCCESS	+4.0	
2020-12-30 13:30:47,694	[DEBUG]	
2020-12-30 13:30:51,360	[INFO]	230	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:30:51,361	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:30:51,362	[INFO]	231	SUCCESS	+4.0	
2020-12-30 13:30:51,362	[DEBUG]	
2020-12-30 13:30:52,278	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:30:53,233	[INFO]	233	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:30:54,191	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:30:58,484	[INFO]	235	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:30:59,352	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:31:00,148	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:31:03,516	[INFO]	238	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:31:04,449	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:31:04,452	[INFO]	240	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:31:04,452	[DEBUG]	
2020-12-30 13:31:04,453	[INFO]	241	SUCCESS	+4.0	
2020-12-30 13:31:04,454	[DEBUG]	
2020-12-30 13:31:04,456	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:31:04,457	[INFO]	243	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:31:04,458	[DEBUG]	
2020-12-30 13:31:17,899	[INFO]	244	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:31:17,900	[INFO]	245	SUCCESS	+4.0	
2020-12-30 13:31:17,900	[DEBUG]	
2020-12-30 13:31:17,901	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:31:18,794	[INFO]	247	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:31:18,795	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:31:18,796	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:31:19,729	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:31:20,678	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:31:20,681	[INFO]	252	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:31:20,682	[DEBUG]	
2020-12-30 13:31:21,461	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:31:21,462	[INFO]	254	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:31:21,463	[DEBUG]	
2020-12-30 13:31:22,383	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:31:22,384	[INFO]	256	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:31:22,384	[DEBUG]	
2020-12-30 13:31:22,385	[INFO]	257	SUCCESS	+4.0	
2020-12-30 13:31:22,385	[DEBUG]	
2020-12-30 13:31:23,332	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:31:24,269	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:31:24,271	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:31:28,597	[INFO]	261	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:31:33,069	[INFO]	262	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:31:33,070	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:31:33,951	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:31:33,952	[INFO]	264	SUCCESS	+4.0	
2020-12-30 13:31:33,953	[DEBUG]	
2020-12-30 13:31:33,954	[INFO]	265	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:31:33,954	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:31:33,955	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:31:34,886	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:31:34,887	[INFO]	269	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:31:34,887	[DEBUG]	
2020-12-30 13:31:34,888	[INFO]	270	SUCCESS	+4.0	
2020-12-30 13:31:34,888	[DEBUG]	
2020-12-30 13:31:34,889	[INFO]	271	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:31:38,283	[INFO]	272	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:31:38,284	[INFO]	273	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:31:39,022	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:31:39,025	[INFO]	275	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:31:39,025	[DEBUG]	
2020-12-30 13:31:39,027	[INFO]	276	SUCCESS	+4.0	
2020-12-30 13:31:39,027	[DEBUG]	
2020-12-30 13:31:39,774	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:31:40,729	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:31:43,924	[INFO]	279	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 13:31:43,925	[INFO]	280	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 13:31:47,098	[INFO]	281	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:31:50,487	[INFO]	282	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:31:51,393	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:31:52,338	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:31:52,339	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:31:52,340	[INFO]	286	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:31:52,340	[DEBUG]	
2020-12-30 13:31:52,341	[INFO]	287	SUCCESS	+4.0	
2020-12-30 13:31:52,341	[DEBUG]	
2020-12-30 13:31:53,100	[INFO]	288	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:31:54,075	[INFO]	289	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:31:57,416	[INFO]	290	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:31:57,417	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 13:31:58,173	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:31:58,174	[INFO]	292	SUCCESS	+4.0	
2020-12-30 13:31:58,174	[DEBUG]	
2020-12-30 13:32:01,381	[INFO]	293	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 13:32:01,383	[INFO]	294	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:32:02,142	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:32:02,143	[INFO]	296	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:32:03,065	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:32:03,835	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:32:04,592	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:32:04,593	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:32:05,349	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:32:08,685	[INFO]	302	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:32:08,687	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:32:08,688	[INFO]	303	SUCCESS	+4.0	
2020-12-30 13:32:08,688	[DEBUG]	
2020-12-30 13:32:09,440	[INFO]	304	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:32:10,370	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:32:13,747	[INFO]	306	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:32:13,748	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:32:14,691	[INFO]	308	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:32:15,467	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:32:15,468	[INFO]	310	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:32:15,468	[DEBUG]	
2020-12-30 13:32:15,469	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:32:15,469	[INFO]	312	SUCCESS	+4.0	
2020-12-30 13:32:15,470	[DEBUG]	
2020-12-30 13:32:18,563	[INFO]	313	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:32:18,564	[INFO]	314	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 13:32:18,565	[INFO]	315	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:32:18,565	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 13:32:18,566	[INFO]	316	SUCCESS	+4.0	
2020-12-30 13:32:18,566	[DEBUG]	
2020-12-30 13:32:19,316	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:32:19,318	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:32:20,228	[INFO]	319	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:32:21,182	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:32:22,147	[INFO]	321	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:32:22,916	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:32:23,853	[INFO]	323	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:32:23,855	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:32:23,856	[INFO]	325	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:32:23,857	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:32:23,858	[INFO]	327	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:32:23,858	[DEBUG]	
2020-12-30 13:32:23,859	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:32:23,859	[INFO]	329	SUCCESS	+4.0	
2020-12-30 13:32:23,859	[DEBUG]	
2020-12-30 13:32:24,802	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:32:25,739	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:32:26,680	[INFO]	332	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:32:26,682	[INFO]	333	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 13:32:27,450	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:32:28,234	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:32:31,373	[INFO]	336	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:32:31,374	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:32:32,294	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:32:35,681	[INFO]	339	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:32:35,682	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:32:35,683	[INFO]	340	SUCCESS	+4.0	
2020-12-30 13:32:35,683	[DEBUG]	
2020-12-30 13:32:36,613	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:32:37,546	[INFO]	342	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:32:38,469	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:32:39,402	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:32:43,126	[INFO]	345	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:32:43,127	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:32:43,128	[INFO]	346	SUCCESS	+4.0	
2020-12-30 13:32:43,128	[DEBUG]	
2020-12-30 13:32:43,876	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:32:47,266	[INFO]	348	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:32:47,266	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:32:48,254	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:32:48,255	[INFO]	350	SUCCESS	+4.0	
2020-12-30 13:32:48,256	[DEBUG]	
2020-12-30 13:32:51,622	[INFO]	351	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:32:52,386	[INFO]	352	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:32:53,314	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:32:54,078	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:32:54,831	[INFO]	355	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:32:54,832	[INFO]	356	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:32:54,832	[DEBUG]	
2020-12-30 13:32:54,833	[INFO]	357	SUCCESS	+4.0	
2020-12-30 13:32:54,833	[DEBUG]	
2020-12-30 13:32:54,834	[INFO]	358	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:32:54,834	[DEBUG]	
2020-12-30 13:32:54,834	[INFO]	359	SUCCESS	+4.0	
2020-12-30 13:32:54,834	[DEBUG]	
2020-12-30 13:32:54,835	[INFO]	360	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:32:54,836	[INFO]	361	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:32:54,837	[INFO]	362	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:32:54,837	[DEBUG]	
2020-12-30 13:32:55,744	[INFO]	363	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:32:55,745	[INFO]	364	SUCCESS	+4.0	
2020-12-30 13:32:55,745	[DEBUG]	
2020-12-30 13:32:56,508	[INFO]	365	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:32:57,238	[INFO]	366	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:32:57,239	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:32:57,240	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:32:57,241	[INFO]	369	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:32:58,189	[INFO]	370	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:32:58,190	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:32:59,127	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:32:59,129	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:32:59,129	[INFO]	374	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:33:00,089	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:33:01,042	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:33:01,044	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:33:01,984	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:33:01,985	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:33:05,337	[INFO]	380	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:33:05,338	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:33:05,339	[INFO]	381	SUCCESS	+4.0	
2020-12-30 13:33:05,339	[DEBUG]	
2020-12-30 13:33:05,340	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:33:06,260	[INFO]	383	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:33:09,441	[INFO]	384	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:33:10,206	[INFO]	385	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:33:11,118	[INFO]	386	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:33:11,119	[INFO]	387	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:33:11,120	[INFO]	388	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:33:11,120	[DEBUG]	
2020-12-30 13:33:11,121	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:33:11,122	[INFO]	390	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:33:11,122	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:33:12,072	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:33:16,389	[INFO]	392	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:33:17,255	[INFO]	393	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:33:17,256	[INFO]	394	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:33:17,257	[DEBUG]	
2020-12-30 13:33:18,187	[INFO]	395	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:33:18,188	[INFO]	396	SUCCESS	+4.0	
2020-12-30 13:33:18,188	[DEBUG]	
2020-12-30 13:33:19,139	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:33:22,421	[INFO]	398	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 13:33:23,312	[INFO]	399	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:33:23,313	[INFO]	400	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:33:23,314	[DEBUG]	
2020-12-30 13:33:23,314	[INFO]	401	SUCCESS	+4.0	
2020-12-30 13:33:23,314	[DEBUG]	
2020-12-30 13:33:24,091	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:33:27,213	[INFO]	403	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:33:28,005	[INFO]	404	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:33:28,006	[INFO]	405	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:33:28,006	[DEBUG]	
2020-12-30 13:33:28,007	[INFO]	406	SUCCESS	+4.0	
2020-12-30 13:33:28,007	[DEBUG]	
2020-12-30 13:33:28,008	[INFO]	407	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:33:28,008	[DEBUG]	
2020-12-30 13:33:28,008	[INFO]	408	SUCCESS	+4.0	
2020-12-30 13:33:28,009	[DEBUG]	
2020-12-30 13:33:28,813	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:33:28,814	[INFO]	410	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:33:28,814	[DEBUG]	
2020-12-30 13:33:28,815	[INFO]	411	SUCCESS	+4.0	
2020-12-30 13:33:28,815	[DEBUG]	
2020-12-30 13:33:29,749	[INFO]	412	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:33:30,692	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:33:31,634	[INFO]	414	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:33:34,723	[INFO]	415	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:33:38,995	[INFO]	416	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:33:39,880	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:33:39,882	[INFO]	418	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:33:39,883	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:33:43,127	[INFO]	420	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 13:33:43,128	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:33:46,465	[INFO]	422	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:33:49,805	[INFO]	423	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:33:49,806	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:33:49,807	[INFO]	424	SUCCESS	+4.0	
2020-12-30 13:33:49,807	[DEBUG]	
2020-12-30 13:33:49,808	[INFO]	425	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:33:49,808	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:33:49,809	[INFO]	426	SUCCESS	+4.0	
2020-12-30 13:33:49,809	[DEBUG]	
2020-12-30 13:33:49,810	[INFO]	427	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:33:49,810	[INFO]	428	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:33:49,811	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:33:50,575	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:33:51,502	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:33:52,275	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:33:52,277	[INFO]	432	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:33:52,277	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:33:52,278	[INFO]	433	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:33:52,278	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:33:52,279	[INFO]	434	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:33:52,279	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:33:52,280	[INFO]	435	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:33:52,280	[DEBUG]	
2020-12-30 13:33:52,281	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:33:52,282	[INFO]	437	SUCCESS	+4.0	
2020-12-30 13:33:52,282	[DEBUG]	
2020-12-30 13:33:55,651	[INFO]	438	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:33:55,652	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:33:56,593	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:33:56,594	[INFO]	440	SUCCESS	+4.0	
2020-12-30 13:33:56,595	[DEBUG]	
2020-12-30 13:33:59,926	[INFO]	441	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:33:59,927	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:33:59,928	[INFO]	442	SUCCESS	+4.0	
2020-12-30 13:33:59,928	[DEBUG]	
2020-12-30 13:34:00,670	[INFO]	443	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:34:04,030	[INFO]	444	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:34:04,031	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:34:04,781	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:34:04,782	[INFO]	446	SUCCESS	+4.0	
2020-12-30 13:34:04,782	[DEBUG]	
2020-12-30 13:34:05,714	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:34:06,658	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:34:06,660	[INFO]	449	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:34:06,660	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:34:06,661	[INFO]	450	SUCCESS	+4.0	
2020-12-30 13:34:06,661	[DEBUG]	
2020-12-30 13:34:07,631	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:34:08,562	[INFO]	452	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:34:09,482	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:34:10,435	[INFO]	454	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:34:13,822	[INFO]	455	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:34:13,823	[INFO]	456	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:34:13,824	[DEBUG]	
2020-12-30 13:34:14,752	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:34:15,508	[INFO]	458	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:34:15,509	[INFO]	459	SUCCESS	+4.0	
2020-12-30 13:34:15,509	[DEBUG]	
2020-12-30 13:34:16,428	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:34:17,367	[INFO]	461	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:34:20,553	[INFO]	462	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:34:20,555	[INFO]	463	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:34:21,288	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:34:21,289	[INFO]	465	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:34:21,290	[INFO]	466	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:34:21,290	[DEBUG]	
2020-12-30 13:34:22,194	[INFO]	467	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:34:22,195	[INFO]	468	SUCCESS	+4.0	
2020-12-30 13:34:22,195	[DEBUG]	
2020-12-30 13:34:23,158	[INFO]	469	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:34:23,159	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:34:24,183	[INFO]	471	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:34:24,184	[INFO]	472	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:34:24,185	[DEBUG]	
2020-12-30 13:34:24,185	[INFO]	473	SUCCESS	+4.0	
2020-12-30 13:34:24,185	[DEBUG]	
2020-12-30 13:34:24,186	[INFO]	474	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:34:24,187	[INFO]	475	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:34:27,317	[INFO]	476	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:34:28,086	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:34:28,087	[INFO]	478	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:34:28,845	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:34:29,791	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:34:30,556	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:34:30,557	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:34:33,888	[INFO]	483	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 13:34:34,815	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:34:34,816	[INFO]	485	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:34:34,817	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:34:34,817	[INFO]	486	SUCCESS	+4.0	
2020-12-30 13:34:34,818	[DEBUG]	
2020-12-30 13:34:34,819	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:34:34,819	[INFO]	488	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:34:34,820	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:34:34,821	[INFO]	490	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:34:34,822	[INFO]	491	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:34:34,822	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:34:35,577	[INFO]	492	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:34:35,578	[INFO]	493	SUCCESS	+4.0	
2020-12-30 13:34:35,578	[DEBUG]	
2020-12-30 13:34:35,579	[INFO]	494	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 13:34:36,534	[INFO]	495	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:34:36,535	[INFO]	496	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:34:37,306	[INFO]	497	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:34:40,698	[INFO]	498	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:34:40,699	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:34:43,881	[INFO]	499	SUCCESS	 8.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 13:34:43,883	[INFO]	500	SUCCESS	+4.0	
2020-12-30 13:34:43,884	[DEBUG]	
2020-12-30 13:34:43,885	[INFO]	==== END ====
2020-12-30 13:34:43,885	[INFO]	Reason: step budget
2020-12-30 13:34:43,886	[INFO]	
2020-12-30 13:34:43,886	[INFO]	========== EPOCH 17 ==========
2020-12-30 13:34:43,887	[INFO]	==== WARMUP ====
2020-12-30 13:34:47,193	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 13:34:47,193	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:34:50,586	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 13:34:50,586	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:34:53,940	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 13:34:53,940	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:34:57,266	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-30 13:34:57,267	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:34:57,267	[INFO]	==== START ====
2020-12-30 13:34:58,217	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:34:59,190	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:35:02,569	[INFO]	3	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:35:03,509	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:35:04,447	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:35:05,194	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:35:05,195	[INFO]	7	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:35:05,195	[DEBUG]	
2020-12-30 13:35:08,449	[INFO]	8	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 13:35:08,450	[INFO]	9	SUCCESS	+4.0	
2020-12-30 13:35:08,450	[DEBUG]	
2020-12-30 13:35:09,215	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:35:10,127	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:35:13,519	[INFO]	12	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:35:13,520	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:35:13,521	[INFO]	13	SUCCESS	+4.0	
2020-12-30 13:35:13,521	[DEBUG]	
2020-12-30 13:35:14,443	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:35:15,383	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:35:16,155	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:35:16,156	[INFO]	17	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:35:16,156	[DEBUG]	
2020-12-30 13:35:16,157	[INFO]	18	SUCCESS	+4.0	
2020-12-30 13:35:16,157	[DEBUG]	
2020-12-30 13:35:16,914	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:35:17,656	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:35:20,765	[INFO]	21	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:35:21,702	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:35:22,625	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:35:23,561	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:35:24,523	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:35:25,449	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:35:26,401	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:35:26,402	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:35:27,150	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:35:28,075	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:35:28,830	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:35:28,833	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:35:32,212	[INFO]	33	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:35:32,213	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:35:32,213	[INFO]	34	SUCCESS	+4.0	
2020-12-30 13:35:32,214	[DEBUG]	
2020-12-30 13:35:33,131	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:35:33,133	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:35:33,133	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:35:46,688	[INFO]	38	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:35:47,388	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:35:48,299	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:35:49,223	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:35:50,162	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:35:50,164	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:35:53,321	[INFO]	44	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:35:54,250	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:35:54,251	[INFO]	46	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:35:54,251	[DEBUG]	
2020-12-30 13:35:55,024	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:35:55,025	[INFO]	48	SUCCESS	+4.0	
2020-12-30 13:35:55,025	[DEBUG]	
2020-12-30 13:35:55,761	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:35:56,678	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:35:57,620	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:35:58,374	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:35:59,309	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:36:00,236	[INFO]	54	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:36:00,237	[INFO]	55	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:36:00,238	[DEBUG]	
2020-12-30 13:36:00,238	[INFO]	56	SUCCESS	+4.0	
2020-12-30 13:36:00,238	[DEBUG]	
2020-12-30 13:36:01,191	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:36:04,359	[INFO]	58	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 13:36:04,360	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:36:04,361	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:36:05,314	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:36:06,235	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:36:07,160	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:36:08,109	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:36:08,862	[INFO]	65	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:36:09,613	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:36:10,533	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:36:13,886	[INFO]	68	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:36:13,887	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:36:13,888	[INFO]	69	SUCCESS	+4.0	
2020-12-30 13:36:13,888	[DEBUG]	
2020-12-30 13:36:14,657	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:36:15,578	[INFO]	71	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:36:18,998	[INFO]	72	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:36:18,999	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:36:19,728	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:36:20,645	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:36:21,553	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:36:21,554	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:36:21,555	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:36:22,474	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:36:23,251	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:36:24,227	[INFO]	81	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:36:27,405	[INFO]	82	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:36:30,762	[INFO]	83	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:36:30,763	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:36:31,498	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:36:32,417	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:36:33,188	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:36:33,189	[INFO]	87	SUCCESS	+4.0	
2020-12-30 13:36:33,189	[DEBUG]	
2020-12-30 13:36:34,112	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:36:34,876	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:36:34,877	[INFO]	90	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:36:34,877	[DEBUG]	
2020-12-30 13:36:34,878	[INFO]	91	SUCCESS	+4.0	
2020-12-30 13:36:34,878	[DEBUG]	
2020-12-30 13:36:38,217	[INFO]	92	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:36:38,218	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 13:36:38,219	[INFO]	93	SUCCESS	+4.0	
2020-12-30 13:36:38,219	[DEBUG]	
2020-12-30 13:36:38,220	[INFO]	94	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:36:39,154	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:36:42,408	[INFO]	96	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:36:42,410	[INFO]	97	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 13:36:42,411	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:36:42,412	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:36:43,165	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:36:44,104	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:36:47,422	[INFO]	102	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:36:48,168	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:36:51,511	[INFO]	104	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:36:51,511	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 13:36:51,512	[INFO]	105	SUCCESS	+4.0	
2020-12-30 13:36:51,512	[DEBUG]	
2020-12-30 13:36:51,513	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:36:52,427	[INFO]	107	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:36:53,358	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:36:54,291	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:36:58,788	[INFO]	110	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:36:58,788	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:36:59,661	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:37:00,573	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:37:00,575	[INFO]	113	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:37:00,575	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:37:00,576	[INFO]	114	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:37:00,577	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:37:00,578	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:37:01,340	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:37:01,341	[INFO]	117	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:37:01,341	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:37:02,095	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:37:05,217	[INFO]	119	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:37:05,218	[INFO]	120	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:37:05,219	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:37:05,219	[INFO]	121	SUCCESS	+4.0	
2020-12-30 13:37:05,220	[DEBUG]	
2020-12-30 13:37:06,141	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:37:07,083	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:37:07,848	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:37:08,793	[INFO]	125	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:37:09,706	[INFO]	126	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:37:10,641	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:37:10,643	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:37:10,643	[INFO]	129	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:37:10,644	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:37:10,644	[INFO]	130	SUCCESS	+4.0	
2020-12-30 13:37:10,645	[DEBUG]	
2020-12-30 13:37:11,586	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:37:12,344	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:37:13,107	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:37:13,829	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:37:13,830	[INFO]	135	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:37:13,830	[DEBUG]	
2020-12-30 13:37:13,831	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:37:13,831	[INFO]	137	SUCCESS	+4.0	
2020-12-30 13:37:13,832	[DEBUG]	
2020-12-30 13:37:13,833	[INFO]	138	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:37:13,833	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:37:13,833	[INFO]	139	SUCCESS	+4.0	
2020-12-30 13:37:13,834	[DEBUG]	
2020-12-30 13:37:13,834	[INFO]	140	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:37:13,834	[DEBUG]	
2020-12-30 13:37:13,835	[INFO]	141	SUCCESS	+4.0	
2020-12-30 13:37:13,835	[DEBUG]	
2020-12-30 13:37:14,747	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:37:15,684	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:37:16,617	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:37:17,569	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:37:18,501	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:37:19,270	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:37:19,273	[INFO]	148	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:37:20,007	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:37:23,202	[INFO]	150	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:37:24,157	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:37:27,545	[INFO]	152	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:37:27,546	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:37:27,547	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:37:28,475	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:37:28,477	[INFO]	156	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:37:28,477	[DEBUG]	
2020-12-30 13:37:28,477	[INFO]	157	SUCCESS	+4.0	
2020-12-30 13:37:28,478	[DEBUG]	
2020-12-30 13:37:29,433	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:37:30,350	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:37:31,279	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:37:34,635	[INFO]	161	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:37:34,636	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:37:35,561	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:37:36,485	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:37:36,486	[INFO]	164	SUCCESS	+4.0	
2020-12-30 13:37:36,486	[DEBUG]	
2020-12-30 13:37:39,712	[INFO]	165	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 13:37:40,473	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:37:40,474	[INFO]	167	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 13:37:41,473	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:37:44,809	[INFO]	169	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:37:44,810	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:37:44,810	[INFO]	170	SUCCESS	+4.0	
2020-12-30 13:37:44,811	[DEBUG]	
2020-12-30 13:37:44,811	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:37:48,091	[INFO]	172	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:37:48,093	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:37:49,074	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:37:49,076	[INFO]	174	SUCCESS	+4.0	
2020-12-30 13:37:49,077	[DEBUG]	
2020-12-30 13:37:50,011	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:37:53,358	[INFO]	176	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:37:53,358	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 13:37:53,359	[INFO]	177	SUCCESS	+4.0	
2020-12-30 13:37:53,359	[DEBUG]	
2020-12-30 13:37:54,284	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:37:55,053	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:37:55,959	[INFO]	180	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:37:55,961	[INFO]	181	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:37:55,961	[DEBUG]	
2020-12-30 13:37:56,730	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:37:56,731	[INFO]	183	SUCCESS	+4.0	
2020-12-30 13:37:56,731	[DEBUG]	
2020-12-30 13:37:57,468	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:37:57,469	[INFO]	185	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:37:57,470	[DEBUG]	
2020-12-30 13:37:57,470	[INFO]	186	SUCCESS	+4.0	
2020-12-30 13:37:57,470	[DEBUG]	
2020-12-30 13:37:58,400	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:37:59,370	[INFO]	188	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:37:59,371	[INFO]	189	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:37:59,371	[DEBUG]	
2020-12-30 13:37:59,371	[INFO]	190	SUCCESS	+4.0	
2020-12-30 13:37:59,372	[DEBUG]	
2020-12-30 13:38:00,135	[INFO]	191	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:38:00,136	[INFO]	192	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:38:00,136	[DEBUG]	
2020-12-30 13:38:00,137	[INFO]	193	SUCCESS	+4.0	
2020-12-30 13:38:00,137	[DEBUG]	
2020-12-30 13:38:00,138	[INFO]	194	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 13:38:00,138	[INFO]	195	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:38:00,139	[DEBUG]	
2020-12-30 13:38:00,139	[INFO]	196	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:38:00,140	[INFO]	197	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:38:00,141	[INFO]	198	SUCCESS	+4.0	
2020-12-30 13:38:00,141	[DEBUG]	
2020-12-30 13:38:00,142	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:38:01,077	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:38:02,009	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:38:02,010	[INFO]	202	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:38:02,010	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:38:02,011	[INFO]	203	SUCCESS	+4.0	
2020-12-30 13:38:02,011	[DEBUG]	
2020-12-30 13:38:02,952	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:38:03,729	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:38:04,482	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:38:04,483	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:38:07,850	[INFO]	208	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:38:07,851	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:38:07,852	[INFO]	209	SUCCESS	+4.0	
2020-12-30 13:38:07,852	[DEBUG]	
2020-12-30 13:38:08,786	[INFO]	210	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:38:08,787	[INFO]	211	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:38:09,702	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:38:10,642	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:38:11,396	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:38:12,329	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:38:12,330	[INFO]	216	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:38:13,295	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:38:14,227	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:38:15,181	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:38:15,942	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:38:29,277	[INFO]	221	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:38:30,150	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:38:33,884	[INFO]	223	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:38:33,885	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:38:34,637	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:38:34,638	[INFO]	225	SUCCESS	+4.0	
2020-12-30 13:38:34,638	[DEBUG]	
2020-12-30 13:38:35,538	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:38:36,503	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:38:37,429	[INFO]	228	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:38:37,430	[INFO]	229	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 13:38:38,213	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:38:38,214	[INFO]	231	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:38:38,215	[DEBUG]	
2020-12-30 13:38:39,122	[INFO]	232	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:38:39,123	[INFO]	233	SUCCESS	+4.0	
2020-12-30 13:38:39,124	[DEBUG]	
2020-12-30 13:38:39,124	[INFO]	234	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:38:39,125	[DEBUG]	
2020-12-30 13:38:39,125	[INFO]	235	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:38:39,126	[DEBUG]	
2020-12-30 13:38:39,889	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:38:39,890	[INFO]	237	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:38:39,891	[DEBUG]	
2020-12-30 13:38:40,665	[INFO]	238	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:38:40,666	[INFO]	239	SUCCESS	+4.0	
2020-12-30 13:38:40,666	[DEBUG]	
2020-12-30 13:38:41,428	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:38:42,217	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:38:42,218	[INFO]	242	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:38:42,219	[DEBUG]	
2020-12-30 13:38:42,219	[INFO]	243	SUCCESS	+4.0	
2020-12-30 13:38:42,219	[DEBUG]	
2020-12-30 13:38:43,172	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:38:44,105	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:38:44,889	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:38:48,301	[INFO]	247	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:38:51,621	[INFO]	248	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 13:38:52,378	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:38:55,701	[INFO]	250	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:38:55,701	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:38:55,702	[INFO]	251	SUCCESS	+4.0	
2020-12-30 13:38:55,702	[DEBUG]	
2020-12-30 13:38:56,630	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:38:57,564	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:38:57,565	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:38:57,566	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:38:58,495	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:38:59,279	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:38:59,280	[INFO]	258	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:38:59,281	[DEBUG]	
2020-12-30 13:39:00,019	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:39:00,021	[INFO]	260	SUCCESS	+4.0	
2020-12-30 13:39:00,021	[DEBUG]	
2020-12-30 13:39:00,022	[INFO]	261	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:39:00,022	[DEBUG]	
2020-12-30 13:39:00,023	[INFO]	262	SUCCESS	+4.0	
2020-12-30 13:39:00,023	[DEBUG]	
2020-12-30 13:39:00,024	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:39:00,962	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:39:04,348	[INFO]	265	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:39:04,349	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:39:07,701	[INFO]	266	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:39:07,702	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
--- 14,26 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:39:08,457	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:39:11,831	[INFO]	268	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:39:11,832	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
--- 14,27 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             String snd = longest_common_subsequence(a.substring(1), b);
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:39:11,833	[INFO]	269	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:39:11,834	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
--- 14,26 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:39:11,835	[INFO]	270	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:39:11,835	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:39:11,836	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:39:12,590	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:39:12,592	[INFO]	273	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:39:12,592	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:39:12,593	[INFO]	274	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:39:12,593	[DEBUG]	
2020-12-30 13:39:13,337	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:39:13,338	[INFO]	276	SUCCESS	+4.0	
2020-12-30 13:39:13,339	[DEBUG]	
2020-12-30 13:39:16,499	[INFO]	277	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:39:17,229	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:39:18,132	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:39:19,073	[INFO]	280	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:39:20,019	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:39:20,786	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:39:21,553	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:39:22,459	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:39:22,461	[INFO]	285	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:39:22,461	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:39:22,462	[INFO]	286	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:39:22,463	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:39:22,463	[INFO]	287	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:39:22,464	[DEBUG]	
2020-12-30 13:39:22,464	[INFO]	288	SUCCESS	+4.0	
2020-12-30 13:39:22,464	[DEBUG]	
2020-12-30 13:39:22,465	[INFO]	289	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:39:22,466	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:39:22,466	[INFO]	290	SUCCESS	+4.0	
2020-12-30 13:39:22,466	[DEBUG]	
2020-12-30 13:39:25,902	[INFO]	291	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 13:39:29,247	[INFO]	292	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:39:29,248	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:39:29,249	[INFO]	293	SUCCESS	+4.0	
2020-12-30 13:39:29,249	[DEBUG]	
2020-12-30 13:39:30,184	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:39:31,112	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:39:34,784	[INFO]	296	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:39:34,784	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:39:38,407	[INFO]	297	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 13:39:38,408	[INFO]	298	SUCCESS	+4.0	
2020-12-30 13:39:38,409	[DEBUG]	
2020-12-30 13:39:41,800	[INFO]	299	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:39:41,802	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:39:42,732	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:39:43,677	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:39:44,428	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:39:44,429	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:39:48,998	[INFO]	305	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:39:48,998	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:39:48,999	[INFO]	306	SUCCESS	+4.0	
2020-12-30 13:39:48,999	[DEBUG]	
2020-12-30 13:39:49,862	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:39:49,864	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:39:50,797	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:39:54,146	[INFO]	310	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:39:54,146	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:39:57,500	[INFO]	311	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:39:57,501	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,26 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!         if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:39:58,243	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:40:01,890	[INFO]	313	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:40:01,891	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,27 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!         if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
!             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:40:05,600	[INFO]	314	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:40:05,601	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
--- 14,24 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:40:05,603	[INFO]	315	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:40:05,604	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
--- 14,24 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:40:06,355	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:40:06,356	[INFO]	317	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:40:06,357	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
--- 14,24 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:40:07,273	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:40:07,275	[INFO]	319	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:40:07,276	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
--- 14,24 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:40:11,013	[INFO]	320	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:40:11,014	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:40:11,920	[INFO]	321	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:40:11,921	[INFO]	322	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:40:11,921	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:40:11,922	[INFO]	323	SUCCESS	+4.0	
2020-12-30 13:40:11,922	[DEBUG]	
2020-12-30 13:40:15,009	[INFO]	324	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:40:15,010	[INFO]	325	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:40:15,011	[DEBUG]	
2020-12-30 13:40:15,930	[INFO]	326	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:40:15,931	[INFO]	327	SUCCESS	+4.0	
2020-12-30 13:40:15,932	[DEBUG]	
2020-12-30 13:40:16,685	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:40:17,609	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:40:20,941	[INFO]	330	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:40:21,874	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:40:21,875	[INFO]	332	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:40:21,875	[DEBUG]	
2020-12-30 13:40:21,876	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:40:22,803	[INFO]	334	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:40:23,540	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:40:37,690	[INFO]	336	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:40:37,691	[INFO]	337	SUCCESS	+4.0	
2020-12-30 13:40:37,692	[DEBUG]	
2020-12-30 13:40:42,083	[INFO]	338	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:40:43,427	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:40:43,429	[INFO]	340	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:40:43,429	[DEBUG]	
2020-12-30 13:40:44,405	[INFO]	341	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:40:44,407	[INFO]	342	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:40:45,196	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:40:45,198	[INFO]	344	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:40:45,198	[DEBUG]	
2020-12-30 13:40:45,199	[INFO]	345	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:40:45,199	[DEBUG]	
2020-12-30 13:40:45,981	[INFO]	346	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:40:46,898	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:40:46,899	[INFO]	348	SUCCESS	+4.0	
2020-12-30 13:40:46,899	[DEBUG]	
2020-12-30 13:40:50,201	[INFO]	349	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:40:50,956	[INFO]	350	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:40:51,899	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:40:52,703	[INFO]	352	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:40:53,632	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:40:54,400	[INFO]	354	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:40:54,401	[INFO]	355	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:40:55,311	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:40:56,227	[INFO]	357	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:40:57,177	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:40:57,945	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:40:57,947	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:40:57,948	[INFO]	361	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:40:58,890	[INFO]	362	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:40:58,891	[INFO]	363	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:40:58,892	[DEBUG]	
2020-12-30 13:40:58,892	[INFO]	364	SUCCESS	+4.0	
2020-12-30 13:40:58,892	[DEBUG]	
2020-12-30 13:40:59,851	[INFO]	365	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:41:02,986	[INFO]	366	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:41:03,931	[INFO]	367	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:41:04,890	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:41:08,067	[INFO]	369	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:41:11,433	[INFO]	370	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:41:11,434	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:41:11,435	[INFO]	371	SUCCESS	+4.0	
2020-12-30 13:41:11,435	[DEBUG]	
2020-12-30 13:41:12,204	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:41:12,949	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:41:13,685	[INFO]	374	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:41:14,629	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:41:15,552	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:41:16,314	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:41:17,223	[INFO]	378	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:41:20,346	[INFO]	379	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:41:21,309	[INFO]	380	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:41:22,244	[INFO]	381	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:41:23,175	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:41:24,140	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:41:25,086	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:41:25,088	[INFO]	385	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:41:25,858	[INFO]	386	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:41:26,769	[INFO]	387	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:41:26,771	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:41:27,694	[INFO]	389	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:41:27,695	[INFO]	390	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:41:27,696	[DEBUG]	
2020-12-30 13:41:27,696	[INFO]	391	SUCCESS	+4.0	
2020-12-30 13:41:27,696	[DEBUG]	
2020-12-30 13:41:28,660	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:41:28,661	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:41:29,612	[INFO]	394	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:41:29,614	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:41:30,567	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:41:31,511	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:41:32,447	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:41:33,401	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:41:33,403	[INFO]	400	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:41:33,403	[DEBUG]	
2020-12-30 13:41:33,403	[INFO]	401	SUCCESS	+4.0	
2020-12-30 13:41:33,404	[DEBUG]	
2020-12-30 13:41:34,156	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:41:35,096	[INFO]	403	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:41:36,041	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:41:36,808	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:41:36,809	[INFO]	406	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:41:36,809	[DEBUG]	
2020-12-30 13:41:36,810	[INFO]	407	SUCCESS	+4.0	
2020-12-30 13:41:36,810	[DEBUG]	
2020-12-30 13:41:41,156	[INFO]	408	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:41:41,157	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:41:42,036	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:41:42,037	[INFO]	411	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:41:42,808	[INFO]	412	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:41:46,166	[INFO]	413	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 13:41:47,110	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:41:50,473	[INFO]	415	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:41:50,474	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:41:50,475	[INFO]	416	SUCCESS	+4.0	
2020-12-30 13:41:50,475	[DEBUG]	
2020-12-30 13:41:51,367	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:41:52,144	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:41:53,070	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:41:53,827	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:41:57,120	[INFO]	421	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:41:57,121	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:41:58,049	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:41:58,818	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:42:01,919	[INFO]	424	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:42:01,921	[INFO]	425	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:42:01,921	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:42:02,863	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:42:03,628	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:42:03,630	[INFO]	428	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:42:03,631	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:42:03,632	[INFO]	429	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:42:03,632	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:42:04,543	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:42:07,634	[INFO]	431	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:42:10,792	[INFO]	432	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:42:10,795	[INFO]	433	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:42:10,795	[DEBUG]	
2020-12-30 13:42:11,557	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:42:12,475	[INFO]	435	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:42:13,430	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:42:13,431	[INFO]	437	SUCCESS	+4.0	
2020-12-30 13:42:13,431	[DEBUG]	
2020-12-30 13:42:14,198	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:42:14,199	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:42:14,200	[INFO]	440	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:42:14,200	[DEBUG]	
2020-12-30 13:42:14,201	[INFO]	441	SUCCESS	+4.0	
2020-12-30 13:42:14,201	[DEBUG]	
2020-12-30 13:42:15,134	[INFO]	442	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:42:16,043	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:42:16,997	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:42:20,363	[INFO]	445	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:42:20,364	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:42:21,131	[INFO]	446	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:42:21,132	[INFO]	447	SUCCESS	+4.0	
2020-12-30 13:42:21,132	[DEBUG]	
2020-12-30 13:42:21,133	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:42:21,874	[INFO]	449	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:42:22,806	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:42:22,807	[INFO]	451	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:42:26,200	[INFO]	452	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:42:26,201	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:42:26,202	[INFO]	453	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:42:26,202	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:42:26,955	[INFO]	454	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:42:26,957	[INFO]	455	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:42:26,957	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:42:30,323	[INFO]	456	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:42:30,324	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:42:30,325	[INFO]	457	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:42:30,326	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:42:31,259	[INFO]	458	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:42:32,038	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:42:32,971	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:42:33,933	[INFO]	461	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:42:33,934	[INFO]	462	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:42:33,935	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:42:33,936	[INFO]	463	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:42:33,936	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:42:37,311	[INFO]	464	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:42:37,312	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,22 ****
--- 14,31 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:42:37,313	[INFO]	465	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:42:37,314	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,22 ****
--- 14,31 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:42:38,261	[INFO]	466	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:42:39,172	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:42:40,118	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:42:40,948	[INFO]	469	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:42:44,354	[INFO]	470	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:42:44,355	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
--- 14,26 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:42:45,253	[INFO]	471	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:42:46,205	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:42:47,141	[INFO]	473	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:42:48,089	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:42:48,861	[INFO]	475	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:42:49,814	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:42:49,817	[INFO]	477	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:42:49,818	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:42:49,819	[INFO]	478	SUCCESS	+4.0	
2020-12-30 13:42:49,819	[DEBUG]	
2020-12-30 13:42:50,738	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:42:51,488	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:42:52,417	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:42:53,195	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:42:54,127	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:42:57,203	[INFO]	484	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:42:58,150	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:42:58,896	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:42:59,836	[INFO]	487	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:43:00,778	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:43:00,781	[INFO]	489	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:43:00,781	[DEBUG]	
2020-12-30 13:43:00,783	[INFO]	490	SUCCESS	+4.0	
2020-12-30 13:43:00,783	[DEBUG]	
2020-12-30 13:43:01,736	[INFO]	491	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:43:02,663	[INFO]	492	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:43:03,613	[INFO]	493	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:43:07,924	[INFO]	494	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:43:08,609	[INFO]	495	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:43:09,357	[INFO]	496	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:43:10,086	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:43:10,984	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:43:11,923	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:43:16,499	[INFO]	500	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:43:16,500	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:43:16,500	[INFO]	==== END ====
2020-12-30 13:43:16,500	[INFO]	Reason: step budget
2020-12-30 13:43:16,500	[INFO]	
2020-12-30 13:43:16,500	[INFO]	========== EPOCH 18 ==========
2020-12-30 13:43:16,501	[INFO]	==== WARMUP ====
2020-12-30 13:43:19,779	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 13:43:19,779	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:43:23,120	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 13:43:23,120	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:43:26,509	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 13:43:26,509	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:43:29,916	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-30 13:43:29,916	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:43:29,916	[INFO]	==== START ====
2020-12-30 13:43:30,867	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:43:31,805	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:43:32,596	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:43:32,598	[INFO]	4	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:43:32,599	[DEBUG]	
2020-12-30 13:43:32,600	[INFO]	5	SUCCESS	+4.0	
2020-12-30 13:43:32,600	[DEBUG]	
2020-12-30 13:43:33,526	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:43:36,900	[INFO]	7	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:43:36,901	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:43:40,121	[INFO]	8	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 13:43:40,124	[INFO]	9	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:43:40,125	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:43:40,126	[INFO]	10	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:43:40,127	[DEBUG]	
2020-12-30 13:43:40,906	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:43:41,828	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:43:42,739	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:43:42,740	[INFO]	14	SUCCESS	+4.0	
2020-12-30 13:43:42,741	[DEBUG]	
2020-12-30 13:43:46,122	[INFO]	15	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:43:46,123	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:43:46,124	[INFO]	16	SUCCESS	+4.0	
2020-12-30 13:43:46,124	[DEBUG]	
2020-12-30 13:43:49,455	[INFO]	17	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:43:49,457	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:43:49,458	[INFO]	18	SUCCESS	+4.0	
2020-12-30 13:43:49,459	[DEBUG]	
2020-12-30 13:43:50,241	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:43:51,189	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:43:51,191	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:43:51,929	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:43:51,930	[INFO]	23	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:43:51,931	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:43:51,931	[INFO]	24	SUCCESS	+4.0	
2020-12-30 13:43:51,931	[DEBUG]	
2020-12-30 13:43:51,932	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:43:52,908	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:44:06,223	[INFO]	27	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:44:07,090	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:44:07,843	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:44:07,845	[INFO]	30	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:44:07,846	[DEBUG]	
2020-12-30 13:44:08,774	[INFO]	31	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:44:08,777	[INFO]	32	SUCCESS	+4.0	
2020-12-30 13:44:08,777	[DEBUG]	
2020-12-30 13:44:08,779	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:44:09,710	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:44:09,711	[INFO]	35	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:44:09,711	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:44:09,712	[INFO]	36	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:44:09,713	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:44:10,639	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:44:11,591	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:44:11,595	[INFO]	39	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:44:11,596	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:44:12,383	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:44:13,126	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:44:13,127	[INFO]	42	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:44:13,127	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:44:14,060	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:44:14,061	[INFO]	44	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:44:14,061	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:44:14,062	[INFO]	45	SUCCESS	+4.0	
2020-12-30 13:44:14,062	[DEBUG]	
2020-12-30 13:44:14,830	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:44:15,785	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:44:19,004	[INFO]	48	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 13:44:19,936	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:44:20,713	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:44:21,643	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:44:22,566	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:44:23,518	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:44:24,325	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:44:25,234	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:44:28,931	[INFO]	56	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:44:28,932	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:44:32,661	[INFO]	57	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:44:32,662	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:44:32,663	[INFO]	58	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:44:32,663	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:44:33,383	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:44:34,134	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:44:34,135	[INFO]	61	SUCCESS	+4.0	
2020-12-30 13:44:34,135	[DEBUG]	
2020-12-30 13:44:37,589	[INFO]	62	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:44:37,590	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:44:37,591	[INFO]	63	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:44:37,591	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:44:37,592	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:44:37,593	[INFO]	65	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:44:37,594	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:44:37,595	[INFO]	66	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:44:37,595	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:44:38,336	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:44:38,338	[INFO]	68	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:44:38,338	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:44:38,339	[INFO]	69	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:44:38,340	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:44:38,341	[INFO]	70	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:44:38,341	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:44:39,253	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:44:40,180	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:44:40,182	[INFO]	73	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:44:40,182	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:44:40,183	[INFO]	74	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:44:40,184	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:44:40,990	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:44:45,301	[INFO]	76	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:44:46,183	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:44:46,185	[INFO]	78	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:44:46,185	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:44:46,924	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:44:46,925	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:44:47,857	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:44:48,807	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:44:49,767	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:44:49,768	[INFO]	84	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:44:49,769	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:44:50,695	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:44:50,696	[INFO]	86	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:44:50,697	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:44:50,698	[INFO]	87	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:44:50,698	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:44:50,699	[INFO]	88	SUCCESS	+4.0	
2020-12-30 13:44:50,699	[DEBUG]	
2020-12-30 13:44:53,819	[INFO]	89	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:44:57,137	[INFO]	90	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:44:57,138	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:44:58,065	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:44:58,066	[INFO]	92	SUCCESS	+4.0	
2020-12-30 13:44:58,066	[DEBUG]	
2020-12-30 13:45:01,433	[INFO]	93	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:45:01,434	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:45:02,374	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:45:03,140	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:45:04,112	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:45:04,113	[INFO]	97	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:45:04,114	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:45:04,114	[INFO]	98	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:45:04,115	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:45:04,115	[INFO]	99	SUCCESS	+4.0	
2020-12-30 13:45:04,115	[DEBUG]	
2020-12-30 13:45:05,039	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:45:05,811	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:45:05,813	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:45:06,765	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:45:07,707	[INFO]	104	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:45:07,709	[INFO]	105	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:45:07,710	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:45:11,081	[INFO]	106	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:45:11,082	[INFO]	107	SUCCESS	+4.0	
2020-12-30 13:45:11,082	[DEBUG]	
2020-12-30 13:45:11,083	[INFO]	108	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:45:11,083	[DEBUG]	
2020-12-30 13:45:12,013	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:45:12,014	[INFO]	110	SUCCESS	+4.0	
2020-12-30 13:45:12,015	[DEBUG]	
2020-12-30 13:45:12,016	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:45:12,967	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:45:13,906	[INFO]	113	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:45:13,908	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:45:17,299	[INFO]	115	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:45:17,300	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:45:18,056	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:45:21,446	[INFO]	117	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:45:21,447	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,25 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 13,28 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:45:25,157	[INFO]	118	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:45:25,158	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,25 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 13,29 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:45:25,159	[INFO]	119	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:45:25,160	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,25 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 13,28 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:45:25,160	[INFO]	120	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:45:25,161	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:45:25,161	[INFO]	121	SUCCESS	+4.0	
2020-12-30 13:45:25,162	[DEBUG]	
2020-12-30 13:45:25,162	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:45:26,072	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:45:26,839	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:45:27,749	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:45:28,682	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:45:32,029	[INFO]	127	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 13:45:32,955	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:45:33,879	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:45:34,670	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:45:35,510	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:45:36,471	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:45:37,432	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:45:38,364	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:45:41,633	[INFO]	135	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:45:41,634	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:45:42,374	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:45:42,375	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:45:42,376	[INFO]	139	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:45:42,377	[INFO]	140	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:45:42,377	[DEBUG]	
2020-12-30 13:45:42,378	[INFO]	141	SUCCESS	+4.0	
2020-12-30 13:45:42,378	[DEBUG]	
2020-12-30 13:45:43,119	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:45:43,121	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:45:43,122	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:45:43,123	[INFO]	145	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:45:43,123	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:45:43,885	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:45:43,886	[INFO]	147	SUCCESS	+4.0	
2020-12-30 13:45:43,886	[DEBUG]	
2020-12-30 13:45:44,791	[INFO]	148	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:45:49,077	[INFO]	149	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:45:49,943	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:45:50,869	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:45:51,837	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:45:54,996	[INFO]	153	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:45:58,160	[INFO]	154	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 13:45:59,083	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:45:59,085	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:46:00,035	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:46:00,832	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:46:00,834	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:46:00,834	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:46:00,835	[INFO]	161	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:46:00,835	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:46:01,577	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:46:02,487	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:46:02,488	[INFO]	164	SUCCESS	+4.0	
2020-12-30 13:46:02,488	[DEBUG]	
2020-12-30 13:46:03,425	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:46:04,360	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:46:07,768	[INFO]	167	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:46:07,768	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:46:07,769	[INFO]	168	SUCCESS	+4.0	
2020-12-30 13:46:07,769	[DEBUG]	
2020-12-30 13:46:08,684	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:46:09,426	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:46:10,214	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:46:10,215	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:46:10,216	[INFO]	173	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:46:10,216	[DEBUG]	
2020-12-30 13:46:10,217	[INFO]	174	SUCCESS	+4.0	
2020-12-30 13:46:10,217	[DEBUG]	
2020-12-30 13:46:13,377	[INFO]	175	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 13:46:13,378	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:46:14,118	[INFO]	177	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:46:17,251	[INFO]	178	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:46:20,651	[INFO]	179	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:46:20,652	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:46:20,653	[INFO]	180	SUCCESS	+4.0	
2020-12-30 13:46:20,653	[DEBUG]	
2020-12-30 13:46:24,004	[INFO]	181	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:46:24,005	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:46:24,005	[INFO]	182	SUCCESS	+4.0	
2020-12-30 13:46:24,005	[DEBUG]	
2020-12-30 13:46:24,930	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:46:24,931	[INFO]	184	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:46:24,931	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:46:24,932	[INFO]	185	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:46:24,933	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:46:25,690	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:46:25,691	[INFO]	187	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:46:25,691	[DEBUG]	
2020-12-30 13:46:26,617	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:46:26,618	[INFO]	189	SUCCESS	+4.0	
2020-12-30 13:46:26,618	[DEBUG]	
2020-12-30 13:46:27,386	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:46:27,388	[INFO]	191	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:46:28,125	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:46:29,074	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:46:30,031	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:46:31,006	[INFO]	195	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:46:31,009	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:46:31,950	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:46:35,145	[INFO]	198	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 13:46:35,891	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:46:36,642	[INFO]	200	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:46:37,562	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:46:38,511	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:46:39,265	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:46:39,266	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:46:40,194	[INFO]	205	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:46:41,139	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:46:42,074	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:46:55,480	[INFO]	208	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:46:56,334	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:46:59,437	[INFO]	210	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:47:00,373	[INFO]	211	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:47:01,309	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:47:02,234	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:47:03,214	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:47:03,217	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:47:03,219	[INFO]	216	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 13:47:07,475	[INFO]	217	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:47:10,726	[INFO]	218	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 13:47:10,727	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:47:14,099	[INFO]	220	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 13:47:14,843	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:47:15,786	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:47:29,348	[INFO]	223	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:47:30,207	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:47:30,208	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:47:31,134	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:47:34,538	[INFO]	227	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:47:34,538	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:47:35,301	[INFO]	228	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:47:38,624	[INFO]	229	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 13:47:39,530	[INFO]	230	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:47:40,297	[INFO]	231	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:47:40,298	[INFO]	232	SUCCESS	+4.0	
2020-12-30 13:47:40,298	[DEBUG]	
2020-12-30 13:47:41,266	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:47:41,267	[INFO]	234	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:47:41,268	[DEBUG]	
2020-12-30 13:47:42,043	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:47:42,971	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:47:42,972	[INFO]	237	SUCCESS	+4.0	
2020-12-30 13:47:42,973	[DEBUG]	
2020-12-30 13:47:42,973	[INFO]	238	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:47:42,974	[DEBUG]	
2020-12-30 13:47:42,974	[INFO]	239	SUCCESS	+4.0	
2020-12-30 13:47:42,974	[DEBUG]	
2020-12-30 13:47:46,352	[INFO]	240	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:47:46,353	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 13:47:46,354	[INFO]	241	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:47:46,354	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 13:47:49,672	[INFO]	242	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:47:49,674	[INFO]	243	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:47:49,674	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 13:47:49,675	[INFO]	244	SUCCESS	+4.0	
2020-12-30 13:47:49,675	[DEBUG]	
2020-12-30 13:47:50,611	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:47:53,950	[INFO]	246	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:47:53,951	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:48:06,931	[INFO]	247	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:48:10,045	[INFO]	248	SUCCESS	 8.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 13:48:10,046	[INFO]	249	SUCCESS	+4.0	
2020-12-30 13:48:10,047	[DEBUG]	
2020-12-30 13:48:10,047	[INFO]	250	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 13:48:11,005	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:48:15,311	[INFO]	252	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:48:18,590	[INFO]	253	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:48:21,758	[INFO]	254	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 13:48:24,897	[INFO]	255	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:48:25,675	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:48:26,606	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:48:26,608	[INFO]	258	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:48:26,608	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:48:27,526	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:48:27,527	[INFO]	260	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:48:27,528	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:48:27,529	[INFO]	261	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:48:27,529	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:48:27,529	[INFO]	262	SUCCESS	+4.0	
2020-12-30 13:48:27,530	[DEBUG]	
2020-12-30 13:48:28,298	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:48:31,667	[INFO]	264	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:48:31,668	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:48:34,879	[INFO]	265	SUCCESS	 8.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 13:48:34,880	[INFO]	266	SUCCESS	+4.0	
2020-12-30 13:48:34,880	[DEBUG]	
2020-12-30 13:48:34,880	[INFO]	267	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:48:34,881	[DEBUG]	
2020-12-30 13:48:34,881	[INFO]	268	SUCCESS	+4.0	
2020-12-30 13:48:34,882	[DEBUG]	
2020-12-30 13:48:34,882	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:48:35,638	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:48:36,559	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:48:37,483	[INFO]	272	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:48:38,257	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:48:39,035	[INFO]	274	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:48:39,960	[INFO]	275	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:48:43,153	[INFO]	276	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:48:44,134	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:48:45,132	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:48:48,604	[INFO]	279	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:48:48,605	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:48:48,605	[INFO]	280	SUCCESS	+4.0	
2020-12-30 13:48:48,606	[DEBUG]	
2020-12-30 13:48:49,531	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:48:50,278	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:48:51,197	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:48:54,554	[INFO]	284	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:48:57,689	[INFO]	285	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:48:58,634	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:48:59,557	[INFO]	287	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:48:59,559	[INFO]	288	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:49:00,321	[INFO]	289	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:49:03,708	[INFO]	290	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:49:03,709	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:49:07,137	[INFO]	291	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:49:07,139	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,24 ****
--- 13,30 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:49:08,074	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:49:08,076	[INFO]	293	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:49:08,077	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,24 ****
--- 13,30 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:49:11,236	[INFO]	294	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:49:11,237	[INFO]	295	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:49:11,238	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,24 ****
--- 13,30 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:49:14,636	[INFO]	296	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:49:14,637	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:49:14,638	[INFO]	297	SUCCESS	+4.0	
2020-12-30 13:49:14,638	[DEBUG]	
2020-12-30 13:49:15,545	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:49:16,308	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:49:17,249	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:49:17,250	[INFO]	301	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:49:17,250	[DEBUG]	
2020-12-30 13:49:17,251	[INFO]	302	SUCCESS	+4.0	
2020-12-30 13:49:17,251	[DEBUG]	
2020-12-30 13:49:20,505	[INFO]	303	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 13:49:21,440	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:49:21,441	[INFO]	305	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:49:21,442	[DEBUG]	
2020-12-30 13:49:22,227	[INFO]	306	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:49:22,973	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:49:26,600	[INFO]	308	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:49:26,601	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:49:26,602	[INFO]	309	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:49:26,602	[DEBUG]	
2020-12-30 13:49:26,603	[INFO]	310	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:49:26,604	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:49:26,604	[INFO]	311	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:49:26,605	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:49:29,986	[INFO]	312	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:49:29,987	[INFO]	313	SUCCESS	+4.0	
2020-12-30 13:49:29,988	[DEBUG]	
2020-12-30 13:49:29,988	[INFO]	314	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:49:29,989	[DEBUG]	
2020-12-30 13:49:29,989	[INFO]	315	SUCCESS	+4.0	
2020-12-30 13:49:29,989	[DEBUG]	
2020-12-30 13:49:29,990	[INFO]	316	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:49:30,747	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:49:31,649	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:49:32,398	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:49:32,399	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:49:33,343	[INFO]	321	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:49:34,283	[INFO]	322	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:49:35,058	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:49:38,197	[INFO]	324	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 13:49:41,570	[INFO]	325	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:49:42,510	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:49:45,915	[INFO]	327	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:49:45,916	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:49:45,917	[INFO]	328	SUCCESS	+4.0	
2020-12-30 13:49:45,917	[DEBUG]	
2020-12-30 13:49:46,676	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:49:47,417	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:49:48,302	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:49:49,229	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:49:50,016	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:49:50,936	[INFO]	334	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:49:50,937	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:49:51,872	[INFO]	336	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:49:52,648	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:49:56,180	[INFO]	338	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 13:49:56,182	[INFO]	339	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:49:56,182	[DEBUG]	
2020-12-30 13:49:56,183	[INFO]	340	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:49:56,183	[INFO]	341	SUCCESS	+4.0	
2020-12-30 13:49:56,184	[DEBUG]	
2020-12-30 13:49:56,185	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:50:00,437	[INFO]	343	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:50:00,438	[INFO]	344	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:50:00,439	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:50:01,330	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:50:02,081	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:50:02,083	[INFO]	348	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:50:02,083	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:50:05,482	[INFO]	349	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:50:05,483	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
--- 16,28 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:50:05,484	[INFO]	350	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:50:05,484	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:50:06,406	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:50:06,407	[INFO]	352	SUCCESS	+4.0	
2020-12-30 13:50:06,407	[DEBUG]	
2020-12-30 13:50:06,408	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:50:07,344	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:50:08,276	[INFO]	355	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:50:11,656	[INFO]	356	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 13:50:12,562	[INFO]	357	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:50:13,565	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:50:14,508	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:50:14,510	[INFO]	360	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:50:17,821	[INFO]	361	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:50:18,572	[INFO]	362	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:50:19,503	[INFO]	363	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:50:20,445	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:50:21,369	[INFO]	365	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:50:24,765	[INFO]	366	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:50:24,766	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:50:24,767	[INFO]	367	SUCCESS	+4.0	
2020-12-30 13:50:24,767	[DEBUG]	
2020-12-30 13:50:25,702	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:50:26,632	[INFO]	369	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:50:27,595	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:50:27,598	[INFO]	371	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:50:27,599	[DEBUG]	
2020-12-30 13:50:30,976	[INFO]	372	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:50:30,977	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:50:30,978	[INFO]	373	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:50:30,978	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:50:30,979	[INFO]	374	SUCCESS	+4.0	
2020-12-30 13:50:30,979	[DEBUG]	
2020-12-30 13:50:31,937	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:50:31,938	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:50:31,939	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:50:31,940	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:50:32,693	[INFO]	379	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:50:32,695	[INFO]	380	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:50:32,695	[DEBUG]	
2020-12-30 13:50:32,695	[INFO]	381	SUCCESS	+4.0	
2020-12-30 13:50:32,695	[DEBUG]	
2020-12-30 13:50:33,453	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:50:36,958	[INFO]	383	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:50:36,959	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:50:36,960	[INFO]	384	SUCCESS	+4.0	
2020-12-30 13:50:36,960	[DEBUG]	
2020-12-30 13:50:36,961	[INFO]	385	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:50:36,962	[INFO]	386	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:50:37,911	[INFO]	387	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:50:37,913	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:50:37,913	[INFO]	389	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:50:41,199	[INFO]	390	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 13:50:44,611	[INFO]	391	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:50:44,612	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:50:45,394	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:50:45,395	[INFO]	393	SUCCESS	+4.0	
2020-12-30 13:50:45,396	[DEBUG]	
2020-12-30 13:50:46,666	[INFO]	394	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:50:46,667	[INFO]	395	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:50:46,668	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 13:50:48,017	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:50:48,018	[INFO]	397	SUCCESS	+4.0	
2020-12-30 13:50:48,018	[DEBUG]	
2020-12-30 13:50:51,462	[INFO]	398	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:50:51,463	[INFO]	399	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:50:52,390	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:50:53,325	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:50:53,326	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:50:54,268	[INFO]	403	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:50:58,563	[INFO]	404	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:51:01,706	[INFO]	405	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 13:51:01,707	[INFO]	406	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:51:01,708	[DEBUG]	
2020-12-30 13:51:01,708	[INFO]	407	SUCCESS	+4.0	
2020-12-30 13:51:01,709	[DEBUG]	
2020-12-30 13:51:02,635	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:51:03,429	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:51:06,806	[INFO]	410	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 13:51:06,807	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:51:06,808	[INFO]	412	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:51:06,809	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:51:06,809	[INFO]	413	SUCCESS	+4.0	
2020-12-30 13:51:06,810	[DEBUG]	
2020-12-30 13:51:07,587	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:51:07,588	[INFO]	415	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:51:08,359	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:51:09,124	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:51:10,070	[INFO]	418	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:51:10,844	[INFO]	419	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:51:10,847	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:51:10,848	[INFO]	421	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:51:10,849	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:51:10,849	[INFO]	422	SUCCESS	+4.0	
2020-12-30 13:51:10,850	[DEBUG]	
2020-12-30 13:51:15,130	[INFO]	423	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:51:15,131	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:51:15,132	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:51:18,376	[INFO]	426	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:51:18,376	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:51:21,575	[INFO]	427	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:51:22,501	[INFO]	428	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:51:23,445	[INFO]	429	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:51:24,400	[INFO]	430	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:51:25,352	[INFO]	431	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:51:26,119	[INFO]	432	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:51:27,024	[INFO]	433	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:51:30,617	[INFO]	434	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:51:30,618	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,25 ****
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:51:30,618	[INFO]	435	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:51:30,619	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:51:33,740	[INFO]	436	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:51:33,741	[INFO]	437	SUCCESS	+4.0	
2020-12-30 13:51:33,741	[DEBUG]	
2020-12-30 13:51:34,501	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:51:34,502	[INFO]	439	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:51:34,502	[DEBUG]	
2020-12-30 13:51:34,503	[INFO]	440	SUCCESS	+4.0	
2020-12-30 13:51:34,503	[DEBUG]	
2020-12-30 13:51:38,243	[INFO]	441	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:51:38,243	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:51:38,244	[INFO]	442	SUCCESS	+4.0	
2020-12-30 13:51:38,244	[DEBUG]	
2020-12-30 13:51:39,196	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:51:39,956	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:51:39,957	[INFO]	445	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:51:39,957	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:51:39,958	[INFO]	446	SUCCESS	+4.0	
2020-12-30 13:51:39,958	[DEBUG]	
2020-12-30 13:51:39,959	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:51:39,960	[INFO]	448	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:51:39,960	[DEBUG]	
2020-12-30 13:51:39,960	[INFO]	449	SUCCESS	+4.0	
2020-12-30 13:51:39,961	[DEBUG]	
2020-12-30 13:51:39,961	[INFO]	450	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:51:40,744	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:51:41,731	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:51:42,487	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:51:43,422	[INFO]	454	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:51:44,405	[INFO]	455	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:51:45,360	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:51:46,295	[INFO]	457	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:51:47,058	[INFO]	458	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:51:47,059	[INFO]	459	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:51:47,060	[DEBUG]	
2020-12-30 13:51:47,060	[INFO]	460	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:51:47,061	[INFO]	461	SUCCESS	+4.0	
2020-12-30 13:51:47,061	[DEBUG]	
2020-12-30 13:51:47,815	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:51:48,737	[INFO]	463	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:51:48,740	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:51:48,742	[INFO]	465	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:51:49,506	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:51:50,251	[INFO]	467	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:51:51,189	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:51:51,929	[INFO]	469	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:51:52,858	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:51:53,630	[INFO]	471	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:51:53,631	[INFO]	472	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:51:53,631	[DEBUG]	
2020-12-30 13:51:53,632	[INFO]	473	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:51:53,632	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:51:53,633	[INFO]	474	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:51:53,633	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:51:54,403	[INFO]	475	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:51:55,132	[INFO]	476	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:51:55,133	[INFO]	477	SUCCESS	+4.0	
2020-12-30 13:51:55,133	[DEBUG]	
2020-12-30 13:51:56,082	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:51:57,001	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:51:57,761	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:52:02,276	[INFO]	481	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:52:02,276	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:52:02,277	[INFO]	482	SUCCESS	+4.0	
2020-12-30 13:52:02,277	[DEBUG]	
2020-12-30 13:52:05,520	[INFO]	483	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 13:52:06,425	[INFO]	484	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:52:07,358	[INFO]	485	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:52:08,121	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:52:08,123	[INFO]	487	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:52:08,124	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:52:09,059	[INFO]	489	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:52:09,060	[INFO]	490	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:52:09,060	[DEBUG]	
2020-12-30 13:52:09,061	[INFO]	491	SUCCESS	+4.0	
2020-12-30 13:52:09,061	[DEBUG]	
2020-12-30 13:52:10,004	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:52:13,295	[INFO]	493	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 13:52:16,583	[INFO]	494	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:52:16,584	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:52:16,585	[INFO]	495	SUCCESS	+4.0	
2020-12-30 13:52:16,585	[DEBUG]	
2020-12-30 13:52:19,901	[INFO]	496	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 13:52:20,847	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:52:21,622	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:52:22,377	[INFO]	499	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:52:23,307	[INFO]	500	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:52:23,308	[INFO]	==== END ====
2020-12-30 13:52:23,308	[INFO]	Reason: step budget
2020-12-30 13:52:23,308	[INFO]	
2020-12-30 13:52:23,308	[INFO]	========== EPOCH 19 ==========
2020-12-30 13:52:23,309	[INFO]	==== WARMUP ====
2020-12-30 13:52:26,675	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 13:52:26,676	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:52:30,020	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 13:52:30,020	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:52:33,399	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 13:52:33,400	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:52:36,795	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-30 13:52:36,796	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 13:52:36,796	[INFO]	==== START ====
2020-12-30 13:52:41,138	[INFO]	1	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:52:42,012	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:52:45,351	[INFO]	3	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:52:45,352	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:52:48,732	[INFO]	4	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:52:48,733	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!             return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:52:52,052	[INFO]	5	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:52:52,053	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 13,29 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!             return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
!             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:52:52,999	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:52:56,348	[INFO]	7	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:52:56,350	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:52:56,352	[INFO]	8	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:52:56,353	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:52:59,686	[INFO]	9	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:52:59,687	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:52:59,688	[INFO]	10	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:52:59,689	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:52:59,690	[INFO]	11	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:52:59,690	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:53:02,836	[INFO]	12	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:53:02,837	[INFO]	13	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:53:02,838	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:53:06,231	[INFO]	14	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:53:06,233	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,22 ****
--- 13,28 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:53:09,360	[INFO]	15	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:53:10,129	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:53:10,133	[INFO]	17	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:53:10,134	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,22 ****
--- 13,28 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:53:11,090	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:53:11,863	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:53:12,780	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:53:16,163	[INFO]	21	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:53:16,164	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,23 ****
--- 13,32 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:53:16,166	[INFO]	22	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:53:16,166	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,22 ****
--- 13,28 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:53:16,167	[INFO]	23	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:53:16,168	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,22 ****
--- 13,28 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:53:16,169	[INFO]	24	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:53:16,169	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,22 ****
--- 13,28 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:53:16,171	[INFO]	25	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:53:16,171	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,22 ****
--- 13,28 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:53:16,172	[INFO]	26	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:53:16,173	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,22 ****
--- 13,28 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:53:16,174	[INFO]	27	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:53:16,175	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,22 ****
--- 13,28 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:53:16,176	[INFO]	28	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:53:16,177	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:53:17,086	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:53:18,023	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:53:18,024	[INFO]	31	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:53:18,025	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:53:18,026	[INFO]	32	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:53:18,800	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:53:22,006	[INFO]	34	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 13:53:22,007	[INFO]	35	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:53:22,008	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:53:22,772	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:53:23,719	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:53:23,721	[INFO]	38	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:53:23,721	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:53:24,690	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:53:25,458	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:53:25,460	[INFO]	41	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:53:25,460	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:53:25,461	[INFO]	42	SUCCESS	+4.0	
2020-12-30 13:53:25,461	[DEBUG]	
2020-12-30 13:53:26,387	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:53:29,762	[INFO]	44	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:53:29,763	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:53:30,711	[INFO]	45	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:53:35,225	[INFO]	46	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:53:35,226	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,25 ****
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:53:35,227	[INFO]	47	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 13:53:35,227	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 13:53:35,950	[INFO]	48	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:53:35,952	[INFO]	49	SUCCESS	+4.0	
2020-12-30 13:53:35,952	[DEBUG]	
2020-12-30 13:53:36,687	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:53:37,602	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:53:38,553	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:53:38,555	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:53:39,519	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:53:40,438	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:53:41,656	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:53:41,658	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:53:42,897	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:53:42,899	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:53:42,900	[INFO]	60	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:53:42,900	[DEBUG]	
2020-12-30 13:53:47,422	[INFO]	61	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:53:47,423	[INFO]	62	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:53:47,424	[DEBUG]	
2020-12-30 13:53:47,424	[INFO]	63	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:53:47,425	[DEBUG]	
2020-12-30 13:53:47,425	[INFO]	64	SUCCESS	+4.0	
2020-12-30 13:53:47,426	[DEBUG]	
2020-12-30 13:53:48,266	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:53:48,267	[INFO]	66	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:53:48,267	[DEBUG]	
2020-12-30 13:53:48,268	[INFO]	67	SUCCESS	+4.0	
2020-12-30 13:53:48,268	[DEBUG]	
2020-12-30 13:53:49,202	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:53:50,113	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:53:50,849	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:53:51,775	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:53:52,712	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:53:53,661	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:53:54,609	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:53:57,791	[INFO]	75	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:53:58,707	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:53:59,664	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:54:00,435	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:54:03,588	[INFO]	79	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 13:54:04,351	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:54:05,251	[INFO]	81	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:54:18,624	[INFO]	82	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:54:21,866	[INFO]	83	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 13:54:22,600	[INFO]	84	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:54:23,496	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:54:26,623	[INFO]	86	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:54:27,391	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:54:28,305	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:54:29,249	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:54:30,210	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:54:30,994	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:54:31,920	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:54:31,921	[INFO]	93	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:54:32,707	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:54:35,830	[INFO]	95	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:54:35,832	[INFO]	96	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:54:39,204	[INFO]	97	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:54:39,205	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:54:39,206	[INFO]	98	SUCCESS	+4.0	
2020-12-30 13:54:39,206	[DEBUG]	
2020-12-30 13:54:39,207	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:54:39,964	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:54:39,965	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:54:40,943	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:54:41,752	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:54:42,497	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:54:42,498	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:54:42,499	[INFO]	106	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:54:42,500	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:54:43,428	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:54:44,370	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:54:44,371	[INFO]	110	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:54:45,171	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:54:45,955	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:54:49,095	[INFO]	113	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:54:49,848	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:54:50,780	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:54:50,782	[INFO]	116	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:54:50,783	[DEBUG]	
2020-12-30 13:54:50,784	[INFO]	117	SUCCESS	+4.0	
2020-12-30 13:54:50,785	[DEBUG]	
2020-12-30 13:54:51,554	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:54:54,918	[INFO]	119	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:54:54,920	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:54:55,834	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:54:55,835	[INFO]	121	SUCCESS	+4.0	
2020-12-30 13:54:55,836	[DEBUG]	
2020-12-30 13:55:00,149	[INFO]	122	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:55:00,856	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:55:00,857	[INFO]	124	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:55:00,857	[DEBUG]	
2020-12-30 13:55:01,772	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:55:05,108	[INFO]	126	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:55:05,109	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:55:05,109	[INFO]	127	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:55:05,110	[DEBUG]	
2020-12-30 13:55:06,033	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:55:10,321	[INFO]	129	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:55:11,026	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:55:11,027	[INFO]	131	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:55:11,028	[DEBUG]	
2020-12-30 13:55:11,940	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:55:11,941	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:55:11,942	[INFO]	134	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:55:11,942	[DEBUG]	
2020-12-30 13:55:11,943	[INFO]	135	SUCCESS	+4.0	
2020-12-30 13:55:11,943	[DEBUG]	
2020-12-30 13:55:12,712	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:55:13,613	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:55:13,614	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:55:13,615	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:55:14,554	[INFO]	140	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:55:14,555	[INFO]	141	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:55:15,344	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:55:16,263	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:55:19,600	[INFO]	144	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:55:19,601	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:55:20,553	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:55:20,554	[INFO]	146	SUCCESS	+4.0	
2020-12-30 13:55:20,554	[DEBUG]	
2020-12-30 13:55:21,474	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:55:22,231	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:55:22,233	[INFO]	149	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:55:22,233	[DEBUG]	
2020-12-30 13:55:22,233	[INFO]	150	SUCCESS	+4.0	
2020-12-30 13:55:22,234	[DEBUG]	
2020-12-30 13:55:22,234	[INFO]	151	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:55:22,235	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:55:22,235	[INFO]	152	SUCCESS	+4.0	
2020-12-30 13:55:22,235	[DEBUG]	
2020-12-30 13:55:23,171	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:55:23,172	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:55:23,173	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:55:24,144	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:55:24,934	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:55:25,693	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:55:25,694	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:55:25,695	[INFO]	160	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:55:25,695	[DEBUG]	
2020-12-30 13:55:25,696	[INFO]	161	SUCCESS	+4.0	
2020-12-30 13:55:25,696	[DEBUG]	
2020-12-30 13:55:28,990	[INFO]	162	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:55:29,949	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:55:30,909	[INFO]	164	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:55:35,535	[INFO]	165	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:55:35,536	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:55:36,840	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:55:36,842	[INFO]	167	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:55:36,842	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:55:36,843	[INFO]	168	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:55:36,844	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:55:36,844	[INFO]	169	SUCCESS	+4.0	
2020-12-30 13:55:36,845	[DEBUG]	
2020-12-30 13:55:40,222	[INFO]	170	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 13:55:53,625	[INFO]	171	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:55:54,483	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:55:54,484	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:55:55,228	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:55:56,022	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:55:56,949	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:56:01,289	[INFO]	177	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:56:01,290	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:56:01,291	[INFO]	178	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:56:01,291	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:56:02,253	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:56:02,254	[INFO]	180	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:56:02,255	[DEBUG]	
2020-12-30 13:56:05,460	[INFO]	181	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:56:05,461	[INFO]	182	SUCCESS	+4.0	
2020-12-30 13:56:05,462	[DEBUG]	
2020-12-30 13:56:09,839	[INFO]	183	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:56:09,840	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:56:09,841	[INFO]	184	SUCCESS	+4.0	
2020-12-30 13:56:09,842	[DEBUG]	
2020-12-30 13:56:11,126	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:56:12,210	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:56:13,151	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:56:14,114	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:56:15,065	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:56:15,993	[INFO]	190	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:56:15,995	[INFO]	191	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:56:16,928	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:56:20,220	[INFO]	193	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:56:20,220	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:56:21,003	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:56:21,907	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:56:21,908	[INFO]	196	SUCCESS	+4.0	
2020-12-30 13:56:21,908	[DEBUG]	
2020-12-30 13:56:21,909	[INFO]	197	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:56:22,840	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:56:23,787	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:56:24,561	[INFO]	200	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:56:25,522	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:56:25,525	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:56:28,864	[INFO]	203	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 13:56:28,865	[INFO]	204	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:56:28,865	[DEBUG]	
2020-12-30 13:56:28,866	[INFO]	205	SUCCESS	+4.0	
2020-12-30 13:56:28,866	[DEBUG]	
2020-12-30 13:56:28,867	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:56:28,867	[INFO]	207	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:56:28,868	[INFO]	208	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:56:28,868	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:56:28,869	[INFO]	209	SUCCESS	+4.0	
2020-12-30 13:56:28,869	[DEBUG]	
2020-12-30 13:56:28,870	[INFO]	210	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:56:28,870	[DEBUG]	
2020-12-30 13:56:29,816	[INFO]	211	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:56:29,818	[INFO]	212	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:56:29,818	[DEBUG]	
2020-12-30 13:56:30,734	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:56:30,735	[INFO]	214	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:56:30,735	[DEBUG]	
2020-12-30 13:56:30,736	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:56:30,737	[INFO]	216	SUCCESS	+4.0	
2020-12-30 13:56:30,737	[DEBUG]	
2020-12-30 13:56:30,738	[INFO]	217	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:56:30,738	[INFO]	218	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:56:30,738	[DEBUG]	
2020-12-30 13:56:30,739	[INFO]	219	SUCCESS	+4.0	
2020-12-30 13:56:30,739	[DEBUG]	
2020-12-30 13:56:31,492	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:56:31,493	[INFO]	221	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:56:31,493	[DEBUG]	
2020-12-30 13:56:31,494	[INFO]	222	SUCCESS	+4.0	
2020-12-30 13:56:31,494	[DEBUG]	
2020-12-30 13:56:31,495	[INFO]	223	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:56:31,496	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:56:31,496	[INFO]	225	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:56:31,497	[DEBUG]	
2020-12-30 13:56:35,967	[INFO]	226	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:56:35,968	[INFO]	227	SUCCESS	+4.0	
2020-12-30 13:56:35,968	[DEBUG]	
2020-12-30 13:56:35,968	[INFO]	228	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:56:36,849	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:56:36,852	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:56:37,606	[INFO]	231	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:56:38,366	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:56:38,367	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:56:39,110	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:56:39,111	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:56:39,868	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:56:43,066	[INFO]	237	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:56:44,023	[INFO]	238	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:56:44,820	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:56:44,822	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:56:49,129	[INFO]	241	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:56:49,995	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:56:50,918	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:56:51,860	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:56:52,792	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:56:52,793	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:56:53,708	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:56:54,491	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:56:55,404	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:56:58,742	[INFO]	250	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:56:58,743	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:56:58,743	[INFO]	251	SUCCESS	+4.0	
2020-12-30 13:56:58,744	[DEBUG]	
2020-12-30 13:56:59,510	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:57:00,412	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:57:00,413	[INFO]	254	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:57:00,414	[DEBUG]	
2020-12-30 13:57:00,414	[INFO]	255	SUCCESS	+4.0	
2020-12-30 13:57:00,414	[DEBUG]	
2020-12-30 13:57:01,346	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:57:01,347	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:57:04,716	[INFO]	258	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:57:07,945	[INFO]	259	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:57:07,946	[INFO]	260	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:57:08,845	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:57:08,846	[INFO]	262	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:57:08,847	[DEBUG]	
2020-12-30 13:57:08,847	[INFO]	263	SUCCESS	+4.0	
2020-12-30 13:57:08,847	[DEBUG]	
2020-12-30 13:57:09,768	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:57:12,894	[INFO]	265	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:57:12,895	[INFO]	266	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:57:12,895	[DEBUG]	
2020-12-30 13:57:12,896	[INFO]	267	SUCCESS	+4.0	
2020-12-30 13:57:12,896	[DEBUG]	
2020-12-30 13:57:12,897	[INFO]	268	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:57:16,064	[INFO]	269	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 13:57:17,025	[INFO]	270	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:57:20,358	[INFO]	271	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:57:20,359	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:57:20,360	[INFO]	272	SUCCESS	+4.0	
2020-12-30 13:57:20,360	[DEBUG]	
2020-12-30 13:57:20,361	[INFO]	273	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:57:20,361	[DEBUG]	
2020-12-30 13:57:20,362	[INFO]	274	SUCCESS	+4.0	
2020-12-30 13:57:20,362	[DEBUG]	
2020-12-30 13:57:20,362	[INFO]	275	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:57:20,363	[DEBUG]	
2020-12-30 13:57:20,363	[INFO]	276	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:57:20,364	[INFO]	277	SUCCESS	+4.0	
2020-12-30 13:57:20,364	[DEBUG]	
2020-12-30 13:57:20,365	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:57:24,092	[INFO]	279	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:57:24,093	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:57:25,027	[INFO]	280	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:57:25,028	[INFO]	281	SUCCESS	+4.0	
2020-12-30 13:57:25,028	[DEBUG]	
2020-12-30 13:57:25,029	[INFO]	282	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:57:25,029	[DEBUG]	
2020-12-30 13:57:25,962	[INFO]	283	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:57:26,752	[INFO]	284	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:57:26,754	[INFO]	285	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:57:26,754	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:57:26,755	[INFO]	286	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:57:26,755	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:57:26,756	[INFO]	287	SUCCESS	+4.0	
2020-12-30 13:57:26,756	[DEBUG]	
2020-12-30 13:57:26,756	[INFO]	288	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:57:26,757	[DEBUG]	
2020-12-30 13:57:26,757	[INFO]	289	SUCCESS	+4.0	
2020-12-30 13:57:26,757	[DEBUG]	
2020-12-30 13:57:26,758	[INFO]	290	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:57:27,693	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:57:28,483	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:57:29,258	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:57:30,190	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:57:33,338	[INFO]	295	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:57:33,340	[INFO]	296	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:57:36,730	[INFO]	297	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 13:57:36,731	[INFO]	298	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:57:36,732	[DEBUG]	
2020-12-30 13:57:36,732	[INFO]	299	SUCCESS	+4.0	
2020-12-30 13:57:36,732	[DEBUG]	
2020-12-30 13:57:40,989	[INFO]	300	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:57:41,695	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:57:42,598	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:57:42,600	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:57:42,600	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:57:43,347	[INFO]	305	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:57:46,559	[INFO]	306	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 13:57:47,491	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:57:48,266	[INFO]	308	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:57:48,267	[INFO]	309	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:57:48,267	[DEBUG]	
2020-12-30 13:57:48,268	[INFO]	310	SUCCESS	+4.0	
2020-12-30 13:57:48,268	[DEBUG]	
2020-12-30 13:57:51,603	[INFO]	311	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:57:52,528	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:57:53,294	[INFO]	313	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:57:53,295	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:57:54,214	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:57:55,134	[INFO]	316	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:57:55,902	[INFO]	317	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:57:56,666	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:57:57,402	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:57:57,403	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:58:00,618	[INFO]	321	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 13:58:01,357	[INFO]	322	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:58:04,534	[INFO]	323	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:58:04,535	[INFO]	324	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:58:04,536	[INFO]	325	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:58:04,536	[DEBUG]	
2020-12-30 13:58:04,537	[INFO]	326	SUCCESS	+4.0	
2020-12-30 13:58:04,537	[DEBUG]	
2020-12-30 13:58:08,160	[INFO]	327	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:58:08,161	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:58:08,162	[INFO]	328	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 13:58:08,162	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:58:08,163	[INFO]	329	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:58:08,163	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:58:08,164	[INFO]	330	SUCCESS	+4.0	
2020-12-30 13:58:08,164	[DEBUG]	
2020-12-30 13:58:09,108	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:58:09,111	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:58:12,423	[INFO]	333	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:58:12,424	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 13:58:12,425	[INFO]	334	SUCCESS	+4.0	
2020-12-30 13:58:12,425	[DEBUG]	
2020-12-30 13:58:13,198	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:58:13,199	[INFO]	336	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 13:58:14,134	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:58:14,136	[INFO]	338	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:58:14,136	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-30 13:58:14,137	[INFO]	339	SUCCESS	+4.0	
2020-12-30 13:58:14,137	[DEBUG]	
2020-12-30 13:58:14,138	[INFO]	340	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-30 13:58:14,138	[DEBUG]	
2020-12-30 13:58:14,138	[INFO]	341	SUCCESS	+4.0	
2020-12-30 13:58:14,139	[DEBUG]	
2020-12-30 13:58:14,139	[INFO]	342	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:58:14,140	[INFO]	343	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:58:14,140	[DEBUG]	
2020-12-30 13:58:14,141	[INFO]	344	SUCCESS	+4.0	
2020-12-30 13:58:14,141	[DEBUG]	
2020-12-30 13:58:14,142	[INFO]	345	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:58:14,142	[DEBUG]	
2020-12-30 13:58:14,143	[INFO]	346	SUCCESS	+4.0	
2020-12-30 13:58:14,143	[DEBUG]	
2020-12-30 13:58:14,897	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:58:15,818	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:58:15,819	[INFO]	349	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:58:15,820	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:58:16,761	[INFO]	351	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:58:16,762	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:58:16,763	[INFO]	353	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 13:58:16,763	[INFO]	354	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:58:16,764	[INFO]	355	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:58:17,671	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:58:17,672	[INFO]	357	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 13:58:18,606	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:58:19,522	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:58:20,466	[INFO]	360	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:58:21,426	[INFO]	361	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:58:22,350	[INFO]	362	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:58:23,267	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:58:24,247	[INFO]	364	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:58:25,037	[INFO]	365	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:58:28,355	[INFO]	366	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:58:28,356	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:58:28,357	[INFO]	367	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:58:28,358	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:58:31,479	[INFO]	368	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:58:31,480	[INFO]	369	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:58:31,481	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:58:31,481	[INFO]	370	SUCCESS	+4.0	
2020-12-30 13:58:31,482	[DEBUG]	
2020-12-30 13:58:32,290	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:58:33,256	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:58:36,474	[INFO]	373	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 13:58:36,475	[INFO]	374	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:58:36,476	[INFO]	375	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:58:36,476	[DEBUG]	
2020-12-30 13:58:37,407	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:58:38,191	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:58:38,192	[INFO]	378	SUCCESS	+4.0	
2020-12-30 13:58:38,192	[DEBUG]	
2020-12-30 13:58:41,523	[INFO]	379	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:58:41,524	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 13:58:42,464	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:58:43,453	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:58:47,082	[INFO]	382	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:58:47,083	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:58:47,860	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:58:51,237	[INFO]	384	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:58:51,239	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 13,29 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!             return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
!             if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:58:51,240	[INFO]	385	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:58:51,241	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 13,29 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!             return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
!             if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:58:54,633	[INFO]	386	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:58:54,634	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!             return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:58:54,635	[INFO]	387	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:58:54,635	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!             return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:58:54,636	[INFO]	388	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:58:54,637	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!             return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:58:57,919	[INFO]	389	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:58:57,920	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:58:57,922	[INFO]	390	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:58:57,922	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:58:57,923	[INFO]	391	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:58:57,923	[DEBUG]	
2020-12-30 13:58:58,851	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:58:58,853	[INFO]	393	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:58:58,853	[DEBUG]	
2020-12-30 13:58:58,854	[INFO]	394	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:58:58,854	[DEBUG]	
2020-12-30 13:58:58,855	[INFO]	395	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:58:58,855	[INFO]	396	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:58:58,856	[DEBUG]	
2020-12-30 13:59:02,063	[INFO]	397	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:59:05,474	[INFO]	398	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 13:59:06,209	[INFO]	399	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:59:07,124	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:59:07,125	[INFO]	401	SUCCESS	+4.0	
2020-12-30 13:59:07,125	[DEBUG]	
2020-12-30 13:59:10,459	[INFO]	402	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:59:10,460	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:59:10,461	[INFO]	403	SUCCESS	+4.0	
2020-12-30 13:59:10,461	[DEBUG]	
2020-12-30 13:59:11,396	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:59:12,304	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:59:13,069	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:59:16,146	[INFO]	407	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:59:16,931	[INFO]	408	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:59:17,686	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:59:18,433	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:59:19,326	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:59:20,294	[INFO]	412	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 13:59:21,249	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:59:22,018	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:59:22,019	[INFO]	415	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:59:22,020	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 13:59:22,020	[INFO]	416	SUCCESS	+4.0	
2020-12-30 13:59:22,021	[DEBUG]	
2020-12-30 13:59:22,944	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:59:26,129	[INFO]	418	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 13:59:27,086	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:59:27,865	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:59:28,622	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:59:29,569	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:59:30,315	[INFO]	423	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:59:33,622	[INFO]	424	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:59:34,529	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:59:34,530	[INFO]	426	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:59:35,463	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 13:59:36,238	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:59:37,170	[INFO]	429	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:59:37,172	[INFO]	430	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:59:38,103	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 13:59:39,061	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:59:39,837	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 13:59:40,802	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:59:41,763	[INFO]	435	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:59:42,536	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:59:43,472	[INFO]	437	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 13:59:44,416	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 13:59:45,356	[INFO]	439	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:59:48,719	[INFO]	440	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 13:59:48,720	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:59:51,871	[INFO]	441	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 13:59:51,872	[INFO]	442	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 13:59:51,873	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:59:52,839	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 13:59:52,840	[INFO]	444	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 13:59:52,841	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:59:52,842	[INFO]	445	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:59:52,842	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:59:52,843	[INFO]	446	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:59:52,843	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:59:55,924	[INFO]	447	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 13:59:55,926	[INFO]	448	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:59:55,926	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 13:59:56,872	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 13:59:57,807	[INFO]	450	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 13:59:57,808	[INFO]	451	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:00:01,197	[INFO]	452	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:00:01,198	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,22 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 14,28 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:00:02,136	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:00:02,926	[INFO]	454	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:00:02,927	[INFO]	455	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:00:02,928	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:00:02,929	[INFO]	456	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:00:02,929	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:00:06,228	[INFO]	457	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 14:00:09,597	[INFO]	458	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:00:09,598	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,22 ****
--- 14,28 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:00:12,810	[INFO]	459	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 14:00:13,749	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:00:14,676	[INFO]	461	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:00:15,602	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:00:15,604	[INFO]	463	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:00:15,604	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,22 ****
--- 14,28 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:00:16,561	[INFO]	464	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:00:16,562	[INFO]	465	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 14:00:16,563	[INFO]	466	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:00:16,563	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:00:16,564	[INFO]	467	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:00:16,565	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:00:16,566	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:00:19,789	[INFO]	469	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 14:00:19,791	[INFO]	470	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:00:19,791	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:00:19,792	[INFO]	471	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:00:19,792	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:00:23,177	[INFO]	472	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 14:00:23,178	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,25 ****
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 17,28 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 14:00:23,179	[INFO]	473	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:00:23,179	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:00:23,180	[INFO]	474	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:00:23,181	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:00:23,181	[INFO]	475	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:00:23,182	[DEBUG]	
2020-12-30 14:00:23,992	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:00:24,742	[INFO]	477	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:00:25,658	[INFO]	478	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:00:25,659	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:00:26,629	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:00:27,550	[INFO]	481	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:00:31,833	[INFO]	482	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:00:31,834	[INFO]	483	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:00:31,834	[DEBUG]	
2020-12-30 14:00:31,835	[INFO]	484	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:00:31,835	[DEBUG]	
2020-12-30 14:00:32,537	[INFO]	485	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:00:33,479	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:00:33,481	[INFO]	487	SUCCESS	+4.0	
2020-12-30 14:00:33,482	[DEBUG]	
2020-12-30 14:00:34,254	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:00:35,041	[INFO]	489	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:00:36,071	[INFO]	490	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:00:36,072	[INFO]	491	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:00:36,073	[INFO]	492	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:00:36,073	[DEBUG]	
2020-12-30 14:00:39,428	[INFO]	493	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:00:39,429	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 14:00:39,430	[INFO]	494	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:00:39,431	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 14:00:40,188	[INFO]	495	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:00:40,189	[INFO]	496	SUCCESS	+4.0	
2020-12-30 14:00:40,190	[DEBUG]	
2020-12-30 14:00:41,167	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:00:45,556	[INFO]	498	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:00:46,432	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:00:47,364	[INFO]	500	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:00:47,365	[INFO]	==== END ====
2020-12-30 14:00:47,365	[INFO]	Reason: step budget
2020-12-30 14:00:47,365	[INFO]	
2020-12-30 14:00:47,366	[INFO]	========== EPOCH 20 ==========
2020-12-30 14:00:47,366	[INFO]	==== WARMUP ====
2020-12-30 14:00:50,766	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 14:00:50,766	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 14:00:54,127	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 14:00:54,127	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 14:00:57,452	[INFO]	WARM	SUCCESS	 4.0	
2020-12-30 14:00:57,452	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 14:01:00,770	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-30 14:01:00,770	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-30 14:01:00,770	[INFO]	==== START ====
2020-12-30 14:01:01,687	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:01:02,622	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:01:03,557	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:01:04,475	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:01:05,454	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:01:08,788	[INFO]	6	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:01:08,789	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:01:09,534	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:01:10,466	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:01:11,241	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:01:11,994	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:01:11,995	[INFO]	11	SUCCESS	+4.0	
2020-12-30 14:01:11,996	[DEBUG]	
2020-12-30 14:01:15,358	[INFO]	12	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:01:15,359	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:01:15,360	[INFO]	13	SUCCESS	+4.0	
2020-12-30 14:01:15,360	[DEBUG]	
2020-12-30 14:01:16,282	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:01:17,186	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:01:18,115	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:01:19,051	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:01:22,428	[INFO]	18	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:01:22,429	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 14:01:22,430	[INFO]	19	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:01:22,431	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 14:01:23,339	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:01:23,341	[INFO]	21	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:01:23,341	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 14:01:24,311	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:01:24,313	[INFO]	23	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:01:24,313	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 14:01:24,314	[INFO]	24	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:01:24,314	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 14:01:24,315	[INFO]	25	SUCCESS	+4.0	
2020-12-30 14:01:24,315	[DEBUG]	
2020-12-30 14:01:24,316	[INFO]	26	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:01:24,316	[DEBUG]	
2020-12-30 14:01:24,316	[INFO]	27	SUCCESS	+4.0	
2020-12-30 14:01:24,317	[DEBUG]	
2020-12-30 14:01:25,265	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:01:25,267	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:01:26,207	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:01:26,208	[INFO]	31	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 14:01:26,209	[DEBUG]	
2020-12-30 14:01:26,210	[INFO]	32	SUCCESS	+4.0	
2020-12-30 14:01:26,210	[DEBUG]	
2020-12-30 14:01:29,541	[INFO]	33	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:01:30,278	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:01:30,279	[INFO]	35	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:01:30,279	[DEBUG]	
2020-12-30 14:01:33,437	[INFO]	36	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:01:34,173	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:01:34,174	[INFO]	38	SUCCESS	+4.0	
2020-12-30 14:01:34,174	[DEBUG]	
2020-12-30 14:01:35,108	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:01:36,036	[INFO]	40	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:01:36,799	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:01:37,750	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:01:37,753	[INFO]	43	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:01:37,753	[DEBUG]	
2020-12-30 14:01:37,755	[INFO]	44	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:01:37,755	[DEBUG]	
2020-12-30 14:01:38,690	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:01:38,691	[INFO]	46	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:01:38,691	[DEBUG]	
2020-12-30 14:01:38,692	[INFO]	47	SUCCESS	+4.0	
2020-12-30 14:01:38,692	[DEBUG]	
2020-12-30 14:01:38,693	[INFO]	48	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:01:38,693	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:01:38,694	[INFO]	49	SUCCESS	+4.0	
2020-12-30 14:01:38,694	[DEBUG]	
2020-12-30 14:01:38,695	[INFO]	50	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:01:38,695	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 14:01:38,696	[INFO]	51	SUCCESS	+4.0	
2020-12-30 14:01:38,696	[DEBUG]	
2020-12-30 14:01:39,638	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:01:40,406	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:01:41,361	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:01:42,311	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:01:43,075	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:01:43,818	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:01:43,819	[INFO]	58	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:01:43,820	[DEBUG]	
2020-12-30 14:01:43,820	[INFO]	59	SUCCESS	+4.0	
2020-12-30 14:01:43,820	[DEBUG]	
2020-12-30 14:01:43,821	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:01:43,822	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:01:44,746	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:01:44,748	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:01:47,938	[INFO]	64	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 14:01:48,689	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:01:48,690	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:01:49,617	[INFO]	67	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:01:50,585	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:01:51,366	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:01:54,545	[INFO]	70	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 14:01:55,309	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:01:56,202	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:01:57,134	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:02:00,329	[INFO]	74	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 14:02:01,278	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:02:04,427	[INFO]	76	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 14:02:05,173	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:02:06,092	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:02:06,837	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:02:11,358	[INFO]	80	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:02:11,359	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:02:11,359	[INFO]	81	SUCCESS	+4.0	
2020-12-30 14:02:11,359	[DEBUG]	
2020-12-30 14:02:11,360	[INFO]	82	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 14:02:12,246	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:02:13,180	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:02:13,954	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:02:14,867	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:02:15,616	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:02:16,548	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:02:17,487	[INFO]	89	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:02:18,429	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:02:19,371	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:02:19,373	[INFO]	92	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 14:02:19,373	[DEBUG]	
2020-12-30 14:02:19,373	[INFO]	93	SUCCESS	+4.0	
2020-12-30 14:02:19,373	[DEBUG]	
2020-12-30 14:02:20,312	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:02:21,227	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:02:21,970	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:02:25,302	[INFO]	97	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 14:02:26,087	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:02:29,459	[INFO]	99	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 14:02:30,416	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:02:30,417	[INFO]	101	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:02:30,417	[DEBUG]	
2020-12-30 14:02:30,418	[INFO]	102	SUCCESS	+4.0	
2020-12-30 14:02:30,418	[DEBUG]	
2020-12-30 14:02:34,651	[INFO]	103	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:02:37,697	[INFO]	104	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:02:37,699	[INFO]	105	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:02:38,637	[INFO]	106	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:02:38,638	[INFO]	107	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:02:38,638	[DEBUG]	
2020-12-30 14:02:38,639	[INFO]	108	SUCCESS	+4.0	
2020-12-30 14:02:38,639	[DEBUG]	
2020-12-30 14:02:39,565	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:02:40,337	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:02:41,118	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:02:41,906	[INFO]	112	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:02:45,224	[INFO]	113	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 14:02:48,559	[INFO]	114	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:02:48,560	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:02:48,561	[INFO]	115	SUCCESS	+4.0	
2020-12-30 14:02:48,561	[DEBUG]	
2020-12-30 14:02:49,507	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:02:50,276	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:02:51,212	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:02:51,213	[INFO]	119	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:02:51,213	[DEBUG]	
2020-12-30 14:02:52,142	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:02:52,143	[INFO]	121	SUCCESS	+4.0	
2020-12-30 14:02:52,143	[DEBUG]	
2020-12-30 14:02:55,352	[INFO]	122	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 14:02:56,286	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:02:59,595	[INFO]	124	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:02:59,596	[INFO]	125	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:02:59,596	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:02:59,597	[INFO]	126	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:02:59,598	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:03:00,542	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:03:00,543	[INFO]	128	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:03:00,543	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:03:00,544	[INFO]	129	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:03:00,545	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:03:00,545	[INFO]	130	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:03:00,546	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:03:00,547	[INFO]	131	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:03:00,548	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:03:01,293	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:03:04,439	[INFO]	133	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:03:07,827	[INFO]	134	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 14:03:08,749	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:03:12,088	[INFO]	136	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:03:12,089	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:03:12,090	[INFO]	137	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:03:12,090	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:03:12,091	[INFO]	138	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:03:12,092	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:03:12,093	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:03:12,093	[INFO]	140	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:03:12,094	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:03:12,095	[INFO]	141	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:03:12,095	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:03:12,096	[INFO]	142	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:03:12,097	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:03:12,098	[INFO]	143	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:03:12,098	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:03:12,877	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:03:12,881	[INFO]	145	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:03:12,882	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:03:12,885	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:03:13,831	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:03:14,733	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:03:15,500	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:03:16,434	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:03:16,436	[INFO]	151	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:03:16,437	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:03:16,437	[INFO]	152	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:03:16,438	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:03:19,797	[INFO]	153	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:03:19,798	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:03:19,798	[INFO]	154	SUCCESS	+4.0	
2020-12-30 14:03:19,799	[DEBUG]	
2020-12-30 14:03:20,734	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:03:21,478	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:03:22,420	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:03:25,837	[INFO]	158	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 14:03:25,837	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 14:03:25,838	[INFO]	159	SUCCESS	+4.0	
2020-12-30 14:03:25,838	[DEBUG]	
2020-12-30 14:03:26,760	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:03:26,763	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:03:29,863	[INFO]	162	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:03:29,864	[INFO]	163	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 14:03:30,611	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:03:31,525	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:03:32,353	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:03:33,113	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:03:33,114	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:03:36,460	[INFO]	169	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:03:36,461	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 14:03:36,462	[INFO]	170	SUCCESS	+4.0	
2020-12-30 14:03:36,462	[DEBUG]	
2020-12-30 14:03:37,408	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:03:38,357	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:03:39,291	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:03:40,223	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:03:41,005	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:03:41,959	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:03:41,962	[INFO]	177	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:03:41,963	[DEBUG]	
2020-12-30 14:03:42,727	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:03:42,729	[INFO]	179	SUCCESS	+4.0	
2020-12-30 14:03:42,729	[DEBUG]	
2020-12-30 14:03:43,647	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:03:47,027	[INFO]	181	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:03:47,028	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:03:47,028	[INFO]	182	SUCCESS	+4.0	
2020-12-30 14:03:47,029	[DEBUG]	
2020-12-30 14:03:47,957	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:03:48,915	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:03:49,880	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:03:53,250	[INFO]	186	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 14:03:54,018	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:03:54,021	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:03:54,023	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:03:54,951	[INFO]	190	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:03:54,952	[INFO]	191	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:03:54,952	[DEBUG]	
2020-12-30 14:03:54,953	[INFO]	192	SUCCESS	+4.0	
2020-12-30 14:03:54,953	[DEBUG]	
2020-12-30 14:03:54,954	[INFO]	193	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 14:03:58,115	[INFO]	194	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 14:04:01,304	[INFO]	195	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 14:04:01,305	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:04:02,039	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:04:05,154	[INFO]	198	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:04:08,324	[INFO]	199	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 14:04:09,252	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:04:10,027	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:04:10,028	[INFO]	202	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:04:10,028	[DEBUG]	
2020-12-30 14:04:10,029	[INFO]	203	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:04:10,030	[INFO]	204	SUCCESS	+4.0	
2020-12-30 14:04:10,030	[DEBUG]	
2020-12-30 14:04:10,779	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:04:10,780	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:04:14,421	[INFO]	207	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:04:14,422	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:04:15,145	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:04:15,147	[INFO]	209	SUCCESS	+4.0	
2020-12-30 14:04:15,147	[DEBUG]	
2020-12-30 14:04:15,148	[INFO]	210	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:04:15,148	[DEBUG]	
2020-12-30 14:04:15,148	[INFO]	211	SUCCESS	+4.0	
2020-12-30 14:04:15,148	[DEBUG]	
2020-12-30 14:04:15,149	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:04:19,416	[INFO]	213	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:04:19,417	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:04:22,767	[INFO]	215	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:04:22,768	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 14:04:23,700	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:04:24,512	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:04:24,514	[INFO]	218	SUCCESS	+4.0	
2020-12-30 14:04:24,514	[DEBUG]	
2020-12-30 14:04:25,448	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:04:28,633	[INFO]	220	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 14:04:29,580	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:04:30,538	[INFO]	222	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:04:31,308	[INFO]	223	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:04:32,216	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:04:32,996	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:04:36,030	[INFO]	226	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:04:36,031	[INFO]	227	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 14:04:36,031	[DEBUG]	
2020-12-30 14:04:36,032	[INFO]	228	SUCCESS	+4.0	
2020-12-30 14:04:36,032	[DEBUG]	
2020-12-30 14:04:36,948	[INFO]	229	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:04:36,950	[INFO]	230	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:04:36,950	[INFO]	231	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:04:36,951	[DEBUG]	
2020-12-30 14:04:36,951	[INFO]	232	SUCCESS	+4.0	
2020-12-30 14:04:36,951	[DEBUG]	
2020-12-30 14:04:37,933	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:04:38,871	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:04:38,872	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:04:39,657	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:04:43,034	[INFO]	237	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-30 14:04:43,966	[INFO]	238	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:04:43,967	[INFO]	239	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 14:04:44,931	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:04:44,934	[INFO]	241	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 14:04:44,935	[DEBUG]	
2020-12-30 14:04:45,740	[INFO]	242	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:04:46,667	[INFO]	243	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:04:46,668	[INFO]	244	SUCCESS	+4.0	
2020-12-30 14:04:46,668	[DEBUG]	
2020-12-30 14:04:50,118	[INFO]	245	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:04:50,119	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 14:04:51,021	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:04:51,022	[INFO]	247	SUCCESS	+4.0	
2020-12-30 14:04:51,022	[DEBUG]	
2020-12-30 14:04:51,774	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:04:55,134	[INFO]	249	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:04:55,135	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:04:55,135	[INFO]	250	SUCCESS	+4.0	
2020-12-30 14:04:55,135	[DEBUG]	
2020-12-30 14:04:55,136	[INFO]	251	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:04:55,136	[DEBUG]	
2020-12-30 14:04:55,137	[INFO]	252	SUCCESS	+4.0	
2020-12-30 14:04:55,137	[DEBUG]	
2020-12-30 14:04:55,881	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:04:56,836	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:04:57,831	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:04:57,833	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:04:57,833	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:04:57,834	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:04:58,581	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:04:59,514	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:05:04,045	[INFO]	261	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:05:04,046	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:05:08,428	[INFO]	262	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-30 14:05:08,429	[INFO]	263	SUCCESS	+4.0	
2020-12-30 14:05:08,429	[DEBUG]	
2020-12-30 14:05:09,292	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:05:09,293	[INFO]	265	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:05:09,294	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 14:05:10,215	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:05:10,216	[INFO]	267	SUCCESS	+4.0	
2020-12-30 14:05:10,216	[DEBUG]	
2020-12-30 14:05:10,217	[INFO]	268	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:05:10,218	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:05:10,218	[INFO]	269	SUCCESS	+4.0	
2020-12-30 14:05:10,218	[DEBUG]	
2020-12-30 14:05:10,219	[INFO]	270	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:05:11,144	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:05:14,513	[INFO]	272	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:05:14,514	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:05:17,667	[INFO]	273	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:05:17,670	[INFO]	274	SUCCESS	+4.0	
2020-12-30 14:05:17,671	[DEBUG]	
2020-12-30 14:05:18,621	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:05:19,527	[INFO]	276	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:05:20,478	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:05:21,417	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:05:22,195	[INFO]	279	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:05:25,412	[INFO]	280	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 14:05:26,171	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:05:27,087	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:05:27,846	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:05:28,783	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:05:29,716	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:05:29,717	[INFO]	286	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:05:29,718	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:05:30,662	[INFO]	288	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:05:31,604	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:05:31,605	[INFO]	290	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:05:31,606	[DEBUG]	
2020-12-30 14:05:32,521	[INFO]	291	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:05:32,522	[INFO]	292	SUCCESS	+4.0	
2020-12-30 14:05:32,523	[DEBUG]	
2020-12-30 14:05:33,462	[INFO]	293	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:05:34,225	[INFO]	294	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:05:35,011	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:05:35,012	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:05:36,259	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:05:37,320	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:05:37,322	[INFO]	299	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:05:37,323	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-30 14:05:37,324	[INFO]	300	SUCCESS	+4.0	
2020-12-30 14:05:37,324	[DEBUG]	
2020-12-30 14:05:38,642	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:05:43,196	[INFO]	302	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:05:43,197	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:05:43,197	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:05:43,198	[INFO]	305	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 14:05:43,199	[INFO]	306	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:05:43,199	[DEBUG]	
2020-12-30 14:05:43,205	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:05:43,206	[INFO]	308	SUCCESS	+4.0	
2020-12-30 14:05:43,206	[DEBUG]	
2020-12-30 14:05:44,098	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:05:45,025	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:05:45,026	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:05:45,980	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:05:45,981	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:05:49,181	[INFO]	314	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:05:49,952	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:05:49,953	[INFO]	316	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:05:49,954	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:05:50,876	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:05:50,877	[INFO]	318	SUCCESS	+4.0	
2020-12-30 14:05:50,877	[DEBUG]	
2020-12-30 14:05:51,810	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:05:51,813	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:05:51,814	[INFO]	321	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:05:51,814	[DEBUG]	
2020-12-30 14:05:52,573	[INFO]	322	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:05:52,574	[INFO]	323	SUCCESS	+4.0	
2020-12-30 14:05:52,574	[DEBUG]	
2020-12-30 14:05:53,481	[INFO]	324	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:05:54,430	[INFO]	325	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:05:55,228	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:05:56,144	[INFO]	327	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:05:56,146	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:05:56,897	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:05:57,833	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:05:58,618	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:06:03,156	[INFO]	332	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:06:03,157	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:06:03,158	[INFO]	333	SUCCESS	+4.0	
2020-12-30 14:06:03,158	[DEBUG]	
2020-12-30 14:06:04,021	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:06:04,966	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:06:05,924	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:06:05,926	[INFO]	337	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:06:05,926	[DEBUG]	
2020-12-30 14:06:05,927	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:06:06,689	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:06:06,690	[INFO]	340	SUCCESS	+4.0	
2020-12-30 14:06:06,691	[DEBUG]	
2020-12-30 14:06:07,654	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:06:10,883	[INFO]	342	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-30 14:06:11,788	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:06:12,725	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:06:12,726	[INFO]	345	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:06:12,726	[DEBUG]	
2020-12-30 14:06:13,680	[INFO]	346	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:06:13,683	[INFO]	347	SUCCESS	+4.0	
2020-12-30 14:06:13,684	[DEBUG]	
2020-12-30 14:06:13,686	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:06:14,621	[INFO]	349	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:06:17,972	[INFO]	350	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 14:06:17,973	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 14:06:17,974	[INFO]	351	SUCCESS	+4.0	
2020-12-30 14:06:17,974	[DEBUG]	
2020-12-30 14:06:21,303	[INFO]	352	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 14:06:21,304	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:06:22,037	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:06:25,686	[INFO]	355	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:06:25,686	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:06:25,687	[INFO]	356	SUCCESS	+4.0	
2020-12-30 14:06:25,687	[DEBUG]	
2020-12-30 14:06:28,983	[INFO]	357	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 14:06:29,739	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:06:30,664	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:06:34,001	[INFO]	360	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-30 14:06:34,921	[INFO]	361	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:06:35,680	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:06:36,431	[INFO]	363	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:06:36,432	[INFO]	364	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:06:36,432	[DEBUG]	
2020-12-30 14:06:36,433	[INFO]	365	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:06:36,433	[INFO]	366	SUCCESS	+4.0	
2020-12-30 14:06:36,434	[DEBUG]	
2020-12-30 14:06:37,354	[INFO]	367	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:06:40,552	[INFO]	368	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 14:06:40,555	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:06:41,508	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:06:41,510	[INFO]	371	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:06:41,511	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:06:41,511	[INFO]	373	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 14:06:41,512	[INFO]	374	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:06:41,512	[DEBUG]	
2020-12-30 14:06:45,791	[INFO]	375	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:06:45,792	[INFO]	376	SUCCESS	+4.0	
2020-12-30 14:06:45,792	[DEBUG]	
2020-12-30 14:06:49,124	[INFO]	377	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:06:49,125	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-30 14:06:49,127	[INFO]	378	SUCCESS	+4.0	
2020-12-30 14:06:49,127	[DEBUG]	
2020-12-30 14:06:49,128	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:06:49,129	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:06:52,458	[INFO]	381	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:06:52,459	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 14:06:52,459	[INFO]	382	SUCCESS	+4.0	
2020-12-30 14:06:52,460	[DEBUG]	
2020-12-30 14:06:52,460	[INFO]	383	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-30 14:06:52,461	[DEBUG]	
2020-12-30 14:06:53,389	[INFO]	384	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:06:53,390	[INFO]	385	SUCCESS	+4.0	
2020-12-30 14:06:53,390	[DEBUG]	
2020-12-30 14:06:56,545	[INFO]	386	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:06:57,478	[INFO]	387	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:06:57,479	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:06:58,234	[INFO]	389	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:07:01,534	[INFO]	390	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:07:01,535	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-30 14:07:02,291	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:07:02,292	[INFO]	392	SUCCESS	+4.0	
2020-12-30 14:07:02,292	[DEBUG]	
2020-12-30 14:07:03,209	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:07:04,144	[INFO]	394	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:07:04,910	[INFO]	395	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:07:05,660	[INFO]	396	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:07:06,585	[INFO]	397	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:07:07,524	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:07:08,445	[INFO]	399	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:07:09,200	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:07:10,129	[INFO]	401	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:07:10,919	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:07:11,824	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:07:14,915	[INFO]	404	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:07:14,916	[INFO]	405	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:07:14,917	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:07:19,144	[INFO]	407	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:07:19,146	[INFO]	408	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:07:19,146	[DEBUG]	
2020-12-30 14:07:19,853	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:07:19,855	[INFO]	410	SUCCESS	+4.0	
2020-12-30 14:07:19,855	[DEBUG]	
2020-12-30 14:07:20,759	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:07:21,681	[INFO]	412	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:07:24,935	[INFO]	413	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 14:07:25,868	[INFO]	414	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:07:26,811	[INFO]	415	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:07:26,813	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:07:27,737	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:07:28,678	[INFO]	418	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:07:29,650	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:07:30,582	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:07:30,584	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:07:31,530	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:07:31,531	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:07:31,532	[INFO]	424	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:07:31,532	[DEBUG]	
2020-12-30 14:07:34,975	[INFO]	425	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:07:34,976	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-30 14:07:34,977	[INFO]	426	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:07:34,977	[DEBUG]	
2020-12-30 14:07:34,978	[INFO]	427	SUCCESS	+4.0	
2020-12-30 14:07:34,978	[DEBUG]	
2020-12-30 14:07:35,706	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:07:36,603	[INFO]	429	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:07:37,537	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:07:38,468	[INFO]	431	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:07:39,231	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:07:42,371	[INFO]	433	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:07:43,285	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:07:44,229	[INFO]	435	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:07:47,390	[INFO]	436	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 14:07:48,144	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:07:49,072	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:07:49,074	[INFO]	439	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-30 14:07:50,002	[INFO]	440	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:07:53,322	[INFO]	441	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:07:53,323	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:07:53,324	[INFO]	442	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:07:53,324	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:07:53,325	[INFO]	443	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:07:53,325	[DEBUG]	
2020-12-30 14:07:53,326	[INFO]	444	SUCCESS	+4.0	
2020-12-30 14:07:53,326	[DEBUG]	
2020-12-30 14:07:54,256	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:07:55,184	[INFO]	446	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:07:55,947	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:07:56,861	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:08:00,264	[INFO]	449	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-30 14:08:00,265	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-30 14:08:00,266	[INFO]	450	SUCCESS	+4.0	
2020-12-30 14:08:00,266	[DEBUG]	
2020-12-30 14:08:01,207	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:08:05,498	[INFO]	452	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:08:06,347	[INFO]	453	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-30 14:08:06,348	[INFO]	454	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:08:06,349	[INFO]	455	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:08:07,265	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:08:08,205	[INFO]	457	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:08:11,272	[INFO]	458	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:08:12,214	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:08:12,985	[INFO]	460	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:08:12,986	[INFO]	461	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:08:13,905	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:08:13,906	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:08:13,907	[INFO]	464	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:08:13,907	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:08:14,670	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:08:15,586	[INFO]	466	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:08:15,587	[INFO]	467	SUCCESS	+4.0	
2020-12-30 14:08:15,587	[DEBUG]	
2020-12-30 14:08:16,340	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-30 14:08:17,272	[INFO]	469	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:08:20,674	[INFO]	470	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:08:21,606	[INFO]	471	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:08:25,313	[INFO]	472	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-30 14:08:25,313	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:08:25,314	[INFO]	473	SUCCESS	+4.0	
2020-12-30 14:08:25,314	[DEBUG]	
2020-12-30 14:08:29,779	[INFO]	474	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:08:29,779	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-30 14:08:29,780	[INFO]	475	SUCCESS	+4.0	
2020-12-30 14:08:29,780	[DEBUG]	
2020-12-30 14:08:30,474	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:08:31,374	[INFO]	477	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:08:31,375	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:08:31,376	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:08:31,377	[INFO]	480	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-30 14:08:32,300	[INFO]	481	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:08:33,238	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-30 14:08:33,240	[INFO]	483	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-30 14:08:33,240	[INFO]	484	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-30 14:08:36,622	[INFO]	485	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:08:36,623	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 14:08:39,962	[INFO]	486	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-30 14:08:43,262	[INFO]	487	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-30 14:08:46,746	[INFO]	488	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:08:46,747	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,23 ****
--- 15,29 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 14:08:47,500	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-30 14:08:47,501	[INFO]	490	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-30 14:08:47,502	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-30 14:08:47,503	[INFO]	491	SUCCESS	+4.0	
2020-12-30 14:08:47,503	[DEBUG]	
2020-12-30 14:08:48,417	[INFO]	492	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:08:49,327	[INFO]	493	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-30 14:08:50,289	[INFO]	494	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-30 14:08:51,221	[INFO]	495	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:08:52,166	[INFO]	496	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-30 14:08:55,357	[INFO]	497	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-30 14:08:56,292	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-30 14:08:59,394	[INFO]	499	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-30 14:09:02,559	[INFO]	500	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-30 14:09:02,559	[INFO]	==== END ====
2020-12-30 14:09:02,559	[INFO]	Reason: step budget
2020-12-30 14:09:02,560	[INFO]	
2020-12-30 14:09:02,560	[INFO]	========== REPORT ==========
2020-12-30 14:09:02,560	[INFO]	==== Epoch 1 ====
2020-12-30 14:09:02,560	[INFO]	Termination: step budget
2020-12-30 14:09:02,560	[INFO]	Number of interations: 500
2020-12-30 14:09:02,560	[INFO]	==== Epoch 2 ====
2020-12-30 14:09:02,560	[INFO]	Termination: step budget
2020-12-30 14:09:02,561	[INFO]	Number of interations: 500
2020-12-30 14:09:02,561	[INFO]	==== Epoch 3 ====
2020-12-30 14:09:02,561	[INFO]	Termination: step budget
2020-12-30 14:09:02,561	[INFO]	Number of interations: 500
2020-12-30 14:09:02,561	[INFO]	==== Epoch 4 ====
2020-12-30 14:09:02,561	[INFO]	Termination: step budget
2020-12-30 14:09:02,561	[INFO]	Number of interations: 500
2020-12-30 14:09:02,561	[INFO]	==== Epoch 5 ====
2020-12-30 14:09:02,561	[INFO]	Termination: step budget
2020-12-30 14:09:02,561	[INFO]	Number of interations: 500
2020-12-30 14:09:02,561	[INFO]	==== Epoch 6 ====
2020-12-30 14:09:02,561	[INFO]	Termination: step budget
2020-12-30 14:09:02,561	[INFO]	Number of interations: 500
2020-12-30 14:09:02,561	[INFO]	==== Epoch 7 ====
2020-12-30 14:09:02,561	[INFO]	Termination: step budget
2020-12-30 14:09:02,561	[INFO]	Number of interations: 500
2020-12-30 14:09:02,561	[INFO]	==== Epoch 8 ====
2020-12-30 14:09:02,561	[INFO]	Termination: step budget
2020-12-30 14:09:02,562	[INFO]	Number of interations: 500
2020-12-30 14:09:02,562	[INFO]	==== Epoch 9 ====
2020-12-30 14:09:02,562	[INFO]	Termination: step budget
2020-12-30 14:09:02,562	[INFO]	Number of interations: 500
2020-12-30 14:09:02,562	[INFO]	==== Epoch 10 ====
2020-12-30 14:09:02,562	[INFO]	Termination: step budget
2020-12-30 14:09:02,562	[INFO]	Number of interations: 500
2020-12-30 14:09:02,562	[INFO]	==== Epoch 11 ====
2020-12-30 14:09:02,562	[INFO]	Termination: step budget
2020-12-30 14:09:02,562	[INFO]	Number of interations: 500
2020-12-30 14:09:02,562	[INFO]	==== Epoch 12 ====
2020-12-30 14:09:02,562	[INFO]	Termination: step budget
2020-12-30 14:09:02,562	[INFO]	Number of interations: 500
2020-12-30 14:09:02,562	[INFO]	==== Epoch 13 ====
2020-12-30 14:09:02,562	[INFO]	Termination: step budget
2020-12-30 14:09:02,562	[INFO]	Number of interations: 500
2020-12-30 14:09:02,562	[INFO]	==== Epoch 14 ====
2020-12-30 14:09:02,563	[INFO]	Termination: step budget
2020-12-30 14:09:02,563	[INFO]	Number of interations: 500
2020-12-30 14:09:02,563	[INFO]	==== Epoch 15 ====
2020-12-30 14:09:02,563	[INFO]	Termination: step budget
2020-12-30 14:09:02,563	[INFO]	Number of interations: 500
2020-12-30 14:09:02,563	[INFO]	==== Epoch 16 ====
2020-12-30 14:09:02,563	[INFO]	Termination: step budget
2020-12-30 14:09:02,563	[INFO]	Number of interations: 500
2020-12-30 14:09:02,563	[INFO]	==== Epoch 17 ====
2020-12-30 14:09:02,563	[INFO]	Termination: step budget
2020-12-30 14:09:02,563	[INFO]	Number of interations: 500
2020-12-30 14:09:02,563	[INFO]	==== Epoch 18 ====
2020-12-30 14:09:02,563	[INFO]	Termination: step budget
2020-12-30 14:09:02,564	[INFO]	Number of interations: 500
2020-12-30 14:09:02,564	[INFO]	==== Epoch 19 ====
2020-12-30 14:09:02,564	[INFO]	Termination: step budget
2020-12-30 14:09:02,564	[INFO]	Number of interations: 500
2020-12-30 14:09:02,564	[INFO]	==== Epoch 20 ====
2020-12-30 14:09:02,564	[INFO]	Termination: step budget
2020-12-30 14:09:02,564	[INFO]	Number of interations: 500
2020-12-30 14:09:02,569	[INFO]	Experiment duration: 10363.65318608284
