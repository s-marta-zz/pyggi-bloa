2020-12-28 23:36:20,211	[INFO]	Path to the temporal program variants: ./.pyggi/tmp_variants/QuixBugs/1609194980
2020-12-28 23:36:20,211	[INFO]	========== EXPERIMENT FOR ['java_programs/DEPTH_FIRST_SEARCH.java.xml']  ==========
2020-12-28 23:36:20,211	[INFO]	modification points:
 ['./decl_stmt[1]', './if[1]', './if[1]/return[1]', './if[2]', './if[2]/operator_comp[1]', './if[2]/return[1]', './for[1]', './for[1]/if[1]', './for[1]/if[1]/return[1]', './return[1]', './decl_stmt[2]', './return[2]']
2020-12-28 23:36:20,211	[INFO]	number of statements and comparisons: 11, 1
2020-12-28 23:36:20,211	[INFO]	========== EPOCH 1 ==========
2020-12-28 23:36:20,211	[INFO]	==== WARMUP ====
2020-12-28 23:36:23,537	[INFO]	WARM	SUCCESS	 1.0	
2020-12-28 23:36:23,537	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:36:26,741	[INFO]	WARM	SUCCESS	 1.0	
2020-12-28 23:36:26,741	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:36:29,947	[INFO]	WARM	SUCCESS	 1.0	
2020-12-28 23:36:29,947	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:36:33,139	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-28 23:36:33,139	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:36:33,139	[INFO]	==== START ====
2020-12-28 23:36:34,063	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:36:34,950	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:36:34,952	[INFO]	3	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:36:34,952	[DEBUG]	
2020-12-28 23:36:35,840	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:36:35,841	[INFO]	5	SUCCESS	+1.0	
2020-12-28 23:36:35,841	[DEBUG]	
2020-12-28 23:36:39,002	[INFO]	6	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:36:39,003	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-28 23:36:42,278	[INFO]	7	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:36:43,191	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:36:44,108	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:36:44,111	[INFO]	10	SUCCESS	+1.0	
2020-12-28 23:36:44,111	[DEBUG]	
2020-12-28 23:36:45,039	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:36:45,959	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:36:49,158	[INFO]	13	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:36:49,899	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:36:53,142	[INFO]	15	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:36:54,038	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:36:54,804	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:36:58,010	[INFO]	18	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:36:58,011	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:36:58,757	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:36:58,758	[INFO]	20	SUCCESS	+1.0	
2020-12-28 23:36:58,759	[DEBUG]	
2020-12-28 23:36:59,658	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:37:00,602	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:37:01,557	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:37:02,344	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:37:02,345	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:37:03,247	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:37:04,149	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:37:05,083	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:37:06,034	[INFO]	29	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-28 23:37:06,037	[INFO]	30	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:37:06,038	[DEBUG]	
2020-12-28 23:37:06,955	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:37:07,882	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:37:07,883	[INFO]	33	SUCCESS	+1.0	
2020-12-28 23:37:07,883	[DEBUG]	
2020-12-28 23:37:07,884	[INFO]	34	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:37:07,884	[DEBUG]	
2020-12-28 23:37:07,884	[INFO]	35	SUCCESS	+1.0	
2020-12-28 23:37:07,885	[DEBUG]	
2020-12-28 23:37:07,885	[INFO]	36	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:37:07,885	[DEBUG]	
2020-12-28 23:37:07,886	[INFO]	37	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:37:07,887	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-28 23:37:07,887	[INFO]	38	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:37:07,888	[DEBUG]	
2020-12-28 23:37:07,888	[INFO]	39	SUCCESS	+1.0	
2020-12-28 23:37:07,888	[DEBUG]	
2020-12-28 23:37:08,642	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:37:09,550	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:37:10,473	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:37:11,395	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:37:11,396	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:37:12,323	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:37:12,324	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:37:13,243	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:37:16,426	[INFO]	48	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:37:16,427	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:37:17,350	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:37:20,626	[INFO]	51	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:37:20,627	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-28 23:37:21,520	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:37:21,521	[INFO]	53	SUCCESS	+1.0	
2020-12-28 23:37:21,522	[DEBUG]	
2020-12-28 23:37:24,752	[INFO]	54	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:37:24,754	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-28 23:37:24,756	[INFO]	55	SUCCESS	+1.0	
2020-12-28 23:37:24,757	[DEBUG]	
2020-12-28 23:37:28,029	[INFO]	56	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-28 23:37:28,797	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:37:29,722	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:37:29,723	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:37:30,638	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:37:33,858	[INFO]	61	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:37:34,775	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:37:38,005	[INFO]	63	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:37:38,006	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-28 23:37:38,006	[INFO]	64	SUCCESS	+1.0	
2020-12-28 23:37:38,007	[DEBUG]	
2020-12-28 23:37:41,258	[INFO]	65	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:37:42,172	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:37:43,086	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:37:44,074	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:37:44,828	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:37:48,059	[INFO]	70	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:37:48,060	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-28 23:37:48,980	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:37:52,230	[INFO]	72	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:37:52,988	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:37:52,989	[INFO]	74	SUCCESS	+1.0	
2020-12-28 23:37:52,990	[DEBUG]	
2020-12-28 23:37:56,193	[INFO]	75	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:37:56,194	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:37:56,195	[INFO]	76	SUCCESS	+1.0	
2020-12-28 23:37:56,195	[DEBUG]	
2020-12-28 23:37:59,411	[INFO]	77	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:38:02,639	[INFO]	78	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:38:02,640	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:38:02,641	[INFO]	79	SUCCESS	+1.0	
2020-12-28 23:38:02,641	[DEBUG]	
2020-12-28 23:38:03,573	[INFO]	80	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:38:04,480	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:38:07,670	[INFO]	82	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:38:10,895	[INFO]	83	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:38:10,896	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:38:10,897	[INFO]	84	SUCCESS	+1.0	
2020-12-28 23:38:10,897	[DEBUG]	
2020-12-28 23:38:10,898	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:38:11,820	[INFO]	86	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-28 23:38:15,081	[INFO]	87	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:38:15,083	[INFO]	88	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:38:15,083	[DEBUG]	
2020-12-28 23:38:18,365	[INFO]	89	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:38:18,366	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-28 23:38:21,562	[INFO]	90	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:38:21,563	[INFO]	91	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:38:21,563	[DEBUG]	
2020-12-28 23:38:22,510	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:38:22,511	[INFO]	93	SUCCESS	+1.0	
2020-12-28 23:38:22,511	[DEBUG]	
2020-12-28 23:38:25,779	[INFO]	94	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:38:25,780	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-28 23:38:25,781	[INFO]	95	SUCCESS	+1.0	
2020-12-28 23:38:25,781	[DEBUG]	
2020-12-28 23:38:26,704	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:38:27,459	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:38:28,413	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:38:28,415	[INFO]	99	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:38:31,708	[INFO]	100	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:38:31,709	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-28 23:38:34,992	[INFO]	101	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:38:34,993	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,23 ****
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
!                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
!                     return false;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-28 23:38:35,901	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:38:35,902	[INFO]	103	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:38:35,902	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-28 23:38:36,812	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:38:37,580	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:38:37,582	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:38:37,582	[INFO]	107	SUCCESS	+1.0	
2020-12-28 23:38:37,582	[DEBUG]	
2020-12-28 23:38:38,490	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:38:39,275	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:38:42,543	[INFO]	110	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:38:42,544	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:38:43,445	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:38:44,221	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:38:45,127	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:38:46,023	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:38:49,241	[INFO]	115	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-28 23:38:49,242	[INFO]	116	SUCCESS	+1.0	
2020-12-28 23:38:49,242	[DEBUG]	
2020-12-28 23:38:50,161	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:38:53,440	[INFO]	118	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:38:53,441	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-28 23:38:53,442	[INFO]	119	SUCCESS	+1.0	
2020-12-28 23:38:53,442	[DEBUG]	
2020-12-28 23:38:54,382	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:38:55,288	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:38:58,489	[INFO]	122	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:38:58,490	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-28 23:38:59,253	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:38:59,254	[INFO]	124	SUCCESS	+1.0	
2020-12-28 23:38:59,254	[DEBUG]	
2020-12-28 23:39:00,149	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:39:01,069	[INFO]	126	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-28 23:39:01,995	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:39:02,790	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:39:06,032	[INFO]	129	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:39:06,034	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-28 23:39:06,036	[INFO]	130	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:39:06,037	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-28 23:39:06,966	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-28 23:39:10,223	[INFO]	132	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:39:10,224	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,22 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-28 23:39:10,225	[INFO]	133	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:39:10,225	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-28 23:39:13,423	[INFO]	134	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:39:13,424	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,22 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-28 23:39:16,653	[INFO]	135	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:39:17,414	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:39:20,669	[INFO]	137	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:39:20,670	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,22 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
+                     return true;
+                 }
+ else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-28 23:39:20,671	[INFO]	138	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:39:20,672	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,22 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
+                     return true;
+                 }
+ else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-28 23:39:21,423	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:39:24,677	[INFO]	140	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:39:24,678	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,22 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 15,25 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
+                     return true;
+                 }
+ else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-28 23:39:25,585	[INFO]	141	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:39:28,778	[INFO]	142	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:39:28,779	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-28 23:39:29,509	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:39:29,510	[INFO]	144	SUCCESS	+1.0	
2020-12-28 23:39:29,511	[DEBUG]	
2020-12-28 23:39:32,754	[INFO]	145	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:39:33,526	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:39:34,271	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:39:35,196	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:39:36,121	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:39:39,328	[INFO]	150	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:39:40,087	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:39:41,013	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:39:44,238	[INFO]	153	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:39:44,239	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:39:44,990	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:39:44,992	[INFO]	155	SUCCESS	+1.0	
2020-12-28 23:39:44,992	[DEBUG]	
2020-12-28 23:39:45,899	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:39:46,825	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:39:47,747	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:39:47,748	[INFO]	159	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:39:47,748	[DEBUG]	
2020-12-28 23:39:47,749	[INFO]	160	SUCCESS	+1.0	
2020-12-28 23:39:47,749	[DEBUG]	
2020-12-28 23:39:48,675	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:39:49,573	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:39:50,466	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:39:50,467	[INFO]	164	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:39:50,467	[DEBUG]	
2020-12-28 23:39:50,468	[INFO]	165	SUCCESS	+1.0	
2020-12-28 23:39:50,468	[DEBUG]	
2020-12-28 23:39:51,230	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:39:51,981	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:39:52,898	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:39:52,899	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:39:53,676	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:39:54,624	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:39:54,625	[INFO]	172	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:39:54,626	[DEBUG]	
2020-12-28 23:39:57,824	[INFO]	173	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:39:58,731	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:39:58,732	[INFO]	175	SUCCESS	+1.0	
2020-12-28 23:39:58,732	[DEBUG]	
2020-12-28 23:39:59,671	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:39:59,673	[INFO]	177	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:40:00,590	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:40:00,591	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:40:01,522	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:40:04,753	[INFO]	181	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:40:04,754	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-28 23:40:04,754	[INFO]	==== END ====
2020-12-28 23:40:04,755	[INFO]	Reason: target fitness reached
2020-12-28 23:40:04,755	[INFO]	
2020-12-28 23:40:04,755	[INFO]	========== EPOCH 2 ==========
2020-12-28 23:40:04,756	[INFO]	==== WARMUP ====
2020-12-28 23:40:07,960	[INFO]	WARM	SUCCESS	 1.0	
2020-12-28 23:40:07,960	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:40:11,191	[INFO]	WARM	SUCCESS	 1.0	
2020-12-28 23:40:11,191	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:40:14,324	[INFO]	WARM	SUCCESS	 1.0	
2020-12-28 23:40:14,324	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:40:17,542	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-28 23:40:17,543	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:40:17,543	[INFO]	==== START ====
2020-12-28 23:40:18,479	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:40:19,406	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:40:20,171	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:40:20,172	[INFO]	4	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:40:20,172	[DEBUG]	
2020-12-28 23:40:20,173	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:40:21,101	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:40:21,102	[INFO]	7	SUCCESS	+1.0	
2020-12-28 23:40:21,103	[DEBUG]	
2020-12-28 23:40:22,001	[INFO]	8	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:40:25,261	[INFO]	9	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:40:25,262	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-28 23:40:28,526	[INFO]	10	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:40:28,527	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {
***************
*** 23,28 ****
--- 25,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-28 23:40:29,430	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:40:32,702	[INFO]	12	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:40:36,178	[INFO]	13	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:40:36,179	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:40:36,180	[INFO]	14	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:40:36,181	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:40:36,182	[INFO]	15	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:40:36,183	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:40:36,183	[INFO]	16	SUCCESS	+1.0	
2020-12-28 23:40:36,184	[DEBUG]	
2020-12-28 23:40:37,466	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:40:38,717	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:40:41,978	[INFO]	19	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:40:42,885	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:40:46,149	[INFO]	21	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:40:46,150	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-28 23:40:46,151	[INFO]	22	SUCCESS	+1.0	
2020-12-28 23:40:46,151	[DEBUG]	
2020-12-28 23:40:47,063	[INFO]	23	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-28 23:40:47,991	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:40:48,920	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:40:49,663	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:40:50,584	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:40:53,781	[INFO]	28	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:40:53,782	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:40:53,782	[INFO]	29	SUCCESS	+1.0	
2020-12-28 23:40:53,783	[DEBUG]	
2020-12-28 23:40:54,710	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:40:54,712	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:40:55,460	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:40:58,713	[INFO]	33	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:40:58,715	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-28 23:40:58,716	[INFO]	==== END ====
2020-12-28 23:40:58,716	[INFO]	Reason: target fitness reached
2020-12-28 23:40:58,718	[INFO]	
2020-12-28 23:40:58,718	[INFO]	========== EPOCH 3 ==========
2020-12-28 23:40:58,718	[INFO]	==== WARMUP ====
2020-12-28 23:41:01,905	[INFO]	WARM	SUCCESS	 1.0	
2020-12-28 23:41:01,905	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:41:05,148	[INFO]	WARM	SUCCESS	 1.0	
2020-12-28 23:41:05,148	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:41:08,395	[INFO]	WARM	SUCCESS	 1.0	
2020-12-28 23:41:08,395	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:41:11,635	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-28 23:41:11,635	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:41:11,635	[INFO]	==== START ====
2020-12-28 23:41:14,871	[INFO]	1	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:41:14,872	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:41:14,872	[INFO]	2	SUCCESS	+1.0	
2020-12-28 23:41:14,873	[DEBUG]	
2020-12-28 23:41:15,790	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:41:16,734	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:41:17,505	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:41:17,507	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:41:18,445	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:41:19,358	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:41:20,280	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:41:21,075	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:41:21,984	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:41:22,770	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:41:23,692	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:41:26,879	[INFO]	14	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:41:30,048	[INFO]	15	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:41:30,956	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:41:34,132	[INFO]	17	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:41:34,133	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:41:35,065	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:41:38,330	[INFO]	19	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:41:38,331	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,24 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:41:41,571	[INFO]	20	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:41:42,476	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:41:42,478	[INFO]	22	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:41:42,478	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:41:42,478	[INFO]	23	SUCCESS	+1.0	
2020-12-28 23:41:42,479	[DEBUG]	
2020-12-28 23:41:45,736	[INFO]	24	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:41:48,984	[INFO]	25	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:41:49,886	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:41:50,798	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:41:53,961	[INFO]	28	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:41:57,199	[INFO]	29	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:41:57,955	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:41:58,856	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:41:59,782	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:42:02,960	[INFO]	33	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:42:02,961	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-28 23:42:02,962	[INFO]	34	SUCCESS	+1.0	
2020-12-28 23:42:02,962	[DEBUG]	
2020-12-28 23:42:03,826	[INFO]	35	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:42:03,828	[INFO]	36	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:42:04,751	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:42:07,994	[INFO]	38	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:42:07,995	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-28 23:42:08,756	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:42:09,688	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:42:12,932	[INFO]	41	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:42:12,933	[INFO]	42	SUCCESS	+1.0	
2020-12-28 23:42:12,933	[DEBUG]	
2020-12-28 23:42:13,793	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:42:13,794	[INFO]	44	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:42:13,794	[DEBUG]	
2020-12-28 23:42:13,795	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:42:13,796	[INFO]	46	SUCCESS	+1.0	
2020-12-28 23:42:13,796	[DEBUG]	
2020-12-28 23:42:14,699	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:42:15,639	[INFO]	48	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:42:15,642	[INFO]	49	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:42:15,643	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-28 23:42:15,645	[INFO]	50	SUCCESS	+1.0	
2020-12-28 23:42:15,645	[DEBUG]	
2020-12-28 23:42:15,647	[INFO]	51	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:42:18,856	[INFO]	52	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:42:18,858	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:42:18,859	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:42:18,859	[INFO]	55	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:42:18,860	[DEBUG]	
2020-12-28 23:42:22,083	[INFO]	56	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:42:22,084	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-28 23:42:22,085	[INFO]	57	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:42:22,086	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-28 23:42:22,087	[INFO]	58	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:42:22,087	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-28 23:42:22,088	[INFO]	59	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:42:22,088	[DEBUG]	
2020-12-28 23:42:23,032	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:42:23,033	[INFO]	61	SUCCESS	+1.0	
2020-12-28 23:42:23,033	[DEBUG]	
2020-12-28 23:42:23,942	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:42:27,173	[INFO]	63	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:42:27,174	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:42:28,092	[INFO]	64	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:42:28,094	[INFO]	65	SUCCESS	+1.0	
2020-12-28 23:42:28,094	[DEBUG]	
2020-12-28 23:42:28,095	[INFO]	66	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:42:28,095	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:42:28,096	[INFO]	67	SUCCESS	+1.0	
2020-12-28 23:42:28,096	[DEBUG]	
2020-12-28 23:42:28,865	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:42:29,779	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:42:33,031	[INFO]	70	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:42:33,033	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:42:36,213	[INFO]	72	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:42:36,214	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:42:37,086	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:42:37,087	[INFO]	74	SUCCESS	+1.0	
2020-12-28 23:42:37,087	[DEBUG]	
2020-12-28 23:42:37,998	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:42:37,999	[INFO]	76	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:42:37,999	[DEBUG]	
2020-12-28 23:42:38,902	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:42:39,827	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:42:39,829	[INFO]	79	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:42:39,829	[DEBUG]	
2020-12-28 23:42:40,742	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:42:40,743	[INFO]	81	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:42:40,743	[DEBUG]	
2020-12-28 23:42:40,744	[INFO]	82	SUCCESS	+1.0	
2020-12-28 23:42:40,744	[DEBUG]	
2020-12-28 23:42:43,971	[INFO]	83	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:42:44,899	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:42:45,801	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:42:46,580	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:42:49,750	[INFO]	87	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:42:49,751	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-28 23:42:50,675	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:42:50,677	[INFO]	89	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:42:50,677	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-28 23:42:50,678	[INFO]	90	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:42:50,678	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-28 23:42:50,679	[INFO]	91	SUCCESS	+1.0	
2020-12-28 23:42:50,679	[DEBUG]	
2020-12-28 23:42:50,680	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:42:53,975	[INFO]	93	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:42:53,976	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-28 23:42:53,977	[INFO]	94	SUCCESS	+1.0	
2020-12-28 23:42:53,977	[DEBUG]	
2020-12-28 23:42:53,978	[INFO]	95	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:42:53,978	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-28 23:42:53,979	[INFO]	96	SUCCESS	+1.0	
2020-12-28 23:42:53,979	[DEBUG]	
2020-12-28 23:42:53,980	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:42:53,981	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:42:53,981	[INFO]	99	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:42:53,982	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:42:53,982	[INFO]	100	SUCCESS	+1.0	
2020-12-28 23:42:53,982	[DEBUG]	
2020-12-28 23:42:57,178	[INFO]	101	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:42:57,179	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-28 23:42:57,179	[INFO]	102	SUCCESS	+1.0	
2020-12-28 23:42:57,180	[DEBUG]	
2020-12-28 23:42:58,077	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:42:58,078	[INFO]	104	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:42:58,079	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:42:58,987	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:42:58,988	[INFO]	106	SUCCESS	+1.0	
2020-12-28 23:42:58,988	[DEBUG]	
2020-12-28 23:42:59,917	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:42:59,918	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:43:00,834	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:43:01,608	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:43:04,831	[INFO]	111	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:43:05,739	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:43:06,670	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:43:09,886	[INFO]	114	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:43:09,887	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-28 23:43:09,888	[INFO]	115	SUCCESS	+1.0	
2020-12-28 23:43:09,888	[DEBUG]	
2020-12-28 23:43:13,110	[INFO]	116	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:43:13,111	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-28 23:43:13,842	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:43:13,843	[INFO]	118	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:43:13,844	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-28 23:43:13,845	[INFO]	119	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:43:13,845	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-28 23:43:14,745	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:43:14,747	[INFO]	121	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:43:14,748	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-28 23:43:14,749	[INFO]	122	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:43:14,750	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-28 23:43:15,516	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:43:16,420	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:43:16,421	[INFO]	125	SUCCESS	+1.0	
2020-12-28 23:43:16,421	[DEBUG]	
2020-12-28 23:43:16,422	[INFO]	126	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:43:16,422	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-28 23:43:16,423	[INFO]	127	SUCCESS	+1.0	
2020-12-28 23:43:16,423	[DEBUG]	
2020-12-28 23:43:19,623	[INFO]	128	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:43:22,837	[INFO]	129	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-28 23:43:23,747	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:43:24,527	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:43:25,282	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:43:28,491	[INFO]	133	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:43:28,492	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-28 23:43:29,397	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:43:29,398	[INFO]	135	SUCCESS	+1.0	
2020-12-28 23:43:29,398	[DEBUG]	
2020-12-28 23:43:32,869	[INFO]	136	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:43:33,760	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:43:33,762	[INFO]	138	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:43:34,640	[INFO]	139	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:43:35,398	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:43:36,137	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:43:39,368	[INFO]	142	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:43:39,368	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-28 23:43:39,369	[INFO]	143	SUCCESS	+1.0	
2020-12-28 23:43:39,369	[DEBUG]	
2020-12-28 23:43:40,284	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:43:43,469	[INFO]	145	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:43:44,219	[INFO]	146	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:43:44,220	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:43:45,131	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:43:46,060	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:43:46,951	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:43:47,864	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:43:47,866	[INFO]	152	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:43:48,788	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:43:52,041	[INFO]	154	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:43:52,967	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:43:52,969	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:43:53,883	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:43:54,816	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:43:58,017	[INFO]	159	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:43:58,018	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-28 23:43:58,019	[INFO]	160	SUCCESS	+1.0	
2020-12-28 23:43:58,019	[DEBUG]	
2020-12-28 23:43:58,945	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:43:58,947	[INFO]	162	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:43:58,947	[DEBUG]	
2020-12-28 23:43:58,947	[INFO]	163	SUCCESS	+1.0	
2020-12-28 23:43:58,948	[DEBUG]	
2020-12-28 23:43:59,863	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:44:00,651	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:44:01,402	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:44:02,156	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:44:03,062	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:44:03,971	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:44:07,197	[INFO]	170	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:44:07,198	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-28 23:44:07,958	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:44:08,835	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:44:08,836	[INFO]	173	SUCCESS	+1.0	
2020-12-28 23:44:08,836	[DEBUG]	
2020-12-28 23:44:11,994	[INFO]	174	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:44:12,923	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:44:13,837	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:44:14,607	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:44:15,518	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:44:18,727	[INFO]	179	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:44:21,965	[INFO]	180	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:44:22,880	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:44:23,775	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:44:24,710	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:44:25,662	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:44:26,592	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:44:27,513	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:44:28,439	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:44:31,745	[INFO]	188	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:44:31,748	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:44:32,696	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:44:33,599	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:44:34,521	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:44:34,522	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:44:35,431	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:44:35,432	[INFO]	195	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:44:35,433	[DEBUG]	
2020-12-28 23:44:35,433	[INFO]	196	SUCCESS	+1.0	
2020-12-28 23:44:35,434	[DEBUG]	
2020-12-28 23:44:38,651	[INFO]	197	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:44:38,652	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-28 23:44:38,653	[INFO]	198	SUCCESS	+1.0	
2020-12-28 23:44:38,653	[DEBUG]	
2020-12-28 23:44:39,468	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:44:39,470	[INFO]	200	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:44:40,381	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:44:40,382	[INFO]	202	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:44:40,382	[DEBUG]	
2020-12-28 23:44:40,383	[INFO]	203	SUCCESS	+1.0	
2020-12-28 23:44:40,383	[DEBUG]	
2020-12-28 23:44:40,384	[INFO]	204	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:44:40,384	[DEBUG]	
2020-12-28 23:44:41,308	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:44:41,309	[INFO]	206	SUCCESS	+1.0	
2020-12-28 23:44:41,310	[DEBUG]	
2020-12-28 23:44:44,526	[INFO]	207	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:44:44,527	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-28 23:44:45,458	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:44:46,398	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:44:47,160	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:44:47,161	[INFO]	211	SUCCESS	+1.0	
2020-12-28 23:44:47,161	[DEBUG]	
2020-12-28 23:44:50,376	[INFO]	212	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:44:51,267	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:44:51,268	[INFO]	214	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:44:51,268	[DEBUG]	
2020-12-28 23:44:52,180	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:44:53,108	[INFO]	216	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:44:53,109	[INFO]	217	SUCCESS	+1.0	
2020-12-28 23:44:53,110	[DEBUG]	
2020-12-28 23:44:53,881	[INFO]	218	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:44:57,086	[INFO]	219	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:44:57,087	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-28 23:44:57,088	[INFO]	220	SUCCESS	+1.0	
2020-12-28 23:44:57,088	[DEBUG]	
2020-12-28 23:44:57,986	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:44:58,750	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:44:59,657	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:45:00,405	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:45:01,315	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:45:02,265	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:45:03,189	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:45:06,449	[INFO]	228	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:45:06,449	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-28 23:45:06,450	[INFO]	229	SUCCESS	+1.0	
2020-12-28 23:45:06,450	[DEBUG]	
2020-12-28 23:45:09,688	[INFO]	230	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-28 23:45:10,546	[INFO]	231	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:45:10,547	[INFO]	232	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:45:10,547	[DEBUG]	
2020-12-28 23:45:10,548	[INFO]	233	SUCCESS	+1.0	
2020-12-28 23:45:10,548	[DEBUG]	
2020-12-28 23:45:11,316	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:45:14,513	[INFO]	235	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:45:17,685	[INFO]	236	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:45:18,439	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:45:19,179	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:45:20,051	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:45:21,034	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:45:24,278	[INFO]	241	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:45:24,279	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-28 23:45:24,279	[INFO]	242	SUCCESS	+1.0	
2020-12-28 23:45:24,280	[DEBUG]	
2020-12-28 23:45:24,280	[INFO]	243	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:45:24,281	[DEBUG]	
2020-12-28 23:45:24,281	[INFO]	244	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:45:24,282	[DEBUG]	
2020-12-28 23:45:24,282	[INFO]	245	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:45:24,282	[DEBUG]	
2020-12-28 23:45:24,283	[INFO]	246	SUCCESS	+1.0	
2020-12-28 23:45:24,283	[DEBUG]	
2020-12-28 23:45:25,189	[INFO]	247	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:45:28,408	[INFO]	248	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:45:28,409	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-28 23:45:31,700	[INFO]	249	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:45:31,701	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-28 23:45:32,578	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:45:36,086	[INFO]	251	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:45:36,088	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:45:36,090	[INFO]	252	SUCCESS	+1.0	
2020-12-28 23:45:36,090	[DEBUG]	
2020-12-28 23:45:36,092	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:45:37,028	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:45:37,817	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:45:38,756	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:45:39,563	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:45:40,466	[INFO]	258	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:45:40,468	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:45:40,469	[INFO]	260	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:45:41,319	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:45:44,573	[INFO]	262	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:45:44,573	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-28 23:45:45,322	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:45:45,323	[INFO]	264	SUCCESS	+1.0	
2020-12-28 23:45:45,323	[DEBUG]	
2020-12-28 23:45:46,229	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:45:49,438	[INFO]	266	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:45:52,678	[INFO]	267	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:45:52,679	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-28 23:45:52,680	[INFO]	268	SUCCESS	+1.0	
2020-12-28 23:45:52,680	[DEBUG]	
2020-12-28 23:45:55,873	[INFO]	269	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:45:59,092	[INFO]	270	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:46:02,352	[INFO]	271	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:46:02,353	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-28 23:46:03,265	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:46:03,266	[INFO]	273	SUCCESS	+1.0	
2020-12-28 23:46:03,267	[DEBUG]	
2020-12-28 23:46:04,174	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:46:04,924	[INFO]	275	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:46:08,180	[INFO]	276	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:46:08,181	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-28 23:46:11,371	[INFO]	277	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:46:11,372	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-28 23:46:11,373	[INFO]	278	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:46:11,374	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-28 23:46:11,374	[INFO]	279	SUCCESS	+1.0	
2020-12-28 23:46:11,374	[DEBUG]	
2020-12-28 23:46:12,282	[INFO]	280	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:46:12,284	[INFO]	281	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:46:12,284	[DEBUG]	
2020-12-28 23:46:12,285	[INFO]	282	SUCCESS	+1.0	
2020-12-28 23:46:12,285	[DEBUG]	
2020-12-28 23:46:12,285	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:46:13,066	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:46:13,070	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:46:13,072	[INFO]	286	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:46:14,039	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:46:14,040	[INFO]	288	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:46:17,357	[INFO]	289	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:46:17,358	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-28 23:46:17,359	[INFO]	290	SUCCESS	+1.0	
2020-12-28 23:46:17,359	[DEBUG]	
2020-12-28 23:46:17,360	[INFO]	291	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:46:17,360	[DEBUG]	
2020-12-28 23:46:18,247	[INFO]	292	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:46:19,142	[INFO]	293	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:46:20,051	[INFO]	294	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:46:20,986	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:46:21,736	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:46:21,737	[INFO]	297	SUCCESS	+1.0	
2020-12-28 23:46:21,737	[DEBUG]	
2020-12-28 23:46:21,738	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:46:24,997	[INFO]	299	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:46:24,998	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-28 23:46:24,998	[INFO]	300	SUCCESS	+1.0	
2020-12-28 23:46:24,999	[DEBUG]	
2020-12-28 23:46:25,925	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:46:26,825	[INFO]	302	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:46:30,015	[INFO]	303	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-28 23:46:33,238	[INFO]	304	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:46:33,239	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-28 23:46:33,240	[INFO]	305	SUCCESS	+1.0	
2020-12-28 23:46:33,240	[DEBUG]	
2020-12-28 23:46:34,174	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:46:35,074	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:46:38,305	[INFO]	308	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:46:41,585	[INFO]	309	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:46:41,586	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:46:42,491	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:46:43,247	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:46:43,248	[INFO]	312	SUCCESS	+1.0	
2020-12-28 23:46:43,249	[DEBUG]	
2020-12-28 23:46:44,009	[INFO]	313	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:46:47,312	[INFO]	314	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:46:48,225	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:46:49,119	[INFO]	316	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:46:50,062	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:46:50,997	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:46:51,000	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:46:51,772	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:46:52,520	[INFO]	321	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:46:53,302	[INFO]	322	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:46:54,057	[INFO]	323	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:46:54,954	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:46:58,193	[INFO]	325	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:46:59,118	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:46:59,882	[INFO]	327	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:47:03,132	[INFO]	328	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:47:04,047	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:47:04,964	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:47:08,128	[INFO]	331	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:47:08,891	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:47:12,100	[INFO]	333	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:47:12,101	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-28 23:47:13,035	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:47:13,036	[INFO]	335	SUCCESS	+1.0	
2020-12-28 23:47:13,037	[DEBUG]	
2020-12-28 23:47:13,800	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:47:14,719	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:47:14,720	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:47:15,480	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:47:18,701	[INFO]	340	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:47:18,703	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:47:21,933	[INFO]	341	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:47:21,934	[INFO]	342	SUCCESS	+1.0	
2020-12-28 23:47:21,934	[DEBUG]	
2020-12-28 23:47:22,880	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:47:23,649	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:47:24,426	[INFO]	345	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:47:25,170	[INFO]	346	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:47:26,071	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:47:29,309	[INFO]	348	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:47:30,205	[INFO]	349	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:47:31,124	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:47:32,068	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:47:32,989	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:47:33,757	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:47:36,969	[INFO]	354	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:47:37,900	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:47:41,154	[INFO]	356	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:47:41,155	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-28 23:47:41,156	[INFO]	357	SUCCESS	+1.0	
2020-12-28 23:47:41,156	[DEBUG]	
2020-12-28 23:47:41,915	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:47:45,065	[INFO]	359	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:47:45,066	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:47:45,066	[INFO]	360	SUCCESS	+1.0	
2020-12-28 23:47:45,067	[DEBUG]	
2020-12-28 23:47:46,007	[INFO]	361	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-28 23:47:46,881	[INFO]	362	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:47:47,641	[INFO]	363	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:47:47,642	[INFO]	364	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:47:47,643	[DEBUG]	
2020-12-28 23:47:50,869	[INFO]	365	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:47:51,646	[INFO]	366	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:47:51,647	[INFO]	367	SUCCESS	+1.0	
2020-12-28 23:47:51,647	[DEBUG]	
2020-12-28 23:47:54,787	[INFO]	368	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:47:54,788	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-28 23:47:54,788	[INFO]	369	SUCCESS	+1.0	
2020-12-28 23:47:54,789	[DEBUG]	
2020-12-28 23:47:57,944	[INFO]	370	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:47:57,945	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-28 23:47:57,945	[INFO]	371	SUCCESS	+1.0	
2020-12-28 23:47:57,946	[DEBUG]	
2020-12-28 23:47:58,837	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:47:59,784	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:48:00,689	[INFO]	374	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:48:01,459	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:48:02,214	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:48:03,126	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:48:06,389	[INFO]	378	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:48:09,633	[INFO]	379	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:48:09,634	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:48:10,563	[INFO]	380	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:48:10,564	[INFO]	381	SUCCESS	+1.0	
2020-12-28 23:48:10,564	[DEBUG]	
2020-12-28 23:48:11,467	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:48:11,469	[INFO]	383	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:48:11,469	[DEBUG]	
2020-12-28 23:48:11,469	[INFO]	384	SUCCESS	+1.0	
2020-12-28 23:48:11,470	[DEBUG]	
2020-12-28 23:48:14,696	[INFO]	385	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:48:14,697	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-28 23:48:14,698	[INFO]	386	SUCCESS	+1.0	
2020-12-28 23:48:14,698	[DEBUG]	
2020-12-28 23:48:15,607	[INFO]	387	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:48:16,539	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:48:17,484	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:48:17,485	[INFO]	390	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:48:17,485	[DEBUG]	
2020-12-28 23:48:17,486	[INFO]	391	SUCCESS	+1.0	
2020-12-28 23:48:17,486	[DEBUG]	
2020-12-28 23:48:18,395	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:48:18,396	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:48:19,343	[INFO]	394	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:48:20,087	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:48:20,852	[INFO]	396	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:48:21,753	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:48:21,754	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:48:25,025	[INFO]	399	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:48:25,939	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:48:26,850	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:48:30,086	[INFO]	402	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:48:30,087	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-28 23:48:30,088	[INFO]	403	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:48:30,089	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-28 23:48:30,090	[INFO]	404	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:48:30,090	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-28 23:48:31,046	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:48:31,047	[INFO]	406	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:48:31,048	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-28 23:48:31,048	[INFO]	407	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:48:31,049	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-28 23:48:31,049	[INFO]	408	SUCCESS	+1.0	
2020-12-28 23:48:31,050	[DEBUG]	
2020-12-28 23:48:31,994	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:48:32,742	[INFO]	410	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:48:33,649	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:48:33,650	[INFO]	412	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:48:34,405	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:48:35,158	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:48:36,034	[INFO]	415	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:48:36,035	[INFO]	416	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:48:36,949	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:48:37,866	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:48:41,068	[INFO]	419	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:48:41,994	[INFO]	420	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-28 23:48:42,909	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:48:43,807	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:48:44,751	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:48:45,703	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:48:46,463	[INFO]	425	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:48:46,464	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:48:46,465	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:48:47,370	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:48:48,296	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:48:49,232	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:48:50,147	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:48:51,074	[INFO]	432	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-28 23:48:54,302	[INFO]	433	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:48:57,581	[INFO]	434	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:48:58,478	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:48:59,245	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:49:00,020	[INFO]	437	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:49:00,919	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:49:01,841	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:49:01,842	[INFO]	440	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:49:01,843	[DEBUG]	
2020-12-28 23:49:01,843	[INFO]	441	SUCCESS	+1.0	
2020-12-28 23:49:01,844	[DEBUG]	
2020-12-28 23:49:01,844	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:49:02,791	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:49:03,547	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:49:04,298	[INFO]	445	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:49:07,485	[INFO]	446	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:49:07,487	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:49:07,489	[INFO]	447	SUCCESS	+1.0	
2020-12-28 23:49:07,490	[DEBUG]	
2020-12-28 23:49:08,247	[INFO]	448	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:49:08,981	[INFO]	449	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:49:09,897	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:49:09,901	[INFO]	451	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:49:09,902	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:49:10,653	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:49:11,573	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:49:11,575	[INFO]	454	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-28 23:49:11,575	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:49:11,576	[INFO]	455	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:49:11,576	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:49:11,577	[INFO]	456	SUCCESS	+1.0	
2020-12-28 23:49:11,577	[DEBUG]	
2020-12-28 23:49:12,495	[INFO]	457	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-28 23:49:13,266	[INFO]	458	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:49:14,179	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:49:14,180	[INFO]	460	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:49:15,114	[INFO]	461	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:49:15,868	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:49:16,786	[INFO]	463	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:49:20,021	[INFO]	464	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:49:20,022	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:49:20,782	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:49:21,689	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:49:21,690	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:49:24,922	[INFO]	469	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:49:24,923	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-28 23:49:24,924	[INFO]	470	SUCCESS	+1.0	
2020-12-28 23:49:24,924	[DEBUG]	
2020-12-28 23:49:28,168	[INFO]	471	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:49:28,169	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-28 23:49:31,358	[INFO]	472	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:49:31,360	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,26 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 14,27 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-28 23:49:32,273	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:49:33,023	[INFO]	474	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:49:33,025	[INFO]	475	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:49:33,025	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-28 23:49:33,026	[INFO]	476	SUCCESS	+1.0	
2020-12-28 23:49:33,026	[DEBUG]	
2020-12-28 23:49:33,951	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:49:34,720	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:49:34,721	[INFO]	479	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:49:34,722	[DEBUG]	
2020-12-28 23:49:34,722	[INFO]	480	SUCCESS	+1.0	
2020-12-28 23:49:34,722	[DEBUG]	
2020-12-28 23:49:35,619	[INFO]	481	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:49:35,621	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:49:35,621	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:49:36,544	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:49:36,546	[INFO]	485	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:49:36,546	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-28 23:49:36,547	[INFO]	486	SUCCESS	+1.0	
2020-12-28 23:49:36,547	[DEBUG]	
2020-12-28 23:49:37,490	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:49:37,492	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:49:37,493	[INFO]	489	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:49:37,493	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-28 23:49:37,494	[INFO]	490	SUCCESS	+1.0	
2020-12-28 23:49:37,494	[DEBUG]	
2020-12-28 23:49:38,384	[INFO]	491	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:49:39,172	[INFO]	492	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:49:40,096	[INFO]	493	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:49:41,026	[INFO]	494	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:49:41,902	[INFO]	495	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:49:45,092	[INFO]	496	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:49:45,093	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:49:45,094	[INFO]	497	SUCCESS	+1.0	
2020-12-28 23:49:45,094	[DEBUG]	
2020-12-28 23:49:45,095	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:49:45,845	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:49:46,760	[INFO]	500	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:49:46,761	[INFO]	==== END ====
2020-12-28 23:49:46,761	[INFO]	Reason: step budget
2020-12-28 23:49:46,761	[INFO]	
2020-12-28 23:49:46,761	[INFO]	========== EPOCH 4 ==========
2020-12-28 23:49:46,762	[INFO]	==== WARMUP ====
2020-12-28 23:49:49,973	[INFO]	WARM	SUCCESS	 1.0	
2020-12-28 23:49:49,974	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:49:53,173	[INFO]	WARM	SUCCESS	 1.0	
2020-12-28 23:49:53,173	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:49:56,408	[INFO]	WARM	SUCCESS	 1.0	
2020-12-28 23:49:56,409	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:49:59,694	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-28 23:49:59,695	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:49:59,695	[INFO]	==== START ====
2020-12-28 23:50:00,606	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:50:03,852	[INFO]	2	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:50:03,853	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:50:04,767	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:50:04,768	[INFO]	4	SUCCESS	+1.0	
2020-12-28 23:50:04,769	[DEBUG]	
2020-12-28 23:50:07,928	[INFO]	5	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:50:11,177	[INFO]	6	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:50:11,920	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:50:12,874	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:50:13,808	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:50:14,702	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:50:15,622	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:50:16,540	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:50:17,417	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:50:18,349	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:50:21,583	[INFO]	15	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:50:21,584	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-28 23:50:21,584	[INFO]	16	SUCCESS	+1.0	
2020-12-28 23:50:21,585	[DEBUG]	
2020-12-28 23:50:21,585	[INFO]	17	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:50:21,586	[DEBUG]	
2020-12-28 23:50:21,586	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:50:21,587	[INFO]	19	SUCCESS	+1.0	
2020-12-28 23:50:21,587	[DEBUG]	
2020-12-28 23:50:22,322	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:50:22,323	[INFO]	21	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:50:22,323	[DEBUG]	
2020-12-28 23:50:22,324	[INFO]	22	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-28 23:50:22,324	[DEBUG]	
2020-12-28 23:50:22,325	[INFO]	23	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:50:22,325	[DEBUG]	
2020-12-28 23:50:22,326	[INFO]	24	SUCCESS	+1.0	
2020-12-28 23:50:22,326	[DEBUG]	
2020-12-28 23:50:22,327	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:50:22,327	[INFO]	26	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:50:22,327	[DEBUG]	
2020-12-28 23:50:25,591	[INFO]	27	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-28 23:50:26,509	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:50:27,434	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-28 23:50:28,341	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:50:28,342	[INFO]	31	SUCCESS	+1.0	
2020-12-28 23:50:28,342	[DEBUG]	
2020-12-28 23:50:31,575	[INFO]	32	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:50:31,576	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-28 23:50:31,576	[INFO]	==== END ====
2020-12-28 23:50:31,576	[INFO]	Reason: target fitness reached
2020-12-28 23:50:31,577	[INFO]	
2020-12-28 23:50:31,577	[INFO]	========== EPOCH 5 ==========
2020-12-28 23:50:31,577	[INFO]	==== WARMUP ====
2020-12-28 23:50:34,781	[INFO]	WARM	SUCCESS	 1.0	
2020-12-28 23:50:34,781	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:50:39,060	[INFO]	WARM	SUCCESS	 1.0	
2020-12-28 23:50:39,061	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:50:42,389	[INFO]	WARM	SUCCESS	 1.0	
2020-12-28 23:50:42,389	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:50:45,607	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-28 23:50:45,607	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:50:45,607	[INFO]	==== START ====
2020-12-28 23:50:46,479	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:50:47,244	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:50:48,170	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:50:48,947	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:50:49,705	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:50:50,621	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:50:51,528	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:50:52,297	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:50:53,181	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:50:54,592	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:50:55,898	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:50:57,168	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:51:01,371	[INFO]	13	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:51:01,372	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-28 23:51:02,313	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:51:02,314	[INFO]	15	SUCCESS	+1.0	
2020-12-28 23:51:02,314	[DEBUG]	
2020-12-28 23:51:02,315	[INFO]	16	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:51:02,315	[DEBUG]	
2020-12-28 23:51:02,316	[INFO]	17	SUCCESS	+1.0	
2020-12-28 23:51:02,316	[DEBUG]	
2020-12-28 23:51:02,317	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:51:03,311	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:51:04,238	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:51:05,164	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:51:05,165	[INFO]	22	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:51:05,165	[DEBUG]	
2020-12-28 23:51:05,166	[INFO]	23	SUCCESS	+1.0	
2020-12-28 23:51:05,166	[DEBUG]	
2020-12-28 23:51:05,167	[INFO]	24	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:51:05,167	[DEBUG]	
2020-12-28 23:51:05,167	[INFO]	25	SUCCESS	+1.0	
2020-12-28 23:51:05,167	[DEBUG]	
2020-12-28 23:51:06,103	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:51:09,306	[INFO]	27	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:51:09,307	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-28 23:51:09,308	[INFO]	28	SUCCESS	+1.0	
2020-12-28 23:51:09,308	[DEBUG]	
2020-12-28 23:51:12,517	[INFO]	29	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:51:13,260	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:51:14,152	[INFO]	31	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:51:14,153	[INFO]	32	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:51:14,153	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-28 23:51:14,154	[INFO]	33	SUCCESS	+1.0	
2020-12-28 23:51:14,154	[DEBUG]	
2020-12-28 23:51:17,406	[INFO]	34	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:51:17,407	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:51:17,408	[INFO]	36	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:51:18,326	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:51:21,590	[INFO]	38	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:51:22,519	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:51:23,390	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:51:26,610	[INFO]	41	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:51:27,520	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:51:30,784	[INFO]	43	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:51:30,785	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-28 23:51:30,785	[INFO]	44	SUCCESS	+1.0	
2020-12-28 23:51:30,785	[DEBUG]	
2020-12-28 23:51:30,786	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:51:31,679	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:51:31,680	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:51:32,440	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:51:33,342	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:51:34,268	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:51:35,183	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:51:35,184	[INFO]	52	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:51:35,184	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-28 23:51:35,185	[INFO]	53	SUCCESS	+1.0	
2020-12-28 23:51:35,185	[DEBUG]	
2020-12-28 23:51:38,409	[INFO]	54	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:51:38,411	[INFO]	55	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:51:38,411	[DEBUG]	
2020-12-28 23:51:38,411	[INFO]	56	SUCCESS	+1.0	
2020-12-28 23:51:38,412	[DEBUG]	
2020-12-28 23:51:39,340	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:51:39,341	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:51:40,259	[INFO]	59	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-28 23:51:43,509	[INFO]	60	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:51:44,417	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:51:47,663	[INFO]	62	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:51:47,664	[INFO]	63	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:51:47,664	[DEBUG]	
2020-12-28 23:51:48,410	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:51:49,339	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:51:49,340	[INFO]	66	SUCCESS	+1.0	
2020-12-28 23:51:49,340	[DEBUG]	
2020-12-28 23:51:50,249	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:51:51,172	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:51:52,104	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:51:53,041	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:51:53,841	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:51:54,589	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:51:55,505	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:51:56,431	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:51:56,433	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:51:57,192	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:51:57,194	[INFO]	77	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:51:57,194	[DEBUG]	
2020-12-28 23:51:57,194	[INFO]	78	SUCCESS	+1.0	
2020-12-28 23:51:57,195	[DEBUG]	
2020-12-28 23:51:58,077	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:51:58,844	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:51:59,593	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:52:00,513	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:52:01,423	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:52:04,676	[INFO]	84	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:52:04,677	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-28 23:52:07,859	[INFO]	85	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:52:07,860	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,22 ****
--- 14,28 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     return true;
+                 }
+ else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-28 23:52:07,861	[INFO]	86	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:52:07,862	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,22 ****
--- 14,28 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     return true;
+                 }
+ else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-28 23:52:07,863	[INFO]	87	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:52:07,863	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,22 ****
--- 14,28 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     return true;
+                 }
+ else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-28 23:52:08,771	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:52:09,671	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:52:09,673	[INFO]	90	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:52:09,673	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-28 23:52:12,936	[INFO]	91	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:52:12,938	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,29 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-28 23:52:13,706	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:52:13,708	[INFO]	93	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:52:13,708	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,29 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-28 23:52:16,928	[INFO]	94	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:52:16,930	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,32 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
+                 }
+ else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-28 23:52:16,931	[INFO]	95	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:52:16,932	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,32 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
+                 }
+ else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-28 23:52:20,099	[INFO]	96	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:52:20,100	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,29 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-28 23:52:21,020	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:52:21,021	[INFO]	98	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:52:21,022	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-28 23:52:21,023	[INFO]	99	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:52:21,023	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-28 23:52:21,024	[INFO]	100	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:52:21,024	[DEBUG]	
2020-12-28 23:52:21,940	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:52:21,941	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:52:21,942	[INFO]	103	SUCCESS	+1.0	
2020-12-28 23:52:21,942	[DEBUG]	
2020-12-28 23:52:22,895	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:52:23,670	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:52:26,905	[INFO]	106	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:52:26,906	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-28 23:52:27,838	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:52:27,839	[INFO]	108	SUCCESS	+1.0	
2020-12-28 23:52:27,839	[DEBUG]	
2020-12-28 23:52:28,744	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:52:31,950	[INFO]	110	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:52:31,950	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:52:32,878	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:52:33,780	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:52:33,781	[INFO]	113	SUCCESS	+1.0	
2020-12-28 23:52:33,782	[DEBUG]	
2020-12-28 23:52:34,688	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:52:35,641	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:52:36,562	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:52:37,529	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:52:38,437	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:52:41,733	[INFO]	119	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:52:41,734	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-28 23:52:41,734	[INFO]	120	SUCCESS	+1.0	
2020-12-28 23:52:41,735	[DEBUG]	
2020-12-28 23:52:41,735	[INFO]	121	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:52:41,736	[DEBUG]	
2020-12-28 23:52:41,736	[INFO]	122	SUCCESS	+1.0	
2020-12-28 23:52:41,736	[DEBUG]	
2020-12-28 23:52:42,483	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:52:45,729	[INFO]	124	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:52:48,911	[INFO]	125	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:52:48,912	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-28 23:52:48,912	[INFO]	126	SUCCESS	+1.0	
2020-12-28 23:52:48,912	[DEBUG]	
2020-12-28 23:52:49,821	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:52:50,739	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:52:51,679	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:52:52,597	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:52:53,506	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:52:56,723	[INFO]	132	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:52:56,725	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-28 23:52:56,726	[INFO]	133	SUCCESS	+1.0	
2020-12-28 23:52:56,727	[DEBUG]	
2020-12-28 23:52:56,728	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:52:56,730	[INFO]	135	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:52:56,731	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-28 23:52:57,474	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:52:57,475	[INFO]	137	SUCCESS	+1.0	
2020-12-28 23:52:57,475	[DEBUG]	
2020-12-28 23:53:00,682	[INFO]	138	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:53:00,683	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-28 23:53:01,629	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:53:02,533	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:53:03,415	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:53:04,322	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:53:04,323	[INFO]	143	SUCCESS	+1.0	
2020-12-28 23:53:04,323	[DEBUG]	
2020-12-28 23:53:07,528	[INFO]	144	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:53:08,295	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:53:11,541	[INFO]	146	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:53:11,542	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-28 23:53:14,790	[INFO]	147	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:53:15,746	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:53:16,687	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:53:17,616	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:53:18,530	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:53:19,464	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:53:20,238	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:53:20,239	[INFO]	154	SUCCESS	+1.0	
2020-12-28 23:53:20,239	[DEBUG]	
2020-12-28 23:53:21,167	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:53:21,942	[INFO]	156	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:53:22,917	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:53:23,847	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:53:24,774	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:53:25,707	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:53:26,620	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:53:27,383	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:53:28,280	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:53:31,535	[INFO]	164	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:53:32,495	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:53:35,751	[INFO]	166	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:53:35,752	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:53:35,754	[INFO]	167	SUCCESS	+1.0	
2020-12-28 23:53:35,755	[DEBUG]	
2020-12-28 23:53:36,671	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:53:37,426	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:53:38,306	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:53:42,568	[INFO]	171	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:53:43,934	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:53:43,937	[INFO]	173	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:53:43,938	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-28 23:53:45,265	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:53:45,267	[INFO]	175	SUCCESS	+1.0	
2020-12-28 23:53:45,267	[DEBUG]	
2020-12-28 23:53:49,170	[INFO]	176	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:53:49,171	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-28 23:53:50,075	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:53:50,076	[INFO]	178	SUCCESS	+1.0	
2020-12-28 23:53:50,076	[DEBUG]	
2020-12-28 23:53:53,289	[INFO]	179	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:53:54,049	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:53:54,931	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:53:58,324	[INFO]	182	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:53:59,209	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:54:00,123	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:54:01,055	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:54:01,057	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:54:02,009	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:54:02,925	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:54:02,927	[INFO]	189	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:54:03,677	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:54:06,960	[INFO]	191	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:54:06,961	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-28 23:54:07,889	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:54:08,649	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:54:08,651	[INFO]	194	SUCCESS	+1.0	
2020-12-28 23:54:08,651	[DEBUG]	
2020-12-28 23:54:09,536	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:54:10,493	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:54:11,284	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:54:12,167	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:54:13,084	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:54:13,085	[INFO]	200	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:54:13,086	[DEBUG]	
2020-12-28 23:54:13,086	[INFO]	201	SUCCESS	+1.0	
2020-12-28 23:54:13,086	[DEBUG]	
2020-12-28 23:54:16,339	[INFO]	202	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:54:17,403	[INFO]	203	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:54:18,292	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:54:19,042	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:54:22,276	[INFO]	206	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:54:22,277	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-28 23:54:22,278	[INFO]	207	SUCCESS	+1.0	
2020-12-28 23:54:22,278	[DEBUG]	
2020-12-28 23:54:23,066	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:54:24,005	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:54:27,462	[INFO]	210	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:54:28,219	[INFO]	211	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:54:31,497	[INFO]	212	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:54:35,246	[INFO]	213	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:54:35,247	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:54:36,028	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:54:36,029	[INFO]	215	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:54:36,030	[DEBUG]	
2020-12-28 23:54:39,349	[INFO]	216	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:54:39,350	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:54:39,351	[INFO]	217	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:54:39,352	[DEBUG]	
2020-12-28 23:54:40,267	[INFO]	218	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:54:40,268	[INFO]	219	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:54:40,268	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:54:41,179	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:54:41,941	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:54:42,841	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:54:46,139	[INFO]	223	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:54:46,140	[INFO]	224	SUCCESS	+1.0	
2020-12-28 23:54:46,140	[DEBUG]	
2020-12-28 23:54:46,865	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:54:47,604	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:54:47,605	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:54:48,525	[INFO]	228	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:54:51,769	[INFO]	229	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:54:51,770	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-28 23:54:52,830	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:54:53,763	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:54:53,764	[INFO]	232	SUCCESS	+1.0	
2020-12-28 23:54:53,764	[DEBUG]	
2020-12-28 23:54:54,699	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:54:54,700	[INFO]	234	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:54:54,700	[DEBUG]	
2020-12-28 23:54:55,632	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:54:56,542	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:54:56,543	[INFO]	237	SUCCESS	+1.0	
2020-12-28 23:54:56,543	[DEBUG]	
2020-12-28 23:54:59,790	[INFO]	238	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:54:59,791	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-28 23:54:59,791	[INFO]	239	SUCCESS	+1.0	
2020-12-28 23:54:59,792	[DEBUG]	
2020-12-28 23:55:03,060	[INFO]	240	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:55:06,250	[INFO]	241	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:55:06,251	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-28 23:55:06,252	[INFO]	242	SUCCESS	+1.0	
2020-12-28 23:55:06,252	[DEBUG]	
2020-12-28 23:55:06,253	[INFO]	243	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:55:06,253	[DEBUG]	
2020-12-28 23:55:07,195	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:55:07,196	[INFO]	245	SUCCESS	+1.0	
2020-12-28 23:55:07,196	[DEBUG]	
2020-12-28 23:55:08,107	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:55:09,017	[INFO]	247	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:55:09,770	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:55:10,684	[INFO]	249	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:55:13,884	[INFO]	250	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:55:13,885	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-28 23:55:14,806	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:55:14,807	[INFO]	252	SUCCESS	+1.0	
2020-12-28 23:55:14,807	[DEBUG]	
2020-12-28 23:55:18,081	[INFO]	253	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:55:18,082	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-28 23:55:18,998	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:55:18,999	[INFO]	255	SUCCESS	+1.0	
2020-12-28 23:55:19,000	[DEBUG]	
2020-12-28 23:55:22,223	[INFO]	256	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:55:23,191	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:55:26,470	[INFO]	258	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:55:27,240	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:55:28,156	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:55:28,912	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:55:29,860	[INFO]	262	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:55:30,787	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:55:30,789	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:55:31,733	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:55:34,998	[INFO]	266	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:55:35,000	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:55:35,988	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:55:39,293	[INFO]	268	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:55:39,294	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,25 ****
--- 17,27 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:55:39,296	[INFO]	269	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:55:39,296	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,25 ****
--- 17,27 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:55:40,062	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:55:41,190	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:55:42,450	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:55:42,453	[INFO]	273	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:55:42,454	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,25 ****
--- 17,27 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:55:42,456	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:55:42,458	[INFO]	275	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:55:42,459	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,25 ****
--- 17,27 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:55:42,461	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:55:46,169	[INFO]	277	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:55:46,170	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,25 ****
--- 17,30 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:55:49,463	[INFO]	278	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:55:49,464	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,25 ****
--- 17,33 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:55:50,193	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:55:53,374	[INFO]	280	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:55:53,376	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,25 ****
--- 17,30 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:55:53,377	[INFO]	281	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:55:53,378	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,25 ****
--- 17,30 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:55:53,379	[INFO]	282	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:55:53,379	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,25 ****
--- 17,27 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:55:53,380	[INFO]	283	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:55:53,381	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,25 ****
--- 17,27 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:55:56,582	[INFO]	284	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:55:56,583	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:55:57,333	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:55:57,334	[INFO]	286	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:55:57,335	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:56:00,553	[INFO]	287	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:56:00,554	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:56:00,555	[INFO]	288	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:56:00,556	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:56:03,753	[INFO]	289	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:56:03,754	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-28 23:56:03,754	[INFO]	==== END ====
2020-12-28 23:56:03,754	[INFO]	Reason: target fitness reached
2020-12-28 23:56:03,755	[INFO]	
2020-12-28 23:56:03,755	[INFO]	========== EPOCH 6 ==========
2020-12-28 23:56:03,756	[INFO]	==== WARMUP ====
2020-12-28 23:56:07,108	[INFO]	WARM	SUCCESS	 1.0	
2020-12-28 23:56:07,108	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:56:10,217	[INFO]	WARM	SUCCESS	 1.0	
2020-12-28 23:56:10,217	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:56:13,435	[INFO]	WARM	SUCCESS	 1.0	
2020-12-28 23:56:13,435	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:56:16,644	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-28 23:56:16,645	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:56:16,645	[INFO]	==== START ====
2020-12-28 23:56:17,556	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:56:18,524	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:56:19,442	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:56:22,735	[INFO]	4	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:56:25,919	[INFO]	5	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:56:26,826	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:56:26,827	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:56:30,060	[INFO]	8	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:56:30,989	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:56:31,905	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:56:35,105	[INFO]	11	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:56:38,323	[INFO]	12	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:56:39,079	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:56:39,987	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:56:40,893	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:56:41,818	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:56:44,993	[INFO]	17	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:56:44,994	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-28 23:56:44,995	[INFO]	18	SUCCESS	+1.0	
2020-12-28 23:56:44,995	[DEBUG]	
2020-12-28 23:56:45,938	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:56:46,871	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:56:47,800	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:56:48,730	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:56:49,497	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:56:50,241	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:56:50,242	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:56:53,510	[INFO]	26	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:56:56,725	[INFO]	27	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:56:56,726	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-28 23:56:56,727	[INFO]	28	SUCCESS	+1.0	
2020-12-28 23:56:56,727	[DEBUG]	
2020-12-28 23:56:57,654	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:56:58,584	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:57:01,836	[INFO]	31	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:57:01,837	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:57:02,748	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:57:02,749	[INFO]	33	SUCCESS	+1.0	
2020-12-28 23:57:02,749	[DEBUG]	
2020-12-28 23:57:03,670	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:57:04,589	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:57:07,794	[INFO]	36	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:57:08,706	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:57:08,707	[INFO]	38	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:57:08,707	[DEBUG]	
2020-12-28 23:57:09,637	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:57:09,638	[INFO]	40	SUCCESS	+1.0	
2020-12-28 23:57:09,638	[DEBUG]	
2020-12-28 23:57:10,568	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:57:10,569	[INFO]	42	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:57:11,509	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:57:12,270	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:57:12,272	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:57:12,272	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:57:12,273	[INFO]	47	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:57:12,274	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-28 23:57:12,274	[INFO]	48	SUCCESS	+1.0	
2020-12-28 23:57:12,274	[DEBUG]	
2020-12-28 23:57:15,502	[INFO]	49	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:57:15,503	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:57:16,408	[INFO]	50	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-28 23:57:17,306	[INFO]	51	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:57:20,590	[INFO]	52	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:57:20,592	[INFO]	53	SUCCESS	+1.0	
2020-12-28 23:57:20,593	[DEBUG]	
2020-12-28 23:57:20,595	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:57:23,857	[INFO]	55	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-28 23:57:23,858	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-28 23:57:23,858	[INFO]	56	SUCCESS	+1.0	
2020-12-28 23:57:23,858	[DEBUG]	
2020-12-28 23:57:27,054	[INFO]	57	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:57:27,055	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-28 23:57:27,055	[INFO]	==== END ====
2020-12-28 23:57:27,055	[INFO]	Reason: target fitness reached
2020-12-28 23:57:27,056	[INFO]	
2020-12-28 23:57:27,056	[INFO]	========== EPOCH 7 ==========
2020-12-28 23:57:27,056	[INFO]	==== WARMUP ====
2020-12-28 23:57:30,239	[INFO]	WARM	SUCCESS	 1.0	
2020-12-28 23:57:30,240	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:57:33,482	[INFO]	WARM	SUCCESS	 1.0	
2020-12-28 23:57:33,482	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:57:36,711	[INFO]	WARM	SUCCESS	 1.0	
2020-12-28 23:57:36,712	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:57:39,979	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-28 23:57:39,979	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-28 23:57:39,979	[INFO]	==== START ====
2020-12-28 23:57:40,767	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:57:40,768	[INFO]	2	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:57:40,768	[DEBUG]	
2020-12-28 23:57:43,943	[INFO]	3	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:57:43,944	[INFO]	4	SUCCESS	+1.0	
2020-12-28 23:57:43,944	[DEBUG]	
2020-12-28 23:57:44,695	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:57:45,433	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:57:48,690	[INFO]	7	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:57:48,691	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-28 23:57:49,468	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:57:49,469	[INFO]	9	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:57:49,470	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-28 23:57:49,470	[INFO]	10	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:57:49,471	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-28 23:57:49,471	[INFO]	11	SUCCESS	+1.0	
2020-12-28 23:57:49,472	[DEBUG]	
2020-12-28 23:57:50,393	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:57:51,321	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:57:52,242	[INFO]	14	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-28 23:57:55,468	[INFO]	15	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:57:56,242	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:57:56,985	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:58:00,161	[INFO]	18	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:58:01,086	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:58:02,004	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:58:05,248	[INFO]	21	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:58:05,249	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-28 23:58:05,249	[INFO]	22	SUCCESS	+1.0	
2020-12-28 23:58:05,250	[DEBUG]	
2020-12-28 23:58:06,148	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:58:07,052	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:58:07,973	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:58:11,207	[INFO]	26	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:58:11,208	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-28 23:58:11,208	[INFO]	27	SUCCESS	+1.0	
2020-12-28 23:58:11,209	[DEBUG]	
2020-12-28 23:58:11,965	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:58:11,966	[INFO]	29	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:58:12,883	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:58:13,766	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:58:14,665	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:58:15,445	[INFO]	33	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:58:15,446	[INFO]	34	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:58:15,447	[DEBUG]	
2020-12-28 23:58:15,447	[INFO]	35	SUCCESS	+1.0	
2020-12-28 23:58:15,448	[DEBUG]	
2020-12-28 23:58:15,448	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:58:18,656	[INFO]	37	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:58:18,657	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-28 23:58:19,564	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:58:19,565	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:58:20,495	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:58:20,496	[INFO]	41	SUCCESS	+1.0	
2020-12-28 23:58:20,496	[DEBUG]	
2020-12-28 23:58:21,420	[INFO]	42	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:58:22,324	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:58:25,619	[INFO]	44	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:58:25,620	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-28 23:58:26,383	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:58:27,133	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:58:27,883	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:58:27,884	[INFO]	48	SUCCESS	+1.0	
2020-12-28 23:58:27,885	[DEBUG]	
2020-12-28 23:58:27,885	[INFO]	49	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:58:27,886	[DEBUG]	
2020-12-28 23:58:27,886	[INFO]	50	SUCCESS	+1.0	
2020-12-28 23:58:27,886	[DEBUG]	
2020-12-28 23:58:28,641	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:58:29,558	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:58:30,462	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:58:31,239	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:58:32,154	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-28 23:58:32,156	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:58:32,947	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:58:32,948	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:58:36,189	[INFO]	59	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:58:36,190	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:58:39,440	[INFO]	60	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:58:42,633	[INFO]	61	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:58:42,634	[INFO]	62	SUCCESS	+1.0	
2020-12-28 23:58:42,634	[DEBUG]	
2020-12-28 23:58:43,378	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:58:46,650	[INFO]	64	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:58:46,651	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-28 23:58:47,592	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:58:47,593	[INFO]	66	SUCCESS	+1.0	
2020-12-28 23:58:47,594	[DEBUG]	
2020-12-28 23:58:50,908	[INFO]	67	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:58:50,909	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:58:51,826	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:58:55,034	[INFO]	69	SUCCESS	 2.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-28 23:58:55,035	[INFO]	70	SUCCESS	+1.0	
2020-12-28 23:58:55,035	[DEBUG]	
2020-12-28 23:58:55,912	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:58:56,806	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:58:57,735	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:58:58,523	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:58:59,278	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:59:00,197	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:59:01,123	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:59:04,382	[INFO]	78	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:59:04,383	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-28 23:59:05,293	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:59:05,294	[INFO]	80	SUCCESS	+1.0	
2020-12-28 23:59:05,294	[DEBUG]	
2020-12-28 23:59:06,226	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-28 23:59:07,154	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:59:08,115	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:59:08,116	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:59:09,023	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:59:09,969	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:59:11,073	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:59:11,075	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:59:12,048	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:59:13,009	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:59:13,982	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:59:13,984	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-28 23:59:13,985	[INFO]	93	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:59:13,985	[DEBUG]	
2020-12-28 23:59:14,973	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-28 23:59:14,974	[INFO]	95	SUCCESS	+1.0	
2020-12-28 23:59:14,974	[DEBUG]	
2020-12-28 23:59:18,213	[INFO]	96	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:59:18,214	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-28 23:59:18,214	[INFO]	97	SUCCESS	+1.0	
2020-12-28 23:59:18,215	[DEBUG]	
2020-12-28 23:59:18,215	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:59:18,216	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-28 23:59:18,217	[INFO]	100	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-28 23:59:18,217	[DEBUG]	
2020-12-28 23:59:19,632	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:59:19,634	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-28 23:59:19,635	[INFO]	103	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-28 23:59:19,636	[DEBUG]	
2020-12-28 23:59:23,160	[INFO]	104	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-28 23:59:24,122	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:59:27,604	[INFO]	106	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:59:27,605	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:59:28,403	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-28 23:59:31,855	[INFO]	108	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-28 23:59:35,322	[INFO]	109	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-28 23:59:35,323	[INFO]	110	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:59:35,323	[DEBUG]	
2020-12-28 23:59:35,324	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:59:35,325	[INFO]	112	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:59:35,325	[DEBUG]	
2020-12-28 23:59:35,326	[INFO]	113	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:59:35,326	[DEBUG]	
2020-12-28 23:59:35,327	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:59:35,328	[INFO]	115	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-28 23:59:35,328	[DEBUG]	
2020-12-28 23:59:38,735	[INFO]	116	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:59:38,737	[INFO]	117	SUCCESS	+1.0	
2020-12-28 23:59:38,737	[DEBUG]	
2020-12-28 23:59:39,575	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:59:42,874	[INFO]	119	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:59:42,875	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-28 23:59:42,875	[INFO]	120	SUCCESS	+1.0	
2020-12-28 23:59:42,875	[DEBUG]	
2020-12-28 23:59:43,790	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-28 23:59:47,132	[INFO]	122	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-28 23:59:48,113	[INFO]	123	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:59:49,071	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-28 23:59:50,075	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-28 23:59:53,342	[INFO]	126	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:59:53,345	[INFO]	127	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-28 23:59:53,346	[DEBUG]	
2020-12-28 23:59:54,269	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-28 23:59:54,270	[INFO]	129	SUCCESS	+1.0	
2020-12-28 23:59:54,270	[DEBUG]	
2020-12-28 23:59:55,200	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-28 23:59:58,664	[INFO]	131	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-28 23:59:58,664	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-28 23:59:59,619	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:00:00,621	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:00:00,622	[INFO]	134	SUCCESS	+1.0	
2020-12-29 00:00:00,622	[DEBUG]	
2020-12-29 00:00:00,623	[INFO]	135	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:00:01,426	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:00:01,427	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:00:02,350	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:00:03,314	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:00:04,349	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:00:05,218	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:00:08,848	[INFO]	142	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:00:09,803	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:00:10,567	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:00:10,569	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:00:10,569	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:00:13,905	[INFO]	147	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:00:13,906	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-29 00:00:13,907	[INFO]	148	SUCCESS	+1.0	
2020-12-29 00:00:13,907	[DEBUG]	
2020-12-29 00:00:17,193	[INFO]	149	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:00:18,097	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:00:19,037	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:00:19,039	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:00:19,952	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:00:19,953	[INFO]	154	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:00:19,953	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:00:19,954	[INFO]	155	SUCCESS	+1.0	
2020-12-29 00:00:19,954	[DEBUG]	
2020-12-29 00:00:23,395	[INFO]	156	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:00:23,396	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-29 00:00:26,799	[INFO]	157	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:00:26,800	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,25 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-29 00:00:26,801	[INFO]	158	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:00:26,802	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,25 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-29 00:00:27,762	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-29 00:00:27,763	[INFO]	160	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:00:27,764	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,25 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-29 00:00:31,390	[INFO]	161	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:00:31,391	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:00:31,394	[INFO]	162	SUCCESS	+1.0	
2020-12-29 00:00:31,395	[DEBUG]	
2020-12-29 00:00:32,929	[INFO]	163	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:00:36,615	[INFO]	164	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:00:36,616	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:00:36,616	[INFO]	165	SUCCESS	+1.0	
2020-12-29 00:00:36,617	[DEBUG]	
2020-12-29 00:00:37,431	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:00:38,225	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:00:39,010	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:00:39,984	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:00:40,941	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:00:42,124	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:00:43,092	[INFO]	172	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-29 00:00:43,894	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:00:44,699	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:00:47,942	[INFO]	175	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:00:48,858	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:00:48,859	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:00:52,084	[INFO]	178	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:00:52,085	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-29 00:00:55,274	[INFO]	179	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:00:55,275	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,22 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 15,25 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
+                     return true;
+                 }
+ else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:00:58,541	[INFO]	180	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:00:58,542	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:00:59,546	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:00:59,547	[INFO]	182	SUCCESS	+1.0	
2020-12-29 00:00:59,547	[DEBUG]	
2020-12-29 00:01:00,294	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:01:00,296	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:01:01,191	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:01:04,390	[INFO]	186	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:01:04,390	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-29 00:01:07,685	[INFO]	187	SUCCESS	 2.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:01:07,688	[INFO]	188	SUCCESS	+1.0	
2020-12-29 00:01:07,688	[DEBUG]	
2020-12-29 00:01:08,458	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:01:08,460	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:01:09,190	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:01:10,127	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:01:10,129	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:01:13,418	[INFO]	194	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:01:13,419	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:01:13,419	[INFO]	195	SUCCESS	+1.0	
2020-12-29 00:01:13,420	[DEBUG]	
2020-12-29 00:01:16,638	[INFO]	196	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:01:16,638	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:01:16,639	[INFO]	197	SUCCESS	+1.0	
2020-12-29 00:01:16,639	[DEBUG]	
2020-12-29 00:01:16,640	[INFO]	198	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:01:17,399	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:01:18,150	[INFO]	200	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:01:21,383	[INFO]	201	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:01:22,333	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:01:23,317	[INFO]	203	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:01:24,235	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:01:24,976	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:01:25,892	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:01:26,772	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:01:29,991	[INFO]	208	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:01:30,757	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:01:31,699	[INFO]	210	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:01:32,631	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:01:33,404	[INFO]	212	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:01:34,335	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:01:35,143	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:01:36,045	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:01:36,802	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:01:37,564	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:01:38,472	[INFO]	218	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:01:39,439	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:01:42,668	[INFO]	220	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:01:43,558	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:01:44,480	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:01:45,403	[INFO]	223	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-29 00:01:46,338	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:01:47,286	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:01:48,209	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:01:48,992	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:01:49,887	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:01:50,640	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:01:51,564	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:01:51,565	[INFO]	231	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:01:54,797	[INFO]	232	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:01:54,797	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:01:55,540	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:01:55,541	[INFO]	234	SUCCESS	+1.0	
2020-12-29 00:01:55,541	[DEBUG]	
2020-12-29 00:01:58,736	[INFO]	235	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:01:58,737	[INFO]	236	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:01:59,646	[INFO]	237	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:01:59,647	[INFO]	238	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:02:00,572	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:02:01,480	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:02:02,414	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:02:03,350	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:02:04,282	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:02:04,283	[INFO]	244	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:02:05,044	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:02:05,981	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:02:06,917	[INFO]	247	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:02:07,874	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:02:11,125	[INFO]	249	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:02:12,027	[INFO]	250	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:02:15,265	[INFO]	251	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:02:16,031	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:02:16,033	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:02:19,208	[INFO]	254	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:02:19,209	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-29 00:02:19,210	[INFO]	255	SUCCESS	+1.0	
2020-12-29 00:02:19,210	[DEBUG]	
2020-12-29 00:02:20,115	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:02:20,899	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:02:24,174	[INFO]	258	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:02:25,047	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:02:25,979	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:02:26,744	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:02:30,003	[INFO]	262	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:02:30,004	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:02:30,923	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:02:31,833	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:02:31,834	[INFO]	265	SUCCESS	+1.0	
2020-12-29 00:02:31,834	[DEBUG]	
2020-12-29 00:02:32,758	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:02:36,011	[INFO]	267	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:02:36,776	[INFO]	268	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:02:40,021	[INFO]	269	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:02:40,022	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:02:40,023	[INFO]	270	SUCCESS	+1.0	
2020-12-29 00:02:40,023	[DEBUG]	
2020-12-29 00:02:40,948	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:02:44,140	[INFO]	272	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:02:45,052	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:02:45,974	[INFO]	274	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-29 00:02:46,890	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:02:47,832	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:02:47,833	[INFO]	277	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:02:47,834	[DEBUG]	
2020-12-29 00:02:47,835	[INFO]	278	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:02:47,835	[DEBUG]	
2020-12-29 00:02:47,835	[INFO]	279	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:02:47,836	[DEBUG]	
2020-12-29 00:02:47,836	[INFO]	280	SUCCESS	+1.0	
2020-12-29 00:02:47,837	[DEBUG]	
2020-12-29 00:02:48,590	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:02:49,485	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:02:52,712	[INFO]	283	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:02:52,713	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:02:53,616	[INFO]	284	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:02:53,618	[INFO]	285	SUCCESS	+1.0	
2020-12-29 00:02:53,618	[DEBUG]	
2020-12-29 00:02:54,538	[INFO]	286	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:02:55,317	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:02:56,065	[INFO]	288	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:02:56,955	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:02:57,877	[INFO]	290	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:02:57,878	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:02:58,639	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:02:58,641	[INFO]	293	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:02:58,641	[DEBUG]	
2020-12-29 00:02:58,641	[INFO]	294	SUCCESS	+1.0	
2020-12-29 00:02:58,642	[DEBUG]	
2020-12-29 00:02:58,642	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:02:59,381	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:03:00,314	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:03:01,233	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:03:01,235	[INFO]	299	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:03:01,235	[DEBUG]	
2020-12-29 00:03:02,159	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:03:02,160	[INFO]	301	SUCCESS	+1.0	
2020-12-29 00:03:02,161	[DEBUG]	
2020-12-29 00:03:05,362	[INFO]	302	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:03:05,363	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:03:06,278	[INFO]	303	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:03:07,191	[INFO]	304	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:03:08,093	[INFO]	305	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:03:08,094	[INFO]	306	SUCCESS	+1.0	
2020-12-29 00:03:08,094	[DEBUG]	
2020-12-29 00:03:08,871	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:03:09,779	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:03:10,543	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:03:11,426	[INFO]	310	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:03:12,344	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:03:13,273	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:03:14,181	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:03:14,955	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:03:15,847	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:03:19,049	[INFO]	316	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:03:19,050	[INFO]	317	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-29 00:03:19,050	[DEBUG]	
2020-12-29 00:03:19,051	[INFO]	318	SUCCESS	+1.0	
2020-12-29 00:03:19,051	[DEBUG]	
2020-12-29 00:03:19,052	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:03:19,990	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:03:23,255	[INFO]	321	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:03:23,255	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-29 00:03:24,166	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:03:24,167	[INFO]	323	SUCCESS	+1.0	
2020-12-29 00:03:24,167	[DEBUG]	
2020-12-29 00:03:24,168	[INFO]	324	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:03:24,168	[DEBUG]	
2020-12-29 00:03:24,927	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:03:25,824	[INFO]	326	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:03:25,825	[INFO]	327	SUCCESS	+1.0	
2020-12-29 00:03:25,825	[DEBUG]	
2020-12-29 00:03:26,563	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:03:27,491	[INFO]	329	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-29 00:03:28,404	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:03:29,147	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:03:30,065	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:03:30,998	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:03:31,932	[INFO]	334	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:03:32,858	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:03:33,802	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:03:34,737	[INFO]	337	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-29 00:03:35,662	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:03:38,893	[INFO]	339	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:03:39,852	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:03:40,760	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:03:43,930	[INFO]	342	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:03:43,931	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:03:43,932	[INFO]	343	SUCCESS	+1.0	
2020-12-29 00:03:43,932	[DEBUG]	
2020-12-29 00:03:43,933	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:03:44,841	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:03:48,087	[INFO]	346	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:03:48,087	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:03:51,299	[INFO]	347	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:03:51,300	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,27 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
--- 15,30 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  }
                  return false;
              }

2020-12-29 00:03:52,225	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:03:52,227	[INFO]	349	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:03:52,227	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:03:52,997	[INFO]	350	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:03:53,755	[INFO]	351	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:03:53,756	[INFO]	352	SUCCESS	+1.0	
2020-12-29 00:03:53,756	[DEBUG]	
2020-12-29 00:03:56,960	[INFO]	353	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:03:56,962	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:03:57,902	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:03:58,672	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:03:59,572	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:03:59,574	[INFO]	358	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-29 00:04:00,322	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:04:01,238	[INFO]	360	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:04:01,239	[INFO]	361	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:04:01,239	[DEBUG]	
2020-12-29 00:04:01,240	[INFO]	362	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:04:01,241	[DEBUG]	
2020-12-29 00:04:01,241	[INFO]	363	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:04:01,242	[DEBUG]	
2020-12-29 00:04:01,242	[INFO]	364	SUCCESS	+1.0	
2020-12-29 00:04:01,242	[DEBUG]	
2020-12-29 00:04:01,243	[INFO]	365	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:04:02,019	[INFO]	366	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:04:05,224	[INFO]	367	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:04:05,982	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:04:06,886	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:04:06,887	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:04:07,806	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:04:08,728	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:04:12,014	[INFO]	373	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:04:12,015	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:04:12,015	[INFO]	374	SUCCESS	+1.0	
2020-12-29 00:04:12,016	[DEBUG]	
2020-12-29 00:04:12,902	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:04:16,141	[INFO]	376	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:04:16,142	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:04:16,142	[INFO]	377	SUCCESS	+1.0	
2020-12-29 00:04:16,143	[DEBUG]	
2020-12-29 00:04:17,049	[INFO]	378	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:04:17,949	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:04:17,950	[INFO]	380	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:04:17,951	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:04:17,951	[INFO]	381	SUCCESS	+1.0	
2020-12-29 00:04:17,951	[DEBUG]	
2020-12-29 00:04:18,715	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:04:19,632	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:04:20,387	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:04:23,745	[INFO]	385	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:04:23,746	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-29 00:04:23,747	[INFO]	386	SUCCESS	+1.0	
2020-12-29 00:04:23,747	[DEBUG]	
2020-12-29 00:04:24,635	[INFO]	387	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:04:25,528	[INFO]	388	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:04:28,782	[INFO]	389	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:04:28,782	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-29 00:04:31,998	[INFO]	390	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:04:31,999	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,24 ****
--- 18,28 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-29 00:04:32,000	[INFO]	391	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:04:32,000	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-29 00:04:32,001	[INFO]	392	SUCCESS	+1.0	
2020-12-29 00:04:32,001	[DEBUG]	
2020-12-29 00:04:32,918	[INFO]	393	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:04:33,881	[INFO]	394	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:04:37,141	[INFO]	395	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:04:37,897	[INFO]	396	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:04:38,808	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:04:39,757	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:04:42,938	[INFO]	399	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:04:42,939	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:04:42,939	[INFO]	==== END ====
2020-12-29 00:04:42,939	[INFO]	Reason: target fitness reached
2020-12-29 00:04:42,940	[INFO]	
2020-12-29 00:04:42,940	[INFO]	========== EPOCH 8 ==========
2020-12-29 00:04:42,941	[INFO]	==== WARMUP ====
2020-12-29 00:04:46,175	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:04:46,175	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:04:49,431	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:04:49,431	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:04:52,729	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:04:52,729	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:04:55,978	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-29 00:04:55,979	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:04:55,979	[INFO]	==== START ====
2020-12-29 00:04:56,862	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:04:57,792	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:05:00,972	[INFO]	3	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:05:01,855	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:05:02,794	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:05:03,726	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:05:04,664	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:05:05,579	[INFO]	8	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:05:08,796	[INFO]	9	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:05:09,715	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:05:10,646	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:05:11,549	[INFO]	12	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-29 00:05:12,486	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:05:15,760	[INFO]	14	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:05:16,518	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:05:17,270	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:05:18,179	[INFO]	17	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-29 00:05:19,106	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:05:22,343	[INFO]	19	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:05:22,344	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:05:22,345	[INFO]	20	SUCCESS	+1.0	
2020-12-29 00:05:22,345	[DEBUG]	
2020-12-29 00:05:25,568	[INFO]	21	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:05:25,569	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:05:25,569	[INFO]	==== END ====
2020-12-29 00:05:25,569	[INFO]	Reason: target fitness reached
2020-12-29 00:05:25,570	[INFO]	
2020-12-29 00:05:25,570	[INFO]	========== EPOCH 9 ==========
2020-12-29 00:05:25,570	[INFO]	==== WARMUP ====
2020-12-29 00:05:28,770	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:05:28,770	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:05:32,040	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:05:32,040	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:05:35,376	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:05:35,376	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:05:39,504	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-29 00:05:39,504	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:05:39,504	[INFO]	==== START ====
2020-12-29 00:05:40,427	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:05:41,192	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:05:42,098	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:05:43,030	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:05:43,983	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:05:44,879	[INFO]	6	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:05:48,103	[INFO]	7	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:05:48,104	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:05:48,105	[INFO]	8	SUCCESS	+1.0	
2020-12-29 00:05:48,105	[DEBUG]	
2020-12-29 00:05:51,319	[INFO]	9	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:05:51,320	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:05:54,563	[INFO]	10	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:05:54,564	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,22 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 15,25 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     return true;
+                 } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
                      return false;
!                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:05:57,757	[INFO]	11	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:05:57,758	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,30 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     return true;
+                 } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
                      return false;
!                 }
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-29 00:05:57,759	[INFO]	12	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:05:57,760	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,30 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     return true;
+                 } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
                      return false;
!                 }
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-29 00:05:57,761	[INFO]	13	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:05:57,761	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,30 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     return true;
+                 } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
                      return false;
!                 }
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-29 00:05:57,762	[INFO]	14	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:05:57,763	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,30 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     return true;
+                 } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
                      return false;
!                 }
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-29 00:06:00,972	[INFO]	15	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:06:00,973	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-29 00:06:01,899	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:06:05,119	[INFO]	17	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:06:05,120	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,28 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
--- 15,34 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-29 00:06:05,121	[INFO]	18	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:06:05,122	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-29 00:06:06,074	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:06:09,306	[INFO]	20	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:06:09,307	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:06:09,308	[INFO]	22	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:06:09,309	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-29 00:06:10,228	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:06:11,187	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:06:11,962	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:06:11,964	[INFO]	26	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:06:11,964	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:06:11,965	[INFO]	27	SUCCESS	+1.0	
2020-12-29 00:06:11,965	[DEBUG]	
2020-12-29 00:06:15,229	[INFO]	28	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:06:15,231	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-29 00:06:15,232	[INFO]	29	SUCCESS	+1.0	
2020-12-29 00:06:15,233	[DEBUG]	
2020-12-29 00:06:15,997	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:06:19,232	[INFO]	31	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:06:19,233	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-29 00:06:19,233	[INFO]	32	SUCCESS	+1.0	
2020-12-29 00:06:19,234	[DEBUG]	
2020-12-29 00:06:20,132	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:06:21,047	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:06:21,821	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:06:22,761	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:06:25,986	[INFO]	37	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:06:26,926	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:06:30,173	[INFO]	39	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:06:30,174	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:06:30,175	[INFO]	40	SUCCESS	+1.0	
2020-12-29 00:06:30,175	[DEBUG]	
2020-12-29 00:06:31,095	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:06:32,011	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:06:32,773	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:06:33,673	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:06:33,674	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:06:33,675	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:06:36,891	[INFO]	47	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:06:36,893	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-29 00:06:36,895	[INFO]	48	SUCCESS	+1.0	
2020-12-29 00:06:36,895	[DEBUG]	
2020-12-29 00:06:37,810	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:06:41,038	[INFO]	50	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:06:41,039	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:06:41,942	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:06:42,690	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:06:42,691	[INFO]	53	SUCCESS	+1.0	
2020-12-29 00:06:42,691	[DEBUG]	
2020-12-29 00:06:45,904	[INFO]	54	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:06:45,905	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:06:45,905	[INFO]	==== END ====
2020-12-29 00:06:45,905	[INFO]	Reason: target fitness reached
2020-12-29 00:06:45,906	[INFO]	
2020-12-29 00:06:45,906	[INFO]	========== EPOCH 10 ==========
2020-12-29 00:06:45,906	[INFO]	==== WARMUP ====
2020-12-29 00:06:49,104	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:06:49,104	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:06:52,314	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:06:52,315	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:06:55,534	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:06:55,534	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:06:58,765	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-29 00:06:58,765	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:06:58,765	[INFO]	==== START ====
2020-12-29 00:07:01,952	[INFO]	1	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:07:02,869	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:07:06,074	[INFO]	3	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:07:06,074	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:07:06,075	[INFO]	4	SUCCESS	+1.0	
2020-12-29 00:07:06,075	[DEBUG]	
2020-12-29 00:07:07,003	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:07:10,252	[INFO]	6	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:07:10,253	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:07:11,180	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:07:11,182	[INFO]	8	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:07:11,182	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:07:11,183	[INFO]	9	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:07:11,183	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:07:11,184	[INFO]	10	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:07:11,184	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:07:12,100	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:07:12,102	[INFO]	12	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:07:12,102	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:07:15,351	[INFO]	13	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:07:15,353	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,26 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 16,30 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:07:15,353	[INFO]	14	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:07:15,354	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:07:18,584	[INFO]	15	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:07:18,586	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,28 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
+ return true; }
                      }
                  }
                  return false;

2020-12-29 00:07:19,346	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:07:22,585	[INFO]	17	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:07:22,586	[INFO]	18	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:07:22,587	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:07:23,326	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:07:24,261	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:07:27,546	[INFO]	21	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:07:27,547	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:07:30,869	[INFO]	22	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:07:30,869	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:07:31,753	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:07:31,755	[INFO]	24	SUCCESS	+1.0	
2020-12-29 00:07:31,755	[DEBUG]	
2020-12-29 00:07:32,639	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:07:33,551	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:07:36,731	[INFO]	27	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:07:36,732	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:07:36,732	[INFO]	28	SUCCESS	+1.0	
2020-12-29 00:07:36,733	[DEBUG]	
2020-12-29 00:07:37,508	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:07:37,511	[INFO]	30	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:07:37,512	[DEBUG]	
2020-12-29 00:07:38,271	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:07:39,200	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:07:39,201	[INFO]	33	SUCCESS	+1.0	
2020-12-29 00:07:39,201	[DEBUG]	
2020-12-29 00:07:39,967	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:07:40,891	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:07:41,786	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:07:42,724	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:07:46,003	[INFO]	38	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:07:46,911	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:07:50,207	[INFO]	40	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:07:50,209	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-29 00:07:51,111	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:07:51,112	[INFO]	42	SUCCESS	+1.0	
2020-12-29 00:07:51,112	[DEBUG]	
2020-12-29 00:07:54,340	[INFO]	43	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:07:54,341	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:07:54,342	[INFO]	44	SUCCESS	+1.0	
2020-12-29 00:07:54,342	[DEBUG]	
2020-12-29 00:07:57,494	[INFO]	45	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:07:57,495	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:08:00,775	[INFO]	46	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:08:00,776	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,22 ****
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:08:03,912	[INFO]	47	SUCCESS	*0.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:08:03,913	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,30 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:08:03,913	[INFO]	==== END ====
2020-12-29 00:08:03,913	[INFO]	Reason: target fitness reached
2020-12-29 00:08:03,914	[INFO]	
2020-12-29 00:08:03,914	[INFO]	========== EPOCH 11 ==========
2020-12-29 00:08:03,915	[INFO]	==== WARMUP ====
2020-12-29 00:08:07,227	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:08:07,227	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:08:10,438	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:08:10,438	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:08:13,623	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:08:13,623	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:08:16,849	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-29 00:08:16,849	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:08:16,849	[INFO]	==== START ====
2020-12-29 00:08:20,089	[INFO]	1	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-29 00:08:21,032	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:08:24,290	[INFO]	3	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:08:25,214	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:08:25,973	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:08:29,153	[INFO]	6	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:08:32,431	[INFO]	7	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:08:32,432	[INFO]	8	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:08:32,433	[DEBUG]	
2020-12-29 00:08:33,190	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:08:33,191	[INFO]	10	SUCCESS	+1.0	
2020-12-29 00:08:33,191	[DEBUG]	
2020-12-29 00:08:36,416	[INFO]	11	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:08:36,417	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:08:36,418	[INFO]	12	SUCCESS	+1.0	
2020-12-29 00:08:36,418	[DEBUG]	
2020-12-29 00:08:37,341	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:08:38,261	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:08:41,569	[INFO]	15	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:08:41,571	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:08:41,572	[INFO]	16	SUCCESS	+1.0	
2020-12-29 00:08:41,572	[DEBUG]	
2020-12-29 00:08:42,509	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:08:42,512	[INFO]	18	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:08:43,261	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:08:46,513	[INFO]	20	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:08:46,515	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-29 00:08:46,517	[INFO]	21	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:08:46,518	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-29 00:08:49,730	[INFO]	22	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:08:49,731	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,27 ****
--- 20,33 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  }
                  return false;
              }

2020-12-29 00:08:50,670	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:08:50,672	[INFO]	24	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:08:50,672	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-29 00:08:51,598	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:08:54,884	[INFO]	26	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:08:54,886	[INFO]	27	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:08:54,886	[DEBUG]	
2020-12-29 00:08:54,887	[INFO]	28	SUCCESS	+1.0	
2020-12-29 00:08:54,887	[DEBUG]	
2020-12-29 00:08:55,792	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:08:56,725	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:08:57,499	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:09:00,729	[INFO]	32	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:09:00,731	[INFO]	33	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:09:00,732	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:09:03,937	[INFO]	35	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:09:03,939	[INFO]	36	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:09:03,939	[DEBUG]	
2020-12-29 00:09:03,940	[INFO]	37	SUCCESS	+1.0	
2020-12-29 00:09:03,940	[DEBUG]	
2020-12-29 00:09:04,701	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:09:05,629	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:09:06,530	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:09:07,469	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:09:10,693	[INFO]	42	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:09:11,604	[INFO]	43	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:09:12,362	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:09:15,574	[INFO]	45	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:09:15,575	[INFO]	46	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:09:16,484	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:09:19,714	[INFO]	48	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:09:22,987	[INFO]	49	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:09:22,988	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-29 00:09:23,911	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:09:23,912	[INFO]	51	SUCCESS	+1.0	
2020-12-29 00:09:23,913	[DEBUG]	
2020-12-29 00:09:24,843	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:09:25,777	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:09:26,675	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:09:26,676	[INFO]	55	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:09:26,676	[DEBUG]	
2020-12-29 00:09:27,491	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:09:28,418	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:09:29,183	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:09:29,184	[INFO]	59	SUCCESS	+1.0	
2020-12-29 00:09:29,184	[DEBUG]	
2020-12-29 00:09:32,375	[INFO]	60	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:09:32,375	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:09:32,376	[INFO]	61	SUCCESS	+1.0	
2020-12-29 00:09:32,376	[DEBUG]	
2020-12-29 00:09:33,297	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:09:36,488	[INFO]	63	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:09:36,489	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:09:39,788	[INFO]	64	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:09:40,547	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:09:40,548	[INFO]	66	SUCCESS	+1.0	
2020-12-29 00:09:40,548	[DEBUG]	
2020-12-29 00:09:43,754	[INFO]	67	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:09:43,755	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:09:43,756	[INFO]	68	SUCCESS	+1.0	
2020-12-29 00:09:43,756	[DEBUG]	
2020-12-29 00:09:44,689	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:09:45,623	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:09:48,896	[INFO]	71	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:09:49,789	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:09:49,792	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:09:50,713	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:09:53,960	[INFO]	75	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:09:54,900	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:09:54,902	[INFO]	77	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:09:54,902	[DEBUG]	
2020-12-29 00:09:58,102	[INFO]	78	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:09:58,103	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-29 00:09:58,104	[INFO]	79	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-29 00:09:58,105	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-29 00:09:59,026	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-29 00:09:59,936	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:09:59,937	[INFO]	82	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-29 00:09:59,937	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-29 00:09:59,938	[INFO]	83	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:09:59,939	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-29 00:09:59,939	[INFO]	84	SUCCESS	+1.0	
2020-12-29 00:09:59,940	[DEBUG]	
2020-12-29 00:10:00,876	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:10:01,811	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:10:02,569	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:10:05,839	[INFO]	88	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:10:06,735	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:10:07,668	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:10:07,670	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:10:08,595	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:10:09,517	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:10:09,518	[INFO]	94	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:10:10,276	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:10:11,196	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:10:14,431	[INFO]	97	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:10:14,432	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-29 00:10:14,433	[INFO]	98	SUCCESS	+1.0	
2020-12-29 00:10:14,433	[DEBUG]	
2020-12-29 00:10:15,190	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:10:15,939	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:10:16,827	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:10:17,732	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:10:20,991	[INFO]	103	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:10:20,992	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:10:20,992	[INFO]	104	SUCCESS	+1.0	
2020-12-29 00:10:20,993	[DEBUG]	
2020-12-29 00:10:20,993	[INFO]	105	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:10:20,994	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-29 00:10:20,994	[INFO]	106	SUCCESS	+1.0	
2020-12-29 00:10:20,995	[DEBUG]	
2020-12-29 00:10:24,238	[INFO]	107	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:10:24,239	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:10:24,239	[INFO]	108	SUCCESS	+1.0	
2020-12-29 00:10:24,239	[DEBUG]	
2020-12-29 00:10:27,503	[INFO]	109	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:10:28,233	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:10:31,453	[INFO]	111	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:10:32,368	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:10:33,288	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:10:34,218	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:10:34,220	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:10:35,250	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:10:36,311	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:10:37,339	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:10:38,492	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:10:38,493	[INFO]	120	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:10:38,493	[DEBUG]	
2020-12-29 00:10:39,795	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:10:39,797	[INFO]	122	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:10:39,798	[DEBUG]	
2020-12-29 00:10:39,799	[INFO]	123	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:10:39,799	[DEBUG]	
2020-12-29 00:10:39,800	[INFO]	124	SUCCESS	+1.0	
2020-12-29 00:10:39,801	[DEBUG]	
2020-12-29 00:10:41,104	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:10:42,194	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:10:43,485	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:10:44,723	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:10:45,848	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:10:45,850	[INFO]	130	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:10:45,851	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-29 00:10:45,851	[INFO]	131	SUCCESS	+1.0	
2020-12-29 00:10:45,852	[DEBUG]	
2020-12-29 00:10:46,777	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:10:47,710	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:10:48,474	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:10:49,395	[INFO]	135	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-29 00:10:50,309	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:10:53,519	[INFO]	137	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:10:53,519	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:10:53,520	[INFO]	138	SUCCESS	+1.0	
2020-12-29 00:10:53,520	[DEBUG]	
2020-12-29 00:10:54,448	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:10:55,216	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:10:56,140	[INFO]	141	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-29 00:10:56,141	[INFO]	142	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:10:56,142	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-29 00:10:56,142	[INFO]	143	SUCCESS	+1.0	
2020-12-29 00:10:56,143	[DEBUG]	
2020-12-29 00:10:57,062	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:11:00,311	[INFO]	145	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:11:00,312	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:11:00,313	[INFO]	146	SUCCESS	+1.0	
2020-12-29 00:11:00,313	[DEBUG]	
2020-12-29 00:11:00,314	[INFO]	147	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:11:00,314	[DEBUG]	
2020-12-29 00:11:00,315	[INFO]	148	SUCCESS	+1.0	
2020-12-29 00:11:00,315	[DEBUG]	
2020-12-29 00:11:01,296	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:11:01,299	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:11:01,301	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:11:02,251	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:11:03,026	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:11:03,925	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:11:07,127	[INFO]	155	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:11:07,128	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:11:07,129	[INFO]	156	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:11:07,129	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:11:07,130	[INFO]	157	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:11:07,130	[DEBUG]	
2020-12-29 00:11:07,130	[INFO]	158	SUCCESS	+1.0	
2020-12-29 00:11:07,131	[DEBUG]	
2020-12-29 00:11:08,063	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:11:11,296	[INFO]	160	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:11:11,297	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-29 00:11:11,298	[INFO]	161	SUCCESS	+1.0	
2020-12-29 00:11:11,298	[DEBUG]	
2020-12-29 00:11:11,299	[INFO]	162	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:11:11,299	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:11:11,300	[INFO]	163	SUCCESS	+1.0	
2020-12-29 00:11:11,300	[DEBUG]	
2020-12-29 00:11:14,514	[INFO]	164	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:11:15,436	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:11:16,365	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:11:19,574	[INFO]	167	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:11:19,576	[INFO]	168	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:11:19,576	[DEBUG]	
2020-12-29 00:11:20,357	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:11:20,358	[INFO]	170	SUCCESS	+1.0	
2020-12-29 00:11:20,358	[DEBUG]	
2020-12-29 00:11:20,359	[INFO]	171	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:11:20,359	[DEBUG]	
2020-12-29 00:11:21,244	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:11:21,245	[INFO]	173	SUCCESS	+1.0	
2020-12-29 00:11:21,245	[DEBUG]	
2020-12-29 00:11:21,246	[INFO]	174	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:11:21,246	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-29 00:11:21,247	[INFO]	175	SUCCESS	+1.0	
2020-12-29 00:11:21,247	[DEBUG]	
2020-12-29 00:11:22,006	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:11:22,808	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:11:22,810	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:11:26,016	[INFO]	179	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:11:26,934	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:11:27,866	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:11:28,784	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:11:29,713	[INFO]	183	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:11:30,470	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:11:33,704	[INFO]	185	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:11:33,706	[INFO]	186	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:11:33,707	[DEBUG]	
2020-12-29 00:11:34,620	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:11:34,621	[INFO]	188	SUCCESS	+1.0	
2020-12-29 00:11:34,621	[DEBUG]	
2020-12-29 00:11:34,622	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:11:35,564	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:11:36,495	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:11:37,274	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:11:38,179	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:11:39,089	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:11:40,052	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:11:40,986	[INFO]	196	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-29 00:11:41,905	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:11:41,907	[INFO]	198	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:11:41,907	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:11:42,837	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:11:42,838	[INFO]	200	SUCCESS	+1.0	
2020-12-29 00:11:42,838	[DEBUG]	
2020-12-29 00:11:46,084	[INFO]	201	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:11:46,084	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:11:46,852	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:11:50,099	[INFO]	203	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:11:50,100	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:11:51,014	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:11:54,240	[INFO]	205	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:11:54,241	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:11:57,455	[INFO]	206	SUCCESS	*0.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:11:57,456	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,29 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:11:57,456	[INFO]	==== END ====
2020-12-29 00:11:57,456	[INFO]	Reason: target fitness reached
2020-12-29 00:11:57,457	[INFO]	
2020-12-29 00:11:57,457	[INFO]	========== EPOCH 12 ==========
2020-12-29 00:11:57,458	[INFO]	==== WARMUP ====
2020-12-29 00:12:00,682	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:12:00,682	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:12:03,854	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:12:03,855	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:12:07,052	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:12:07,053	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:12:10,223	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-29 00:12:10,223	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:12:10,224	[INFO]	==== START ====
2020-12-29 00:12:10,999	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:12:14,192	[INFO]	2	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:12:14,193	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:12:14,193	[INFO]	3	SUCCESS	+1.0	
2020-12-29 00:12:14,194	[DEBUG]	
2020-12-29 00:12:15,116	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:12:18,329	[INFO]	5	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:12:19,216	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:12:20,131	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:12:23,458	[INFO]	8	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:12:23,459	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-29 00:12:23,460	[INFO]	9	SUCCESS	+1.0	
2020-12-29 00:12:23,460	[DEBUG]	
2020-12-29 00:12:24,400	[INFO]	10	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-29 00:12:27,609	[INFO]	11	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:12:27,610	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:12:30,796	[INFO]	12	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:12:30,798	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:12:30,800	[INFO]	13	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:12:30,800	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:12:31,731	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:12:32,676	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:12:35,886	[INFO]	16	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:12:35,887	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:12:39,149	[INFO]	17	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:12:39,150	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:12:39,912	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:12:40,847	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:12:41,600	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:12:44,797	[INFO]	21	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:12:44,798	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,25 ****
--- 17,29 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:12:44,799	[INFO]	22	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:12:44,800	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:12:44,800	[INFO]	23	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:12:44,801	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:12:48,042	[INFO]	24	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:12:51,255	[INFO]	25	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:12:51,257	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:12:51,257	[INFO]	==== END ====
2020-12-29 00:12:51,258	[INFO]	Reason: target fitness reached
2020-12-29 00:12:51,259	[INFO]	
2020-12-29 00:12:51,259	[INFO]	========== EPOCH 13 ==========
2020-12-29 00:12:51,260	[INFO]	==== WARMUP ====
2020-12-29 00:12:54,467	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:12:54,468	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:12:57,709	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:12:57,710	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:13:00,956	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:13:00,957	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:13:04,176	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-29 00:13:04,176	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:13:04,176	[INFO]	==== START ====
2020-12-29 00:13:04,940	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:13:08,237	[INFO]	2	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:13:11,429	[INFO]	3	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:13:12,336	[INFO]	4	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:13:13,275	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:13:14,087	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:13:15,001	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:13:18,206	[INFO]	8	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:13:18,207	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:13:18,207	[INFO]	==== END ====
2020-12-29 00:13:18,207	[INFO]	Reason: target fitness reached
2020-12-29 00:13:18,208	[INFO]	
2020-12-29 00:13:18,208	[INFO]	========== EPOCH 14 ==========
2020-12-29 00:13:18,208	[INFO]	==== WARMUP ====
2020-12-29 00:13:21,483	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:13:21,484	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:13:24,715	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:13:24,715	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:13:28,014	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:13:28,015	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:13:31,204	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-29 00:13:31,204	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:13:31,204	[INFO]	==== START ====
2020-12-29 00:13:31,205	[INFO]	1	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:13:31,205	[DEBUG]	
2020-12-29 00:13:32,128	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:13:32,129	[INFO]	3	SUCCESS	+1.0	
2020-12-29 00:13:32,129	[DEBUG]	
2020-12-29 00:13:32,894	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:13:36,067	[INFO]	5	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:13:36,067	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:13:36,068	[INFO]	==== END ====
2020-12-29 00:13:36,068	[INFO]	Reason: target fitness reached
2020-12-29 00:13:36,069	[INFO]	
2020-12-29 00:13:36,069	[INFO]	========== EPOCH 15 ==========
2020-12-29 00:13:36,069	[INFO]	==== WARMUP ====
2020-12-29 00:13:39,360	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:13:39,361	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:13:42,571	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:13:42,571	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:13:45,783	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:13:45,784	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:13:49,016	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-29 00:13:49,016	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:13:49,016	[INFO]	==== START ====
2020-12-29 00:13:49,017	[INFO]	1	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:13:49,017	[DEBUG]	
2020-12-29 00:13:49,770	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:13:49,771	[INFO]	3	SUCCESS	+1.0	
2020-12-29 00:13:49,772	[DEBUG]	
2020-12-29 00:13:52,949	[INFO]	4	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:13:52,950	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-29 00:13:56,195	[INFO]	5	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:13:57,090	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:13:57,091	[INFO]	7	SUCCESS	+1.0	
2020-12-29 00:13:57,091	[DEBUG]	
2020-12-29 00:13:57,974	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:13:58,896	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:13:59,812	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:14:00,577	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:14:01,511	[INFO]	12	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:14:02,436	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:14:03,354	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:14:04,119	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:14:05,039	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:14:05,935	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:14:06,862	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:14:07,758	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:14:08,708	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:14:09,627	[INFO]	21	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-29 00:14:10,521	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:14:11,454	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:14:14,627	[INFO]	24	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:14:15,543	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:14:16,491	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:14:17,253	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:14:20,493	[INFO]	28	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:14:21,406	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:14:21,407	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:14:22,341	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:14:23,294	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:14:26,557	[INFO]	33	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:14:26,558	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-29 00:14:26,558	[INFO]	34	SUCCESS	+1.0	
2020-12-29 00:14:26,559	[DEBUG]	
2020-12-29 00:14:29,799	[INFO]	35	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:14:30,716	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:14:31,654	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:14:31,655	[INFO]	38	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:14:31,656	[DEBUG]	
2020-12-29 00:14:32,402	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:14:32,403	[INFO]	40	SUCCESS	+1.0	
2020-12-29 00:14:32,403	[DEBUG]	
2020-12-29 00:14:33,165	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:14:33,167	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:14:33,167	[INFO]	43	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:14:33,167	[DEBUG]	
2020-12-29 00:14:33,168	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:14:34,060	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:14:34,062	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:14:34,062	[INFO]	47	SUCCESS	+1.0	
2020-12-29 00:14:34,063	[DEBUG]	
2020-12-29 00:14:37,355	[INFO]	48	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:14:38,284	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:14:39,240	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:14:39,241	[INFO]	51	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:14:39,241	[DEBUG]	
2020-12-29 00:14:42,462	[INFO]	52	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:14:42,463	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:14:42,464	[INFO]	53	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:14:42,465	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:14:43,381	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:14:43,382	[INFO]	55	SUCCESS	+1.0	
2020-12-29 00:14:43,382	[DEBUG]	
2020-12-29 00:14:44,311	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:14:45,224	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:14:45,987	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:14:46,903	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:14:47,826	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:14:51,023	[INFO]	61	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:14:54,244	[INFO]	62	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:14:57,505	[INFO]	63	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:14:57,506	[INFO]	64	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:14:57,507	[DEBUG]	
2020-12-29 00:15:00,765	[INFO]	65	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:15:00,766	[INFO]	66	SUCCESS	+1.0	
2020-12-29 00:15:00,766	[DEBUG]	
2020-12-29 00:15:00,767	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:15:04,029	[INFO]	68	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:15:04,030	[INFO]	69	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:15:04,030	[DEBUG]	
2020-12-29 00:15:04,031	[INFO]	70	SUCCESS	+1.0	
2020-12-29 00:15:04,031	[DEBUG]	
2020-12-29 00:15:04,032	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:15:04,806	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:15:05,722	[INFO]	73	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:15:06,652	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:15:09,887	[INFO]	75	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:15:10,647	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:15:11,580	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:15:12,494	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:15:13,284	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:15:14,203	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:15:17,427	[INFO]	81	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:15:17,428	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:15:17,429	[INFO]	82	SUCCESS	+1.0	
2020-12-29 00:15:17,429	[DEBUG]	
2020-12-29 00:15:20,688	[INFO]	83	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:15:21,611	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:15:21,612	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:15:24,872	[INFO]	86	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:15:24,874	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:15:25,802	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:15:25,804	[INFO]	88	SUCCESS	+1.0	
2020-12-29 00:15:25,804	[DEBUG]	
2020-12-29 00:15:26,543	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:15:27,434	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:15:28,285	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:15:29,268	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:15:30,217	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:15:31,130	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:15:34,393	[INFO]	95	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:15:35,261	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:15:36,208	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:15:36,960	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:15:37,744	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:15:37,745	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:15:41,012	[INFO]	101	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:15:44,221	[INFO]	102	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:15:47,430	[INFO]	103	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:15:50,627	[INFO]	104	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:15:50,628	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:15:53,848	[INFO]	105	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:15:53,849	[INFO]	106	SUCCESS	+1.0	
2020-12-29 00:15:53,849	[DEBUG]	
2020-12-29 00:15:57,147	[INFO]	107	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:15:57,147	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:16:00,356	[INFO]	108	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:16:00,357	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-29 00:16:00,358	[INFO]	109	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:16:00,358	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:16:03,561	[INFO]	110	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:16:03,562	[INFO]	111	SUCCESS	+1.0	
2020-12-29 00:16:03,562	[DEBUG]	
2020-12-29 00:16:04,453	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:16:04,455	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:16:05,393	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:16:06,166	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:16:07,088	[INFO]	116	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-29 00:16:08,003	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:16:11,233	[INFO]	118	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:16:14,512	[INFO]	119	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:16:14,513	[INFO]	120	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:16:14,513	[DEBUG]	
2020-12-29 00:16:14,514	[INFO]	121	SUCCESS	+1.0	
2020-12-29 00:16:14,514	[DEBUG]	
2020-12-29 00:16:15,402	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:16:18,617	[INFO]	123	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:16:19,421	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:16:20,375	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:16:21,141	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:16:22,040	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:16:25,283	[INFO]	128	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:16:25,284	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:16:25,285	[INFO]	129	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:16:25,285	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:16:25,286	[INFO]	130	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:16:25,286	[DEBUG]	
2020-12-29 00:16:25,287	[INFO]	131	SUCCESS	+1.0	
2020-12-29 00:16:25,287	[DEBUG]	
2020-12-29 00:16:25,288	[INFO]	132	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:16:25,288	[DEBUG]	
2020-12-29 00:16:26,179	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:16:26,180	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:16:26,181	[INFO]	135	SUCCESS	+1.0	
2020-12-29 00:16:26,181	[DEBUG]	
2020-12-29 00:16:27,117	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:16:27,872	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:16:28,786	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:16:29,727	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:16:29,728	[INFO]	140	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:16:29,728	[DEBUG]	
2020-12-29 00:16:30,631	[INFO]	141	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:16:31,520	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:16:31,522	[INFO]	143	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:16:31,522	[DEBUG]	
2020-12-29 00:16:32,260	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:16:32,261	[INFO]	145	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:16:32,261	[DEBUG]	
2020-12-29 00:16:35,516	[INFO]	146	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:16:35,517	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-29 00:16:35,518	[INFO]	147	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:16:35,518	[DEBUG]	
2020-12-29 00:16:35,518	[INFO]	148	SUCCESS	+1.0	
2020-12-29 00:16:35,519	[DEBUG]	
2020-12-29 00:16:36,459	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:16:37,215	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:16:37,217	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:16:38,131	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:16:39,070	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:16:40,012	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:16:40,014	[INFO]	155	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:16:40,014	[DEBUG]	
2020-12-29 00:16:40,951	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:16:40,952	[INFO]	157	SUCCESS	+1.0	
2020-12-29 00:16:40,952	[DEBUG]	
2020-12-29 00:16:41,893	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:16:42,849	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:16:43,759	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:16:46,969	[INFO]	161	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:16:46,970	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-29 00:16:47,735	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:16:47,736	[INFO]	163	SUCCESS	+1.0	
2020-12-29 00:16:47,736	[DEBUG]	
2020-12-29 00:16:48,677	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:16:51,911	[INFO]	165	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:16:51,912	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:16:52,817	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:16:52,819	[INFO]	167	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:16:52,819	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:16:53,577	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:16:53,578	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:16:53,579	[INFO]	170	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:16:53,579	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:16:53,580	[INFO]	171	SUCCESS	+1.0	
2020-12-29 00:16:53,580	[DEBUG]	
2020-12-29 00:16:53,581	[INFO]	172	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:16:53,581	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-29 00:16:54,487	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:16:57,682	[INFO]	174	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:16:57,683	[INFO]	175	SUCCESS	+1.0	
2020-12-29 00:16:57,684	[DEBUG]	
2020-12-29 00:16:58,614	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:16:58,615	[INFO]	177	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:16:58,616	[DEBUG]	
2020-12-29 00:16:58,616	[INFO]	178	SUCCESS	+1.0	
2020-12-29 00:16:58,616	[DEBUG]	
2020-12-29 00:16:59,531	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:17:02,817	[INFO]	180	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:17:02,818	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:17:03,742	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:17:03,745	[INFO]	182	SUCCESS	+1.0	
2020-12-29 00:17:03,745	[DEBUG]	
2020-12-29 00:17:04,681	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:17:05,444	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:17:08,662	[INFO]	185	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:17:08,663	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:17:08,663	[INFO]	186	SUCCESS	+1.0	
2020-12-29 00:17:08,664	[DEBUG]	
2020-12-29 00:17:08,664	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:17:08,665	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:17:08,666	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:17:11,841	[INFO]	190	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:17:11,842	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:17:11,843	[INFO]	191	SUCCESS	+1.0	
2020-12-29 00:17:11,843	[DEBUG]	
2020-12-29 00:17:15,012	[INFO]	192	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:17:15,013	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:17:15,927	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:17:15,928	[INFO]	194	SUCCESS	+1.0	
2020-12-29 00:17:15,928	[DEBUG]	
2020-12-29 00:17:16,689	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:17:17,576	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:17:17,577	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:17:17,578	[INFO]	198	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:17:17,578	[DEBUG]	
2020-12-29 00:17:20,777	[INFO]	199	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:17:20,779	[INFO]	200	SUCCESS	+1.0	
2020-12-29 00:17:20,779	[DEBUG]	
2020-12-29 00:17:21,702	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:17:22,508	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:17:25,723	[INFO]	203	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:17:25,724	[INFO]	204	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-29 00:17:25,725	[DEBUG]	
2020-12-29 00:17:29,006	[INFO]	205	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:17:29,007	[INFO]	206	SUCCESS	+1.0	
2020-12-29 00:17:29,008	[DEBUG]	
2020-12-29 00:17:29,008	[INFO]	207	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:17:29,925	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:17:30,713	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:17:31,596	[INFO]	210	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:17:32,359	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:17:33,127	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:17:34,053	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:17:34,054	[INFO]	214	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:17:34,817	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:17:34,818	[INFO]	216	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:17:34,819	[DEBUG]	
2020-12-29 00:17:38,030	[INFO]	217	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:17:38,032	[INFO]	218	SUCCESS	+1.0	
2020-12-29 00:17:38,033	[DEBUG]	
2020-12-29 00:17:38,969	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:17:39,928	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:17:43,165	[INFO]	221	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:17:43,166	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:17:44,071	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:17:44,072	[INFO]	223	SUCCESS	+1.0	
2020-12-29 00:17:44,073	[DEBUG]	
2020-12-29 00:17:44,074	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:17:44,075	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:17:45,006	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:17:45,930	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:17:49,139	[INFO]	228	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:17:49,140	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-29 00:17:49,140	[INFO]	229	SUCCESS	+1.0	
2020-12-29 00:17:49,141	[DEBUG]	
2020-12-29 00:17:52,307	[INFO]	230	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:17:53,064	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:17:56,336	[INFO]	232	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:17:56,337	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:17:56,338	[INFO]	233	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:17:56,339	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:17:57,240	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:18:00,465	[INFO]	235	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:18:00,466	[INFO]	236	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:18:00,466	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:18:00,467	[INFO]	237	SUCCESS	+1.0	
2020-12-29 00:18:00,467	[DEBUG]	
2020-12-29 00:18:03,696	[INFO]	238	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:18:03,697	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:18:04,620	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:18:05,535	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:18:05,537	[INFO]	241	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:18:05,537	[DEBUG]	
2020-12-29 00:18:05,538	[INFO]	242	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:18:05,538	[DEBUG]	
2020-12-29 00:18:05,539	[INFO]	243	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:18:06,458	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:18:07,397	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:18:08,318	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:18:08,320	[INFO]	247	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:18:08,320	[DEBUG]	
2020-12-29 00:18:09,075	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:18:09,986	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:18:10,907	[INFO]	250	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:18:10,909	[INFO]	251	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:18:10,909	[DEBUG]	
2020-12-29 00:18:11,827	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:18:11,828	[INFO]	253	SUCCESS	+1.0	
2020-12-29 00:18:11,829	[DEBUG]	
2020-12-29 00:18:12,723	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:18:15,957	[INFO]	255	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:18:16,887	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:18:16,888	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:18:20,107	[INFO]	258	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:18:20,108	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-29 00:18:20,109	[INFO]	259	SUCCESS	+1.0	
2020-12-29 00:18:20,109	[DEBUG]	
2020-12-29 00:18:21,019	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:18:24,407	[INFO]	261	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:18:24,408	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:18:27,557	[INFO]	262	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:18:30,774	[INFO]	263	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:18:30,775	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:18:34,065	[INFO]	264	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:18:34,066	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:18:34,067	[INFO]	265	SUCCESS	+1.0	
2020-12-29 00:18:34,067	[DEBUG]	
2020-12-29 00:18:34,982	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:18:35,903	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:18:39,183	[INFO]	268	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:18:40,096	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:18:40,098	[INFO]	270	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:18:40,862	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:18:40,863	[INFO]	272	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:18:41,770	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:18:41,772	[INFO]	274	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:18:41,772	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:18:45,012	[INFO]	276	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:18:48,222	[INFO]	277	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:18:49,162	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:18:49,164	[INFO]	279	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:18:49,164	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:18:49,165	[INFO]	280	SUCCESS	+1.0	
2020-12-29 00:18:49,165	[DEBUG]	
2020-12-29 00:18:50,082	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:18:53,334	[INFO]	282	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:18:53,335	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-29 00:18:53,335	[INFO]	283	SUCCESS	+1.0	
2020-12-29 00:18:53,336	[DEBUG]	
2020-12-29 00:18:54,100	[INFO]	284	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:18:54,844	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:18:55,598	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:18:56,479	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:18:59,676	[INFO]	288	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:18:59,676	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:19:00,415	[INFO]	289	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:19:00,416	[INFO]	290	SUCCESS	+1.0	
2020-12-29 00:19:00,416	[DEBUG]	
2020-12-29 00:19:01,340	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:19:04,581	[INFO]	292	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:19:04,582	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-29 00:19:05,485	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:19:05,486	[INFO]	294	SUCCESS	+1.0	
2020-12-29 00:19:05,486	[DEBUG]	
2020-12-29 00:19:06,420	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:19:07,348	[INFO]	296	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:19:07,350	[INFO]	297	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:19:07,350	[INFO]	298	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:19:07,351	[DEBUG]	
2020-12-29 00:19:10,597	[INFO]	299	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:19:10,599	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:19:11,383	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:19:11,384	[INFO]	301	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:19:11,385	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:19:14,568	[INFO]	302	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:19:14,569	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:19:14,570	[INFO]	303	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:19:14,571	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:19:17,791	[INFO]	304	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:19:18,547	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:19:18,548	[INFO]	306	SUCCESS	+1.0	
2020-12-29 00:19:18,549	[DEBUG]	
2020-12-29 00:19:19,289	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:19:20,200	[INFO]	308	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:19:21,130	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:19:22,049	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:19:22,051	[INFO]	311	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:19:22,051	[DEBUG]	
2020-12-29 00:19:22,052	[INFO]	312	SUCCESS	+1.0	
2020-12-29 00:19:22,052	[DEBUG]	
2020-12-29 00:19:22,869	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:19:23,781	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:19:24,545	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:19:27,778	[INFO]	316	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:19:28,669	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:19:29,431	[INFO]	318	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:19:30,341	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:19:33,546	[INFO]	320	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:19:33,547	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:19:33,547	[INFO]	321	SUCCESS	+1.0	
2020-12-29 00:19:33,548	[DEBUG]	
2020-12-29 00:19:36,789	[INFO]	322	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:19:36,790	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-29 00:19:37,710	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:19:38,625	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:19:39,571	[INFO]	325	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:19:42,851	[INFO]	326	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:19:42,852	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,25 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:19:46,075	[INFO]	327	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:19:46,076	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,25 ****
--- 17,28 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:19:47,010	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:19:50,284	[INFO]	329	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:19:50,285	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,25 ****
--- 17,27 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:19:53,482	[INFO]	330	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:19:53,483	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:19:54,394	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:19:54,395	[INFO]	332	SUCCESS	+1.0	
2020-12-29 00:19:54,395	[DEBUG]	
2020-12-29 00:19:55,179	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:19:56,091	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:19:59,279	[INFO]	335	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:19:59,280	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:20:00,186	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-29 00:20:00,189	[INFO]	337	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:20:00,189	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:20:00,951	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:20:01,871	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:20:01,872	[INFO]	340	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:20:01,872	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:20:02,615	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:20:02,616	[INFO]	342	SUCCESS	+1.0	
2020-12-29 00:20:02,616	[DEBUG]	
2020-12-29 00:20:03,587	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:20:04,338	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:20:05,252	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:20:06,172	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:20:06,173	[INFO]	347	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:20:07,097	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:20:10,282	[INFO]	349	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:20:10,282	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:20:10,283	[INFO]	==== END ====
2020-12-29 00:20:10,283	[INFO]	Reason: target fitness reached
2020-12-29 00:20:10,283	[INFO]	
2020-12-29 00:20:10,284	[INFO]	========== EPOCH 16 ==========
2020-12-29 00:20:10,284	[INFO]	==== WARMUP ====
2020-12-29 00:20:13,491	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:20:13,491	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:20:16,697	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:20:16,698	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:20:19,970	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:20:19,971	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:20:23,260	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-29 00:20:23,260	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:20:23,261	[INFO]	==== START ====
2020-12-29 00:20:26,490	[INFO]	1	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:20:27,244	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:20:30,452	[INFO]	3	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:20:30,453	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-29 00:20:30,454	[INFO]	4	SUCCESS	+1.0	
2020-12-29 00:20:30,454	[DEBUG]	
2020-12-29 00:20:31,367	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:20:34,667	[INFO]	6	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:20:34,668	[INFO]	7	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:20:34,668	[DEBUG]	
2020-12-29 00:20:35,833	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:20:35,835	[INFO]	9	SUCCESS	+1.0	
2020-12-29 00:20:35,835	[DEBUG]	
2020-12-29 00:20:37,097	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:20:40,851	[INFO]	11	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:20:41,795	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:20:45,045	[INFO]	13	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-29 00:20:45,955	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:20:46,709	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:20:46,710	[INFO]	16	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:20:46,711	[INFO]	17	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:20:46,711	[DEBUG]	
2020-12-29 00:20:46,712	[INFO]	18	SUCCESS	+1.0	
2020-12-29 00:20:46,712	[DEBUG]	
2020-12-29 00:20:47,457	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:20:48,386	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:20:51,602	[INFO]	21	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:20:51,603	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-29 00:20:51,604	[INFO]	22	SUCCESS	+1.0	
2020-12-29 00:20:51,604	[DEBUG]	
2020-12-29 00:20:54,791	[INFO]	23	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:20:57,981	[INFO]	24	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:20:57,982	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:20:57,982	[INFO]	25	SUCCESS	+1.0	
2020-12-29 00:20:57,983	[DEBUG]	
2020-12-29 00:21:01,206	[INFO]	26	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:21:01,207	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:21:01,208	[INFO]	27	SUCCESS	+1.0	
2020-12-29 00:21:01,208	[DEBUG]	
2020-12-29 00:21:02,103	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:21:03,018	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:21:03,938	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:21:04,852	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:21:08,065	[INFO]	32	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:21:08,066	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:21:08,067	[INFO]	33	SUCCESS	+1.0	
2020-12-29 00:21:08,067	[DEBUG]	
2020-12-29 00:21:08,068	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:21:11,279	[INFO]	35	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:21:12,032	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:21:12,951	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:21:12,952	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:21:13,864	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:21:14,770	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:21:15,700	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:21:15,701	[INFO]	42	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:21:15,702	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:21:16,634	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:21:16,635	[INFO]	44	SUCCESS	+1.0	
2020-12-29 00:21:16,635	[DEBUG]	
2020-12-29 00:21:17,551	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:21:17,553	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:21:17,553	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:21:18,466	[INFO]	48	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:21:18,467	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:21:19,255	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:21:20,199	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:21:20,200	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:21:23,507	[INFO]	53	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:21:23,508	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:21:24,414	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:21:24,415	[INFO]	55	SUCCESS	+1.0	
2020-12-29 00:21:24,416	[DEBUG]	
2020-12-29 00:21:27,670	[INFO]	56	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:21:27,670	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:21:27,671	[INFO]	57	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:21:27,672	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:21:28,587	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:21:29,530	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:21:29,532	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:21:30,471	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-29 00:21:30,473	[INFO]	62	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:21:30,473	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:21:31,391	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:21:32,295	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:21:32,296	[INFO]	65	SUCCESS	+1.0	
2020-12-29 00:21:32,297	[DEBUG]	
2020-12-29 00:21:33,232	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:21:34,159	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:21:37,369	[INFO]	68	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:21:40,633	[INFO]	69	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:21:41,534	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:21:44,755	[INFO]	71	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:21:44,756	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:21:45,702	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:21:45,703	[INFO]	73	SUCCESS	+1.0	
2020-12-29 00:21:45,704	[DEBUG]	
2020-12-29 00:21:46,632	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:21:49,865	[INFO]	75	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:21:49,867	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-29 00:21:49,869	[INFO]	76	SUCCESS	+1.0	
2020-12-29 00:21:49,869	[DEBUG]	
2020-12-29 00:21:53,036	[INFO]	77	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:21:53,037	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:21:53,037	[INFO]	==== END ====
2020-12-29 00:21:53,037	[INFO]	Reason: target fitness reached
2020-12-29 00:21:53,038	[INFO]	
2020-12-29 00:21:53,038	[INFO]	========== EPOCH 17 ==========
2020-12-29 00:21:53,039	[INFO]	==== WARMUP ====
2020-12-29 00:21:56,210	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:21:56,210	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:21:59,410	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:21:59,411	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:22:02,641	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:22:02,641	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:22:05,838	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-29 00:22:05,838	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:22:05,838	[INFO]	==== START ====
2020-12-29 00:22:06,743	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:22:07,655	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:22:08,565	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:22:11,739	[INFO]	4	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:22:12,670	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:22:12,671	[INFO]	6	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:22:12,671	[DEBUG]	
2020-12-29 00:22:13,588	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:22:13,589	[INFO]	8	SUCCESS	+1.0	
2020-12-29 00:22:13,589	[DEBUG]	
2020-12-29 00:22:14,510	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:22:15,422	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:22:18,671	[INFO]	11	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:22:18,672	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:22:21,868	[INFO]	12	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:22:22,828	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:22:23,754	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:22:24,685	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:22:24,686	[INFO]	16	SUCCESS	+1.0	
2020-12-29 00:22:24,686	[DEBUG]	
2020-12-29 00:22:24,687	[INFO]	17	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:22:24,687	[DEBUG]	
2020-12-29 00:22:24,688	[INFO]	18	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:22:24,688	[DEBUG]	
2020-12-29 00:22:25,615	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-29 00:22:25,616	[INFO]	20	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:22:25,617	[DEBUG]	
2020-12-29 00:22:25,617	[INFO]	21	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:22:25,618	[DEBUG]	
2020-12-29 00:22:25,618	[INFO]	22	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:22:25,618	[DEBUG]	
2020-12-29 00:22:28,936	[INFO]	23	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:22:28,937	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-29 00:22:29,858	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:22:29,859	[INFO]	25	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:22:29,860	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-29 00:22:29,860	[INFO]	26	SUCCESS	+1.0	
2020-12-29 00:22:29,861	[DEBUG]	
2020-12-29 00:22:33,080	[INFO]	27	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:22:33,081	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:22:34,002	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:22:37,202	[INFO]	29	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:22:37,203	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,27 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     return true;
                  }
                  return false;
              }

2020-12-29 00:22:37,204	[INFO]	30	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:22:37,205	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,27 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     return true;
                  }
                  return false;
              }

2020-12-29 00:22:38,124	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:22:39,060	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:22:39,063	[INFO]	33	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:22:39,065	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,27 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     return true;
                  }
                  return false;
              }

2020-12-29 00:22:39,068	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:22:39,996	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:22:39,998	[INFO]	36	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:22:39,998	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,27 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     return true;
                  }
                  return false;
              }

2020-12-29 00:22:40,940	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:22:40,942	[INFO]	38	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:22:40,942	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,27 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     return true;
                  }
                  return false;
              }

2020-12-29 00:22:40,943	[INFO]	39	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:22:40,944	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,27 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     return true;
                  }
                  return false;
              }

2020-12-29 00:22:44,225	[INFO]	40	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:22:44,226	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,28 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:22:47,448	[INFO]	41	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:22:47,449	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:22:47,449	[INFO]	42	SUCCESS	+1.0	
2020-12-29 00:22:47,449	[DEBUG]	
2020-12-29 00:22:48,399	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:22:51,578	[INFO]	44	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:22:52,479	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:22:53,243	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:22:56,459	[INFO]	47	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:22:56,460	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:22:56,460	[INFO]	48	SUCCESS	+1.0	
2020-12-29 00:22:56,461	[DEBUG]	
2020-12-29 00:22:56,461	[INFO]	49	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:22:56,462	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:22:59,704	[INFO]	50	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:22:59,706	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,30 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    Search s = new Search();
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:22:59,708	[INFO]	51	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:22:59,710	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:22:59,711	[INFO]	52	SUCCESS	+1.0	
2020-12-29 00:22:59,712	[DEBUG]	
2020-12-29 00:23:00,461	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:23:03,673	[INFO]	54	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:23:03,674	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-29 00:23:03,675	[INFO]	55	SUCCESS	+1.0	
2020-12-29 00:23:03,675	[DEBUG]	
2020-12-29 00:23:04,584	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:23:05,360	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:23:06,271	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:23:07,210	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:23:10,393	[INFO]	60	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:23:10,394	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-29 00:23:11,325	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:23:11,327	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:23:14,574	[INFO]	63	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:23:14,575	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,26 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 14,29 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search(); }
                      }
                  }
                  return false;

2020-12-29 00:23:14,576	[INFO]	64	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:23:14,577	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-29 00:23:15,481	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:23:16,254	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:23:16,255	[INFO]	67	SUCCESS	+1.0	
2020-12-29 00:23:16,255	[DEBUG]	
2020-12-29 00:23:17,185	[INFO]	68	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:23:17,949	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:23:18,863	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:23:22,100	[INFO]	71	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:23:22,888	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:23:23,834	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:23:24,757	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:23:25,683	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:23:26,428	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:23:26,429	[INFO]	77	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:23:26,429	[DEBUG]	
2020-12-29 00:23:26,430	[INFO]	78	SUCCESS	+1.0	
2020-12-29 00:23:26,430	[DEBUG]	
2020-12-29 00:23:27,335	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:23:30,551	[INFO]	80	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:23:30,551	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-29 00:23:31,514	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:23:34,799	[INFO]	82	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:23:34,800	[INFO]	83	SUCCESS	+1.0	
2020-12-29 00:23:34,800	[DEBUG]	
2020-12-29 00:23:34,801	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:23:38,065	[INFO]	85	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:23:38,066	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:23:38,066	[INFO]	86	SUCCESS	+1.0	
2020-12-29 00:23:38,067	[DEBUG]	
2020-12-29 00:23:38,067	[INFO]	87	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:23:38,068	[DEBUG]	
2020-12-29 00:23:38,984	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:23:38,985	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:23:38,986	[INFO]	90	SUCCESS	+1.0	
2020-12-29 00:23:38,986	[DEBUG]	
2020-12-29 00:23:39,912	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:23:40,687	[INFO]	92	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:23:40,689	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:23:41,442	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:23:42,356	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:23:43,131	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:23:44,010	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:23:44,900	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:23:45,865	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:23:49,106	[INFO]	100	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:23:49,107	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-29 00:23:49,108	[INFO]	101	SUCCESS	+1.0	
2020-12-29 00:23:49,108	[DEBUG]	
2020-12-29 00:23:50,045	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:23:50,786	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:23:54,005	[INFO]	104	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:23:54,005	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-29 00:23:54,006	[INFO]	105	SUCCESS	+1.0	
2020-12-29 00:23:54,006	[DEBUG]	
2020-12-29 00:23:54,908	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:23:55,662	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:23:56,586	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:23:57,498	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:23:58,418	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:23:59,351	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:24:00,285	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:24:01,192	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:24:04,429	[INFO]	114	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:24:07,671	[INFO]	115	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:24:07,672	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:24:11,011	[INFO]	116	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:24:11,013	[INFO]	117	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:24:11,014	[INFO]	118	SUCCESS	+1.0	
2020-12-29 00:24:11,014	[DEBUG]	
2020-12-29 00:24:11,800	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:24:14,957	[INFO]	120	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:24:15,858	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:24:15,860	[INFO]	122	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:24:19,126	[INFO]	123	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:24:20,055	[INFO]	124	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-29 00:24:20,971	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:24:21,920	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:24:22,877	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:24:26,137	[INFO]	128	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:24:26,138	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:24:26,926	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:24:27,816	[INFO]	131	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:24:27,818	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:24:31,019	[INFO]	133	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:24:34,279	[INFO]	134	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:24:34,280	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:24:34,281	[INFO]	135	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:24:34,282	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:24:34,282	[INFO]	136	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:24:34,283	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:24:35,199	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:24:35,201	[INFO]	138	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:24:35,201	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:24:35,202	[INFO]	139	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:24:35,203	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:24:35,204	[INFO]	140	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:24:35,204	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:24:35,205	[INFO]	141	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:24:35,205	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:24:35,206	[INFO]	142	SUCCESS	+1.0	
2020-12-29 00:24:35,206	[DEBUG]	
2020-12-29 00:24:38,415	[INFO]	143	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:24:38,415	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-29 00:24:41,701	[INFO]	144	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:24:41,702	[INFO]	145	SUCCESS	+1.0	
2020-12-29 00:24:41,703	[DEBUG]	
2020-12-29 00:24:42,589	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:24:43,496	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:24:44,398	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:24:44,399	[INFO]	149	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:24:45,307	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:24:48,492	[INFO]	151	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:24:49,407	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:24:50,323	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:24:51,237	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:24:54,445	[INFO]	155	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:24:55,354	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:24:56,279	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:24:57,187	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:24:58,108	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:25:01,347	[INFO]	160	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:25:02,271	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:25:03,230	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:25:03,996	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:25:04,909	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:25:05,831	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:25:06,584	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:25:07,347	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:25:08,279	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:25:09,219	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:25:10,137	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:25:11,063	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:25:11,845	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:25:12,724	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:25:15,981	[INFO]	174	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:25:15,981	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:25:15,982	[INFO]	175	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:25:15,983	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:25:15,984	[INFO]	176	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:25:15,984	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-29 00:25:15,984	[INFO]	177	SUCCESS	+1.0	
2020-12-29 00:25:15,985	[DEBUG]	
2020-12-29 00:25:16,898	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:25:17,808	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:25:18,731	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:25:18,732	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:25:19,671	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:25:20,408	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:25:21,301	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:25:24,564	[INFO]	185	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:25:25,323	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:25:26,224	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:25:29,462	[INFO]	188	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:25:29,464	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-29 00:25:30,372	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:25:30,374	[INFO]	190	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:25:30,375	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-29 00:25:30,375	[INFO]	191	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:25:30,376	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-29 00:25:30,377	[INFO]	192	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:25:30,377	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-29 00:25:31,135	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:25:31,898	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:25:31,899	[INFO]	195	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:25:31,900	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-29 00:25:32,803	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:25:33,709	[INFO]	197	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:25:34,638	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:25:34,640	[INFO]	199	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:25:34,641	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-29 00:25:35,778	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:25:39,087	[INFO]	201	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:25:39,088	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;
***************
*** 23,28 ****
--- 24,30 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-29 00:25:39,090	[INFO]	202	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:25:39,091	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-29 00:25:39,092	[INFO]	203	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:25:39,092	[DEBUG]	
2020-12-29 00:25:39,093	[INFO]	204	SUCCESS	+1.0	
2020-12-29 00:25:39,093	[DEBUG]	
2020-12-29 00:25:42,360	[INFO]	205	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:25:42,361	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-29 00:25:43,267	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:25:43,269	[INFO]	207	SUCCESS	+1.0	
2020-12-29 00:25:43,269	[DEBUG]	
2020-12-29 00:25:44,189	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:25:45,124	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:25:48,304	[INFO]	210	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:25:48,304	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:25:48,305	[INFO]	==== END ====
2020-12-29 00:25:48,305	[INFO]	Reason: target fitness reached
2020-12-29 00:25:48,305	[INFO]	
2020-12-29 00:25:48,306	[INFO]	========== EPOCH 18 ==========
2020-12-29 00:25:48,306	[INFO]	==== WARMUP ====
2020-12-29 00:25:51,543	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:25:51,543	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:25:54,729	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:25:54,729	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:25:58,003	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:25:58,003	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:26:01,233	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-29 00:26:01,234	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:26:01,234	[INFO]	==== START ====
2020-12-29 00:26:02,164	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:26:05,371	[INFO]	2	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:26:06,293	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:26:09,553	[INFO]	4	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:26:09,554	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-29 00:26:09,554	[INFO]	5	SUCCESS	+1.0	
2020-12-29 00:26:09,555	[DEBUG]	
2020-12-29 00:26:09,555	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:26:10,476	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:26:11,415	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:26:12,370	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:26:13,299	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:26:14,235	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:26:15,151	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:26:18,374	[INFO]	13	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:26:19,269	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:26:20,198	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:26:23,485	[INFO]	16	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:26:23,486	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:26:24,249	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:26:24,250	[INFO]	18	SUCCESS	+1.0	
2020-12-29 00:26:24,250	[DEBUG]	
2020-12-29 00:26:27,515	[INFO]	19	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:26:27,516	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-29 00:26:27,517	[INFO]	20	SUCCESS	+1.0	
2020-12-29 00:26:27,517	[DEBUG]	
2020-12-29 00:26:27,518	[INFO]	21	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:26:27,518	[DEBUG]	
2020-12-29 00:26:27,518	[INFO]	22	SUCCESS	+1.0	
2020-12-29 00:26:27,519	[DEBUG]	
2020-12-29 00:26:30,727	[INFO]	23	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:26:30,728	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-29 00:26:30,729	[INFO]	24	SUCCESS	+1.0	
2020-12-29 00:26:30,729	[DEBUG]	
2020-12-29 00:26:31,636	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:26:32,570	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:26:33,345	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:26:34,252	[INFO]	28	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-29 00:26:35,139	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:26:35,140	[INFO]	30	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:26:35,141	[DEBUG]	
2020-12-29 00:26:35,141	[INFO]	31	SUCCESS	+1.0	
2020-12-29 00:26:35,141	[DEBUG]	
2020-12-29 00:26:35,883	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:26:39,133	[INFO]	33	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:26:39,134	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:26:39,134	[INFO]	34	SUCCESS	+1.0	
2020-12-29 00:26:39,135	[DEBUG]	
2020-12-29 00:26:40,016	[INFO]	35	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:26:40,928	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:26:40,930	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:26:40,930	[INFO]	38	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:26:40,930	[DEBUG]	
2020-12-29 00:26:41,861	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:26:41,862	[INFO]	40	SUCCESS	+1.0	
2020-12-29 00:26:41,862	[DEBUG]	
2020-12-29 00:26:42,649	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:26:43,550	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:26:44,305	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:26:47,529	[INFO]	44	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:26:47,530	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:26:47,530	[INFO]	45	SUCCESS	+1.0	
2020-12-29 00:26:47,531	[DEBUG]	
2020-12-29 00:26:48,466	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:26:51,726	[INFO]	47	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:26:52,641	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:26:55,855	[INFO]	49	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:26:55,856	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:26:59,039	[INFO]	50	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:26:59,040	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,26 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:26:59,040	[INFO]	51	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:26:59,041	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:26:59,041	[INFO]	52	SUCCESS	+1.0	
2020-12-29 00:26:59,042	[DEBUG]	
2020-12-29 00:27:02,347	[INFO]	53	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:27:02,348	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:27:03,279	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:27:03,280	[INFO]	55	SUCCESS	+1.0	
2020-12-29 00:27:03,280	[DEBUG]	
2020-12-29 00:27:04,191	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:27:05,107	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:27:08,377	[INFO]	58	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:27:08,378	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-29 00:27:09,307	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:27:12,529	[INFO]	60	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:27:12,530	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-29 00:27:12,531	[INFO]	61	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:27:12,531	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-29 00:27:12,532	[INFO]	62	SUCCESS	+1.0	
2020-12-29 00:27:12,532	[DEBUG]	
2020-12-29 00:27:15,782	[INFO]	63	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:27:16,707	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:27:17,462	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:27:18,219	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:27:19,087	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:27:19,845	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:27:20,735	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:27:21,669	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:27:22,626	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:27:22,627	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:27:23,553	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:27:24,501	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:27:25,398	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:27:28,615	[INFO]	76	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:27:29,377	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:27:30,311	[INFO]	78	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-29 00:27:30,312	[INFO]	79	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:27:30,313	[DEBUG]	
2020-12-29 00:27:33,568	[INFO]	80	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:27:33,570	[INFO]	81	SUCCESS	+1.0	
2020-12-29 00:27:33,570	[DEBUG]	
2020-12-29 00:27:34,493	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:27:34,495	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:27:35,422	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:27:38,669	[INFO]	85	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:27:38,669	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:27:38,670	[INFO]	86	SUCCESS	+1.0	
2020-12-29 00:27:38,670	[DEBUG]	
2020-12-29 00:27:39,437	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:27:40,203	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:27:40,204	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:27:41,114	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:27:41,115	[INFO]	91	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-29 00:27:42,056	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:27:42,976	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:27:46,191	[INFO]	94	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:27:47,098	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:27:50,296	[INFO]	96	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:27:53,515	[INFO]	97	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:27:53,518	[INFO]	98	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-29 00:27:53,518	[DEBUG]	
2020-12-29 00:27:56,719	[INFO]	99	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:27:56,719	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:27:59,923	[INFO]	100	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:27:59,924	[INFO]	101	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-29 00:27:59,925	[DEBUG]	
2020-12-29 00:28:00,831	[INFO]	102	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:28:00,832	[INFO]	103	SUCCESS	+1.0	
2020-12-29 00:28:00,832	[DEBUG]	
2020-12-29 00:28:01,780	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:28:04,988	[INFO]	105	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:28:04,989	[INFO]	106	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-29 00:28:04,989	[DEBUG]	
2020-12-29 00:28:04,990	[INFO]	107	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:28:04,990	[DEBUG]	
2020-12-29 00:28:04,991	[INFO]	108	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-29 00:28:04,991	[DEBUG]	
2020-12-29 00:28:04,992	[INFO]	109	SUCCESS	+1.0	
2020-12-29 00:28:04,992	[DEBUG]	
2020-12-29 00:28:04,993	[INFO]	110	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-29 00:28:04,993	[DEBUG]	
2020-12-29 00:28:05,909	[INFO]	111	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:28:06,846	[INFO]	112	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:28:07,797	[INFO]	113	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:28:07,801	[INFO]	114	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:28:07,802	[INFO]	115	SUCCESS	+1.0	
2020-12-29 00:28:07,803	[DEBUG]	
2020-12-29 00:28:07,805	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:28:08,724	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:28:08,726	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:28:08,727	[INFO]	119	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:28:08,727	[DEBUG]	
2020-12-29 00:28:08,727	[INFO]	120	SUCCESS	+1.0	
2020-12-29 00:28:08,728	[DEBUG]	
2020-12-29 00:28:11,945	[INFO]	121	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:28:11,945	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-29 00:28:11,946	[INFO]	122	SUCCESS	+1.0	
2020-12-29 00:28:11,946	[DEBUG]	
2020-12-29 00:28:11,947	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:28:12,855	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:28:16,104	[INFO]	125	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:28:16,105	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:28:16,105	[INFO]	126	SUCCESS	+1.0	
2020-12-29 00:28:16,105	[DEBUG]	
2020-12-29 00:28:19,313	[INFO]	127	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:28:19,315	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:28:19,317	[INFO]	128	SUCCESS	+1.0	
2020-12-29 00:28:19,318	[DEBUG]	
2020-12-29 00:28:19,319	[INFO]	129	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:28:19,320	[DEBUG]	
2020-12-29 00:28:19,322	[INFO]	130	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:28:19,323	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:28:19,325	[INFO]	131	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:28:19,326	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:28:20,090	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:28:20,091	[INFO]	133	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:28:20,092	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:28:20,835	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:28:20,837	[INFO]	135	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:28:20,837	[DEBUG]	
2020-12-29 00:28:20,837	[INFO]	136	SUCCESS	+1.0	
2020-12-29 00:28:20,838	[DEBUG]	
2020-12-29 00:28:21,603	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:28:22,562	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:28:23,473	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:28:24,396	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:28:25,341	[INFO]	141	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:28:26,120	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:28:29,354	[INFO]	143	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:28:32,563	[INFO]	144	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:28:33,480	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:28:34,256	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:28:35,011	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:28:38,298	[INFO]	148	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:28:38,300	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:28:38,301	[INFO]	149	SUCCESS	+1.0	
2020-12-29 00:28:38,302	[DEBUG]	
2020-12-29 00:28:39,264	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:28:40,177	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:28:40,179	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:28:40,180	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:28:40,936	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:28:44,140	[INFO]	155	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:28:44,141	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:28:45,079	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:28:48,308	[INFO]	157	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:28:48,309	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 16,22 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }  else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 26,32 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:28:49,057	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:28:52,247	[INFO]	159	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:28:52,248	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,24 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 14,23 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }  else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 27,33 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:28:53,166	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:28:54,091	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:28:57,269	[INFO]	162	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:28:57,270	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,25 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 14,27 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }  else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 30,36 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:28:58,038	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:28:58,039	[INFO]	164	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:28:58,040	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,24 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 14,23 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }  else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 27,33 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:28:58,041	[INFO]	165	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:28:58,042	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,24 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 14,23 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }  else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 27,33 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:29:01,248	[INFO]	166	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:29:02,149	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:29:02,151	[INFO]	168	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:29:02,152	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,24 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 14,23 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }  else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 27,33 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:29:02,153	[INFO]	169	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:29:02,153	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,24 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 14,23 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }  else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 27,33 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:29:02,154	[INFO]	170	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:29:02,155	[INFO]	171	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:29:02,155	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,24 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 14,23 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }  else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 27,33 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:29:02,156	[INFO]	172	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:29:03,059	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:29:06,332	[INFO]	174	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:29:06,333	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:29:09,490	[INFO]	175	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:29:09,491	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,23 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
--- 14,24 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:29:09,492	[INFO]	176	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:29:09,493	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,23 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
--- 14,24 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:29:09,494	[INFO]	177	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:29:09,494	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,23 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
--- 14,24 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:29:10,392	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:29:11,318	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:29:14,593	[INFO]	180	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:29:14,594	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:29:14,596	[INFO]	181	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:29:14,597	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:29:14,598	[INFO]	182	SUCCESS	+1.0	
2020-12-29 00:29:14,599	[DEBUG]	
2020-12-29 00:29:15,498	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:29:16,419	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:29:19,624	[INFO]	185	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:29:19,625	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:29:19,626	[INFO]	186	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:29:19,627	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:29:19,627	[INFO]	187	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:29:19,628	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:29:19,629	[INFO]	188	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:29:19,629	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:29:19,630	[INFO]	189	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:29:19,630	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:29:22,856	[INFO]	190	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:29:23,775	[INFO]	191	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:29:24,713	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:29:25,479	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:29:26,423	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:29:26,424	[INFO]	195	SUCCESS	+1.0	
2020-12-29 00:29:26,424	[DEBUG]	
2020-12-29 00:29:29,608	[INFO]	196	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:29:29,609	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:29:30,351	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:29:30,352	[INFO]	198	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:29:30,353	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:29:30,353	[INFO]	199	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:29:30,354	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-29 00:29:30,354	[INFO]	200	SUCCESS	+1.0	
2020-12-29 00:29:30,354	[DEBUG]	
2020-12-29 00:29:33,519	[INFO]	201	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:29:33,520	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:29:33,520	[INFO]	==== END ====
2020-12-29 00:29:33,521	[INFO]	Reason: target fitness reached
2020-12-29 00:29:33,521	[INFO]	
2020-12-29 00:29:33,521	[INFO]	========== EPOCH 19 ==========
2020-12-29 00:29:33,522	[INFO]	==== WARMUP ====
2020-12-29 00:29:36,720	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:29:36,720	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:29:40,008	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:29:40,008	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:29:43,191	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:29:43,191	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:29:46,364	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-29 00:29:46,364	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:29:46,364	[INFO]	==== START ====
2020-12-29 00:29:49,571	[INFO]	1	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:29:50,500	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:29:51,298	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:29:54,541	[INFO]	4	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:29:55,453	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:29:58,669	[INFO]	6	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:29:58,670	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:29:58,671	[INFO]	7	SUCCESS	+1.0	
2020-12-29 00:29:58,671	[DEBUG]	
2020-12-29 00:30:01,822	[INFO]	8	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:30:01,823	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:30:02,552	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:30:03,516	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:30:04,438	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:30:04,439	[INFO]	12	SUCCESS	+1.0	
2020-12-29 00:30:04,439	[DEBUG]	
2020-12-29 00:30:05,219	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:30:05,965	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:30:09,134	[INFO]	15	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:30:09,136	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:30:12,355	[INFO]	16	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:30:12,356	[INFO]	17	SUCCESS	+1.0	
2020-12-29 00:30:12,356	[DEBUG]	
2020-12-29 00:30:13,266	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:30:14,182	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:30:14,928	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:30:15,855	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:30:16,606	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:30:17,379	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:30:18,313	[INFO]	24	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:30:21,529	[INFO]	25	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:30:21,530	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-29 00:30:22,306	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:30:23,250	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:30:24,191	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-29 00:30:24,192	[INFO]	29	SUCCESS	+1.0	
2020-12-29 00:30:24,192	[DEBUG]	
2020-12-29 00:30:25,130	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:30:28,356	[INFO]	31	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:30:29,301	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:30:32,684	[INFO]	33	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:30:33,476	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:30:34,260	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:30:35,251	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:30:39,686	[INFO]	37	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:30:40,765	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:30:41,882	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:30:43,140	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:30:43,142	[INFO]	41	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:30:44,364	[INFO]	42	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:30:45,235	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:30:46,128	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:30:46,129	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:30:47,048	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:30:47,050	[INFO]	47	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:30:47,050	[INFO]	48	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:30:47,051	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-29 00:30:50,253	[INFO]	50	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:30:50,254	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-29 00:30:53,469	[INFO]	51	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:30:53,470	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;
***************
*** 23,28 ****
--- 26,32 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-29 00:30:54,382	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:30:55,152	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:30:58,366	[INFO]	54	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:30:58,367	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-29 00:30:58,368	[INFO]	55	SUCCESS	+1.0	
2020-12-29 00:30:58,368	[DEBUG]	
2020-12-29 00:30:58,369	[INFO]	56	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:30:58,370	[DEBUG]	
2020-12-29 00:30:58,370	[INFO]	57	SUCCESS	+1.0	
2020-12-29 00:30:58,371	[DEBUG]	
2020-12-29 00:31:01,580	[INFO]	58	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:31:01,581	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-29 00:31:01,582	[INFO]	59	SUCCESS	+1.0	
2020-12-29 00:31:01,582	[DEBUG]	
2020-12-29 00:31:01,582	[INFO]	60	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:31:01,583	[DEBUG]	
2020-12-29 00:31:01,583	[INFO]	61	SUCCESS	+1.0	
2020-12-29 00:31:01,583	[DEBUG]	
2020-12-29 00:31:02,484	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:31:03,436	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:31:04,362	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-29 00:31:05,294	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-29 00:31:08,526	[INFO]	66	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:31:09,439	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-29 00:31:12,691	[INFO]	68	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-29 00:31:12,692	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-29 00:31:13,622	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-29 00:31:13,623	[INFO]	70	SUCCESS	+1.0	
2020-12-29 00:31:13,623	[DEBUG]	
2020-12-29 00:31:14,544	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-29 00:31:14,546	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:31:17,747	[INFO]	73	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:31:17,748	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-29 00:31:17,748	[INFO]	74	SUCCESS	+1.0	
2020-12-29 00:31:17,749	[DEBUG]	
2020-12-29 00:31:20,958	[INFO]	75	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-29 00:31:21,894	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:31:22,856	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-29 00:31:23,781	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:31:24,683	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:31:25,605	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-29 00:31:28,847	[INFO]	81	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:31:28,848	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-29 00:31:32,044	[INFO]	82	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:31:32,045	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,34 ****
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 22,37 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-29 00:31:32,046	[INFO]	83	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-29 00:31:32,046	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-29 00:31:32,047	[INFO]	84	SUCCESS	+1.0	
2020-12-29 00:31:32,047	[DEBUG]	
2020-12-29 00:31:32,959	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:31:33,880	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:31:37,096	[INFO]	87	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:31:37,097	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:31:37,097	[INFO]	==== END ====
2020-12-29 00:31:37,097	[INFO]	Reason: target fitness reached
2020-12-29 00:31:37,098	[INFO]	
2020-12-29 00:31:37,098	[INFO]	========== EPOCH 20 ==========
2020-12-29 00:31:37,099	[INFO]	==== WARMUP ====
2020-12-29 00:31:40,366	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:31:40,366	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:31:43,560	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:31:43,560	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:31:46,746	[INFO]	WARM	SUCCESS	 1.0	
2020-12-29 00:31:46,746	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:31:49,924	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-29 00:31:49,924	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-29 00:31:49,924	[INFO]	==== START ====
2020-12-29 00:31:53,154	[INFO]	1	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:31:56,342	[INFO]	2	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:31:56,343	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-29 00:31:59,525	[INFO]	3	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-29 00:32:02,747	[INFO]	4	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-29 00:32:02,748	[INFO]	5	SUCCESS	+1.0	
2020-12-29 00:32:02,748	[DEBUG]	
2020-12-29 00:32:03,497	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-29 00:32:04,301	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-29 00:32:05,207	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-29 00:32:05,960	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-29 00:32:06,860	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-29 00:32:10,043	[INFO]	11	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:32:10,044	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:32:10,044	[INFO]	==== END ====
2020-12-29 00:32:10,044	[INFO]	Reason: target fitness reached
2020-12-29 00:32:10,045	[INFO]	
2020-12-29 00:32:10,045	[INFO]	========== REPORT ==========
2020-12-29 00:32:10,045	[INFO]	==== Epoch 1 ====
2020-12-29 00:32:10,045	[INFO]	Termination: target fitness reached
2020-12-29 00:32:10,046	[INFO]	Number of interations: 181
2020-12-29 00:32:10,046	[INFO]	Best fitness: 0.0
2020-12-29 00:32:10,046	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:32:10,046	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:32:10,046	[INFO]	==== Epoch 2 ====
2020-12-29 00:32:10,046	[INFO]	Termination: target fitness reached
2020-12-29 00:32:10,046	[INFO]	Number of interations: 33
2020-12-29 00:32:10,046	[INFO]	Best fitness: 0.0
2020-12-29 00:32:10,046	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:32:10,046	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:32:10,046	[INFO]	==== Epoch 3 ====
2020-12-29 00:32:10,046	[INFO]	Termination: step budget
2020-12-29 00:32:10,046	[INFO]	Number of interations: 500
2020-12-29 00:32:10,046	[INFO]	==== Epoch 4 ====
2020-12-29 00:32:10,046	[INFO]	Termination: target fitness reached
2020-12-29 00:32:10,046	[INFO]	Number of interations: 32
2020-12-29 00:32:10,047	[INFO]	Best fitness: 0.0
2020-12-29 00:32:10,047	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:32:10,047	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:32:10,047	[INFO]	==== Epoch 5 ====
2020-12-29 00:32:10,047	[INFO]	Termination: target fitness reached
2020-12-29 00:32:10,047	[INFO]	Number of interations: 289
2020-12-29 00:32:10,047	[INFO]	Best fitness: 0.0
2020-12-29 00:32:10,047	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-29 00:32:10,047	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:32:10,047	[INFO]	==== Epoch 6 ====
2020-12-29 00:32:10,047	[INFO]	Termination: target fitness reached
2020-12-29 00:32:10,047	[INFO]	Number of interations: 57
2020-12-29 00:32:10,047	[INFO]	Best fitness: 0.0
2020-12-29 00:32:10,047	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:32:10,047	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:32:10,048	[INFO]	==== Epoch 7 ====
2020-12-29 00:32:10,048	[INFO]	Termination: target fitness reached
2020-12-29 00:32:10,048	[INFO]	Number of interations: 399
2020-12-29 00:32:10,048	[INFO]	Best fitness: 0.0
2020-12-29 00:32:10,048	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:32:10,048	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:32:10,048	[INFO]	==== Epoch 8 ====
2020-12-29 00:32:10,048	[INFO]	Termination: target fitness reached
2020-12-29 00:32:10,048	[INFO]	Number of interations: 21
2020-12-29 00:32:10,048	[INFO]	Best fitness: 0.0
2020-12-29 00:32:10,048	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:32:10,048	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:32:10,049	[INFO]	==== Epoch 9 ====
2020-12-29 00:32:10,049	[INFO]	Termination: target fitness reached
2020-12-29 00:32:10,049	[INFO]	Number of interations: 54
2020-12-29 00:32:10,049	[INFO]	Best fitness: 0.0
2020-12-29 00:32:10,049	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:32:10,049	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:32:10,049	[INFO]	==== Epoch 10 ====
2020-12-29 00:32:10,049	[INFO]	Termination: target fitness reached
2020-12-29 00:32:10,049	[INFO]	Number of interations: 47
2020-12-29 00:32:10,049	[INFO]	Best fitness: 0.0
2020-12-29 00:32:10,049	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:32:10,049	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,30 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:32:10,049	[INFO]	==== Epoch 11 ====
2020-12-29 00:32:10,050	[INFO]	Termination: target fitness reached
2020-12-29 00:32:10,050	[INFO]	Number of interations: 206
2020-12-29 00:32:10,050	[INFO]	Best fitness: 0.0
2020-12-29 00:32:10,050	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:32:10,050	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,29 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:32:10,050	[INFO]	==== Epoch 12 ====
2020-12-29 00:32:10,050	[INFO]	Termination: target fitness reached
2020-12-29 00:32:10,050	[INFO]	Number of interations: 25
2020-12-29 00:32:10,050	[INFO]	Best fitness: 0.0
2020-12-29 00:32:10,050	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:32:10,050	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:32:10,050	[INFO]	==== Epoch 13 ====
2020-12-29 00:32:10,050	[INFO]	Termination: target fitness reached
2020-12-29 00:32:10,050	[INFO]	Number of interations: 8
2020-12-29 00:32:10,051	[INFO]	Best fitness: 0.0
2020-12-29 00:32:10,051	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:32:10,051	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:32:10,051	[INFO]	==== Epoch 14 ====
2020-12-29 00:32:10,051	[INFO]	Termination: target fitness reached
2020-12-29 00:32:10,051	[INFO]	Number of interations: 5
2020-12-29 00:32:10,051	[INFO]	Best fitness: 0.0
2020-12-29 00:32:10,051	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:32:10,051	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:32:10,051	[INFO]	==== Epoch 15 ====
2020-12-29 00:32:10,051	[INFO]	Termination: target fitness reached
2020-12-29 00:32:10,051	[INFO]	Number of interations: 349
2020-12-29 00:32:10,051	[INFO]	Best fitness: 0.0
2020-12-29 00:32:10,051	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:32:10,052	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:32:10,052	[INFO]	==== Epoch 16 ====
2020-12-29 00:32:10,052	[INFO]	Termination: target fitness reached
2020-12-29 00:32:10,052	[INFO]	Number of interations: 77
2020-12-29 00:32:10,052	[INFO]	Best fitness: 0.0
2020-12-29 00:32:10,052	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:32:10,052	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:32:10,052	[INFO]	==== Epoch 17 ====
2020-12-29 00:32:10,052	[INFO]	Termination: target fitness reached
2020-12-29 00:32:10,052	[INFO]	Number of interations: 210
2020-12-29 00:32:10,052	[INFO]	Best fitness: 0.0
2020-12-29 00:32:10,052	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:32:10,052	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:32:10,053	[INFO]	==== Epoch 18 ====
2020-12-29 00:32:10,053	[INFO]	Termination: target fitness reached
2020-12-29 00:32:10,053	[INFO]	Number of interations: 201
2020-12-29 00:32:10,053	[INFO]	Best fitness: 0.0
2020-12-29 00:32:10,053	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-29 00:32:10,053	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:32:10,053	[INFO]	==== Epoch 19 ====
2020-12-29 00:32:10,053	[INFO]	Termination: target fitness reached
2020-12-29 00:32:10,053	[INFO]	Number of interations: 87
2020-12-29 00:32:10,053	[INFO]	Best fitness: 0.0
2020-12-29 00:32:10,053	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:32:10,053	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:32:10,053	[INFO]	==== Epoch 20 ====
2020-12-29 00:32:10,053	[INFO]	Termination: target fitness reached
2020-12-29 00:32:10,054	[INFO]	Number of interations: 11
2020-12-29 00:32:10,054	[INFO]	Best fitness: 0.0
2020-12-29 00:32:10,054	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-29 00:32:10,054	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-29 00:32:10,060	[INFO]	Experiment duration: 3349.848822116852
