2020-12-30 09:52:25,074	[INFO]	Path to the temporal program variants: ./.pyggi/tmp_variants/QuixBugs/1609318345
2020-12-30 09:52:25,074	[INFO]	========== EXPERIMENT FOR ['java_programs/LIS.java.xml']  ==========
2020-12-30 09:52:25,075	[INFO]	modification points:
 ['./decl_stmt[1]', './decl_stmt[2]', './decl_stmt[3]', './for[1]', './for[1]/decl_stmt[1]', './for[1]/for[1]', './for[1]/for[1]/operator_comp[1]', './for[1]/for[1]/if[1]', './for[1]/for[1]/if[1]/operator_comp[1]', './for[1]/for[1]/if[1]/expr_stmt[1]', './for[1]/decl_stmt[2]', './for[1]/if[1]', './for[1]/if[1]/operator_comp[1]', './for[1]/if[1]/operator_comp[2]', './for[1]/if[1]/expr_stmt[1]', './for[1]/if[1]/expr_stmt[2]', './for[1]/expr_stmt[1]', './return[1]']
2020-12-30 09:52:25,075	[INFO]	number of statements and comparisons: 14, 4
2020-12-30 09:52:25,075	[INFO]	========== EPOCH 1 ==========
2020-12-30 09:52:25,075	[INFO]	==== WARMUP ====
2020-12-30 09:52:28,265	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 09:52:28,265	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 09:52:31,419	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 09:52:31,419	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 09:52:34,632	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 09:52:34,632	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 09:52:37,812	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-30 09:52:37,812	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 09:52:37,812	[INFO]	==== START ====
2020-12-30 09:52:38,828	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 09:52:39,825	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 09:52:43,067	[INFO]	3	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 09:52:43,068	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-30 09:52:43,069	[INFO]	4	SUCCESS	+13.0	
2020-12-30 09:52:43,069	[DEBUG]	
2020-12-30 09:52:43,953	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 09:52:44,994	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 09:52:45,976	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 09:52:46,982	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 09:52:47,970	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 09:52:48,974	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 09:52:50,008	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 09:52:53,210	[INFO]	12	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 09:52:53,210	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,26 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                 }
                  }
              }
  

2020-12-30 09:52:53,211	[INFO]	13	SUCCESS	+13.0	
2020-12-30 09:52:53,212	[DEBUG]	
2020-12-30 09:52:54,175	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 09:52:55,159	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 09:52:56,166	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 09:52:57,138	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 09:53:00,284	[INFO]	18	SUCCESS	 19.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-30 09:53:01,257	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 09:53:02,257	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 09:53:05,479	[INFO]	21	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 09:53:06,450	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 09:53:06,451	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 09:53:07,447	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 09:53:08,438	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 09:53:09,362	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 09:53:10,364	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 09:53:13,625	[INFO]	28	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 09:53:14,585	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 09:53:14,586	[INFO]	30	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 09:53:15,568	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 09:53:16,554	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 09:53:17,536	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 09:53:18,494	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 09:53:19,493	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 09:53:20,464	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 09:53:23,699	[INFO]	37	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 09:53:24,666	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 09:53:25,649	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 09:53:26,516	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 09:53:27,512	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 09:53:30,726	[INFO]	42	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 09:53:31,705	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 09:53:32,668	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 09:53:33,611	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 09:53:34,894	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 09:53:35,900	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 09:53:36,913	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 09:53:40,106	[INFO]	49	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 09:53:40,107	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-30 09:53:40,109	[INFO]	50	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 09:53:40,109	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-30 09:53:41,345	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 09:53:42,721	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 09:53:44,134	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 09:53:45,486	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 09:53:46,816	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 09:53:46,817	[INFO]	56	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 09:53:46,818	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-30 09:53:46,819	[INFO]	57	SUCCESS	+13.0	
2020-12-30 09:53:46,819	[DEBUG]	
2020-12-30 09:53:50,325	[INFO]	58	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 09:53:50,327	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 09:53:51,278	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 09:53:52,259	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 09:53:53,192	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 09:53:54,176	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 09:53:55,144	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 09:53:58,459	[INFO]	65	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-30 09:53:58,460	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-30 09:53:58,461	[INFO]	66	SUCCESS	+13.0	
2020-12-30 09:53:58,461	[DEBUG]	
2020-12-30 09:54:01,681	[INFO]	67	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 09:54:02,666	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 09:54:02,668	[INFO]	69	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-30 09:54:02,668	[DEBUG]	
2020-12-30 09:54:03,648	[INFO]	70	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 09:54:04,529	[INFO]	71	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 09:54:04,530	[INFO]	72	SUCCESS	+13.0	
2020-12-30 09:54:04,530	[DEBUG]	
2020-12-30 09:54:07,678	[INFO]	73	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 09:54:08,653	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 09:54:09,622	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 09:54:10,623	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 09:54:11,624	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 09:54:12,587	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 09:54:13,594	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 09:54:14,567	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 09:54:15,537	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 09:54:16,539	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 09:54:17,677	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 09:54:18,714	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 09:54:21,893	[INFO]	85	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 09:54:25,116	[INFO]	86	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 09:54:25,117	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,41 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-30 09:54:25,118	[INFO]	87	SUCCESS	+13.0	
2020-12-30 09:54:25,118	[DEBUG]	
2020-12-30 09:54:26,110	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 09:54:27,113	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 09:54:28,110	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 09:54:29,076	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 09:54:30,061	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 09:54:31,063	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 09:54:32,039	[INFO]	94	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-30 09:54:33,039	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 09:54:34,058	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 09:54:35,047	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 09:54:36,047	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 09:54:39,172	[INFO]	99	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 09:54:40,170	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 09:54:41,195	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 09:54:42,187	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 09:54:45,435	[INFO]	103	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 09:54:48,646	[INFO]	104	SUCCESS	 19.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-30 09:54:51,852	[INFO]	105	SUCCESS	 22.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-30 09:54:52,838	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 09:54:53,822	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 09:54:57,030	[INFO]	108	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 09:54:57,031	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,37 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 09:54:58,438	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 09:54:59,442	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 09:54:59,443	[INFO]	111	SUCCESS	+13.0	
2020-12-30 09:54:59,443	[DEBUG]	
2020-12-30 09:55:00,425	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 09:55:01,453	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 09:55:01,454	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 09:55:02,419	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 09:55:03,372	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 09:55:04,345	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 09:55:05,343	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 09:55:08,642	[INFO]	119	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 09:55:09,580	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 09:55:10,575	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 09:55:11,546	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 09:55:14,732	[INFO]	123	SUCCESS	 20.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 09:55:15,696	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 09:55:15,697	[INFO]	125	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-30 09:55:15,697	[DEBUG]	
2020-12-30 09:55:15,698	[INFO]	126	SUCCESS	+13.0	
2020-12-30 09:55:15,698	[DEBUG]	
2020-12-30 09:55:16,681	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 09:55:16,682	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 09:55:17,648	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 09:55:20,866	[INFO]	130	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 09:55:21,848	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 09:55:22,833	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 09:55:23,870	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 09:55:24,864	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 09:55:25,836	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 09:55:26,782	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 09:55:27,778	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 09:55:30,988	[INFO]	138	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 09:55:30,989	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-30 09:55:30,990	[INFO]	139	SUCCESS	+13.0	
2020-12-30 09:55:30,990	[DEBUG]	
2020-12-30 09:55:34,209	[INFO]	140	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 09:55:35,305	[INFO]	141	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 09:55:35,307	[INFO]	142	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 09:55:35,307	[DEBUG]	
2020-12-30 09:55:36,362	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 09:55:36,364	[INFO]	144	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 09:55:36,364	[DEBUG]	
2020-12-30 09:55:36,365	[INFO]	145	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 09:55:36,366	[DEBUG]	
2020-12-30 09:55:36,367	[INFO]	146	SUCCESS	+13.0	
2020-12-30 09:55:36,367	[DEBUG]	
2020-12-30 09:55:37,256	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 09:55:37,257	[INFO]	148	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 09:55:37,257	[DEBUG]	
2020-12-30 09:55:38,236	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 09:55:38,237	[INFO]	150	SUCCESS	+13.0	
2020-12-30 09:55:38,237	[DEBUG]	
2020-12-30 09:55:41,491	[INFO]	151	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-30 09:55:42,468	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 09:55:43,465	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 09:55:44,487	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 09:55:45,467	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 09:55:45,468	[INFO]	156	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 09:55:46,469	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 09:55:47,475	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 09:55:48,458	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 09:55:51,671	[INFO]	160	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-30 09:55:51,673	[INFO]	161	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 09:55:51,673	[INFO]	162	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 09:55:51,674	[DEBUG]	
2020-12-30 09:55:54,873	[INFO]	163	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 09:55:54,873	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,33 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 09:55:54,875	[INFO]	164	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 09:55:54,875	[DEBUG]	
2020-12-30 09:55:54,876	[INFO]	165	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 09:55:54,877	[DEBUG]	
2020-12-30 09:55:55,859	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 09:55:55,861	[INFO]	167	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 09:55:55,861	[DEBUG]	
2020-12-30 09:55:55,862	[INFO]	168	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 09:55:55,862	[DEBUG]	
2020-12-30 09:55:55,863	[INFO]	169	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 09:55:55,864	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,33 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 09:55:55,864	[INFO]	170	SUCCESS	+13.0	
2020-12-30 09:55:55,865	[DEBUG]	
2020-12-30 09:55:56,857	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 09:55:57,840	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 09:55:58,839	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 09:55:59,840	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 09:56:00,847	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 09:56:04,034	[INFO]	176	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 09:56:05,031	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 09:56:05,032	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 09:56:05,997	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 09:56:09,272	[INFO]	180	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 09:56:09,273	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,28 ****
--- 23,33 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  

2020-12-30 09:56:10,246	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 09:56:10,247	[INFO]	182	SUCCESS	+13.0	
2020-12-30 09:56:10,248	[DEBUG]	
2020-12-30 09:56:11,170	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 09:56:12,144	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 09:56:12,146	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 09:56:13,123	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 09:56:14,127	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 09:56:15,093	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 09:56:16,050	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 09:56:19,253	[INFO]	190	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 09:56:20,220	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 09:56:23,501	[INFO]	192	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-30 09:56:23,501	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val != arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 09:56:24,477	[INFO]	193	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 09:56:24,478	[INFO]	194	SUCCESS	+13.0	
2020-12-30 09:56:24,478	[DEBUG]	
2020-12-30 09:56:25,438	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 09:56:28,673	[INFO]	196	SUCCESS	 28.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 09:56:29,664	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 09:56:30,650	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 09:56:31,668	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 09:56:31,669	[INFO]	200	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 09:56:32,590	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 09:56:33,592	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 09:56:34,586	[INFO]	203	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 09:56:37,790	[INFO]	204	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 09:56:37,791	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             longest = length + 1;
+ 
              i++;
          }
          return longest;

2020-12-30 09:56:38,763	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 09:56:38,764	[INFO]	206	SUCCESS	+13.0	
2020-12-30 09:56:38,764	[DEBUG]	
2020-12-30 09:56:42,026	[INFO]	207	SUCCESS	 22.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 09:56:42,028	[INFO]	208	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 09:56:42,028	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             longest = length + 1;
+ 
              i++;
          }
          return longest;

2020-12-30 09:56:42,997	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 09:56:43,982	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 09:56:45,273	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 09:56:48,580	[INFO]	212	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 09:56:49,562	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 09:56:49,563	[INFO]	214	SUCCESS	+13.0	
2020-12-30 09:56:49,564	[DEBUG]	
2020-12-30 09:56:50,564	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 09:56:53,728	[INFO]	216	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 09:56:54,721	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 09:56:55,708	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 09:56:56,618	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 09:56:57,603	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 09:56:58,581	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 09:56:59,577	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 09:57:00,556	[INFO]	223	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 09:57:01,532	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 09:57:02,523	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 09:57:03,525	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 09:57:06,785	[INFO]	227	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 09:57:06,785	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-30 09:57:06,786	[INFO]	228	SUCCESS	+13.0	
2020-12-30 09:57:06,786	[DEBUG]	
2020-12-30 09:57:07,744	[INFO]	229	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 09:57:10,929	[INFO]	230	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 09:57:11,905	[INFO]	231	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-30 09:57:15,100	[INFO]	232	SUCCESS	 28.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 09:57:16,094	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 09:57:19,295	[INFO]	234	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 09:57:19,296	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,26 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                 }
                  }
              }
  

2020-12-30 09:57:20,278	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 09:57:21,272	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 09:57:21,273	[INFO]	237	SUCCESS	+13.0	
2020-12-30 09:57:21,273	[DEBUG]	
2020-12-30 09:57:24,491	[INFO]	238	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 09:57:25,464	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 09:57:26,432	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 09:57:26,434	[INFO]	241	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 09:57:26,434	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             longest = length + 1;
+ 
              i++;
          }
          return longest;

2020-12-30 09:57:26,435	[INFO]	242	SUCCESS	+13.0	
2020-12-30 09:57:26,435	[DEBUG]	
2020-12-30 09:57:27,420	[INFO]	243	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 09:57:28,431	[INFO]	244	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 09:57:28,432	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 09:57:29,429	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 09:57:32,656	[INFO]	247	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-30 09:57:33,630	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 09:57:34,617	[INFO]	249	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 09:57:37,797	[INFO]	250	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-30 09:57:38,764	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 09:57:38,765	[INFO]	252	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 09:57:38,766	[DEBUG]	
2020-12-30 09:57:39,743	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 09:57:39,744	[INFO]	254	SUCCESS	+13.0	
2020-12-30 09:57:39,745	[DEBUG]	
2020-12-30 09:57:40,774	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 09:57:41,757	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 09:57:42,745	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 09:57:42,746	[INFO]	258	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 09:57:43,756	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 09:57:44,754	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 09:57:45,725	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 09:57:46,716	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 09:57:47,676	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 09:57:48,638	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 09:57:51,847	[INFO]	265	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-30 09:57:55,010	[INFO]	266	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 09:57:55,011	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 09:57:58,185	[INFO]	267	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 09:57:58,186	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,33 ****
--- 27,40 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 09:58:01,498	[INFO]	268	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 09:58:01,499	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,33 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 09:58:01,499	[INFO]	269	SUCCESS	+13.0	
2020-12-30 09:58:01,500	[DEBUG]	
2020-12-30 09:58:02,437	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 09:58:03,425	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 09:58:03,426	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 09:58:04,316	[INFO]	273	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 09:58:07,488	[INFO]	274	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 09:58:07,489	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-30 09:58:07,489	[INFO]	==== END ====
2020-12-30 09:58:07,489	[INFO]	Reason: target fitness reached
2020-12-30 09:58:07,490	[INFO]	
2020-12-30 09:58:07,490	[INFO]	========== EPOCH 2 ==========
2020-12-30 09:58:07,490	[INFO]	==== WARMUP ====
2020-12-30 09:58:10,658	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 09:58:10,658	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 09:58:13,844	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 09:58:13,844	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 09:58:17,005	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 09:58:17,006	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 09:58:20,192	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-30 09:58:20,192	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 09:58:20,192	[INFO]	==== START ====
2020-12-30 09:58:21,172	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 09:58:22,152	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 09:58:23,208	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 09:58:26,472	[INFO]	4	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 09:58:27,481	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 09:58:28,410	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 09:58:29,297	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 09:58:30,287	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 09:58:31,261	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 09:58:32,225	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 09:58:33,226	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 09:58:34,211	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 09:58:35,188	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 09:58:36,153	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 09:58:37,127	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 09:58:38,108	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 09:58:41,342	[INFO]	17	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-30 09:58:41,342	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 09:58:41,343	[INFO]	18	SUCCESS	+13.0	
2020-12-30 09:58:41,343	[DEBUG]	
2020-12-30 09:58:44,534	[INFO]	19	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-30 09:58:44,535	[INFO]	20	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 09:58:44,535	[DEBUG]	
2020-12-30 09:58:44,536	[INFO]	21	SUCCESS	+13.0	
2020-12-30 09:58:44,536	[DEBUG]	
2020-12-30 09:58:45,416	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 09:58:46,390	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 09:58:47,366	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 09:58:48,279	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 09:58:49,255	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 09:58:50,227	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 09:58:51,228	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 09:58:54,388	[INFO]	29	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-30 09:58:54,389	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 09:58:55,392	[INFO]	30	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 09:58:58,460	[INFO]	31	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 09:58:59,438	[INFO]	32	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 09:58:59,439	[INFO]	33	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 09:58:59,440	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 09:59:02,595	[INFO]	34	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 09:59:02,596	[INFO]	35	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-30 09:59:02,597	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 09:59:03,565	[INFO]	36	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 09:59:06,774	[INFO]	37	SUCCESS	 21.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 09:59:06,775	[INFO]	38	SUCCESS	+13.0	
2020-12-30 09:59:06,775	[DEBUG]	
2020-12-30 09:59:10,020	[INFO]	39	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 09:59:10,022	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,33 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 09:59:10,023	[INFO]	40	SUCCESS	+13.0	
2020-12-30 09:59:10,024	[DEBUG]	
2020-12-30 09:59:13,372	[INFO]	41	SUCCESS	 29.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 09:59:14,283	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 09:59:15,266	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 09:59:16,255	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 09:59:16,256	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 09:59:17,258	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 09:59:18,218	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 09:59:21,439	[INFO]	48	SUCCESS	*0.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 09:59:21,440	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 09:59:21,441	[INFO]	==== END ====
2020-12-30 09:59:21,441	[INFO]	Reason: target fitness reached
2020-12-30 09:59:21,442	[INFO]	
2020-12-30 09:59:21,442	[INFO]	========== EPOCH 3 ==========
2020-12-30 09:59:21,442	[INFO]	==== WARMUP ====
2020-12-30 09:59:24,642	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 09:59:24,642	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 09:59:27,812	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 09:59:27,812	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 09:59:31,066	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 09:59:31,066	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 09:59:34,177	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-30 09:59:34,178	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 09:59:34,178	[INFO]	==== START ====
2020-12-30 09:59:35,169	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 09:59:36,167	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 09:59:39,423	[INFO]	3	SUCCESS	 22.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 09:59:42,633	[INFO]	4	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 09:59:43,591	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 09:59:44,563	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 09:59:45,545	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 09:59:46,538	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 09:59:47,569	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 09:59:47,573	[INFO]	10	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-30 09:59:47,575	[DEBUG]	
2020-12-30 09:59:47,576	[INFO]	11	SUCCESS	+13.0	
2020-12-30 09:59:47,577	[DEBUG]	
2020-12-30 09:59:48,563	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 09:59:49,546	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 09:59:52,761	[INFO]	14	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 09:59:53,693	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 09:59:56,855	[INFO]	16	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-30 09:59:57,823	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 09:59:58,791	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 09:59:59,808	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:00:00,790	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:00:01,784	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:00:02,769	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:00:03,774	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:00:04,761	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:00:07,994	[INFO]	25	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:00:07,995	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             ends.put(length+1, i);
+ 
              i++;
          }
          return longest;

2020-12-30 10:00:07,995	[INFO]	26	SUCCESS	+13.0	
2020-12-30 10:00:07,996	[DEBUG]	
2020-12-30 10:00:09,000	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:00:09,992	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:00:10,983	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:00:14,207	[INFO]	30	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:00:17,380	[INFO]	31	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:00:18,358	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:00:21,570	[INFO]	33	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-30 10:00:21,571	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-30 10:00:21,572	[INFO]	34	SUCCESS	+13.0	
2020-12-30 10:00:21,572	[DEBUG]	
2020-12-30 10:00:22,536	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:00:23,503	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:00:26,591	[INFO]	37	SUCCESS	 29.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:00:27,539	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:00:28,527	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:00:29,531	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:00:32,737	[INFO]	41	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:00:33,746	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:00:34,736	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:00:38,922	[INFO]	44	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:00:42,225	[INFO]	45	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:00:42,225	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,42 ----
                  longest = length + 1;
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              i++;
          }
          return longest;

2020-12-30 10:00:43,198	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:00:44,179	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:00:45,169	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:00:46,171	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:00:46,172	[INFO]	50	SUCCESS	+13.0	
2020-12-30 10:00:46,172	[DEBUG]	
2020-12-30 10:00:46,173	[INFO]	51	SUCCESS	 29.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:00:47,135	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:00:48,121	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:00:49,107	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:00:50,177	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:00:51,217	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:00:52,208	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:00:53,232	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:00:54,241	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:00:55,228	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:00:56,208	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:00:59,405	[INFO]	62	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:01:00,356	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:01:01,346	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:01:02,350	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:01:03,288	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:01:04,277	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:01:05,268	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:01:06,277	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:01:07,257	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:01:08,191	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:01:09,168	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:01:10,170	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:01:11,172	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:01:11,173	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:01:12,145	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:01:13,516	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:01:14,535	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:01:14,537	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:01:15,524	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:01:16,507	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:01:16,509	[INFO]	82	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:01:16,509	[DEBUG]	
2020-12-30 10:01:17,432	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:01:18,419	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:01:19,301	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:01:19,302	[INFO]	86	SUCCESS	+13.0	
2020-12-30 10:01:19,302	[DEBUG]	
2020-12-30 10:01:22,541	[INFO]	87	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:01:22,542	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,41 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-30 10:01:23,553	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:01:26,819	[INFO]	89	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:01:26,820	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 31,36 ****
--- 32,42 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-30 10:01:26,821	[INFO]	90	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:01:26,822	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 31,36 ****
--- 32,42 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-30 10:01:27,799	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:01:31,045	[INFO]	92	SUCCESS	*0.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:01:31,046	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,30 ****
--- 19,36 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
+ 
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 
+             }
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);

2020-12-30 10:01:31,047	[INFO]	==== END ====
2020-12-30 10:01:31,047	[INFO]	Reason: target fitness reached
2020-12-30 10:01:31,048	[INFO]	
2020-12-30 10:01:31,048	[INFO]	========== EPOCH 4 ==========
2020-12-30 10:01:31,048	[INFO]	==== WARMUP ====
2020-12-30 10:01:34,242	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:01:34,242	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:01:37,461	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:01:37,462	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:01:40,664	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:01:40,664	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:01:43,841	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-30 10:01:43,841	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:01:43,841	[INFO]	==== START ====
2020-12-30 10:01:44,818	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:01:47,990	[INFO]	2	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:01:48,956	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:01:49,948	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:01:53,208	[INFO]	5	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:01:53,209	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-30 10:01:53,210	[INFO]	6	SUCCESS	+13.0	
2020-12-30 10:01:53,210	[DEBUG]	
2020-12-30 10:01:54,155	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:01:55,118	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:01:56,055	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:01:57,011	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:01:57,966	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:01:58,973	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:01:59,962	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:02:00,949	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:02:01,956	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:02:02,930	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:02:06,118	[INFO]	17	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:02:06,119	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-30 10:02:09,296	[INFO]	18	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:02:09,297	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,38 ****
--- 27,42 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-30 10:02:12,517	[INFO]	19	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:02:12,518	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,33 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 10:02:13,477	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:02:16,688	[INFO]	21	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:02:17,670	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:02:17,671	[INFO]	23	SUCCESS	+13.0	
2020-12-30 10:02:17,672	[DEBUG]	
2020-12-30 10:02:18,648	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:02:19,665	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:02:19,666	[INFO]	26	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:02:19,666	[DEBUG]	
2020-12-30 10:02:20,664	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:02:20,665	[INFO]	28	SUCCESS	+13.0	
2020-12-30 10:02:20,666	[DEBUG]	
2020-12-30 10:02:21,644	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:02:22,642	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:02:23,617	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:02:24,633	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:02:25,620	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:02:26,605	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:02:27,579	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:02:27,581	[INFO]	36	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:02:27,581	[DEBUG]	
2020-12-30 10:02:27,582	[INFO]	37	SUCCESS	+13.0	
2020-12-30 10:02:27,582	[DEBUG]	
2020-12-30 10:02:28,569	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:02:29,542	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:02:30,482	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:02:31,471	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:02:34,710	[INFO]	42	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:02:35,693	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:02:35,695	[INFO]	44	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:02:35,695	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-30 10:02:35,696	[INFO]	45	SUCCESS	+13.0	
2020-12-30 10:02:35,696	[DEBUG]	
2020-12-30 10:02:36,654	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:02:37,702	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:02:38,687	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:02:39,653	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:02:42,877	[INFO]	50	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:02:43,845	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:02:47,059	[INFO]	52	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:02:48,025	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:02:48,026	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:02:49,008	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:02:52,203	[INFO]	56	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:02:53,202	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:02:54,182	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:02:57,409	[INFO]	59	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:02:58,397	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:02:59,382	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:03:02,619	[INFO]	62	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-30 10:03:03,583	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:03:04,570	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:03:05,566	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:03:06,538	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:03:07,524	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:03:08,391	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:03:08,393	[INFO]	69	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:03:08,393	[DEBUG]	
2020-12-30 10:03:11,631	[INFO]	70	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:03:11,632	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             ends.put(length+1, i);
+ 
              i++;
          }
          return longest;

2020-12-30 10:03:12,604	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:03:13,593	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:03:13,595	[INFO]	73	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:03:13,595	[DEBUG]	
2020-12-30 10:03:14,565	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:03:14,566	[INFO]	75	SUCCESS	+13.0	
2020-12-30 10:03:14,566	[DEBUG]	
2020-12-30 10:03:15,554	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:03:18,764	[INFO]	77	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:03:18,764	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,38 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-30 10:03:18,765	[INFO]	78	SUCCESS	+13.0	
2020-12-30 10:03:18,765	[DEBUG]	
2020-12-30 10:03:19,758	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:03:20,742	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:03:21,726	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:03:22,715	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:03:23,623	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:03:26,848	[INFO]	84	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:03:26,848	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-30 10:03:26,849	[INFO]	85	SUCCESS	+13.0	
2020-12-30 10:03:26,849	[DEBUG]	
2020-12-30 10:03:27,818	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:03:31,023	[INFO]	87	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:03:31,024	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-30 10:03:32,009	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:03:32,010	[INFO]	89	SUCCESS	+13.0	
2020-12-30 10:03:32,010	[DEBUG]	
2020-12-30 10:03:33,307	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:03:34,322	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:03:35,267	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:03:38,450	[INFO]	93	SUCCESS	 19.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:03:39,422	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:03:39,424	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:03:40,424	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:03:43,644	[INFO]	97	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:03:44,535	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:03:45,524	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:03:46,510	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:03:49,733	[INFO]	101	SUCCESS	 24.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:03:50,697	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:03:51,666	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:03:54,919	[INFO]	104	SUCCESS	 22.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-30 10:03:58,041	[INFO]	105	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-30 10:04:01,219	[INFO]	106	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-30 10:04:04,412	[INFO]	107	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:04:05,363	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:04:08,576	[INFO]	109	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:04:11,789	[INFO]	110	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:04:11,790	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 10:04:11,791	[INFO]	111	SUCCESS	+13.0	
2020-12-30 10:04:11,791	[DEBUG]	
2020-12-30 10:04:12,766	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:04:13,767	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:04:14,678	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:04:15,666	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:04:16,665	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:04:19,877	[INFO]	117	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-30 10:04:19,877	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-30 10:04:20,876	[INFO]	118	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:04:20,877	[INFO]	119	SUCCESS	+13.0	
2020-12-30 10:04:20,877	[DEBUG]	
2020-12-30 10:04:21,879	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:04:21,880	[INFO]	121	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:04:21,881	[DEBUG]	
2020-12-30 10:04:22,882	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:04:22,884	[INFO]	123	SUCCESS	+13.0	
2020-12-30 10:04:22,885	[DEBUG]	
2020-12-30 10:04:23,916	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:04:27,170	[INFO]	125	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:04:27,170	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             ends.put(length+1, i);
+ 
              i++;
          }
          return longest;

2020-12-30 10:04:30,358	[INFO]	126	SUCCESS	 19.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:04:30,359	[INFO]	127	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-30 10:04:30,360	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             ends.put(length+1, i);
+ 
              i++;
          }
          return longest;

2020-12-30 10:04:30,361	[INFO]	128	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:04:30,361	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             ends.put(length+1, i);
+ 
              i++;
          }
          return longest;

2020-12-30 10:04:31,338	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:04:31,339	[INFO]	130	SUCCESS	+13.0	
2020-12-30 10:04:31,339	[DEBUG]	
2020-12-30 10:04:32,333	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:04:33,312	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:04:34,273	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:04:37,449	[INFO]	134	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:04:38,464	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:04:39,443	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:04:40,457	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:04:43,765	[INFO]	138	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-30 10:04:44,742	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:04:45,694	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:04:48,922	[INFO]	141	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:04:48,923	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 10:04:48,924	[INFO]	142	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:04:48,924	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 10:04:49,900	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:04:50,881	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:04:54,121	[INFO]	145	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:04:54,122	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,33 ****
--- 27,40 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 10:04:57,312	[INFO]	146	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:04:57,313	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,34 ****
--- 27,41 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
              }
  
              i++;

2020-12-30 10:05:00,495	[INFO]	147	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:05:03,721	[INFO]	148	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:05:03,722	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,33 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 10:05:04,777	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:05:04,780	[INFO]	150	SUCCESS	+13.0	
2020-12-30 10:05:04,781	[DEBUG]	
2020-12-30 10:05:05,763	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:05:06,757	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:05:09,979	[INFO]	153	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:05:09,980	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 10:05:13,192	[INFO]	154	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:05:13,193	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,30 ****
--- 20,37 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
+ 
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);

2020-12-30 10:05:14,205	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:05:14,207	[INFO]	156	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:05:14,207	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 10:05:17,423	[INFO]	157	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:05:17,424	[INFO]	158	SUCCESS	+13.0	
2020-12-30 10:05:17,424	[DEBUG]	
2020-12-30 10:05:18,425	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:05:19,399	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:05:22,645	[INFO]	161	SUCCESS	 20.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:05:25,857	[INFO]	162	SUCCESS	 24.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:05:26,774	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:05:26,775	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:05:27,713	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:05:28,680	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:05:29,643	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:05:30,618	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:05:31,631	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:05:32,609	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:05:33,601	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:05:34,577	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:05:35,829	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:05:39,104	[INFO]	174	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:05:40,073	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:05:41,112	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:05:44,395	[INFO]	177	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:05:44,396	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-30 10:05:45,378	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:05:46,381	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:05:47,287	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:05:48,261	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:05:48,263	[INFO]	182	SUCCESS	+13.0	
2020-12-30 10:05:48,263	[DEBUG]	
2020-12-30 10:05:49,135	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:05:52,408	[INFO]	184	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-30 10:05:52,410	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:05:53,372	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:05:54,354	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:05:57,583	[INFO]	188	SUCCESS	 28.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:05:58,897	[INFO]	189	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:05:59,901	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:05:59,902	[INFO]	191	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:06:00,879	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:06:01,861	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:06:05,092	[INFO]	194	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:06:05,093	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:06:06,063	[INFO]	195	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:06:07,035	[INFO]	196	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:06:08,020	[INFO]	197	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:06:09,012	[INFO]	198	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:06:09,013	[INFO]	199	SUCCESS	 13.0	
2020-12-30 10:06:09,943	[INFO]	200	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:06:10,923	[INFO]	201	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:06:11,909	[INFO]	202	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:06:11,913	[INFO]	203	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:06:11,913	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:06:11,915	[INFO]	204	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:06:12,900	[INFO]	205	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:06:13,869	[INFO]	206	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:06:14,845	[INFO]	207	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:06:14,846	[INFO]	208	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:06:14,847	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:06:14,847	[INFO]	209	SUCCESS	 13.0	
2020-12-30 10:06:15,863	[INFO]	210	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:06:16,868	[INFO]	211	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:06:17,739	[INFO]	212	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:06:18,700	[INFO]	213	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:06:19,686	[INFO]	214	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:06:20,664	[INFO]	215	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:06:21,640	[INFO]	216	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:06:22,641	[INFO]	217	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:06:23,625	[INFO]	218	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:06:24,609	[INFO]	219	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:06:27,846	[INFO]	220	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-30 10:06:27,847	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:06:28,809	[INFO]	221	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:06:32,029	[INFO]	222	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:06:35,244	[INFO]	223	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-30 10:06:36,225	[INFO]	224	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:06:39,470	[INFO]	225	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:06:40,470	[INFO]	226	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:06:41,460	[INFO]	227	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:06:42,451	[INFO]	228	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:06:43,425	[INFO]	229	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:06:44,425	[INFO]	230	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:06:45,392	[INFO]	231	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:06:46,424	[INFO]	232	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:06:46,426	[INFO]	233	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:06:46,426	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:06:46,427	[INFO]	234	SUCCESS	 13.0	
2020-12-30 10:06:47,417	[INFO]	235	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:06:48,422	[INFO]	236	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:06:49,404	[INFO]	237	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:06:52,648	[INFO]	238	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:06:52,649	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 24,32 ****
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 24,38 ----
                  }
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:06:53,625	[INFO]	239	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:06:54,632	[INFO]	240	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:06:55,620	[INFO]	241	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:06:55,621	[INFO]	242	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:06:55,622	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:06:55,622	[INFO]	243	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:06:55,623	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:06:55,623	[INFO]	244	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:06:55,624	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:06:56,634	[INFO]	245	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:06:57,633	[INFO]	246	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:06:57,634	[INFO]	247	SUCCESS	 13.0	
2020-12-30 10:06:58,620	[INFO]	248	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:06:59,614	[INFO]	249	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:06:59,616	[INFO]	250	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:07:02,866	[INFO]	251	SUCCESS	 21.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:07:03,850	[INFO]	252	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:07:04,854	[INFO]	253	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:07:05,862	[INFO]	254	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:07:06,872	[INFO]	255	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:07:07,840	[INFO]	256	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:07:08,816	[INFO]	257	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:07:09,791	[INFO]	258	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:07:10,785	[INFO]	259	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:07:11,787	[INFO]	260	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:07:14,970	[INFO]	261	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:07:15,969	[INFO]	262	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:07:16,959	[INFO]	263	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:07:17,978	[INFO]	264	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:07:18,998	[INFO]	265	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:07:19,978	[INFO]	266	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:07:20,974	[INFO]	267	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:07:21,973	[INFO]	268	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:07:22,981	[INFO]	269	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:07:26,245	[INFO]	270	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-30 10:07:27,221	[INFO]	271	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:07:28,218	[INFO]	272	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:07:28,220	[INFO]	273	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:07:29,210	[INFO]	274	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:07:30,189	[INFO]	275	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:07:33,375	[INFO]	276	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:07:33,377	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,32 ****
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 23,37 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:07:36,580	[INFO]	277	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:07:36,582	[INFO]	278	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:07:36,582	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:07:37,576	[INFO]	279	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:07:37,578	[INFO]	280	SUCCESS	 13.0	
2020-12-30 10:07:38,554	[INFO]	281	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:07:39,530	[INFO]	282	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:07:42,787	[INFO]	283	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-30 10:07:43,758	[INFO]	284	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:07:44,746	[INFO]	285	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:07:48,027	[INFO]	286	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:07:48,027	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 longest = length + 1;
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:07:51,265	[INFO]	287	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:07:52,266	[INFO]	288	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:07:55,497	[INFO]	289	SUCCESS	 21.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:07:55,498	[INFO]	290	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:07:55,499	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:07:55,499	[INFO]	291	SUCCESS	 13.0	
2020-12-30 10:07:56,500	[INFO]	292	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:07:57,487	[INFO]	293	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:07:58,370	[INFO]	294	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:07:59,407	[INFO]	295	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:08:00,383	[INFO]	296	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:08:01,402	[INFO]	297	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:08:04,601	[INFO]	298	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:08:04,602	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-30 10:08:04,602	[INFO]	==== END ====
2020-12-30 10:08:04,602	[INFO]	Reason: target fitness reached
2020-12-30 10:08:04,603	[INFO]	
2020-12-30 10:08:04,603	[INFO]	========== EPOCH 5 ==========
2020-12-30 10:08:04,604	[INFO]	==== WARMUP ====
2020-12-30 10:08:07,815	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:08:07,815	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:08:10,988	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:08:10,989	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:08:14,170	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:08:14,170	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:08:17,381	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-30 10:08:17,382	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:08:17,382	[INFO]	==== START ====
2020-12-30 10:08:18,358	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:08:21,611	[INFO]	2	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:08:22,548	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:08:23,534	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:08:27,204	[INFO]	5	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:08:27,206	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             longest = length + 1;
+ 
              i++;
          }
          return longest;

2020-12-30 10:08:27,211	[INFO]	6	SUCCESS	+13.0	
2020-12-30 10:08:27,220	[DEBUG]	
2020-12-30 10:08:28,255	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:08:29,187	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:08:30,119	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:08:31,102	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:08:32,091	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:08:35,304	[INFO]	12	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:08:35,306	[INFO]	13	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:08:35,306	[DEBUG]	
2020-12-30 10:08:36,282	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:08:37,285	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:08:37,287	[INFO]	16	SUCCESS	+13.0	
2020-12-30 10:08:37,287	[DEBUG]	
2020-12-30 10:08:38,286	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:08:41,524	[INFO]	18	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-30 10:08:41,525	[INFO]	19	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:08:41,525	[DEBUG]	
2020-12-30 10:08:41,526	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:08:41,527	[INFO]	21	SUCCESS	+13.0	
2020-12-30 10:08:41,527	[DEBUG]	
2020-12-30 10:08:42,486	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:08:43,464	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:08:44,455	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:08:45,341	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:08:46,247	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:08:49,424	[INFO]	27	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-30 10:08:50,386	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:08:51,358	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:08:52,339	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:08:53,292	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:08:54,293	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:08:54,294	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:08:55,260	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:08:56,277	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:08:57,273	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:08:58,262	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:08:58,263	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:08:59,250	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:09:00,228	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:09:01,226	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:09:04,485	[INFO]	42	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:09:05,437	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:09:06,431	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:09:07,410	[INFO]	45	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:09:07,411	[INFO]	46	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:09:07,411	[DEBUG]	
2020-12-30 10:09:07,412	[INFO]	47	SUCCESS	+13.0	
2020-12-30 10:09:07,412	[DEBUG]	
2020-12-30 10:09:07,413	[INFO]	48	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:09:08,390	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:09:09,362	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:09:10,356	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:09:11,337	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:09:12,343	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:09:13,337	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:09:16,513	[INFO]	55	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:09:16,514	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-30 10:09:16,514	[INFO]	==== END ====
2020-12-30 10:09:16,514	[INFO]	Reason: target fitness reached
2020-12-30 10:09:16,515	[INFO]	
2020-12-30 10:09:16,515	[INFO]	========== EPOCH 6 ==========
2020-12-30 10:09:16,516	[INFO]	==== WARMUP ====
2020-12-30 10:09:19,718	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:09:19,719	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:09:22,933	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:09:22,933	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:09:26,167	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:09:26,168	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:09:29,320	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-30 10:09:29,320	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:09:29,320	[INFO]	==== START ====
2020-12-30 10:09:32,554	[INFO]	1	SUCCESS	*10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:09:32,555	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:09:32,556	[INFO]	2	SUCCESS	 13.0	
2020-12-30 10:09:35,780	[INFO]	3	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-30 10:09:36,737	[INFO]	4	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:09:37,712	[INFO]	5	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:09:38,685	[INFO]	6	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:09:39,591	[INFO]	7	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:09:40,612	[INFO]	8	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:09:43,722	[INFO]	9	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:09:44,691	[INFO]	10	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:09:45,680	[INFO]	11	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:09:46,609	[INFO]	12	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:09:47,592	[INFO]	13	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:09:50,826	[INFO]	14	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:09:51,790	[INFO]	15	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:09:55,062	[INFO]	16	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:09:55,065	[INFO]	17	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-30 10:09:55,065	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:09:55,066	[INFO]	18	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-30 10:09:55,066	[INFO]	19	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:09:55,067	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:09:55,067	[INFO]	20	SUCCESS	 13.0	
2020-12-30 10:09:56,037	[INFO]	21	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:09:57,013	[INFO]	22	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:10:00,234	[INFO]	23	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:10:00,235	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 10:10:00,236	[INFO]	24	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:10:00,236	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:10:03,464	[INFO]	25	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:10:03,465	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
!                     prefix_lengths.add(j);
!                 }
!             }
! 
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:10:04,472	[INFO]	26	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:10:07,712	[INFO]	27	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:10:08,669	[INFO]	28	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:10:08,670	[INFO]	29	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:10:08,671	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:10:09,643	[INFO]	30	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:10:09,644	[INFO]	31	SUCCESS	 13.0	
2020-12-30 10:10:10,602	[INFO]	32	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:10:11,613	[INFO]	33	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:10:12,624	[INFO]	34	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:10:13,610	[INFO]	35	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:10:14,610	[INFO]	36	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:10:15,587	[INFO]	37	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:10:18,851	[INFO]	38	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-30 10:10:22,076	[INFO]	39	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:10:22,077	[INFO]	40	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:10:22,078	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:10:23,053	[INFO]	41	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:10:23,054	[INFO]	42	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:10:23,055	[INFO]	43	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:10:23,055	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:10:23,055	[INFO]	44	SUCCESS	 13.0	
2020-12-30 10:10:24,091	[INFO]	45	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:10:25,077	[INFO]	46	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:10:28,294	[INFO]	47	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:10:28,295	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-30 10:10:31,464	[INFO]	48	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:10:34,652	[INFO]	49	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-30 10:10:34,653	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-30 10:10:34,654	[INFO]	50	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:10:34,655	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-30 10:10:35,878	[INFO]	51	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:10:37,195	[INFO]	52	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:10:37,196	[INFO]	53	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:10:37,197	[INFO]	54	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:10:37,197	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:10:38,499	[INFO]	55	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:10:38,500	[INFO]	56	SUCCESS	 13.0	
2020-12-30 10:10:42,678	[INFO]	57	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:10:44,001	[INFO]	58	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:10:45,159	[INFO]	59	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:10:46,151	[INFO]	60	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:10:47,169	[INFO]	61	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:10:48,176	[INFO]	62	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:10:51,445	[INFO]	63	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:10:52,436	[INFO]	64	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:10:55,567	[INFO]	65	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:10:58,737	[INFO]	66	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-30 10:10:59,699	[INFO]	67	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:11:00,696	[INFO]	68	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:11:01,641	[INFO]	69	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:11:04,886	[INFO]	70	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:11:04,887	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 24,32 ****
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 24,38 ----
                  }
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:11:05,940	[INFO]	71	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:11:05,942	[INFO]	72	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:11:05,942	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:11:05,943	[INFO]	73	SUCCESS	 13.0	
2020-12-30 10:11:06,912	[INFO]	74	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:11:09,978	[INFO]	75	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:11:10,966	[INFO]	76	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:11:14,222	[INFO]	77	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:11:14,224	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 longest = length + 1;
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:11:14,226	[INFO]	78	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:11:14,227	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:11:15,187	[INFO]	79	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:11:15,188	[INFO]	80	SUCCESS	 13.0	
2020-12-30 10:11:16,188	[INFO]	81	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:11:17,211	[INFO]	82	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:11:20,574	[INFO]	83	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:11:21,588	[INFO]	84	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:11:22,628	[INFO]	85	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:11:25,983	[INFO]	86	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:11:25,984	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
!                     prefix_lengths.add(j);
!                 }
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:11:29,292	[INFO]	87	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:11:29,294	[INFO]	88	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:11:29,294	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:11:30,335	[INFO]	89	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:11:30,337	[INFO]	90	SUCCESS	 13.0	
2020-12-30 10:11:33,706	[INFO]	91	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:11:33,707	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:11:34,704	[INFO]	92	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:11:35,693	[INFO]	93	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:11:35,695	[INFO]	94	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:11:35,695	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:11:36,715	[INFO]	95	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:11:37,745	[INFO]	96	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:11:37,746	[INFO]	97	SUCCESS	 13.0	
2020-12-30 10:11:41,179	[INFO]	98	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:11:42,152	[INFO]	99	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:11:43,071	[INFO]	100	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:11:46,273	[INFO]	101	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:11:47,237	[INFO]	102	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:11:48,210	[INFO]	103	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:11:49,168	[INFO]	104	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:11:50,145	[INFO]	105	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:11:53,446	[INFO]	106	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:11:56,593	[INFO]	107	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:11:57,580	[INFO]	108	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:11:58,583	[INFO]	109	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:11:59,611	[INFO]	110	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:12:00,638	[INFO]	111	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:12:01,670	[INFO]	112	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:12:02,717	[INFO]	113	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:12:06,053	[INFO]	114	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:12:07,086	[INFO]	115	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:12:08,134	[INFO]	116	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:12:09,099	[INFO]	117	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:12:10,097	[INFO]	118	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:12:11,085	[INFO]	119	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:12:14,397	[INFO]	120	SUCCESS	 21.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:12:15,370	[INFO]	121	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:12:18,566	[INFO]	122	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:12:21,773	[INFO]	123	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-30 10:12:22,738	[INFO]	124	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:12:25,949	[INFO]	125	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:12:26,926	[INFO]	126	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:12:27,913	[INFO]	127	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:12:28,887	[INFO]	128	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:12:29,884	[INFO]	129	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:12:30,889	[INFO]	130	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:12:34,065	[INFO]	131	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-30 10:12:37,309	[INFO]	132	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:12:37,309	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-30 10:12:40,865	[INFO]	133	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:12:40,866	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:12:41,813	[INFO]	134	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:12:41,814	[INFO]	135	SUCCESS	 13.0	
2020-12-30 10:12:42,795	[INFO]	136	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:12:43,799	[INFO]	137	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:12:44,787	[INFO]	138	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:12:45,781	[INFO]	139	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:12:48,904	[INFO]	140	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:12:49,898	[INFO]	141	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:12:50,910	[INFO]	142	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:12:51,916	[INFO]	143	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:12:55,133	[INFO]	144	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:12:56,441	[INFO]	145	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:12:57,413	[INFO]	146	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:12:58,439	[INFO]	147	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:12:59,418	[INFO]	148	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:13:00,397	[INFO]	149	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:13:01,392	[INFO]	150	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:13:02,367	[INFO]	151	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:13:03,340	[INFO]	152	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:13:04,335	[INFO]	153	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:13:07,540	[INFO]	154	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:13:07,541	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 longest = length + 1;
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:13:10,871	[INFO]	155	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:13:11,796	[INFO]	156	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:13:12,779	[INFO]	157	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:13:12,783	[INFO]	158	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-30 10:13:12,784	[INFO]	159	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:13:12,785	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:13:13,766	[INFO]	160	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:13:14,644	[INFO]	161	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:13:17,848	[INFO]	162	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:13:17,849	[INFO]	163	SUCCESS	 13.0	
2020-12-30 10:13:18,840	[INFO]	164	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:13:19,839	[INFO]	165	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:13:20,837	[INFO]	166	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:13:21,809	[INFO]	167	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:13:22,811	[INFO]	168	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:13:26,044	[INFO]	169	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:13:29,281	[INFO]	170	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:13:29,281	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,40 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              i++;

2020-12-30 10:13:30,265	[INFO]	171	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:13:31,250	[INFO]	172	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:13:32,224	[INFO]	173	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:13:33,216	[INFO]	174	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:13:33,217	[INFO]	175	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:13:33,218	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:13:34,233	[INFO]	176	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:13:34,234	[INFO]	177	SUCCESS	 13.0	
2020-12-30 10:13:35,237	[INFO]	178	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:13:38,451	[INFO]	179	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:13:38,452	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 27,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:13:41,635	[INFO]	180	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:13:41,636	[INFO]	181	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:13:41,637	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:13:41,637	[INFO]	182	SUCCESS	 13.0	
2020-12-30 10:13:42,611	[INFO]	183	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:13:43,589	[INFO]	184	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:13:44,609	[INFO]	185	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:13:44,613	[INFO]	186	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:13:44,613	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:13:45,616	[INFO]	187	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:13:46,614	[INFO]	188	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:13:47,594	[INFO]	189	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:13:47,595	[INFO]	190	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:13:47,595	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:13:50,815	[INFO]	191	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:13:50,817	[INFO]	192	SUCCESS	 13.0	
2020-12-30 10:13:51,813	[INFO]	193	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:13:52,847	[INFO]	194	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:13:53,843	[INFO]	195	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:13:54,823	[INFO]	196	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:13:54,825	[INFO]	197	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:13:54,825	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:13:55,830	[INFO]	198	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:13:55,831	[INFO]	199	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:13:55,831	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:13:55,832	[INFO]	200	SUCCESS	 13.0	
2020-12-30 10:13:59,024	[INFO]	201	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:14:02,194	[INFO]	202	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:14:05,375	[INFO]	203	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-30 10:14:06,346	[INFO]	204	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:14:07,369	[INFO]	205	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:14:08,376	[INFO]	206	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:14:09,420	[INFO]	207	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:14:10,395	[INFO]	208	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:14:11,402	[INFO]	209	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:14:12,387	[INFO]	210	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:14:13,355	[INFO]	211	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:14:14,343	[INFO]	212	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:14:15,332	[INFO]	213	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:14:16,316	[INFO]	214	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:14:19,553	[INFO]	215	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:14:20,533	[INFO]	216	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:14:20,534	[INFO]	217	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:14:20,535	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:14:23,766	[INFO]	218	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:14:24,649	[INFO]	219	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:14:25,622	[INFO]	220	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:14:25,623	[INFO]	221	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:14:28,885	[INFO]	222	SUCCESS	 21.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:14:32,121	[INFO]	223	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:14:33,129	[INFO]	224	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:14:33,130	[INFO]	225	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:14:33,131	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:14:34,135	[INFO]	226	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:14:34,136	[INFO]	227	SUCCESS	 13.0	
2020-12-30 10:14:35,108	[INFO]	228	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:14:36,101	[INFO]	229	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:14:37,004	[INFO]	230	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:14:37,980	[INFO]	231	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:14:38,958	[INFO]	232	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:14:39,928	[INFO]	233	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:14:40,875	[INFO]	234	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:14:41,831	[INFO]	235	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:14:42,820	[INFO]	236	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:14:43,805	[INFO]	237	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:14:44,819	[INFO]	238	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:14:48,013	[INFO]	239	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-30 10:14:48,987	[INFO]	240	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:14:52,163	[INFO]	241	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:14:52,164	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 10:14:55,384	[INFO]	242	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:14:56,360	[INFO]	243	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:14:56,361	[INFO]	244	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:14:56,361	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:14:59,541	[INFO]	245	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:14:59,542	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 longest = length + 1;
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:14:59,543	[INFO]	246	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:14:59,544	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:14:59,544	[INFO]	247	SUCCESS	 13.0	
2020-12-30 10:15:02,732	[INFO]	248	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-30 10:15:03,721	[INFO]	249	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:15:04,718	[INFO]	250	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:15:04,720	[INFO]	251	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:15:04,720	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:15:04,721	[INFO]	252	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:15:04,722	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:15:04,722	[INFO]	253	SUCCESS	 13.0	
2020-12-30 10:15:05,728	[INFO]	254	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:15:06,735	[INFO]	255	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:15:07,720	[INFO]	256	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:15:08,738	[INFO]	257	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:15:11,966	[INFO]	258	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-30 10:15:13,073	[INFO]	259	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:15:14,101	[INFO]	260	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:15:15,083	[INFO]	261	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:15:15,970	[INFO]	262	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:15:16,967	[INFO]	263	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:15:17,835	[INFO]	264	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:15:18,828	[INFO]	265	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:15:19,810	[INFO]	266	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:15:23,015	[INFO]	267	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:15:23,016	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 21,32 ****
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 21,33 ----
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                     prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:15:24,032	[INFO]	268	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:15:25,060	[INFO]	269	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:15:26,050	[INFO]	270	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:15:27,015	[INFO]	271	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:15:27,981	[INFO]	272	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:15:31,176	[INFO]	273	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:15:32,101	[INFO]	274	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:15:32,102	[INFO]	275	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:15:32,103	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:15:32,103	[INFO]	276	SUCCESS	 13.0	
2020-12-30 10:15:33,117	[INFO]	277	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:15:34,147	[INFO]	278	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:15:37,484	[INFO]	279	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:15:37,485	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,33 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:15:37,486	[INFO]	280	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:15:37,486	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:15:37,487	[INFO]	281	SUCCESS	 13.0	
2020-12-30 10:15:38,465	[INFO]	282	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:15:39,503	[INFO]	283	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:15:40,559	[INFO]	284	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:15:41,548	[INFO]	285	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:15:42,526	[INFO]	286	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:15:45,771	[INFO]	287	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:15:45,771	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 10:15:46,698	[INFO]	288	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:15:46,699	[INFO]	289	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:15:46,700	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:15:46,700	[INFO]	290	SUCCESS	 13.0	
2020-12-30 10:15:47,680	[INFO]	291	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:15:48,689	[INFO]	292	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:15:49,724	[INFO]	293	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:15:50,722	[INFO]	294	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:15:51,706	[INFO]	295	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:15:52,709	[INFO]	296	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:15:53,698	[INFO]	297	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:15:54,703	[INFO]	298	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:15:55,966	[INFO]	299	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:15:59,168	[INFO]	300	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:16:00,122	[INFO]	301	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:16:01,021	[INFO]	302	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:16:01,960	[INFO]	303	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:16:01,962	[INFO]	304	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:16:01,962	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:16:01,963	[INFO]	305	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:16:01,964	[INFO]	306	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:16:01,964	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:16:02,950	[INFO]	307	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:16:03,954	[INFO]	308	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:16:03,956	[INFO]	309	SUCCESS	 13.0	
2020-12-30 10:16:03,958	[INFO]	310	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:16:03,960	[INFO]	311	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:16:03,961	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,33 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:16:07,179	[INFO]	312	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:16:08,174	[INFO]	313	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:16:09,162	[INFO]	314	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:16:10,152	[INFO]	315	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:16:11,156	[INFO]	316	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:16:12,152	[INFO]	317	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:16:13,152	[INFO]	318	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:16:13,155	[INFO]	319	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:16:13,155	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:16:13,156	[INFO]	320	SUCCESS	 13.0	
2020-12-30 10:16:14,132	[INFO]	321	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:16:15,106	[INFO]	322	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:16:16,116	[INFO]	323	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:16:19,289	[INFO]	324	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:16:20,267	[INFO]	325	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:16:23,488	[INFO]	326	SUCCESS	 18.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:16:24,499	[INFO]	327	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:16:25,503	[INFO]	328	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:16:26,476	[INFO]	329	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:16:29,682	[INFO]	330	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-30 10:16:32,909	[INFO]	331	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-30 10:16:32,910	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:16:32,911	[INFO]	332	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:16:33,915	[INFO]	333	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:16:34,881	[INFO]	334	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:16:35,838	[INFO]	335	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:16:36,808	[INFO]	336	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:16:37,825	[INFO]	337	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:16:38,813	[INFO]	338	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:16:42,072	[INFO]	339	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:16:42,074	[INFO]	340	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:16:43,065	[INFO]	341	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:16:44,028	[INFO]	342	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:16:44,943	[INFO]	343	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:16:45,912	[INFO]	344	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:16:46,909	[INFO]	345	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:16:50,363	[INFO]	346	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-30 10:16:50,365	[INFO]	347	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:16:50,365	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:16:51,372	[INFO]	348	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:16:52,335	[INFO]	349	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:16:52,337	[INFO]	350	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:16:52,337	[INFO]	351	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:16:53,324	[INFO]	352	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:16:54,279	[INFO]	353	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:16:55,268	[INFO]	354	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:16:56,265	[INFO]	355	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:16:56,266	[INFO]	356	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-30 10:16:56,266	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:16:57,147	[INFO]	357	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:16:58,133	[INFO]	358	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:16:58,135	[INFO]	359	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:16:59,104	[INFO]	360	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:17:02,335	[INFO]	361	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-30 10:17:02,337	[INFO]	362	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-30 10:17:03,298	[INFO]	363	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:17:04,299	[INFO]	364	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:17:05,271	[INFO]	365	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:17:06,264	[INFO]	366	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:17:07,277	[INFO]	367	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:17:08,259	[INFO]	368	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:17:08,261	[INFO]	369	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-30 10:17:09,264	[INFO]	370	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:17:12,528	[INFO]	371	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:17:13,460	[INFO]	372	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:17:14,463	[INFO]	373	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:17:15,447	[INFO]	374	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:17:18,657	[INFO]	375	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:17:19,646	[INFO]	376	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:17:20,637	[INFO]	377	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:17:21,626	[INFO]	378	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:17:22,604	[INFO]	379	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:17:23,584	[INFO]	380	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:17:24,629	[INFO]	381	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:17:25,639	[INFO]	382	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:17:25,641	[INFO]	383	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:17:25,641	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:17:25,642	[INFO]	384	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:17:25,643	[INFO]	385	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:17:25,644	[INFO]	386	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:17:25,644	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:17:25,645	[INFO]	387	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:17:25,646	[INFO]	388	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:17:25,646	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:17:25,647	[INFO]	389	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:17:28,872	[INFO]	390	SUCCESS	*1.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:17:28,874	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,35 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 19,37 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-30 10:17:28,876	[INFO]	391	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:17:32,047	[INFO]	392	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:17:33,028	[INFO]	393	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:17:34,028	[INFO]	394	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:17:35,019	[INFO]	395	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:17:38,257	[INFO]	396	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-30 10:17:38,258	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-30 10:17:38,258	[INFO]	==== END ====
2020-12-30 10:17:38,258	[INFO]	Reason: target fitness reached
2020-12-30 10:17:38,259	[INFO]	
2020-12-30 10:17:38,260	[INFO]	========== EPOCH 7 ==========
2020-12-30 10:17:38,260	[INFO]	==== WARMUP ====
2020-12-30 10:17:41,832	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:17:41,832	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:17:45,025	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:17:45,025	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:17:48,279	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:17:48,280	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:17:51,502	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-30 10:17:51,502	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:17:51,502	[INFO]	==== START ====
2020-12-30 10:17:54,726	[INFO]	1	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:17:57,879	[INFO]	2	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:17:57,880	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                     prefix_lengths.add(j);
                  }
              }
  

2020-12-30 10:17:58,877	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:17:58,878	[INFO]	4	SUCCESS	+13.0	
2020-12-30 10:17:58,879	[DEBUG]	
2020-12-30 10:18:02,130	[INFO]	5	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:18:02,131	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:18:03,101	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:18:04,068	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:18:04,968	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:18:04,969	[INFO]	9	SUCCESS	+13.0	
2020-12-30 10:18:04,969	[DEBUG]	
2020-12-30 10:18:08,153	[INFO]	10	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:18:08,154	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-30 10:18:11,353	[INFO]	11	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:18:11,354	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,33 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 longest = length + 1;
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:18:11,355	[INFO]	12	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:18:11,356	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-30 10:18:11,356	[INFO]	13	SUCCESS	+13.0	
2020-12-30 10:18:11,357	[DEBUG]	
2020-12-30 10:18:14,542	[INFO]	14	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:18:14,543	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-30 10:18:15,527	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:18:15,529	[INFO]	16	SUCCESS	+13.0	
2020-12-30 10:18:15,529	[DEBUG]	
2020-12-30 10:18:16,512	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:18:17,507	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:18:17,509	[INFO]	19	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-30 10:18:17,509	[DEBUG]	
2020-12-30 10:18:18,498	[INFO]	20	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:18:18,499	[INFO]	21	SUCCESS	+13.0	
2020-12-30 10:18:18,499	[DEBUG]	
2020-12-30 10:18:19,511	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:18:19,513	[INFO]	23	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:18:19,514	[DEBUG]	
2020-12-30 10:18:20,557	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:18:21,562	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:18:22,560	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:18:23,588	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:18:23,589	[INFO]	28	SUCCESS	+13.0	
2020-12-30 10:18:23,589	[DEBUG]	
2020-12-30 10:18:26,870	[INFO]	29	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:18:26,872	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:18:30,029	[INFO]	31	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:18:30,030	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,37 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:18:30,904	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:18:30,906	[INFO]	33	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:18:30,906	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,37 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:18:34,149	[INFO]	34	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:18:34,150	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,38 ****
--- 27,44 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-30 10:18:35,023	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:18:36,014	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:18:36,016	[INFO]	37	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:18:36,017	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,38 ****
--- 27,44 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-30 10:18:36,017	[INFO]	38	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:18:36,018	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,37 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:18:37,032	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:18:37,034	[INFO]	40	SUCCESS	+13.0	
2020-12-30 10:18:37,034	[DEBUG]	
2020-12-30 10:18:38,012	[INFO]	41	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:18:41,222	[INFO]	42	SUCCESS	 20.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:18:42,216	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:18:43,187	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:18:44,157	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:18:47,364	[INFO]	46	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:18:47,364	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-30 10:18:47,365	[INFO]	47	SUCCESS	+13.0	
2020-12-30 10:18:47,366	[DEBUG]	
2020-12-30 10:18:50,610	[INFO]	48	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:18:51,569	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:18:52,553	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:18:53,538	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:18:54,546	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:18:54,547	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:18:55,497	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:18:56,502	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:18:57,486	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:19:00,733	[INFO]	57	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:19:03,903	[INFO]	58	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:19:07,057	[INFO]	59	SUCCESS	*0.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:19:07,057	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 10:19:07,058	[INFO]	==== END ====
2020-12-30 10:19:07,058	[INFO]	Reason: target fitness reached
2020-12-30 10:19:07,059	[INFO]	
2020-12-30 10:19:07,059	[INFO]	========== EPOCH 8 ==========
2020-12-30 10:19:07,059	[INFO]	==== WARMUP ====
2020-12-30 10:19:10,261	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:19:10,262	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:19:13,473	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:19:13,473	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:19:16,651	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:19:16,651	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:19:19,837	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-30 10:19:19,838	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:19:19,838	[INFO]	==== START ====
2020-12-30 10:19:23,048	[INFO]	1	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:19:23,049	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,41 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-30 10:19:24,070	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:19:24,072	[INFO]	3	SUCCESS	+13.0	
2020-12-30 10:19:24,072	[DEBUG]	
2020-12-30 10:19:25,067	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:19:26,019	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:19:27,011	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:19:27,953	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:19:28,933	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:19:29,911	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:19:30,883	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:19:31,866	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:19:32,852	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:19:32,853	[INFO]	13	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:19:32,853	[DEBUG]	
2020-12-30 10:19:33,852	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:19:34,831	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:19:34,833	[INFO]	16	SUCCESS	+13.0	
2020-12-30 10:19:34,833	[DEBUG]	
2020-12-30 10:19:35,845	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:19:36,843	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:19:40,037	[INFO]	19	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:19:43,259	[INFO]	20	SUCCESS	 22.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:19:46,456	[INFO]	21	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-30 10:19:46,456	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:19:46,457	[INFO]	22	SUCCESS	+13.0	
2020-12-30 10:19:46,457	[DEBUG]	
2020-12-30 10:19:47,435	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:19:48,418	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:19:48,419	[INFO]	25	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:19:48,420	[DEBUG]	
2020-12-30 10:19:49,393	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:19:50,282	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:19:50,283	[INFO]	28	SUCCESS	+13.0	
2020-12-30 10:19:50,284	[DEBUG]	
2020-12-30 10:19:51,163	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:19:52,074	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:19:53,035	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:19:54,016	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:19:55,000	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:19:55,996	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:19:56,985	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:19:56,986	[INFO]	36	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:19:56,986	[DEBUG]	
2020-12-30 10:19:57,988	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:19:59,041	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:19:59,042	[INFO]	39	SUCCESS	+13.0	
2020-12-30 10:19:59,043	[DEBUG]	
2020-12-30 10:20:00,151	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:20:00,152	[INFO]	41	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:20:00,153	[DEBUG]	
2020-12-30 10:20:03,420	[INFO]	42	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:20:03,421	[INFO]	43	SUCCESS	+13.0	
2020-12-30 10:20:03,421	[DEBUG]	
2020-12-30 10:20:04,389	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:20:05,350	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:20:06,340	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:20:06,341	[INFO]	47	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:20:06,342	[DEBUG]	
2020-12-30 10:20:06,342	[INFO]	48	SUCCESS	+13.0	
2020-12-30 10:20:06,343	[DEBUG]	
2020-12-30 10:20:07,362	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:20:10,553	[INFO]	50	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:20:11,542	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:20:12,525	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:20:13,515	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:20:14,512	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:20:15,486	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:20:18,658	[INFO]	56	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:20:18,660	[INFO]	57	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:20:18,660	[DEBUG]	
2020-12-30 10:20:21,877	[INFO]	58	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:20:21,878	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-30 10:20:21,879	[INFO]	59	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:20:21,879	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-30 10:20:21,880	[INFO]	60	SUCCESS	+13.0	
2020-12-30 10:20:21,880	[DEBUG]	
2020-12-30 10:20:22,842	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:20:23,796	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:20:24,761	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:20:25,758	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:20:26,738	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:20:27,661	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:20:28,634	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:20:29,502	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:20:30,490	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:20:31,479	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:20:32,449	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:20:33,466	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:20:34,490	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:20:38,748	[INFO]	74	SUCCESS	 19.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:20:42,078	[INFO]	75	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:20:45,291	[INFO]	76	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:20:45,292	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,41 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-30 10:20:45,293	[INFO]	77	SUCCESS	+13.0	
2020-12-30 10:20:45,293	[DEBUG]	
2020-12-30 10:20:46,260	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:20:46,261	[INFO]	79	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:20:46,262	[DEBUG]	
2020-12-30 10:20:47,151	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:20:47,152	[INFO]	81	SUCCESS	+13.0	
2020-12-30 10:20:47,152	[DEBUG]	
2020-12-30 10:20:48,114	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:20:49,108	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:20:50,079	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:20:53,285	[INFO]	85	SUCCESS	 20.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:20:54,250	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:20:55,190	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:20:58,417	[INFO]	88	SUCCESS	 22.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:20:59,364	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:21:00,288	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:21:03,500	[INFO]	91	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:21:03,500	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             longest = length + 1;
+ 
              i++;
          }
          return longest;

2020-12-30 10:21:03,501	[INFO]	92	SUCCESS	+13.0	
2020-12-30 10:21:03,502	[DEBUG]	
2020-12-30 10:21:03,502	[INFO]	93	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:21:03,503	[DEBUG]	
2020-12-30 10:21:06,711	[INFO]	94	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:21:09,981	[INFO]	95	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:21:09,982	[INFO]	96	SUCCESS	+13.0	
2020-12-30 10:21:09,982	[DEBUG]	
2020-12-30 10:21:10,949	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:21:11,931	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:21:11,932	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:21:12,936	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:21:13,924	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:21:17,162	[INFO]	102	SUCCESS	 19.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:21:18,157	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:21:19,146	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:21:20,133	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:21:21,100	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:21:22,374	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:21:23,356	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:21:24,366	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:21:27,574	[INFO]	110	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:21:27,575	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,38 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-30 10:21:28,560	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:21:28,561	[INFO]	112	SUCCESS	+13.0	
2020-12-30 10:21:28,562	[DEBUG]	
2020-12-30 10:21:31,781	[INFO]	113	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-30 10:21:31,781	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:21:34,976	[INFO]	114	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:21:35,955	[INFO]	115	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:21:35,956	[INFO]	116	SUCCESS	+13.0	
2020-12-30 10:21:35,956	[DEBUG]	
2020-12-30 10:21:36,940	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:21:37,951	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:21:38,929	[INFO]	119	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:21:39,828	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:21:40,841	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:21:41,814	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:21:42,808	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:21:43,782	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:21:47,063	[INFO]	125	SUCCESS	*10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-30 10:21:47,065	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:21:48,027	[INFO]	126	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:21:48,028	[INFO]	127	SUCCESS	 13.0	
2020-12-30 10:21:51,188	[INFO]	128	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:21:52,158	[INFO]	129	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:21:53,135	[INFO]	130	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:21:54,135	[INFO]	131	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:21:55,135	[INFO]	132	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:21:56,124	[INFO]	133	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:21:57,127	[INFO]	134	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:21:58,096	[INFO]	135	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:21:59,058	[INFO]	136	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:22:00,023	[INFO]	137	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:22:03,194	[INFO]	138	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:22:06,386	[INFO]	139	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:22:06,387	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:22:06,388	[INFO]	140	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:22:06,388	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:22:06,389	[INFO]	141	SUCCESS	 13.0	
2020-12-30 10:22:09,763	[INFO]	142	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-30 10:22:12,976	[INFO]	143	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:22:12,977	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,33 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:22:16,377	[INFO]	144	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:22:19,513	[INFO]	145	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:22:19,514	[INFO]	146	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:22:19,515	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:22:19,515	[INFO]	147	SUCCESS	 13.0	
2020-12-30 10:22:20,538	[INFO]	148	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:22:23,759	[INFO]	149	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:22:24,745	[INFO]	150	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:22:25,760	[INFO]	151	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:22:26,743	[INFO]	152	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:22:29,947	[INFO]	153	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:22:30,929	[INFO]	154	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:22:31,915	[INFO]	155	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:22:32,912	[INFO]	156	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:22:34,262	[INFO]	157	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:22:35,302	[INFO]	158	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:22:36,272	[INFO]	159	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:22:37,268	[INFO]	160	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:22:38,251	[INFO]	161	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:22:39,210	[INFO]	162	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:22:42,417	[INFO]	163	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:22:42,418	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 27,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:22:43,415	[INFO]	164	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:22:43,416	[INFO]	165	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:22:43,417	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:22:44,405	[INFO]	166	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:22:44,406	[INFO]	167	SUCCESS	 13.0	
2020-12-30 10:22:45,320	[INFO]	168	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:22:46,304	[INFO]	169	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:22:47,269	[INFO]	170	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:22:48,239	[INFO]	171	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:22:51,472	[INFO]	172	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:22:51,473	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-30 10:22:51,474	[INFO]	173	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:22:51,474	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:22:51,475	[INFO]	174	SUCCESS	 13.0	
2020-12-30 10:22:52,426	[INFO]	175	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:22:52,428	[INFO]	176	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:22:52,428	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:22:53,375	[INFO]	177	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:22:56,613	[INFO]	178	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:22:57,562	[INFO]	179	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:22:58,536	[INFO]	180	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:23:01,737	[INFO]	181	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:23:01,739	[INFO]	182	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:23:01,739	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:23:01,740	[INFO]	183	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:23:01,740	[INFO]	184	SUCCESS	 13.0	
2020-12-30 10:23:02,684	[INFO]	185	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:23:03,669	[INFO]	186	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:23:04,653	[INFO]	187	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:23:05,622	[INFO]	188	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:23:08,966	[INFO]	189	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:23:08,967	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,35 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:23:12,105	[INFO]	190	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:23:12,107	[INFO]	191	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:23:12,107	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:23:12,108	[INFO]	192	SUCCESS	 13.0	
2020-12-30 10:23:13,075	[INFO]	193	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:23:14,043	[INFO]	194	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:23:17,218	[INFO]	195	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-30 10:23:18,182	[INFO]	196	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:23:18,183	[INFO]	197	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:23:21,353	[INFO]	198	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:23:22,296	[INFO]	199	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:23:23,281	[INFO]	200	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:23:26,547	[INFO]	201	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:23:26,548	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,32 ****
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 22,35 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:23:27,585	[INFO]	202	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:23:27,586	[INFO]	203	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:23:27,586	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:23:28,554	[INFO]	204	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:23:29,550	[INFO]	205	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:23:29,552	[INFO]	206	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:23:29,553	[INFO]	207	SUCCESS	 13.0	
2020-12-30 10:23:30,547	[INFO]	208	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:23:31,505	[INFO]	209	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:23:32,503	[INFO]	210	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:23:33,472	[INFO]	211	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:23:33,474	[INFO]	212	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:23:34,460	[INFO]	213	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:23:35,473	[INFO]	214	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:23:38,696	[INFO]	215	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-30 10:23:38,696	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:23:38,697	[INFO]	216	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-30 10:23:38,698	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:23:38,698	[INFO]	217	SUCCESS	 13.0	
2020-12-30 10:23:39,656	[INFO]	218	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:23:42,948	[INFO]	219	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:23:43,807	[INFO]	220	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:23:44,774	[INFO]	221	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:23:47,990	[INFO]	222	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:23:48,942	[INFO]	223	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:23:49,944	[INFO]	224	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:23:50,915	[INFO]	225	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:23:54,157	[INFO]	226	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-30 10:23:55,127	[INFO]	227	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:23:56,124	[INFO]	228	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:23:57,122	[INFO]	229	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:24:00,328	[INFO]	230	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:24:01,287	[INFO]	231	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:24:02,295	[INFO]	232	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:24:05,528	[INFO]	233	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:24:05,530	[INFO]	234	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:24:05,531	[INFO]	235	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:24:05,531	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:24:08,758	[INFO]	236	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:24:08,760	[INFO]	237	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:24:08,761	[INFO]	238	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-30 10:24:08,761	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:24:08,762	[INFO]	239	SUCCESS	 13.0	
2020-12-30 10:24:09,733	[INFO]	240	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:24:10,723	[INFO]	241	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:24:11,694	[INFO]	242	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:24:14,929	[INFO]	243	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:24:15,906	[INFO]	244	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:24:15,908	[INFO]	245	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:24:16,890	[INFO]	246	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:24:17,897	[INFO]	247	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:24:18,891	[INFO]	248	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:24:19,886	[INFO]	249	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:24:20,884	[INFO]	250	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:24:20,886	[INFO]	251	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-30 10:24:20,886	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:24:20,887	[INFO]	252	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-30 10:24:20,887	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:24:24,183	[INFO]	253	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:24:24,185	[INFO]	254	SUCCESS	 13.0	
2020-12-30 10:24:25,166	[INFO]	255	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:24:26,158	[INFO]	256	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:24:29,339	[INFO]	257	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:24:29,339	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:24:30,298	[INFO]	258	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:24:33,570	[INFO]	259	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:24:33,572	[INFO]	260	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:24:33,572	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:24:34,494	[INFO]	261	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:24:34,495	[INFO]	262	SUCCESS	 13.0	
2020-12-30 10:24:35,472	[INFO]	263	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:24:36,327	[INFO]	264	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:24:39,536	[INFO]	265	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:24:42,777	[INFO]	266	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:24:43,746	[INFO]	267	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:24:44,720	[INFO]	268	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:24:45,713	[INFO]	269	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:24:46,703	[INFO]	270	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:24:47,700	[INFO]	271	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:24:47,702	[INFO]	272	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:24:48,664	[INFO]	273	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:24:49,654	[INFO]	274	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:24:50,699	[INFO]	275	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:24:51,709	[INFO]	276	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:24:52,713	[INFO]	277	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:24:53,702	[INFO]	278	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:24:54,689	[INFO]	279	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:24:55,683	[INFO]	280	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:24:56,674	[INFO]	281	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:24:57,707	[INFO]	282	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:24:57,711	[INFO]	283	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:25:00,907	[INFO]	284	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-30 10:25:01,866	[INFO]	285	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:25:01,867	[INFO]	286	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:25:02,813	[INFO]	287	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:25:06,004	[INFO]	288	SUCCESS	 18.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:25:06,007	[INFO]	289	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:25:07,016	[INFO]	290	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:25:08,018	[INFO]	291	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:25:08,998	[INFO]	292	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:25:09,979	[INFO]	293	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:25:13,133	[INFO]	294	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:25:14,155	[INFO]	295	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:25:15,070	[INFO]	296	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:25:16,033	[INFO]	297	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:25:16,037	[INFO]	298	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:25:16,038	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:25:16,039	[INFO]	299	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:25:16,040	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:25:16,041	[INFO]	300	SUCCESS	 13.0	
2020-12-30 10:25:16,920	[INFO]	301	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:25:17,806	[INFO]	302	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:25:18,772	[INFO]	303	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:25:19,744	[INFO]	304	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:25:20,736	[INFO]	305	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:25:21,716	[INFO]	306	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:25:22,696	[INFO]	307	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:25:23,667	[INFO]	308	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:25:24,693	[INFO]	309	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:25:25,666	[INFO]	310	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:25:26,666	[INFO]	311	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:25:27,647	[INFO]	312	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:25:28,648	[INFO]	313	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:25:29,640	[INFO]	314	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:25:30,627	[INFO]	315	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:25:30,630	[INFO]	316	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:25:31,610	[INFO]	317	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:25:32,607	[INFO]	318	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:25:35,924	[INFO]	319	SUCCESS	 21.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:25:36,893	[INFO]	320	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:25:37,888	[INFO]	321	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:25:38,917	[INFO]	322	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:25:38,919	[INFO]	323	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:25:39,850	[INFO]	324	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:25:40,866	[INFO]	325	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:25:44,091	[INFO]	326	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:25:45,084	[INFO]	327	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:25:45,085	[INFO]	328	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:25:45,085	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:25:45,086	[INFO]	329	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:25:48,330	[INFO]	330	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:25:48,331	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 10:25:49,491	[INFO]	331	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:25:50,542	[INFO]	332	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:25:50,544	[INFO]	333	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:25:50,544	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:25:50,545	[INFO]	334	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:25:50,545	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:25:50,546	[INFO]	335	SUCCESS	 13.0	
2020-12-30 10:25:51,548	[INFO]	336	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:25:52,528	[INFO]	337	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:25:55,726	[INFO]	338	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:25:56,718	[INFO]	339	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:25:56,719	[INFO]	340	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:25:57,730	[INFO]	341	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:25:58,728	[INFO]	342	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:25:59,729	[INFO]	343	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:25:59,732	[INFO]	344	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:25:59,733	[INFO]	345	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:26:00,741	[INFO]	346	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:26:01,707	[INFO]	347	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:26:02,725	[INFO]	348	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:26:03,713	[INFO]	349	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:26:04,695	[INFO]	350	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:26:05,675	[INFO]	351	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:26:08,967	[INFO]	352	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-30 10:26:12,129	[INFO]	353	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-30 10:26:13,101	[INFO]	354	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:26:13,102	[INFO]	355	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:26:14,113	[INFO]	356	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:26:17,352	[INFO]	357	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:26:17,353	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-30 10:26:18,315	[INFO]	358	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:26:18,316	[INFO]	359	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:26:18,317	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:26:18,317	[INFO]	360	SUCCESS	 13.0	
2020-12-30 10:26:19,328	[INFO]	361	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:26:20,322	[INFO]	362	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:26:21,336	[INFO]	363	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:26:24,590	[INFO]	364	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-30 10:26:25,529	[INFO]	365	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:26:28,757	[INFO]	366	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-30 10:26:29,717	[INFO]	367	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:26:30,698	[INFO]	368	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:26:31,680	[INFO]	369	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:26:32,660	[INFO]	370	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:26:35,727	[INFO]	371	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:26:36,705	[INFO]	372	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:26:36,709	[INFO]	373	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-30 10:26:39,913	[INFO]	374	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:26:39,914	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-30 10:26:43,122	[INFO]	375	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:26:43,124	[INFO]	376	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:26:43,124	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:26:43,125	[INFO]	377	SUCCESS	 13.0	
2020-12-30 10:26:46,779	[INFO]	378	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:26:47,749	[INFO]	379	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:26:48,729	[INFO]	380	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:26:49,722	[INFO]	381	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:26:52,975	[INFO]	382	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:26:53,947	[INFO]	383	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:26:54,873	[INFO]	384	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:26:55,869	[INFO]	385	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:26:56,867	[INFO]	386	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:26:57,861	[INFO]	387	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:26:58,827	[INFO]	388	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:27:02,008	[INFO]	389	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:27:02,973	[INFO]	390	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:27:03,946	[INFO]	391	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:27:04,951	[INFO]	392	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:27:05,934	[INFO]	393	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:27:06,913	[INFO]	394	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:27:07,917	[INFO]	395	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:27:08,931	[INFO]	396	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:27:12,121	[INFO]	397	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:27:12,122	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 longest = length + 1;
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:27:12,123	[INFO]	398	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:27:12,123	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:27:13,029	[INFO]	399	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:27:13,031	[INFO]	400	SUCCESS	 13.0	
2020-12-30 10:27:13,996	[INFO]	401	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:27:17,244	[INFO]	402	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-30 10:27:18,230	[INFO]	403	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:27:19,178	[INFO]	404	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:27:20,163	[INFO]	405	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:27:21,177	[INFO]	406	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:27:22,158	[INFO]	407	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:27:25,423	[INFO]	408	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:27:25,424	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,33 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:27:28,627	[INFO]	409	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:27:29,623	[INFO]	410	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:27:29,625	[INFO]	411	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:27:29,625	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:27:29,626	[INFO]	412	SUCCESS	 13.0	
2020-12-30 10:27:32,850	[INFO]	413	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:27:36,006	[INFO]	414	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:27:36,007	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:27:36,996	[INFO]	415	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:27:37,962	[INFO]	416	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:27:38,874	[INFO]	417	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:27:42,107	[INFO]	418	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:27:45,303	[INFO]	419	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:27:46,272	[INFO]	420	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:27:47,257	[INFO]	421	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:27:48,232	[INFO]	422	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:27:49,224	[INFO]	423	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:27:50,221	[INFO]	424	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:27:51,207	[INFO]	425	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:27:52,165	[INFO]	426	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:27:52,166	[INFO]	427	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:27:52,167	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:27:52,167	[INFO]	428	SUCCESS	 13.0	
2020-12-30 10:27:53,170	[INFO]	429	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:27:54,148	[INFO]	430	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:27:57,411	[INFO]	431	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-30 10:28:00,559	[INFO]	432	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:28:01,543	[INFO]	433	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:28:02,452	[INFO]	434	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:28:05,637	[INFO]	435	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:28:08,861	[INFO]	436	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:28:08,863	[INFO]	437	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:28:12,060	[INFO]	438	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:28:12,061	[INFO]	439	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:28:15,196	[INFO]	440	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-30 10:28:15,197	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:28:16,164	[INFO]	441	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:28:16,165	[INFO]	442	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:28:16,165	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:28:17,098	[INFO]	443	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:28:18,061	[INFO]	444	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:28:18,063	[INFO]	445	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:28:18,063	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:28:18,064	[INFO]	446	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:28:18,065	[INFO]	447	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:28:18,065	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:28:18,066	[INFO]	448	SUCCESS	 13.0	
2020-12-30 10:28:21,304	[INFO]	449	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:28:21,305	[INFO]	450	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:28:21,306	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:28:21,307	[INFO]	451	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:28:22,273	[INFO]	452	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:28:25,505	[INFO]	453	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:28:25,507	[INFO]	454	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:28:25,508	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:28:25,509	[INFO]	455	SUCCESS	 13.0	
2020-12-30 10:28:28,712	[INFO]	456	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:28:29,635	[INFO]	457	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:28:30,651	[INFO]	458	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:28:31,651	[INFO]	459	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:28:32,664	[INFO]	460	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:28:33,691	[INFO]	461	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:28:34,655	[INFO]	462	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:28:35,641	[INFO]	463	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:28:36,592	[INFO]	464	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:28:37,567	[INFO]	465	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:28:38,506	[INFO]	466	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:28:39,491	[INFO]	467	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:28:40,412	[INFO]	468	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:28:43,701	[INFO]	469	SUCCESS	 21.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:28:43,703	[INFO]	470	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-30 10:28:43,703	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:28:46,940	[INFO]	471	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:28:46,941	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             ends.put(length+1, i);
! 
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:28:46,941	[INFO]	==== END ====
2020-12-30 10:28:46,941	[INFO]	Reason: target fitness reached
2020-12-30 10:28:46,942	[INFO]	
2020-12-30 10:28:46,942	[INFO]	========== EPOCH 9 ==========
2020-12-30 10:28:46,942	[INFO]	==== WARMUP ====
2020-12-30 10:28:50,098	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:28:50,099	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:28:53,583	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:28:53,583	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:28:56,832	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:28:56,832	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:29:00,047	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-30 10:29:00,047	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:29:00,047	[INFO]	==== START ====
2020-12-30 10:29:03,261	[INFO]	1	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-30 10:29:06,436	[INFO]	2	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:29:07,379	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:29:08,667	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:29:08,669	[INFO]	5	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:29:08,669	[DEBUG]	
2020-12-30 10:29:11,875	[INFO]	6	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-30 10:29:11,876	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-30 10:29:11,877	[INFO]	7	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-30 10:29:11,877	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-30 10:29:12,869	[INFO]	8	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:29:13,849	[INFO]	9	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:29:13,850	[INFO]	10	SUCCESS	+13.0	
2020-12-30 10:29:13,850	[DEBUG]	
2020-12-30 10:29:14,829	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:29:15,799	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:29:19,018	[INFO]	13	SUCCESS	 24.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:29:20,006	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:29:20,891	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:29:21,863	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:29:22,729	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:29:22,730	[INFO]	18	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:29:22,730	[DEBUG]	
2020-12-30 10:29:22,731	[INFO]	19	SUCCESS	+13.0	
2020-12-30 10:29:22,731	[DEBUG]	
2020-12-30 10:29:23,717	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:29:23,719	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:29:27,055	[INFO]	22	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:29:28,032	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:29:29,013	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:29:32,203	[INFO]	25	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:29:32,204	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,42 ----
                  longest = length + 1;
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              i++;
          }
          return longest;

2020-12-30 10:29:32,205	[INFO]	26	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:29:32,206	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,42 ----
                  longest = length + 1;
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              i++;
          }
          return longest;

2020-12-30 10:29:32,206	[INFO]	27	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:29:32,207	[DEBUG]	
2020-12-30 10:29:32,207	[INFO]	28	SUCCESS	+13.0	
2020-12-30 10:29:32,208	[DEBUG]	
2020-12-30 10:29:33,186	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:29:34,174	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:29:35,181	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:29:36,159	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:29:37,151	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:29:38,146	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:29:39,150	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:29:40,143	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:29:41,136	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:29:42,149	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:29:43,125	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:29:44,101	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:29:47,269	[INFO]	41	SUCCESS	 24.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:29:48,242	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:29:49,224	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:29:49,225	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:29:50,206	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:29:53,424	[INFO]	46	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:29:56,619	[INFO]	47	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:29:56,619	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }

2020-12-30 10:29:56,620	[INFO]	48	SUCCESS	+13.0	
2020-12-30 10:29:56,621	[DEBUG]	
2020-12-30 10:29:57,575	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:29:58,575	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:29:59,553	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:29:59,554	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:30:02,771	[INFO]	53	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:30:02,773	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,33 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 longest = length + 1;
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:30:02,774	[INFO]	54	SUCCESS	+13.0	
2020-12-30 10:30:02,774	[DEBUG]	
2020-12-30 10:30:05,970	[INFO]	55	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:30:05,970	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             longest = length + 1;
+ 
              i++;
          }
          return longest;

2020-12-30 10:30:06,972	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:30:06,973	[INFO]	57	SUCCESS	+13.0	
2020-12-30 10:30:06,974	[DEBUG]	
2020-12-30 10:30:07,999	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:30:08,986	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:30:09,979	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:30:10,961	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:30:11,946	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:30:12,929	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:30:13,897	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:30:13,898	[INFO]	65	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:30:13,898	[DEBUG]	
2020-12-30 10:30:13,899	[INFO]	66	SUCCESS	+13.0	
2020-12-30 10:30:13,899	[DEBUG]	
2020-12-30 10:30:14,931	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:30:15,947	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:30:19,198	[INFO]	69	SUCCESS	 24.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:30:20,155	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:30:21,132	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:30:22,101	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:30:25,311	[INFO]	73	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:30:25,312	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-30 10:30:25,313	[INFO]	74	SUCCESS	+13.0	
2020-12-30 10:30:25,313	[DEBUG]	
2020-12-30 10:30:26,285	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:30:27,265	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:30:28,250	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:30:31,451	[INFO]	78	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:30:31,453	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             ends.put(length+1, i);
+ 
              i++;
          }
          return longest;

2020-12-30 10:30:32,380	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:30:32,381	[INFO]	80	SUCCESS	+13.0	
2020-12-30 10:30:32,381	[DEBUG]	
2020-12-30 10:30:33,369	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:30:34,356	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:30:35,545	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:30:36,890	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:30:38,318	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:30:39,757	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:30:41,007	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:30:41,009	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:30:42,281	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:30:42,283	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:30:43,594	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:30:47,406	[INFO]	92	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-30 10:30:48,392	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:30:49,367	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:30:52,582	[INFO]	95	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:30:52,583	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:30:53,569	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:30:53,572	[INFO]	97	SUCCESS	+13.0	
2020-12-30 10:30:53,573	[DEBUG]	
2020-12-30 10:30:54,501	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:30:57,747	[INFO]	99	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:31:00,947	[INFO]	100	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:31:01,931	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:31:02,917	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:31:03,895	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:31:03,897	[INFO]	104	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:31:03,897	[DEBUG]	
2020-12-30 10:31:03,897	[INFO]	105	SUCCESS	+13.0	
2020-12-30 10:31:03,898	[DEBUG]	
2020-12-30 10:31:07,068	[INFO]	106	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:31:10,250	[INFO]	107	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:31:11,217	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:31:12,219	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:31:13,246	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:31:14,243	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:31:15,211	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:31:18,397	[INFO]	113	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:31:19,378	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:31:22,643	[INFO]	115	SUCCESS	 28.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:31:23,593	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:31:26,869	[INFO]	117	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:31:26,870	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 29,34 ****
--- 29,35 ----
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+                 longest = length + 1;
              }
  
              i++;

2020-12-30 10:31:26,871	[INFO]	118	SUCCESS	+13.0	
2020-12-30 10:31:26,871	[DEBUG]	
2020-12-30 10:31:27,856	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:31:28,858	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:31:29,831	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:31:33,044	[INFO]	122	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:31:34,061	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:31:37,227	[INFO]	124	SUCCESS	 22.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-30 10:31:38,210	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:31:39,217	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:31:40,199	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:31:41,522	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:31:42,548	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:31:45,778	[INFO]	130	SUCCESS	 24.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:31:46,748	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:31:47,726	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:31:48,747	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:31:49,729	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:31:52,951	[INFO]	135	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:31:52,952	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-30 10:31:52,953	[INFO]	136	SUCCESS	+13.0	
2020-12-30 10:31:52,953	[DEBUG]	
2020-12-30 10:31:53,921	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:31:54,921	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:31:55,909	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:31:56,896	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:32:00,086	[INFO]	141	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:32:03,294	[INFO]	142	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:32:06,366	[INFO]	143	SUCCESS	 29.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:32:07,343	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:32:08,299	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:32:11,565	[INFO]	146	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:32:12,473	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:32:13,444	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:32:14,426	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:32:15,395	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:32:18,612	[INFO]	151	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-30 10:32:19,539	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:32:20,533	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:32:21,455	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:32:22,437	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:32:25,667	[INFO]	156	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:32:25,668	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 24,29 ****
--- 24,35 ----
                  }
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {

2020-12-30 10:32:25,669	[INFO]	157	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:32:25,670	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 24,29 ****
--- 24,35 ----
                  }
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {

2020-12-30 10:32:26,599	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:32:26,603	[INFO]	159	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:32:26,604	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 24,29 ****
--- 24,35 ----
                  }
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {

2020-12-30 10:32:26,606	[INFO]	160	SUCCESS	+13.0	
2020-12-30 10:32:26,607	[DEBUG]	
2020-12-30 10:32:29,788	[INFO]	161	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-30 10:32:30,769	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:32:31,669	[INFO]	163	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:32:32,644	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:32:35,852	[INFO]	165	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:32:39,050	[INFO]	166	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:32:40,028	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:32:43,269	[INFO]	168	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:32:43,270	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             longest = length + 1;
+ 
              i++;
          }
          return longest;

2020-12-30 10:32:44,247	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:32:44,249	[INFO]	170	SUCCESS	+13.0	
2020-12-30 10:32:44,249	[DEBUG]	
2020-12-30 10:32:45,187	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:32:46,177	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:32:47,152	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:32:48,144	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:32:49,111	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:32:52,349	[INFO]	176	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:32:53,343	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:32:53,345	[INFO]	178	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:32:53,345	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 24,29 ****
--- 24,35 ----
                  }
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {

2020-12-30 10:32:53,346	[INFO]	179	SUCCESS	+13.0	
2020-12-30 10:32:53,346	[DEBUG]	
2020-12-30 10:32:54,334	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:32:55,328	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:32:56,295	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:32:57,278	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:32:58,274	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:33:01,485	[INFO]	185	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:33:02,451	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:33:03,349	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:33:04,392	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:33:05,362	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:33:06,364	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:33:09,649	[INFO]	191	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:33:10,628	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:33:11,603	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:33:12,587	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:33:12,589	[INFO]	195	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-30 10:33:12,589	[DEBUG]	
2020-12-30 10:33:13,552	[INFO]	196	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:33:13,553	[INFO]	197	SUCCESS	+13.0	
2020-12-30 10:33:13,553	[DEBUG]	
2020-12-30 10:33:16,649	[INFO]	198	SUCCESS	 29.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:33:19,854	[INFO]	199	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:33:20,832	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:33:21,823	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:33:22,824	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:33:23,854	[INFO]	203	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:33:24,840	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:33:25,809	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:33:29,001	[INFO]	206	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-30 10:33:29,980	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:33:33,194	[INFO]	208	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-30 10:33:34,160	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:33:37,393	[INFO]	210	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-30 10:33:37,394	[INFO]	211	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-30 10:33:38,350	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:33:39,368	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:33:40,365	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:33:41,280	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:33:42,277	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:33:45,521	[INFO]	217	SUCCESS	 28.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:33:46,526	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:33:47,485	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:33:48,454	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:33:49,447	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:33:50,411	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:33:51,446	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:33:52,425	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:33:53,472	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:33:56,747	[INFO]	226	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:33:56,748	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-30 10:33:56,749	[INFO]	227	SUCCESS	+13.0	
2020-12-30 10:33:56,749	[DEBUG]	
2020-12-30 10:33:57,700	[INFO]	228	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:33:58,675	[INFO]	229	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:33:59,655	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:34:00,655	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:34:01,644	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:34:01,645	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:34:02,636	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:34:03,620	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:34:06,714	[INFO]	236	SUCCESS	 29.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:34:07,723	[INFO]	237	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:34:08,703	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:34:09,700	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:34:10,668	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:34:10,669	[INFO]	241	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:34:10,669	[DEBUG]	
2020-12-30 10:34:10,670	[INFO]	242	SUCCESS	+13.0	
2020-12-30 10:34:10,670	[DEBUG]	
2020-12-30 10:34:11,669	[INFO]	243	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:34:12,650	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:34:15,833	[INFO]	245	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:34:16,812	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:34:17,810	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:34:18,753	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:34:19,695	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:34:19,697	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:34:20,686	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:34:21,674	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:34:25,175	[INFO]	253	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-30 10:34:26,135	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:34:27,121	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:34:30,346	[INFO]	256	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:34:33,530	[INFO]	257	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:34:33,531	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-30 10:34:33,531	[INFO]	258	SUCCESS	+13.0	
2020-12-30 10:34:33,532	[DEBUG]	
2020-12-30 10:34:34,520	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:34:35,537	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:34:38,802	[INFO]	261	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:34:39,791	[INFO]	262	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:34:40,824	[INFO]	263	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:34:40,825	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:34:44,072	[INFO]	265	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:34:45,042	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:34:46,008	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:34:47,022	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:34:48,038	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:34:49,026	[INFO]	270	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:34:50,006	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:34:53,254	[INFO]	272	SUCCESS	*10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:34:53,255	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:34:53,256	[INFO]	273	SUCCESS	 13.0	
2020-12-30 10:34:54,222	[INFO]	274	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:34:57,386	[INFO]	275	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:34:57,387	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-30 10:34:57,388	[INFO]	276	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:34:57,388	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:34:58,383	[INFO]	277	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:34:59,399	[INFO]	278	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:35:00,405	[INFO]	279	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:35:00,407	[INFO]	280	SUCCESS	 13.0	
2020-12-30 10:35:01,404	[INFO]	281	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:35:04,662	[INFO]	282	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:35:04,663	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,32 ****
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 22,35 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:35:04,664	[INFO]	283	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:35:04,664	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:35:04,665	[INFO]	284	SUCCESS	 13.0	
2020-12-30 10:35:05,634	[INFO]	285	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:35:08,819	[INFO]	286	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:35:09,793	[INFO]	287	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:35:13,024	[INFO]	288	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-30 10:35:13,025	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:35:16,219	[INFO]	289	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-30 10:35:16,220	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:35:17,163	[INFO]	290	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:35:18,142	[INFO]	291	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:35:21,385	[INFO]	292	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:35:21,386	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,32 ****
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 23,37 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j != longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:35:22,326	[INFO]	293	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:35:22,328	[INFO]	294	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:35:22,329	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,32 ****
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 23,37 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j != longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:35:23,312	[INFO]	295	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:35:24,341	[INFO]	296	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:35:27,569	[INFO]	297	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:35:27,571	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,32 ****
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 23,37 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:35:30,706	[INFO]	298	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-30 10:35:30,707	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:35:31,692	[INFO]	299	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:35:32,680	[INFO]	300	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:35:32,681	[INFO]	301	SUCCESS	 13.0	
2020-12-30 10:35:33,672	[INFO]	302	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:35:34,693	[INFO]	303	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:35:34,695	[INFO]	304	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:35:35,780	[INFO]	305	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:35:39,028	[INFO]	306	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:35:40,049	[INFO]	307	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:35:40,051	[INFO]	308	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:35:41,057	[INFO]	309	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:35:42,028	[INFO]	310	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:35:43,006	[INFO]	311	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:35:44,010	[INFO]	312	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:35:44,979	[INFO]	313	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:35:45,954	[INFO]	314	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:35:49,192	[INFO]	315	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:35:49,193	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-30 10:35:49,193	[INFO]	==== END ====
2020-12-30 10:35:49,193	[INFO]	Reason: target fitness reached
2020-12-30 10:35:49,194	[INFO]	
2020-12-30 10:35:49,194	[INFO]	========== EPOCH 10 ==========
2020-12-30 10:35:49,194	[INFO]	==== WARMUP ====
2020-12-30 10:35:52,354	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:35:52,354	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:35:55,577	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:35:55,577	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:35:58,793	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:35:58,794	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:36:01,989	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-30 10:36:01,990	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:36:01,990	[INFO]	==== START ====
2020-12-30 10:36:02,962	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:36:03,948	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:36:04,943	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:36:05,959	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:36:06,956	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:36:07,957	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:36:08,929	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:36:09,929	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:36:10,911	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:36:11,895	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:36:12,898	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:36:13,880	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:36:14,892	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:36:14,893	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:36:15,864	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:36:19,076	[INFO]	16	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:36:19,077	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,28 ****
--- 23,33 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  

2020-12-30 10:36:20,060	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:36:20,061	[INFO]	18	SUCCESS	+13.0	
2020-12-30 10:36:20,061	[DEBUG]	
2020-12-30 10:36:21,064	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:36:21,983	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:36:22,978	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:36:24,021	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:36:27,201	[INFO]	23	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:36:30,442	[INFO]	24	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:36:31,401	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:36:32,400	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:36:33,405	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:36:34,385	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:36:35,361	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:36:36,334	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:36:39,499	[INFO]	31	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:36:39,500	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,33 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 10:36:40,494	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:36:41,471	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:36:41,472	[INFO]	34	SUCCESS	+13.0	
2020-12-30 10:36:41,473	[DEBUG]	
2020-12-30 10:36:42,464	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:36:43,432	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:36:44,435	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:36:45,417	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:36:48,716	[INFO]	39	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:36:48,717	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 10:36:48,717	[INFO]	40	SUCCESS	+13.0	
2020-12-30 10:36:48,717	[DEBUG]	
2020-12-30 10:36:49,629	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:36:49,630	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:36:52,802	[INFO]	43	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:36:52,803	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 10:36:53,777	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:36:53,778	[INFO]	45	SUCCESS	+13.0	
2020-12-30 10:36:53,778	[DEBUG]	
2020-12-30 10:36:54,743	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:36:55,724	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:36:56,720	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:36:57,701	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:36:58,678	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:36:59,660	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:37:00,629	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:37:01,533	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:37:02,506	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:37:05,778	[INFO]	55	SUCCESS	 24.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:37:08,957	[INFO]	56	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:37:09,858	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:37:10,867	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:37:11,775	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:37:12,758	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:37:13,757	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:37:16,980	[INFO]	62	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:37:17,980	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:37:18,980	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:37:22,181	[INFO]	65	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:37:22,183	[INFO]	66	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:37:22,183	[DEBUG]	
2020-12-30 10:37:22,184	[INFO]	67	SUCCESS	+13.0	
2020-12-30 10:37:22,184	[DEBUG]	
2020-12-30 10:37:23,163	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:37:23,164	[INFO]	69	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:37:23,165	[DEBUG]	
2020-12-30 10:37:24,162	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:37:24,163	[INFO]	71	SUCCESS	+13.0	
2020-12-30 10:37:24,163	[DEBUG]	
2020-12-30 10:37:25,146	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:37:26,180	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:37:27,174	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:37:28,155	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:37:29,153	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:37:30,141	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:37:31,152	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:37:34,335	[INFO]	79	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:37:35,304	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:37:36,307	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:37:37,314	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:37:38,308	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:37:39,281	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:37:40,209	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:37:41,240	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:37:44,431	[INFO]	87	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:37:45,314	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:37:48,860	[INFO]	89	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:37:48,861	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,33 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 longest = length + 1;
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:37:48,862	[INFO]	90	SUCCESS	+13.0	
2020-12-30 10:37:48,862	[DEBUG]	
2020-12-30 10:37:48,863	[INFO]	91	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-30 10:37:48,863	[DEBUG]	
2020-12-30 10:37:49,838	[INFO]	92	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:37:49,839	[INFO]	93	SUCCESS	+13.0	
2020-12-30 10:37:49,839	[DEBUG]	
2020-12-30 10:37:50,817	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:37:51,895	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:37:53,082	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:37:54,081	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:37:55,079	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:37:58,345	[INFO]	99	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-30 10:37:59,535	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:38:02,723	[INFO]	101	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:38:03,700	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:38:03,702	[INFO]	103	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:38:03,702	[DEBUG]	
2020-12-30 10:38:03,703	[INFO]	104	SUCCESS	+13.0	
2020-12-30 10:38:03,703	[DEBUG]	
2020-12-30 10:38:04,679	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:38:05,676	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:38:08,867	[INFO]	107	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:38:12,047	[INFO]	108	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:38:13,014	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:38:14,020	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:38:17,259	[INFO]	111	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-30 10:38:18,236	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:38:18,238	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:38:19,238	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:38:20,216	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:38:23,428	[INFO]	116	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:38:23,429	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,38 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-30 10:38:23,430	[INFO]	117	SUCCESS	+13.0	
2020-12-30 10:38:23,431	[DEBUG]	
2020-12-30 10:38:24,455	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:38:27,704	[INFO]	119	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:38:27,705	[INFO]	120	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-30 10:38:27,706	[DEBUG]	
2020-12-30 10:38:27,706	[INFO]	121	SUCCESS	+13.0	
2020-12-30 10:38:27,707	[DEBUG]	
2020-12-30 10:38:28,678	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:38:28,680	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:38:31,955	[INFO]	124	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:38:32,938	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:38:33,918	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:38:34,901	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:38:38,089	[INFO]	128	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:38:38,090	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-30 10:38:38,091	[INFO]	==== END ====
2020-12-30 10:38:38,091	[INFO]	Reason: target fitness reached
2020-12-30 10:38:38,091	[INFO]	
2020-12-30 10:38:38,092	[INFO]	========== EPOCH 11 ==========
2020-12-30 10:38:38,092	[INFO]	==== WARMUP ====
2020-12-30 10:38:41,306	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:38:41,306	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:38:44,496	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:38:44,496	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:38:47,866	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:38:47,866	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:38:51,257	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-30 10:38:51,257	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:38:51,258	[INFO]	==== START ====
2020-12-30 10:38:52,294	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:38:53,321	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:38:56,655	[INFO]	3	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:38:56,656	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 29,34 ****
--- 29,35 ----
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+                 longest = length + 1;
              }
  
              i++;

2020-12-30 10:38:56,657	[INFO]	4	SUCCESS	+13.0	
2020-12-30 10:38:56,657	[DEBUG]	
2020-12-30 10:38:57,664	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:38:58,577	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:38:59,478	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:39:02,718	[INFO]	8	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:39:02,719	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,41 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-30 10:39:02,720	[INFO]	9	SUCCESS	+13.0	
2020-12-30 10:39:02,720	[DEBUG]	
2020-12-30 10:39:03,662	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:39:04,614	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:39:05,605	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:39:06,588	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:39:07,551	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:39:08,561	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:39:09,552	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:39:10,434	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:39:11,414	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:39:12,405	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:39:15,623	[INFO]	20	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:39:15,624	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             longest = length + 1;
+ 
              i++;
          }
          return longest;

2020-12-30 10:39:15,625	[INFO]	21	SUCCESS	+13.0	
2020-12-30 10:39:15,625	[DEBUG]	
2020-12-30 10:39:16,576	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:39:17,549	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:39:20,781	[INFO]	24	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:39:21,764	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:39:22,743	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:39:23,737	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:39:26,985	[INFO]	28	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:39:27,961	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:39:27,962	[INFO]	30	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:39:27,962	[DEBUG]	
2020-12-30 10:39:27,963	[INFO]	31	SUCCESS	+13.0	
2020-12-30 10:39:27,963	[DEBUG]	
2020-12-30 10:39:28,926	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:39:29,919	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:39:30,915	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:39:31,924	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:39:31,927	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:39:35,158	[INFO]	37	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:39:36,138	[INFO]	38	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:39:39,339	[INFO]	39	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-30 10:39:39,339	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:39:40,314	[INFO]	40	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:39:41,335	[INFO]	41	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:39:41,336	[INFO]	42	SUCCESS	+13.0	
2020-12-30 10:39:41,336	[DEBUG]	
2020-12-30 10:39:42,329	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:39:43,303	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:39:44,286	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:39:47,527	[INFO]	46	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:39:48,489	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:39:51,710	[INFO]	48	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:39:51,711	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:39:51,711	[INFO]	49	SUCCESS	+13.0	
2020-12-30 10:39:51,712	[DEBUG]	
2020-12-30 10:39:51,713	[INFO]	50	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-30 10:39:51,713	[DEBUG]	
2020-12-30 10:39:52,662	[INFO]	51	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:39:52,663	[INFO]	52	SUCCESS	+13.0	
2020-12-30 10:39:52,663	[DEBUG]	
2020-12-30 10:39:53,658	[INFO]	53	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:39:53,659	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:39:54,638	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:39:55,638	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:39:56,607	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:39:57,594	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:40:00,829	[INFO]	59	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:40:04,082	[INFO]	60	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:40:04,082	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,42 ----
                  longest = length + 1;
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              i++;
          }
          return longest;

2020-12-30 10:40:04,083	[INFO]	61	SUCCESS	+13.0	
2020-12-30 10:40:04,084	[DEBUG]	
2020-12-30 10:40:04,977	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:40:05,970	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:40:05,971	[INFO]	64	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:40:06,963	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:40:10,157	[INFO]	66	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-30 10:40:13,318	[INFO]	67	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:40:14,279	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:40:15,266	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:40:16,253	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:40:19,438	[INFO]	71	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:40:22,630	[INFO]	72	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:40:22,631	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:40:22,632	[INFO]	73	SUCCESS	 13.0	
2020-12-30 10:40:23,607	[INFO]	74	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:40:24,610	[INFO]	75	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:40:27,775	[INFO]	76	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:40:28,751	[INFO]	77	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:40:29,728	[INFO]	78	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:40:32,965	[INFO]	79	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:40:33,959	[INFO]	80	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:40:34,995	[INFO]	81	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:40:39,179	[INFO]	82	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:40:40,186	[INFO]	83	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:40:43,404	[INFO]	84	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-30 10:40:44,429	[INFO]	85	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:40:45,405	[INFO]	86	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:40:48,616	[INFO]	87	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-30 10:40:49,579	[INFO]	88	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:40:50,486	[INFO]	89	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:40:53,694	[INFO]	90	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:40:53,695	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:40:54,655	[INFO]	91	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:40:54,656	[INFO]	92	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:40:54,656	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:40:54,657	[INFO]	93	SUCCESS	 13.0	
2020-12-30 10:40:55,635	[INFO]	94	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:40:56,630	[INFO]	95	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:40:57,630	[INFO]	96	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:41:00,795	[INFO]	97	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-30 10:41:01,755	[INFO]	98	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:41:04,948	[INFO]	99	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:41:05,961	[INFO]	100	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:41:09,214	[INFO]	101	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-30 10:41:09,215	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:41:12,311	[INFO]	102	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-30 10:41:13,292	[INFO]	103	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:41:16,456	[INFO]	104	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:41:16,457	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-30 10:41:16,457	[INFO]	==== END ====
2020-12-30 10:41:16,457	[INFO]	Reason: target fitness reached
2020-12-30 10:41:16,458	[INFO]	
2020-12-30 10:41:16,458	[INFO]	========== EPOCH 12 ==========
2020-12-30 10:41:16,459	[INFO]	==== WARMUP ====
2020-12-30 10:41:19,633	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:41:19,634	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:41:22,850	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:41:22,850	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:41:26,063	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:41:26,064	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:41:29,261	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-30 10:41:29,261	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:41:29,261	[INFO]	==== START ====
2020-12-30 10:41:30,221	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:41:31,205	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:41:32,204	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:41:33,201	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:41:34,189	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:41:35,540	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:41:36,541	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:41:36,542	[INFO]	8	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:41:36,542	[DEBUG]	
2020-12-30 10:41:37,519	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:41:40,736	[INFO]	10	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:41:43,932	[INFO]	11	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:41:43,934	[INFO]	12	SUCCESS	+13.0	
2020-12-30 10:41:43,934	[DEBUG]	
2020-12-30 10:41:44,873	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:41:45,861	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:41:49,086	[INFO]	15	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:41:49,087	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-30 10:41:50,063	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:41:51,046	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:41:52,071	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:41:52,074	[INFO]	19	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:41:52,075	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-30 10:41:52,076	[INFO]	20	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:41:52,076	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-30 10:41:52,077	[INFO]	21	SUCCESS	+13.0	
2020-12-30 10:41:52,077	[DEBUG]	
2020-12-30 10:41:53,031	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:41:53,992	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:41:54,965	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:41:58,211	[INFO]	25	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:41:58,212	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-30 10:41:58,213	[INFO]	26	SUCCESS	+13.0	
2020-12-30 10:41:58,213	[DEBUG]	
2020-12-30 10:42:01,385	[INFO]	27	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-30 10:42:02,380	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:42:03,379	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:42:04,346	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:42:05,353	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:42:06,331	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:42:07,302	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:42:08,274	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:42:09,264	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:42:10,505	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:42:11,550	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:42:12,743	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:42:15,953	[INFO]	39	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:42:15,954	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 10:42:15,954	[INFO]	40	SUCCESS	+13.0	
2020-12-30 10:42:15,954	[DEBUG]	
2020-12-30 10:42:19,131	[INFO]	41	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:42:20,101	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:42:21,086	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:42:22,094	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:42:23,061	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:42:24,081	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:42:24,083	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:42:25,093	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:42:26,078	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:42:27,054	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:42:28,043	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:42:31,236	[INFO]	52	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:42:32,189	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:42:33,180	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:42:36,338	[INFO]	55	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:42:37,312	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:42:38,286	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:42:39,258	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:42:40,279	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:42:41,286	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:42:44,473	[INFO]	61	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-30 10:42:45,435	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:42:46,382	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:42:49,549	[INFO]	64	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:42:49,550	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;

2020-12-30 10:42:49,550	[INFO]	65	SUCCESS	+13.0	
2020-12-30 10:42:49,551	[DEBUG]	
2020-12-30 10:42:50,521	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:42:51,489	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:42:52,419	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:42:53,385	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:42:54,414	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:42:57,639	[INFO]	71	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:42:57,640	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             ends.put(length+1, i);
+ 
              i++;
          }
          return longest;

2020-12-30 10:42:58,502	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:43:01,507	[INFO]	73	SUCCESS	 29.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:43:02,475	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:43:03,486	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:43:04,493	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:43:04,494	[INFO]	77	SUCCESS	+13.0	
2020-12-30 10:43:04,494	[DEBUG]	
2020-12-30 10:43:07,660	[INFO]	78	SUCCESS	 24.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:43:08,622	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:43:09,597	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:43:10,578	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:43:11,553	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:43:12,534	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:43:12,535	[INFO]	84	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:43:12,535	[DEBUG]	
2020-12-30 10:43:13,544	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:43:14,552	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:43:14,554	[INFO]	87	SUCCESS	+13.0	
2020-12-30 10:43:14,554	[DEBUG]	
2020-12-30 10:43:17,812	[INFO]	88	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:43:17,813	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,38 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-30 10:43:21,001	[INFO]	89	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:43:24,227	[INFO]	90	SUCCESS	 24.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-30 10:43:25,201	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:43:26,233	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:43:29,418	[INFO]	93	SUCCESS	 27.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:43:29,419	[INFO]	94	SUCCESS	+13.0	
2020-12-30 10:43:29,420	[DEBUG]	
2020-12-30 10:43:30,378	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:43:31,363	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:43:34,589	[INFO]	97	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-30 10:43:35,524	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:43:36,489	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:43:37,480	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:43:40,712	[INFO]	101	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:43:41,677	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:43:42,663	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:43:43,660	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:43:44,650	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:43:45,627	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:43:46,638	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:43:47,597	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:43:48,567	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:43:51,805	[INFO]	110	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:43:51,806	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,41 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-30 10:43:51,806	[INFO]	111	SUCCESS	+13.0	
2020-12-30 10:43:51,807	[DEBUG]	
2020-12-30 10:43:52,759	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:43:55,934	[INFO]	113	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:43:55,935	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,33 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 10:43:55,936	[INFO]	114	SUCCESS	+13.0	
2020-12-30 10:43:55,936	[DEBUG]	
2020-12-30 10:43:56,876	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:43:56,878	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:44:00,113	[INFO]	117	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:44:03,319	[INFO]	118	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-30 10:44:04,286	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:44:05,267	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:44:05,268	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:44:06,250	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:44:07,262	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:44:08,217	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:44:09,198	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:44:10,184	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:44:13,391	[INFO]	127	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:44:13,391	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:44:13,392	[INFO]	128	SUCCESS	 13.0	
2020-12-30 10:44:14,387	[INFO]	129	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:44:15,355	[INFO]	130	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:44:15,356	[INFO]	131	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:44:16,369	[INFO]	132	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:44:17,369	[INFO]	133	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:44:20,550	[INFO]	134	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:44:23,810	[INFO]	135	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:44:23,811	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,32 ****
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 23,37 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:44:24,802	[INFO]	136	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:44:28,093	[INFO]	137	SUCCESS	 18.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:44:31,302	[INFO]	138	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:44:31,304	[INFO]	139	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:44:31,305	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:44:32,279	[INFO]	140	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:44:33,257	[INFO]	141	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:44:33,258	[INFO]	142	SUCCESS	 13.0	
2020-12-30 10:44:33,259	[INFO]	143	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-30 10:44:33,259	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:44:34,245	[INFO]	144	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:44:35,215	[INFO]	145	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:44:36,219	[INFO]	146	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:44:37,219	[INFO]	147	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:44:37,222	[INFO]	148	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-30 10:44:40,418	[INFO]	149	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:44:41,406	[INFO]	150	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:44:42,426	[INFO]	151	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:44:42,428	[INFO]	152	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:44:42,429	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:44:45,621	[INFO]	153	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:44:48,789	[INFO]	154	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:44:48,790	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:44:49,756	[INFO]	155	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:44:52,920	[INFO]	156	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:44:56,139	[INFO]	157	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:44:56,140	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,34 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:44:57,154	[INFO]	158	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:45:00,345	[INFO]	159	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:45:01,336	[INFO]	160	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:45:04,577	[INFO]	161	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:45:04,578	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,33 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:45:07,813	[INFO]	162	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:45:11,032	[INFO]	163	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-30 10:45:12,012	[INFO]	164	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:45:12,998	[INFO]	165	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:45:16,137	[INFO]	166	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:45:19,326	[INFO]	167	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:45:19,328	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,32 ****
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 23,38 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:45:22,549	[INFO]	168	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:45:25,815	[INFO]	169	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:45:26,814	[INFO]	170	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:45:27,857	[INFO]	171	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:45:31,393	[INFO]	172	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:45:31,394	[INFO]	173	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:45:31,395	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,33 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:45:31,396	[INFO]	174	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:45:32,388	[INFO]	175	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:45:33,387	[INFO]	176	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:45:34,364	[INFO]	177	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:45:37,849	[INFO]	178	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:45:38,829	[INFO]	179	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:45:39,719	[INFO]	180	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:45:39,721	[INFO]	181	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:45:39,721	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:45:42,932	[INFO]	182	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:45:43,900	[INFO]	183	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:45:44,905	[INFO]	184	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:45:44,906	[INFO]	185	SUCCESS	 13.0	
2020-12-30 10:45:45,913	[INFO]	186	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:45:46,893	[INFO]	187	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:45:47,881	[INFO]	188	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:45:48,877	[INFO]	189	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:45:49,878	[INFO]	190	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:45:53,110	[INFO]	191	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:45:54,120	[INFO]	192	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:45:55,110	[INFO]	193	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:45:56,080	[INFO]	194	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:45:57,109	[INFO]	195	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:45:58,128	[INFO]	196	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:46:01,360	[INFO]	197	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:46:04,510	[INFO]	198	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:46:05,483	[INFO]	199	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:46:06,490	[INFO]	200	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:46:07,486	[INFO]	201	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:46:08,471	[INFO]	202	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:46:09,434	[INFO]	203	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:46:12,655	[INFO]	204	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-30 10:46:13,606	[INFO]	205	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:46:14,569	[INFO]	206	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:46:14,570	[INFO]	207	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-30 10:46:15,593	[INFO]	208	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:46:16,480	[INFO]	209	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:46:17,466	[INFO]	210	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:46:20,670	[INFO]	211	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-30 10:46:20,671	[INFO]	212	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:46:20,672	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,33 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:46:21,648	[INFO]	213	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:46:22,616	[INFO]	214	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:46:22,618	[INFO]	215	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:46:22,618	[INFO]	216	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:46:22,619	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:46:22,619	[INFO]	217	SUCCESS	 13.0	
2020-12-30 10:46:23,629	[INFO]	218	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:46:24,654	[INFO]	219	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:46:25,643	[INFO]	220	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:46:28,856	[INFO]	221	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:46:32,090	[INFO]	222	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:46:32,090	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 24,32 ****
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 24,38 ----
                  }
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:46:35,261	[INFO]	223	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:46:36,234	[INFO]	224	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:46:37,209	[INFO]	225	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:46:38,202	[INFO]	226	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:46:38,203	[INFO]	227	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:46:38,203	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:46:38,204	[INFO]	228	SUCCESS	 13.0	
2020-12-30 10:46:39,192	[INFO]	229	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:46:40,171	[INFO]	230	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:46:43,386	[INFO]	231	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:46:43,387	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,34 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                 }
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:46:44,368	[INFO]	232	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:46:47,579	[INFO]	233	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:46:47,580	[INFO]	234	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:46:47,580	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:46:47,581	[INFO]	235	SUCCESS	 13.0	
2020-12-30 10:46:47,582	[INFO]	236	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:46:48,556	[INFO]	237	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:46:49,548	[INFO]	238	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:46:50,515	[INFO]	239	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:46:51,490	[INFO]	240	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:46:52,359	[INFO]	241	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:46:53,334	[INFO]	242	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:46:56,592	[INFO]	243	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:46:57,585	[INFO]	244	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:46:58,574	[INFO]	245	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:46:59,538	[INFO]	246	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:47:00,570	[INFO]	247	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:47:01,556	[INFO]	248	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:47:02,524	[INFO]	249	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:47:03,502	[INFO]	250	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:47:06,657	[INFO]	251	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:47:06,658	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:47:07,644	[INFO]	252	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:47:07,645	[INFO]	253	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:47:07,646	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:47:10,837	[INFO]	254	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:47:10,839	[INFO]	255	SUCCESS	 13.0	
2020-12-30 10:47:11,857	[INFO]	256	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:47:14,923	[INFO]	257	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:47:15,884	[INFO]	258	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:47:16,871	[INFO]	259	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:47:16,873	[INFO]	260	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:47:17,874	[INFO]	261	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:47:21,100	[INFO]	262	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:47:21,102	[INFO]	263	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:47:21,103	[INFO]	264	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:47:22,081	[INFO]	265	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:47:23,077	[INFO]	266	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:47:26,338	[INFO]	267	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:47:27,300	[INFO]	268	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:47:28,317	[INFO]	269	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:47:29,311	[INFO]	270	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:47:29,313	[INFO]	271	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:47:29,313	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:47:29,314	[INFO]	272	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:47:30,282	[INFO]	273	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:47:31,284	[INFO]	274	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:47:32,258	[INFO]	275	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:47:33,241	[INFO]	276	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:47:33,242	[INFO]	277	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:47:33,242	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:47:33,243	[INFO]	278	SUCCESS	 13.0	
2020-12-30 10:47:36,444	[INFO]	279	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:47:37,329	[INFO]	280	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:47:38,320	[INFO]	281	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:47:39,295	[INFO]	282	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:47:42,556	[INFO]	283	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:47:43,528	[INFO]	284	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:47:44,553	[INFO]	285	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:47:45,521	[INFO]	286	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:47:48,709	[INFO]	287	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:47:49,690	[INFO]	288	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:47:50,692	[INFO]	289	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:47:51,670	[INFO]	290	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:47:52,636	[INFO]	291	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:47:53,621	[INFO]	292	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:47:54,627	[INFO]	293	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:47:55,659	[INFO]	294	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:47:56,646	[INFO]	295	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:47:57,549	[INFO]	296	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:47:58,555	[INFO]	297	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:47:58,557	[INFO]	298	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:48:01,800	[INFO]	299	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:48:01,801	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-30 10:48:02,739	[INFO]	300	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:48:03,723	[INFO]	301	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:48:03,725	[INFO]	302	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:48:03,725	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:48:06,958	[INFO]	303	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-30 10:48:10,162	[INFO]	304	SUCCESS	 21.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:48:10,163	[INFO]	305	SUCCESS	 13.0	
2020-12-30 10:48:11,109	[INFO]	306	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:48:11,111	[INFO]	307	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:48:11,112	[INFO]	308	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:48:14,314	[INFO]	309	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:48:15,271	[INFO]	310	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:48:16,283	[INFO]	311	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:48:19,506	[INFO]	312	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:48:19,507	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,35 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:48:20,475	[INFO]	313	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:48:23,667	[INFO]	314	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:48:23,669	[INFO]	315	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:48:23,669	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:48:24,641	[INFO]	316	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:48:25,577	[INFO]	317	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:48:25,578	[INFO]	318	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-30 10:48:25,579	[INFO]	319	SUCCESS	 13.0	
2020-12-30 10:48:28,775	[INFO]	320	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:48:29,730	[INFO]	321	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:48:33,255	[INFO]	322	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-30 10:48:34,262	[INFO]	323	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:48:35,213	[INFO]	324	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:48:36,206	[INFO]	325	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:48:37,225	[INFO]	326	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:48:40,501	[INFO]	327	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:48:41,488	[INFO]	328	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:48:42,478	[INFO]	329	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:48:43,535	[INFO]	330	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:48:44,498	[INFO]	331	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:48:45,483	[INFO]	332	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:48:46,469	[INFO]	333	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:48:47,430	[INFO]	334	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:48:48,440	[INFO]	335	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:48:49,423	[INFO]	336	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:48:50,404	[INFO]	337	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:48:51,345	[INFO]	338	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:48:52,314	[INFO]	339	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:48:53,316	[INFO]	340	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:48:56,486	[INFO]	341	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-30 10:48:56,486	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:48:59,729	[INFO]	342	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-30 10:49:02,915	[INFO]	343	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:49:02,916	[INFO]	344	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:49:02,917	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:49:02,917	[INFO]	345	SUCCESS	 13.0	
2020-12-30 10:49:06,097	[INFO]	346	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:49:06,098	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-30 10:49:06,098	[INFO]	==== END ====
2020-12-30 10:49:06,098	[INFO]	Reason: target fitness reached
2020-12-30 10:49:06,099	[INFO]	
2020-12-30 10:49:06,099	[INFO]	========== EPOCH 13 ==========
2020-12-30 10:49:06,100	[INFO]	==== WARMUP ====
2020-12-30 10:49:09,272	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:49:09,272	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:49:12,428	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:49:12,428	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:49:15,646	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:49:15,646	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:49:18,834	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-30 10:49:18,834	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:49:18,834	[INFO]	==== START ====
2020-12-30 10:49:22,042	[INFO]	1	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:49:23,001	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:49:24,036	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:49:27,245	[INFO]	4	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:49:28,258	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:49:29,236	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:49:32,431	[INFO]	7	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:49:33,400	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:49:34,377	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:49:35,357	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:49:36,234	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:49:37,197	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:49:40,473	[INFO]	13	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:49:41,485	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:49:42,769	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:49:43,772	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:49:44,751	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:49:47,942	[INFO]	18	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:49:48,958	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:49:50,143	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:49:51,160	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:49:52,152	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:49:53,175	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:49:53,178	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:49:56,436	[INFO]	25	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:49:56,437	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;

2020-12-30 10:49:59,614	[INFO]	26	SUCCESS	 24.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-30 10:50:00,599	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:50:00,600	[INFO]	28	SUCCESS	+13.0	
2020-12-30 10:50:00,601	[DEBUG]	
2020-12-30 10:50:03,842	[INFO]	29	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:50:07,037	[INFO]	30	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:50:07,039	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:50:07,040	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:50:08,016	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:50:08,988	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:50:09,993	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:50:10,976	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:50:11,983	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:50:12,956	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:50:13,927	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:50:14,917	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:50:15,905	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:50:15,907	[INFO]	42	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:50:15,907	[DEBUG]	
2020-12-30 10:50:15,907	[INFO]	43	SUCCESS	+13.0	
2020-12-30 10:50:15,908	[DEBUG]	
2020-12-30 10:50:19,269	[INFO]	44	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:50:20,189	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:50:23,509	[INFO]	46	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:50:24,464	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:50:25,452	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:50:26,430	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:50:29,637	[INFO]	50	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-30 10:50:30,556	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:50:31,520	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:50:32,516	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:50:35,783	[INFO]	54	SUCCESS	 29.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:50:37,091	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:50:38,427	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:50:39,598	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:50:40,639	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:50:41,940	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:50:42,985	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:50:46,319	[INFO]	61	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:50:47,279	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:50:48,246	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:50:49,235	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:50:50,223	[INFO]	65	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:50:50,224	[INFO]	66	SUCCESS	 29.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:50:51,203	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:50:52,176	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:50:53,138	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:50:54,090	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:50:55,087	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:50:56,014	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:50:56,988	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:50:57,995	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:50:59,000	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:50:59,883	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:51:00,877	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:51:01,879	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:51:03,113	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:51:07,134	[INFO]	80	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:51:08,367	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:51:09,371	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:51:10,368	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:51:13,599	[INFO]	84	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-30 10:51:14,577	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:51:15,579	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:51:18,865	[INFO]	87	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:51:19,834	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:51:20,755	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:51:21,739	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:51:21,741	[INFO]	91	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-30 10:51:21,742	[DEBUG]	
2020-12-30 10:51:21,742	[INFO]	92	SUCCESS	+13.0	
2020-12-30 10:51:21,743	[DEBUG]	
2020-12-30 10:51:21,744	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:51:22,754	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:51:23,752	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:51:24,728	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:51:25,733	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:51:26,699	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:51:27,674	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:51:28,652	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:51:29,619	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:51:29,621	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:51:32,795	[INFO]	103	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:51:33,832	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:51:34,824	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:51:34,827	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:51:35,825	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:51:36,802	[INFO]	108	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:51:36,804	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:51:36,805	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:51:40,005	[INFO]	111	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:51:43,270	[INFO]	112	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:51:43,271	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,41 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-30 10:51:44,224	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:51:45,228	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:51:45,229	[INFO]	115	SUCCESS	+13.0	
2020-12-30 10:51:45,229	[DEBUG]	
2020-12-30 10:51:48,302	[INFO]	116	SUCCESS	 29.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:51:49,271	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:51:50,252	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:51:53,449	[INFO]	119	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-30 10:51:56,601	[INFO]	120	SUCCESS	 22.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:51:56,602	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:51:59,822	[INFO]	122	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:52:00,798	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:52:01,777	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:52:04,948	[INFO]	125	SUCCESS	 24.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:52:08,141	[INFO]	126	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:52:11,276	[INFO]	127	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:52:11,277	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-30 10:52:12,273	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:52:13,300	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:52:14,296	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:52:14,298	[INFO]	131	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:52:14,298	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-30 10:52:15,292	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:52:16,269	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:52:17,193	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:52:17,194	[INFO]	135	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:52:17,195	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-30 10:52:17,195	[INFO]	136	SUCCESS	+13.0	
2020-12-30 10:52:17,196	[DEBUG]	
2020-12-30 10:52:18,190	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:52:19,180	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:52:20,166	[INFO]	139	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:52:23,456	[INFO]	140	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:52:23,457	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 10:52:23,459	[INFO]	141	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:52:23,459	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 10:52:23,460	[INFO]	142	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:52:23,461	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 10:52:24,442	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:52:24,444	[INFO]	144	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:52:24,444	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 10:52:24,445	[INFO]	145	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:52:24,446	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 10:52:27,663	[INFO]	146	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:52:27,664	[INFO]	147	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:52:27,665	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 10:52:27,666	[INFO]	148	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:52:27,666	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 10:52:28,639	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:52:29,631	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:52:29,633	[INFO]	151	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-30 10:52:29,633	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 10:52:30,617	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:52:33,849	[INFO]	153	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-30 10:52:33,849	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val != arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:52:33,850	[INFO]	154	SUCCESS	+13.0	
2020-12-30 10:52:33,850	[DEBUG]	
2020-12-30 10:52:34,821	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:52:35,833	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:52:36,806	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:52:36,808	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:52:37,788	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:52:38,815	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:52:38,818	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:52:42,036	[INFO]	162	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:52:43,018	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:52:44,023	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:52:44,903	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:52:45,868	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:52:46,840	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:52:47,838	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:52:48,805	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:52:49,743	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:52:50,735	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:52:51,716	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:52:52,995	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:52:53,991	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:52:54,985	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:52:55,986	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:52:56,892	[INFO]	177	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:53:00,101	[INFO]	178	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:53:01,053	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:53:02,011	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:53:02,937	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:53:03,948	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:53:04,936	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:53:08,133	[INFO]	184	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-30 10:53:08,134	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-30 10:53:09,126	[INFO]	185	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:53:09,127	[INFO]	186	SUCCESS	+13.0	
2020-12-30 10:53:09,127	[DEBUG]	
2020-12-30 10:53:10,071	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:53:13,748	[INFO]	188	SUCCESS	*10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-30 10:53:13,748	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:53:13,749	[INFO]	189	SUCCESS	 13.0	
2020-12-30 10:53:14,655	[INFO]	190	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:53:15,623	[INFO]	191	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:53:16,602	[INFO]	192	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:53:17,583	[INFO]	193	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:53:20,804	[INFO]	194	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:53:21,772	[INFO]	195	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:53:22,757	[INFO]	196	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:53:23,765	[INFO]	197	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:53:24,761	[INFO]	198	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:53:24,763	[INFO]	199	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:53:25,761	[INFO]	200	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:53:26,867	[INFO]	201	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:53:27,833	[INFO]	202	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:53:28,846	[INFO]	203	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:53:29,851	[INFO]	204	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:53:30,839	[INFO]	205	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:53:34,213	[INFO]	206	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:53:35,311	[INFO]	207	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:53:36,372	[INFO]	208	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:53:39,801	[INFO]	209	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:53:44,138	[INFO]	210	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:53:44,139	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-30 10:53:45,487	[INFO]	211	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:53:49,383	[INFO]	212	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:53:52,547	[INFO]	213	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-30 10:53:52,548	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:53:52,549	[INFO]	214	SUCCESS	 13.0	
2020-12-30 10:53:52,550	[INFO]	215	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-30 10:53:52,550	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:53:52,551	[INFO]	216	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-30 10:53:52,551	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:53:52,552	[INFO]	217	SUCCESS	 13.0	
2020-12-30 10:53:53,542	[INFO]	218	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:53:54,529	[INFO]	219	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:53:55,496	[INFO]	220	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:53:56,608	[INFO]	221	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:53:57,621	[INFO]	222	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:53:58,594	[INFO]	223	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:54:01,914	[INFO]	224	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:54:02,865	[INFO]	225	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:54:03,867	[INFO]	226	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:54:03,870	[INFO]	227	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:54:03,871	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:54:04,858	[INFO]	228	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:54:08,207	[INFO]	229	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:54:09,203	[INFO]	230	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:54:09,205	[INFO]	231	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:54:09,207	[INFO]	232	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-30 10:54:09,208	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:54:09,210	[INFO]	233	SUCCESS	 13.0	
2020-12-30 10:54:10,197	[INFO]	234	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:54:11,175	[INFO]	235	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:54:12,166	[INFO]	236	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:54:15,401	[INFO]	237	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:54:16,372	[INFO]	238	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:54:17,334	[INFO]	239	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:54:18,424	[INFO]	240	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:54:19,399	[INFO]	241	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:54:22,629	[INFO]	242	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:54:22,630	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,40 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              i++;

2020-12-30 10:54:25,873	[INFO]	243	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:54:26,857	[INFO]	244	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:54:26,858	[INFO]	245	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-30 10:54:26,859	[INFO]	246	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-30 10:54:26,860	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:54:27,851	[INFO]	247	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:54:27,852	[INFO]	248	SUCCESS	 13.0	
2020-12-30 10:54:28,876	[INFO]	249	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:54:29,873	[INFO]	250	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:54:33,061	[INFO]	251	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:54:33,062	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-30 10:54:33,063	[INFO]	252	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-30 10:54:33,064	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:54:34,032	[INFO]	253	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:54:35,047	[INFO]	254	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:54:36,032	[INFO]	255	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:54:37,023	[INFO]	256	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:54:37,024	[INFO]	257	SUCCESS	 13.0	
2020-12-30 10:54:40,216	[INFO]	258	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:54:43,433	[INFO]	259	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:54:46,616	[INFO]	260	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 10:54:46,616	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:54:47,593	[INFO]	261	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:54:47,594	[INFO]	262	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-30 10:54:47,594	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:54:48,567	[INFO]	263	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:54:49,574	[INFO]	264	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:54:49,575	[INFO]	265	SUCCESS	 13.0	
2020-12-30 10:54:49,576	[INFO]	266	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:54:49,577	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:54:50,575	[INFO]	267	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:54:51,530	[INFO]	268	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:54:51,532	[INFO]	269	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-30 10:54:51,532	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:54:51,533	[INFO]	270	SUCCESS	 13.0	
2020-12-30 10:54:52,521	[INFO]	271	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:54:53,508	[INFO]	272	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:54:54,476	[INFO]	273	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:54:57,681	[INFO]	274	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-30 10:54:58,676	[INFO]	275	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:54:59,675	[INFO]	276	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:54:59,677	[INFO]	277	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:55:00,670	[INFO]	278	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:55:01,686	[INFO]	279	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:55:02,693	[INFO]	280	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:55:02,695	[INFO]	281	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-30 10:55:02,695	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:55:03,661	[INFO]	282	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:55:04,636	[INFO]	283	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:55:05,607	[INFO]	284	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:55:06,569	[INFO]	285	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:55:06,570	[INFO]	286	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-30 10:55:07,562	[INFO]	287	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:55:07,564	[INFO]	288	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-30 10:55:07,564	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:55:08,540	[INFO]	289	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:55:11,741	[INFO]	290	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:55:11,742	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:55:11,744	[INFO]	291	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:55:11,744	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:55:12,733	[INFO]	292	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:55:12,734	[INFO]	293	SUCCESS	 13.0	
2020-12-30 10:55:16,008	[INFO]	294	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:55:16,009	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-30 10:55:16,961	[INFO]	295	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:55:20,179	[INFO]	296	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:55:21,226	[INFO]	297	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:55:21,228	[INFO]	298	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:55:21,229	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-30 10:55:21,229	[INFO]	299	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:55:21,230	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:55:24,439	[INFO]	300	SUCCESS	 17.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:55:25,415	[INFO]	301	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:55:25,416	[INFO]	302	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:55:25,417	[INFO]	303	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:55:25,417	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:55:26,373	[INFO]	304	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:55:26,374	[INFO]	305	SUCCESS	 13.0	
2020-12-30 10:55:29,656	[INFO]	306	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:55:32,761	[INFO]	307	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:55:33,728	[INFO]	308	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:55:34,693	[INFO]	309	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:55:35,853	[INFO]	310	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:55:36,847	[INFO]	311	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:55:37,864	[INFO]	312	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:55:37,866	[INFO]	313	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:55:38,862	[INFO]	314	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:55:39,865	[INFO]	315	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:55:40,914	[INFO]	316	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:55:44,171	[INFO]	317	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:55:45,127	[INFO]	318	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:55:46,124	[INFO]	319	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:55:47,113	[INFO]	320	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:55:48,100	[INFO]	321	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:55:49,067	[INFO]	322	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:55:49,069	[INFO]	323	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:55:50,064	[INFO]	324	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:55:51,066	[INFO]	325	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:55:52,045	[INFO]	326	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:55:55,246	[INFO]	327	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:55:55,246	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:55:58,479	[INFO]	328	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 10:55:58,481	[INFO]	329	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:55:59,437	[INFO]	330	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:56:02,678	[INFO]	331	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:56:05,854	[INFO]	332	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:56:05,855	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,44 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              i++;

2020-12-30 10:56:06,849	[INFO]	333	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:56:10,073	[INFO]	334	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:56:10,074	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,40 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              i++;

2020-12-30 10:56:13,297	[INFO]	335	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:56:14,273	[INFO]	336	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:56:15,277	[INFO]	337	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:56:15,279	[INFO]	338	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-30 10:56:15,279	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:56:15,279	[INFO]	339	SUCCESS	 13.0	
2020-12-30 10:56:18,464	[INFO]	340	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-30 10:56:19,420	[INFO]	341	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:56:20,377	[INFO]	342	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:56:21,373	[INFO]	343	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:56:22,399	[INFO]	344	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:56:23,406	[INFO]	345	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:56:24,413	[INFO]	346	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:56:27,961	[INFO]	347	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:56:27,962	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             ends.put(length+1, i);
! 
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 10:56:27,962	[INFO]	==== END ====
2020-12-30 10:56:27,962	[INFO]	Reason: target fitness reached
2020-12-30 10:56:27,963	[INFO]	
2020-12-30 10:56:27,963	[INFO]	========== EPOCH 14 ==========
2020-12-30 10:56:27,963	[INFO]	==== WARMUP ====
2020-12-30 10:56:31,204	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:56:31,204	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:56:34,373	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:56:34,374	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:56:37,570	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:56:37,570	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:56:40,808	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-30 10:56:40,808	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:56:40,808	[INFO]	==== START ====
2020-12-30 10:56:41,793	[INFO]	1	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:56:42,813	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:56:43,846	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:56:44,881	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:56:45,949	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:56:46,991	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:56:50,417	[INFO]	7	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:56:51,458	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 10:56:54,733	[INFO]	9	SUCCESS	 22.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-30 10:56:57,974	[INFO]	10	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:56:58,945	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:56:59,857	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:56:59,858	[INFO]	13	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:57:03,093	[INFO]	14	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:57:04,064	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:57:05,064	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:57:05,983	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:57:09,151	[INFO]	18	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:57:09,152	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                     prefix_lengths.add(j);
                  }
              }
  

2020-12-30 10:57:09,152	[INFO]	19	SUCCESS	+13.0	
2020-12-30 10:57:09,153	[DEBUG]	
2020-12-30 10:57:10,120	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:57:11,115	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:57:12,097	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:57:12,099	[INFO]	23	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:57:12,100	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:57:13,079	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:57:14,066	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 10:57:15,035	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:57:16,028	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:57:17,009	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:57:17,994	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:57:17,995	[INFO]	31	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:57:17,995	[DEBUG]	
2020-12-30 10:57:17,996	[INFO]	32	SUCCESS	+13.0	
2020-12-30 10:57:17,996	[DEBUG]	
2020-12-30 10:57:18,955	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:57:22,189	[INFO]	34	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:57:23,154	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:57:24,183	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:57:27,424	[INFO]	37	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:57:28,379	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:57:29,368	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:57:30,313	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:57:30,315	[INFO]	41	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-30 10:57:30,315	[DEBUG]	
2020-12-30 10:57:33,409	[INFO]	42	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:57:34,401	[INFO]	43	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:57:34,402	[INFO]	44	SUCCESS	+13.0	
2020-12-30 10:57:34,403	[DEBUG]	
2020-12-30 10:57:37,576	[INFO]	45	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-30 10:57:38,548	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:57:39,529	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:57:40,539	[INFO]	48	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:57:41,511	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:57:44,560	[INFO]	50	SUCCESS	 29.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:57:47,760	[INFO]	51	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-30 10:57:48,730	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:57:52,045	[INFO]	53	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:57:52,047	[INFO]	54	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:57:52,047	[DEBUG]	
2020-12-30 10:57:52,922	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:57:52,923	[INFO]	56	SUCCESS	+13.0	
2020-12-30 10:57:52,923	[DEBUG]	
2020-12-30 10:57:53,888	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:57:54,863	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:57:55,862	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:57:56,855	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:57:57,873	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 10:57:58,861	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:58:02,089	[INFO]	63	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:58:02,090	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }

2020-12-30 10:58:03,081	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:58:04,103	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:58:04,104	[INFO]	66	SUCCESS	+13.0	
2020-12-30 10:58:04,104	[DEBUG]	
2020-12-30 10:58:05,077	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:58:06,067	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:58:07,050	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:58:08,038	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:58:09,032	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:58:10,008	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:58:10,990	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:58:14,242	[INFO]	74	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:58:17,385	[INFO]	75	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:58:17,386	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,26 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                 }
                  }
              }
  

2020-12-30 10:58:18,359	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:58:19,280	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:58:19,281	[INFO]	78	SUCCESS	+13.0	
2020-12-30 10:58:19,281	[DEBUG]	
2020-12-30 10:58:20,259	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:58:20,261	[INFO]	80	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-30 10:58:20,262	[DEBUG]	
2020-12-30 10:58:20,263	[INFO]	81	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:58:21,247	[INFO]	82	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:58:22,214	[INFO]	83	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 10:58:23,201	[INFO]	84	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:58:23,203	[INFO]	85	SUCCESS	+13.0	
2020-12-30 10:58:23,203	[DEBUG]	
2020-12-30 10:58:24,236	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:58:27,444	[INFO]	87	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:58:28,293	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:58:29,281	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:58:30,262	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:58:31,158	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:58:34,377	[INFO]	92	SUCCESS	 24.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:58:35,321	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:58:36,318	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 10:58:37,306	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:58:40,588	[INFO]	96	SUCCESS	*0.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:58:40,589	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 10:58:40,589	[INFO]	==== END ====
2020-12-30 10:58:40,589	[INFO]	Reason: target fitness reached
2020-12-30 10:58:40,590	[INFO]	
2020-12-30 10:58:40,590	[INFO]	========== EPOCH 15 ==========
2020-12-30 10:58:40,590	[INFO]	==== WARMUP ====
2020-12-30 10:58:43,787	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:58:43,787	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:58:46,939	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:58:46,939	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:58:50,133	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 10:58:50,134	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:58:53,319	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-30 10:58:53,319	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 10:58:53,319	[INFO]	==== START ====
2020-12-30 10:58:56,510	[INFO]	1	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-30 10:58:59,677	[INFO]	2	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-30 10:59:00,688	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:59:01,681	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:59:04,935	[INFO]	5	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:59:05,876	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 10:59:06,891	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:59:10,073	[INFO]	8	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:59:13,327	[INFO]	9	SUCCESS	 24.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 10:59:14,295	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 10:59:15,303	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 10:59:16,302	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 10:59:17,249	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 10:59:18,220	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:59:21,420	[INFO]	15	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 10:59:21,421	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 29,34 ****
--- 29,35 ----
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+                 longest = length + 1;
              }
  
              i++;

2020-12-30 10:59:24,581	[INFO]	16	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:59:24,582	[INFO]	17	SUCCESS	+13.0	
2020-12-30 10:59:24,583	[DEBUG]	
2020-12-30 10:59:25,559	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 10:59:26,526	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:59:27,513	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:59:28,481	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 10:59:29,470	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:59:30,458	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:59:31,419	[INFO]	24	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:59:34,627	[INFO]	25	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 10:59:35,584	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 10:59:36,555	[INFO]	27	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:59:37,469	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:59:38,451	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:59:39,414	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 10:59:42,609	[INFO]	31	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:59:43,558	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:59:44,478	[INFO]	33	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:59:44,480	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 10:59:45,453	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 10:59:46,422	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:59:47,402	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 10:59:48,381	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 10:59:49,393	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:59:52,584	[INFO]	40	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-30 10:59:53,565	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 10:59:54,520	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 10:59:55,535	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 10:59:56,511	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 10:59:57,473	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 10:59:58,474	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 10:59:59,481	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:00:02,701	[INFO]	48	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 11:00:02,702	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }

2020-12-30 11:00:02,703	[INFO]	49	SUCCESS	+13.0	
2020-12-30 11:00:02,703	[DEBUG]	
2020-12-30 11:00:03,699	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:00:04,974	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 11:00:05,988	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:00:07,005	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 11:00:07,989	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:00:08,990	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:00:09,944	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:00:10,938	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 11:00:11,929	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 11:00:15,119	[INFO]	59	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:00:15,120	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,26 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                 }
                  }
              }
  

2020-12-30 11:00:16,087	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 11:00:16,088	[INFO]	61	SUCCESS	+13.0	
2020-12-30 11:00:16,088	[DEBUG]	
2020-12-30 11:00:17,098	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:00:18,100	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 11:00:19,017	[INFO]	64	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:00:22,646	[INFO]	65	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:00:22,647	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 11:00:23,619	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:00:23,620	[INFO]	68	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:00:23,620	[DEBUG]	
2020-12-30 11:00:24,632	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:00:27,868	[INFO]	70	SUCCESS	 22.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-30 11:00:27,869	[INFO]	71	SUCCESS	+13.0	
2020-12-30 11:00:27,869	[DEBUG]	
2020-12-30 11:00:28,837	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:00:29,827	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 11:00:30,756	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:00:30,758	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 11:00:31,725	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 11:00:32,692	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:00:33,690	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:00:33,692	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:00:34,700	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:00:39,061	[INFO]	81	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-30 11:00:42,305	[INFO]	82	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:00:42,306	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,41 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-30 11:00:43,274	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:00:43,275	[INFO]	84	SUCCESS	+13.0	
2020-12-30 11:00:43,275	[DEBUG]	
2020-12-30 11:00:44,258	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 11:00:45,234	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 11:00:46,223	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:00:46,225	[INFO]	88	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-30 11:00:46,225	[DEBUG]	
2020-12-30 11:00:46,226	[INFO]	89	SUCCESS	+13.0	
2020-12-30 11:00:46,226	[DEBUG]	
2020-12-30 11:00:47,197	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:00:47,198	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 11:00:48,201	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 11:00:49,162	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 11:00:50,132	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 11:00:51,114	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:00:51,115	[INFO]	96	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:00:51,116	[DEBUG]	
2020-12-30 11:00:52,026	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:00:52,027	[INFO]	98	SUCCESS	+13.0	
2020-12-30 11:00:52,028	[DEBUG]	
2020-12-30 11:00:53,023	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:00:53,995	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:00:54,986	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:00:55,962	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 11:00:56,973	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:00:57,956	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:00:57,958	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:01:01,158	[INFO]	106	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:01:01,159	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-30 11:01:02,128	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:01:05,443	[INFO]	108	SUCCESS	 28.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 11:01:06,479	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:01:07,506	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:01:07,507	[INFO]	111	SUCCESS	+13.0	
2020-12-30 11:01:07,508	[DEBUG]	
2020-12-30 11:01:07,509	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 11:01:08,506	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:01:09,491	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:01:10,483	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 11:01:11,455	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:01:12,454	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:01:13,419	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:01:13,420	[INFO]	119	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 11:01:13,421	[DEBUG]	
2020-12-30 11:01:13,421	[INFO]	120	SUCCESS	+13.0	
2020-12-30 11:01:13,422	[DEBUG]	
2020-12-30 11:01:16,723	[INFO]	121	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:01:17,664	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:01:18,646	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:01:21,722	[INFO]	124	SUCCESS	 29.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:01:22,702	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:01:23,664	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:01:26,908	[INFO]	127	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:01:26,909	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-30 11:01:26,910	[INFO]	128	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:01:26,911	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-30 11:01:26,911	[INFO]	129	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:01:26,912	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-30 11:01:26,912	[INFO]	130	SUCCESS	+13.0	
2020-12-30 11:01:26,913	[DEBUG]	
2020-12-30 11:01:27,886	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:01:28,851	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 11:01:29,847	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:01:30,822	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:01:30,824	[INFO]	135	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:01:30,824	[DEBUG]	
2020-12-30 11:01:30,825	[INFO]	136	SUCCESS	+13.0	
2020-12-30 11:01:30,825	[DEBUG]	
2020-12-30 11:01:34,043	[INFO]	137	SUCCESS	 22.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-30 11:01:34,981	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:01:35,969	[INFO]	139	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 11:01:36,943	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:01:37,949	[INFO]	141	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:01:41,055	[INFO]	142	SUCCESS	 29.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:01:42,045	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:01:43,025	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:01:44,019	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 11:01:45,041	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:01:45,042	[INFO]	147	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:01:45,043	[DEBUG]	
2020-12-30 11:01:45,044	[INFO]	148	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:01:45,044	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-30 11:01:48,294	[INFO]	149	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:01:48,295	[INFO]	150	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:01:48,296	[DEBUG]	
2020-12-30 11:01:48,296	[INFO]	151	SUCCESS	+13.0	
2020-12-30 11:01:48,296	[DEBUG]	
2020-12-30 11:01:51,465	[INFO]	152	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:01:51,466	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,41 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-30 11:01:52,472	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:01:53,485	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:01:53,486	[INFO]	155	SUCCESS	+13.0	
2020-12-30 11:01:53,487	[DEBUG]	
2020-12-30 11:01:54,514	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:01:55,448	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:01:58,607	[INFO]	158	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:01:59,591	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:02:00,495	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:02:03,734	[INFO]	161	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:02:04,749	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:02:05,779	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:02:09,014	[INFO]	164	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:02:09,016	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:02:09,981	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:02:10,967	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:02:11,940	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:02:12,945	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:02:13,868	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:02:17,048	[INFO]	171	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:02:18,019	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:02:18,979	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:02:19,949	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:02:20,959	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:02:21,925	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:02:25,152	[INFO]	177	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:02:26,107	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 11:02:29,306	[INFO]	179	SUCCESS	 22.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:02:30,153	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:02:31,105	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:02:32,085	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:02:35,288	[INFO]	183	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 11:02:35,289	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,28 ****
--- 23,33 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  

2020-12-30 11:02:36,250	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:02:36,251	[INFO]	185	SUCCESS	+13.0	
2020-12-30 11:02:36,252	[DEBUG]	
2020-12-30 11:02:37,207	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 11:02:37,209	[INFO]	187	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:02:37,209	[DEBUG]	
2020-12-30 11:02:37,210	[INFO]	188	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-30 11:02:37,210	[DEBUG]	
2020-12-30 11:02:38,189	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:02:39,149	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:02:39,150	[INFO]	191	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-30 11:02:39,151	[DEBUG]	
2020-12-30 11:02:39,151	[INFO]	192	SUCCESS	+13.0	
2020-12-30 11:02:39,151	[DEBUG]	
2020-12-30 11:02:40,158	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:02:40,160	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:02:41,158	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:02:42,125	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:02:43,127	[INFO]	197	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:02:46,310	[INFO]	198	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-30 11:02:47,282	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:02:48,289	[INFO]	200	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:02:49,278	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 11:02:49,279	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:02:50,688	[INFO]	203	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:02:53,895	[INFO]	204	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-30 11:02:57,067	[INFO]	205	SUCCESS	*10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:02:57,068	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:02:58,064	[INFO]	206	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:02:59,043	[INFO]	207	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 11:03:00,041	[INFO]	208	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:03:00,042	[INFO]	209	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:03:00,043	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:03:00,043	[INFO]	210	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:03:03,243	[INFO]	211	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:03:03,245	[INFO]	212	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:03:03,246	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:03:04,192	[INFO]	213	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 11:03:05,151	[INFO]	214	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 11:03:05,152	[INFO]	215	SUCCESS	 13.0	
2020-12-30 11:03:06,153	[INFO]	216	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:03:07,151	[INFO]	217	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 11:03:08,081	[INFO]	218	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:03:11,237	[INFO]	219	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:03:12,174	[INFO]	220	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:03:15,392	[INFO]	221	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-30 11:03:16,264	[INFO]	222	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:03:17,225	[INFO]	223	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:03:18,234	[INFO]	224	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:03:19,187	[INFO]	225	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 11:03:22,398	[INFO]	226	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:03:22,399	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 11:03:22,399	[INFO]	227	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:03:22,400	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:03:22,400	[INFO]	228	SUCCESS	 13.0	
2020-12-30 11:03:23,347	[INFO]	229	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:03:26,586	[INFO]	230	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:03:27,547	[INFO]	231	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:03:28,427	[INFO]	232	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 11:03:29,323	[INFO]	233	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:03:30,292	[INFO]	234	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:03:31,269	[INFO]	235	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 11:03:32,239	[INFO]	236	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 11:03:33,228	[INFO]	237	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:03:33,230	[INFO]	238	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:03:34,195	[INFO]	239	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:03:35,180	[INFO]	240	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:03:36,139	[INFO]	241	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:03:36,140	[INFO]	242	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:03:36,140	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:03:36,142	[INFO]	243	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:03:37,139	[INFO]	244	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 11:03:37,140	[INFO]	245	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:03:37,141	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:03:38,126	[INFO]	246	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 11:03:38,127	[INFO]	247	SUCCESS	 13.0	
2020-12-30 11:03:38,128	[INFO]	248	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:03:41,395	[INFO]	249	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:03:41,397	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:03:42,362	[INFO]	250	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 11:03:43,311	[INFO]	251	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:03:46,478	[INFO]	252	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:03:46,480	[INFO]	253	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:03:46,480	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:03:46,481	[INFO]	254	SUCCESS	 13.0	
2020-12-30 11:03:47,491	[INFO]	255	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:03:48,466	[INFO]	256	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:03:49,455	[INFO]	257	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:03:50,464	[INFO]	258	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:03:50,465	[INFO]	259	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:03:50,466	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:03:50,467	[INFO]	260	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:03:51,457	[INFO]	261	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:03:51,460	[INFO]	262	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:03:51,461	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:03:51,462	[INFO]	263	SUCCESS	 13.0	
2020-12-30 11:03:54,672	[INFO]	264	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:03:55,651	[INFO]	265	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:03:56,630	[INFO]	266	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:03:57,636	[INFO]	267	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:03:58,635	[INFO]	268	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:03:59,650	[INFO]	269	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:04:00,643	[INFO]	270	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 11:04:01,619	[INFO]	271	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 11:04:02,616	[INFO]	272	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 11:04:03,609	[INFO]	273	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:04:04,579	[INFO]	274	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:04:07,776	[INFO]	275	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:04:07,777	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-30 11:04:08,752	[INFO]	276	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:04:09,714	[INFO]	277	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:04:12,903	[INFO]	278	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:04:12,904	[INFO]	279	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:04:12,905	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:04:13,870	[INFO]	280	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 11:04:13,871	[INFO]	281	SUCCESS	 13.0	
2020-12-30 11:04:14,845	[INFO]	282	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:04:15,845	[INFO]	283	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:04:16,733	[INFO]	284	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:04:17,736	[INFO]	285	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:04:18,735	[INFO]	286	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:04:22,046	[INFO]	287	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:04:23,027	[INFO]	288	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:04:24,034	[INFO]	289	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:04:25,018	[INFO]	290	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 11:04:28,203	[INFO]	291	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:04:29,110	[INFO]	292	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:04:30,070	[INFO]	293	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:04:33,261	[INFO]	294	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:04:33,262	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:04:33,263	[INFO]	295	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:04:33,264	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:04:33,264	[INFO]	296	SUCCESS	 13.0	
2020-12-30 11:04:34,295	[INFO]	297	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:04:37,500	[INFO]	298	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:04:37,501	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 11:04:38,457	[INFO]	299	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 11:04:39,314	[INFO]	300	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:04:42,600	[INFO]	301	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:04:45,771	[INFO]	302	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:04:45,773	[INFO]	303	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:04:45,773	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 11:04:48,972	[INFO]	304	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:04:48,974	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 longest = length + 1;
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 11:04:49,921	[INFO]	305	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 11:04:53,122	[INFO]	306	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:04:56,302	[INFO]	307	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:04:56,303	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,44 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 longest = length + 1;
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-30 11:04:57,268	[INFO]	308	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 11:04:57,269	[INFO]	309	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:04:57,270	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,44 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 longest = length + 1;
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-30 11:04:57,271	[INFO]	310	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:04:57,272	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,44 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 longest = length + 1;
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-30 11:04:57,273	[INFO]	311	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:04:57,274	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,44 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 longest = length + 1;
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-30 11:04:57,275	[INFO]	312	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:04:57,275	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 longest = length + 1;
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 11:04:58,271	[INFO]	313	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:04:58,273	[INFO]	314	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:05:01,482	[INFO]	315	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:05:01,483	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 longest = length + 1;
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:05:04,674	[INFO]	316	SUCCESS	 21.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:05:07,828	[INFO]	317	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:05:08,800	[INFO]	318	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:05:09,771	[INFO]	319	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:05:10,677	[INFO]	320	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:05:11,690	[INFO]	321	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 11:05:11,691	[INFO]	322	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:05:11,692	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:05:11,692	[INFO]	323	SUCCESS	 13.0	
2020-12-30 11:05:12,700	[INFO]	324	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:05:13,686	[INFO]	325	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 11:05:14,661	[INFO]	326	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:05:17,800	[INFO]	327	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:05:21,009	[INFO]	328	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:05:21,952	[INFO]	329	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:05:25,163	[INFO]	330	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:05:26,043	[INFO]	331	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:05:27,014	[INFO]	332	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:05:27,991	[INFO]	333	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:05:28,951	[INFO]	334	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 11:05:29,921	[INFO]	335	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:05:30,905	[INFO]	336	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:05:31,888	[INFO]	337	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:05:35,119	[INFO]	338	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:05:38,385	[INFO]	339	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:05:39,360	[INFO]	340	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:05:40,353	[INFO]	341	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:05:41,385	[INFO]	342	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 11:05:42,369	[INFO]	343	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:05:45,641	[INFO]	344	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:05:46,598	[INFO]	345	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 11:05:47,468	[INFO]	346	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:05:48,457	[INFO]	347	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:05:49,452	[INFO]	348	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:05:50,437	[INFO]	349	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:05:51,429	[INFO]	350	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:05:51,431	[INFO]	351	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:05:51,432	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:05:51,432	[INFO]	352	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:05:51,433	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:05:51,433	[INFO]	353	SUCCESS	 13.0	
2020-12-30 11:05:54,641	[INFO]	354	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:05:55,586	[INFO]	355	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 11:05:56,527	[INFO]	356	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:05:59,745	[INFO]	357	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-30 11:06:00,739	[INFO]	358	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:06:01,729	[INFO]	359	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:06:05,006	[INFO]	360	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:06:05,986	[INFO]	361	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:06:09,230	[INFO]	362	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-30 11:06:09,231	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:06:09,232	[INFO]	363	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:06:12,427	[INFO]	364	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-30 11:06:13,418	[INFO]	365	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:06:16,631	[INFO]	366	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-30 11:06:17,636	[INFO]	367	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 11:06:18,612	[INFO]	368	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:06:19,578	[INFO]	369	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:06:20,579	[INFO]	370	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:06:21,573	[INFO]	371	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:06:22,505	[INFO]	372	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:06:23,497	[INFO]	373	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:06:26,702	[INFO]	374	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:06:26,703	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,34 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 19,37 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-30 11:06:29,886	[INFO]	375	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-30 11:06:29,887	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,34 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 19,37 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val == arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-30 11:06:33,037	[INFO]	376	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-30 11:06:33,038	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:06:34,017	[INFO]	377	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:06:37,559	[INFO]	378	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-30 11:06:37,561	[INFO]	379	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-30 11:06:37,562	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:06:37,563	[INFO]	380	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-30 11:06:38,539	[INFO]	381	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:06:38,540	[INFO]	382	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:06:39,516	[INFO]	383	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:06:40,530	[INFO]	384	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:06:41,524	[INFO]	385	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:06:42,560	[INFO]	386	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:06:43,536	[INFO]	387	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:06:44,517	[INFO]	388	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:06:45,507	[INFO]	389	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:06:46,450	[INFO]	390	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:06:47,417	[INFO]	391	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 11:06:50,660	[INFO]	392	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:06:50,661	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,33 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 longest = length + 1;
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:06:53,869	[INFO]	393	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:06:53,870	[INFO]	394	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-30 11:06:53,871	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:06:54,848	[INFO]	395	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:06:55,839	[INFO]	396	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:06:56,822	[INFO]	397	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:06:56,823	[INFO]	398	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:06:56,824	[INFO]	399	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:06:56,825	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:06:56,825	[INFO]	400	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:06:56,826	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:06:57,815	[INFO]	401	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 11:06:58,808	[INFO]	402	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:06:58,810	[INFO]	403	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:06:59,790	[INFO]	404	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:06:59,792	[INFO]	405	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-30 11:07:00,782	[INFO]	406	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:07:01,757	[INFO]	407	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:07:02,764	[INFO]	408	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:07:02,767	[INFO]	409	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:07:03,779	[INFO]	410	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:07:04,754	[INFO]	411	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:07:05,783	[INFO]	412	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:07:06,704	[INFO]	413	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:07:07,680	[INFO]	414	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 11:07:08,670	[INFO]	415	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:07:09,687	[INFO]	416	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:07:10,682	[INFO]	417	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:07:11,660	[INFO]	418	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 11:07:12,632	[INFO]	419	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 11:07:15,832	[INFO]	420	SUCCESS	 17.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:07:16,806	[INFO]	421	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:07:17,822	[INFO]	422	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:07:18,796	[INFO]	423	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:07:18,797	[INFO]	424	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:07:18,798	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:07:18,799	[INFO]	425	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:07:18,799	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:07:19,769	[INFO]	426	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 11:07:20,768	[INFO]	427	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 11:07:20,769	[INFO]	428	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-30 11:07:20,770	[INFO]	429	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:07:23,998	[INFO]	430	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:07:24,989	[INFO]	431	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:07:24,991	[INFO]	432	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:07:24,992	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:07:25,954	[INFO]	433	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:07:25,956	[INFO]	434	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:07:26,943	[INFO]	435	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:07:30,198	[INFO]	436	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:07:30,200	[INFO]	437	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:07:30,200	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:07:30,201	[INFO]	438	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:07:31,215	[INFO]	439	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:07:32,192	[INFO]	440	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 11:07:33,202	[INFO]	441	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:07:33,204	[INFO]	442	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-30 11:07:34,181	[INFO]	443	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:07:35,156	[INFO]	444	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:07:36,120	[INFO]	445	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:07:37,236	[INFO]	446	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 11:07:38,446	[INFO]	447	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:07:39,438	[INFO]	448	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:07:40,458	[INFO]	449	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 11:07:40,460	[INFO]	450	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 11:07:44,076	[INFO]	451	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-30 11:07:45,025	[INFO]	452	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:07:46,024	[INFO]	453	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:07:49,250	[INFO]	454	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:07:49,251	[INFO]	455	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:07:50,223	[INFO]	456	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 11:07:51,222	[INFO]	457	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:07:52,150	[INFO]	458	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:07:53,112	[INFO]	459	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:07:54,115	[INFO]	460	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 11:07:55,128	[INFO]	461	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:07:56,101	[INFO]	462	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:07:59,296	[INFO]	463	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-30 11:08:00,276	[INFO]	464	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 11:08:01,245	[INFO]	465	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 11:08:02,216	[INFO]	466	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 11:08:05,378	[INFO]	467	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:08:06,354	[INFO]	468	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:08:07,337	[INFO]	469	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:08:10,578	[INFO]	470	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:08:11,634	[INFO]	471	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:08:12,614	[INFO]	472	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 11:08:15,777	[INFO]	473	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 11:08:15,778	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,32 ****
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 23,37 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] <= val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:08:18,938	[INFO]	474	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:08:22,155	[INFO]	475	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 11:08:23,145	[INFO]	476	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:08:26,378	[INFO]	477	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 11:08:27,348	[INFO]	478	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:08:27,350	[INFO]	479	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:08:27,350	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:08:27,351	[INFO]	480	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:08:30,401	[INFO]	481	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:08:30,402	[INFO]	482	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:08:30,402	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:08:30,403	[INFO]	483	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:08:31,372	[INFO]	484	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:08:32,378	[INFO]	485	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:08:33,308	[INFO]	486	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:08:33,309	[INFO]	487	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:08:33,310	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:08:34,296	[INFO]	488	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:08:35,281	[INFO]	489	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:08:35,282	[INFO]	490	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:08:36,270	[INFO]	491	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:08:37,242	[INFO]	492	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:08:40,508	[INFO]	493	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:08:40,509	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,36 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:08:43,718	[INFO]	494	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:08:44,699	[INFO]	495	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:08:47,921	[INFO]	496	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:08:51,127	[INFO]	497	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-30 11:08:51,128	[INFO]	498	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-30 11:08:51,129	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:08:52,089	[INFO]	499	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:08:53,075	[INFO]	500	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:08:53,076	[INFO]	==== END ====
2020-12-30 11:08:53,076	[INFO]	Reason: step budget
2020-12-30 11:08:53,077	[INFO]	
2020-12-30 11:08:53,077	[INFO]	========== EPOCH 16 ==========
2020-12-30 11:08:53,077	[INFO]	==== WARMUP ====
2020-12-30 11:08:56,253	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 11:08:56,253	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 11:08:59,471	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 11:08:59,471	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 11:09:02,650	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 11:09:02,651	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 11:09:05,863	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-30 11:09:05,863	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 11:09:05,864	[INFO]	==== START ====
2020-12-30 11:09:06,835	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:09:07,883	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:09:08,874	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:09:12,065	[INFO]	4	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-30 11:09:15,230	[INFO]	5	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 11:09:15,231	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-30 11:09:18,401	[INFO]	6	SUCCESS	 19.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:09:21,579	[INFO]	7	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:09:21,580	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }
***************
*** 27,32 ****
--- 30,39 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:09:21,581	[INFO]	8	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 11:09:21,582	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-30 11:09:21,583	[INFO]	9	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:09:21,583	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-30 11:09:21,584	[INFO]	10	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:09:21,584	[DEBUG]	
2020-12-30 11:09:22,554	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:09:22,555	[INFO]	12	SUCCESS	+13.0	
2020-12-30 11:09:22,556	[DEBUG]	
2020-12-30 11:09:23,526	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:09:24,519	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 11:09:25,501	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 11:09:26,502	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:09:29,712	[INFO]	17	SUCCESS	*0.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:09:29,713	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 11:09:29,713	[INFO]	==== END ====
2020-12-30 11:09:29,713	[INFO]	Reason: target fitness reached
2020-12-30 11:09:29,714	[INFO]	
2020-12-30 11:09:29,714	[INFO]	========== EPOCH 17 ==========
2020-12-30 11:09:29,715	[INFO]	==== WARMUP ====
2020-12-30 11:09:32,934	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 11:09:32,934	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 11:09:36,129	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 11:09:36,129	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 11:09:39,341	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 11:09:39,341	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 11:09:42,546	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-30 11:09:42,546	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 11:09:42,546	[INFO]	==== START ====
2020-12-30 11:09:43,511	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:09:44,489	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 11:09:47,724	[INFO]	3	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 11:09:47,725	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }

2020-12-30 11:09:47,726	[INFO]	4	SUCCESS	+13.0	
2020-12-30 11:09:47,726	[DEBUG]	
2020-12-30 11:09:48,699	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:09:49,707	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:09:49,709	[INFO]	7	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:09:49,710	[DEBUG]	
2020-12-30 11:09:50,695	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 11:09:50,696	[INFO]	9	SUCCESS	+13.0	
2020-12-30 11:09:50,697	[DEBUG]	
2020-12-30 11:09:51,682	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 11:09:52,670	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:09:53,696	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:09:54,689	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:09:55,648	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:09:56,616	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:09:57,583	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:10:00,802	[INFO]	17	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:10:04,034	[INFO]	18	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:10:04,035	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-30 11:10:04,035	[INFO]	19	SUCCESS	+13.0	
2020-12-30 11:10:04,036	[DEBUG]	
2020-12-30 11:10:05,022	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:10:05,024	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:10:05,024	[INFO]	22	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-30 11:10:05,025	[DEBUG]	
2020-12-30 11:10:08,262	[INFO]	23	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:10:08,263	[INFO]	24	SUCCESS	+13.0	
2020-12-30 11:10:08,263	[DEBUG]	
2020-12-30 11:10:09,263	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:10:12,430	[INFO]	26	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:10:13,417	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:10:13,418	[INFO]	28	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:10:13,418	[DEBUG]	
2020-12-30 11:10:13,419	[INFO]	29	SUCCESS	+13.0	
2020-12-30 11:10:13,419	[DEBUG]	
2020-12-30 11:10:14,392	[INFO]	30	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:10:15,360	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:10:16,329	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:10:17,319	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 11:10:18,301	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:10:19,260	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:10:20,222	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:10:23,468	[INFO]	37	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:10:23,469	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             ends.put(length+1, i);
+ 
              i++;
          }
          return longest;

2020-12-30 11:10:23,470	[INFO]	38	SUCCESS	+13.0	
2020-12-30 11:10:23,470	[DEBUG]	
2020-12-30 11:10:24,435	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:10:25,418	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:10:26,287	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:10:27,247	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:10:28,181	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:10:29,207	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:10:30,262	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:10:31,299	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:10:34,489	[INFO]	47	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:10:35,705	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 11:10:40,109	[INFO]	49	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:10:44,262	[INFO]	50	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:10:45,435	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 11:10:46,460	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 11:10:47,443	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:10:48,436	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:10:49,421	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:10:50,408	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 11:10:51,381	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:10:52,376	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:10:53,363	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:10:54,369	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:10:55,354	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 11:10:56,320	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:10:57,297	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:11:00,523	[INFO]	64	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 11:11:00,524	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,37 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:11:01,481	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:11:02,460	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:11:02,462	[INFO]	67	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:11:02,462	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,37 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:11:03,460	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:11:03,461	[INFO]	69	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 11:11:03,462	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,37 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:11:03,462	[INFO]	70	SUCCESS	+13.0	
2020-12-30 11:11:03,462	[DEBUG]	
2020-12-30 11:11:04,442	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 11:11:04,443	[INFO]	72	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:11:04,444	[DEBUG]	
2020-12-30 11:11:04,444	[INFO]	73	SUCCESS	+13.0	
2020-12-30 11:11:04,444	[DEBUG]	
2020-12-30 11:11:07,663	[INFO]	74	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:11:07,664	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,33 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 11:11:07,665	[INFO]	75	SUCCESS	+13.0	
2020-12-30 11:11:07,665	[DEBUG]	
2020-12-30 11:11:08,635	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 11:11:09,574	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:11:10,522	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:11:11,494	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:11:12,529	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:11:13,485	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:11:14,480	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:11:17,692	[INFO]	83	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 11:11:17,693	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-30 11:11:17,694	[INFO]	84	SUCCESS	+13.0	
2020-12-30 11:11:17,694	[DEBUG]	
2020-12-30 11:11:18,679	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:11:19,648	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:11:20,641	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:11:21,607	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 11:11:24,871	[INFO]	89	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:11:25,853	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 11:11:26,816	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:11:27,799	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 11:11:28,800	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:11:32,037	[INFO]	94	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-30 11:11:32,038	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val <= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:11:32,997	[INFO]	95	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:11:32,998	[INFO]	96	SUCCESS	+13.0	
2020-12-30 11:11:32,998	[DEBUG]	
2020-12-30 11:11:32,999	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:11:36,267	[INFO]	98	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:11:36,268	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-30 11:11:36,269	[INFO]	99	SUCCESS	+13.0	
2020-12-30 11:11:36,269	[DEBUG]	
2020-12-30 11:11:39,432	[INFO]	100	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:11:42,686	[INFO]	101	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:11:43,649	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 11:11:43,650	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 11:11:44,633	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:11:47,816	[INFO]	105	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-30 11:11:47,816	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-30 11:11:48,800	[INFO]	106	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:11:49,777	[INFO]	107	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:11:49,778	[INFO]	108	SUCCESS	+13.0	
2020-12-30 11:11:49,779	[DEBUG]	
2020-12-30 11:11:50,803	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 11:11:51,790	[INFO]	110	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:11:52,753	[INFO]	111	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:11:55,981	[INFO]	112	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-30 11:11:55,982	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:11:59,094	[INFO]	113	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 11:11:59,095	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,35 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:11:59,096	[INFO]	114	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-30 11:11:59,097	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,35 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:11:59,097	[INFO]	115	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 11:11:59,098	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,35 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:12:00,079	[INFO]	116	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:12:00,081	[INFO]	117	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-30 11:12:00,081	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:12:00,081	[INFO]	118	SUCCESS	+13.0	
2020-12-30 11:12:00,082	[DEBUG]	
2020-12-30 11:12:01,039	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:12:01,946	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 11:12:02,928	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 11:12:03,920	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:12:04,924	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:12:04,925	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:12:05,895	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:12:06,902	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:12:06,904	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:12:06,905	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:12:06,905	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:12:07,875	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 11:12:11,117	[INFO]	131	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:12:11,118	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             ends.put(length+1, i);
+ 
              i++;
          }
          return longest;

2020-12-30 11:12:11,118	[INFO]	132	SUCCESS	+13.0	
2020-12-30 11:12:11,118	[DEBUG]	
2020-12-30 11:12:12,147	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:12:13,135	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:12:14,146	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:12:15,099	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:12:16,098	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:12:19,338	[INFO]	138	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:12:19,339	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                     prefix_lengths.add(j);
                  }
              }
  

2020-12-30 11:12:22,516	[INFO]	139	SUCCESS	 19.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 11:12:22,517	[INFO]	140	SUCCESS	+13.0	
2020-12-30 11:12:22,517	[DEBUG]	
2020-12-30 11:12:23,468	[INFO]	141	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:12:24,475	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:12:24,476	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:12:25,517	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:12:26,538	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:12:29,772	[INFO]	146	SUCCESS	*0.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:12:29,773	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 11:12:29,773	[INFO]	==== END ====
2020-12-30 11:12:29,773	[INFO]	Reason: target fitness reached
2020-12-30 11:12:29,774	[INFO]	
2020-12-30 11:12:29,774	[INFO]	========== EPOCH 18 ==========
2020-12-30 11:12:29,774	[INFO]	==== WARMUP ====
2020-12-30 11:12:33,004	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 11:12:33,005	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 11:12:36,175	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 11:12:36,175	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 11:12:39,377	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 11:12:39,378	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 11:12:42,554	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-30 11:12:42,555	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 11:12:42,555	[INFO]	==== START ====
2020-12-30 11:12:43,509	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 11:12:44,475	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:12:47,686	[INFO]	3	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:12:47,687	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,33 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 11:12:47,688	[INFO]	4	SUCCESS	+13.0	
2020-12-30 11:12:47,688	[DEBUG]	
2020-12-30 11:12:50,853	[INFO]	5	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-30 11:12:54,064	[INFO]	6	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-30 11:12:54,066	[INFO]	7	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:12:54,066	[DEBUG]	
2020-12-30 11:12:54,066	[INFO]	8	SUCCESS	+13.0	
2020-12-30 11:12:54,067	[DEBUG]	
2020-12-30 11:12:55,067	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:12:56,075	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:12:57,075	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:13:00,266	[INFO]	12	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:13:01,257	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 11:13:02,234	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:13:03,231	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:13:04,237	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 11:13:05,190	[INFO]	17	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:13:06,176	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:13:09,422	[INFO]	19	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 11:13:09,423	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;

2020-12-30 11:13:09,424	[INFO]	20	SUCCESS	+13.0	
2020-12-30 11:13:09,425	[DEBUG]	
2020-12-30 11:13:10,385	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:13:13,670	[INFO]	22	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:13:16,811	[INFO]	23	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-30 11:13:16,812	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-30 11:13:17,771	[INFO]	24	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:13:18,744	[INFO]	25	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:13:19,727	[INFO]	26	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:13:19,728	[INFO]	27	SUCCESS	+13.0	
2020-12-30 11:13:19,728	[DEBUG]	
2020-12-30 11:13:20,782	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:13:21,764	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:13:25,023	[INFO]	30	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:13:25,024	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-30 11:13:25,025	[INFO]	31	SUCCESS	+13.0	
2020-12-30 11:13:25,025	[DEBUG]	
2020-12-30 11:13:25,999	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:13:26,969	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:13:27,970	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:13:27,971	[INFO]	35	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-30 11:13:28,980	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:13:32,264	[INFO]	37	SUCCESS	 24.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:13:33,166	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:13:34,129	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:13:37,319	[INFO]	40	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:13:38,316	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 11:13:39,305	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:13:40,293	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:13:41,322	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:13:42,324	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-30 11:13:43,306	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:13:44,271	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:13:47,461	[INFO]	48	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 11:13:47,462	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,32 ****
--- 27,37 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:13:48,428	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:13:51,621	[INFO]	50	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:13:51,622	[INFO]	51	SUCCESS	+13.0	
2020-12-30 11:13:51,622	[DEBUG]	
2020-12-30 11:13:54,981	[INFO]	52	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:13:55,963	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:13:56,961	[INFO]	54	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-30 11:13:57,919	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:13:58,903	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:13:59,796	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:14:00,810	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:14:01,788	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 11:14:02,802	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:14:03,792	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-30 11:14:04,903	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 11:14:06,161	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:14:07,096	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:14:08,069	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:14:09,019	[INFO]	66	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:14:09,020	[INFO]	67	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:14:09,989	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 11:14:10,978	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:14:10,980	[INFO]	70	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 11:14:10,980	[DEBUG]	
2020-12-30 11:14:10,981	[INFO]	71	SUCCESS	+13.0	
2020-12-30 11:14:10,981	[DEBUG]	
2020-12-30 11:14:11,947	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-30 11:14:12,931	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 11:14:12,933	[INFO]	74	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:14:12,933	[DEBUG]	
2020-12-30 11:14:13,941	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:14:13,942	[INFO]	76	SUCCESS	+13.0	
2020-12-30 11:14:13,942	[DEBUG]	
2020-12-30 11:14:14,913	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:14:15,906	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:14:15,908	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-30 11:14:19,142	[INFO]	80	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:14:19,143	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 33,38 ****
--- 33,39 ----
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-30 11:14:19,144	[INFO]	81	SUCCESS	+13.0	
2020-12-30 11:14:19,144	[DEBUG]	
2020-12-30 11:14:19,145	[INFO]	82	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:14:19,145	[DEBUG]	
2020-12-30 11:14:19,146	[INFO]	83	SUCCESS	+13.0	
2020-12-30 11:14:19,146	[DEBUG]	
2020-12-30 11:14:20,115	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 11:14:21,109	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:14:22,131	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:14:23,157	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:14:26,378	[INFO]	88	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:14:26,379	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-30 11:14:26,379	[INFO]	==== END ====
2020-12-30 11:14:26,379	[INFO]	Reason: target fitness reached
2020-12-30 11:14:26,380	[INFO]	
2020-12-30 11:14:26,380	[INFO]	========== EPOCH 19 ==========
2020-12-30 11:14:26,380	[INFO]	==== WARMUP ====
2020-12-30 11:14:29,569	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 11:14:29,569	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 11:14:32,720	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 11:14:32,720	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 11:14:35,894	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 11:14:35,894	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 11:14:39,090	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-30 11:14:39,090	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 11:14:39,090	[INFO]	==== START ====
2020-12-30 11:14:40,077	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:14:43,299	[INFO]	2	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:14:43,300	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,33 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 11:14:44,248	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-30 11:14:44,250	[INFO]	4	SUCCESS	+13.0	
2020-12-30 11:14:44,250	[DEBUG]	
2020-12-30 11:14:45,169	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:14:48,385	[INFO]	6	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:14:48,386	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,38 ----
                  longest = length + 1;
              }
  
+             longest = length + 1;
+ 
              i++;
          }
          return longest;

2020-12-30 11:14:48,387	[INFO]	7	SUCCESS	+13.0	
2020-12-30 11:14:48,387	[DEBUG]	
2020-12-30 11:14:49,393	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:14:50,377	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:14:51,359	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:14:52,341	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:14:55,855	[INFO]	12	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:14:56,815	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:14:57,822	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:14:58,823	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:14:58,825	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:14:59,833	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-30 11:15:00,799	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:15:04,002	[INFO]	19	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:15:07,207	[INFO]	20	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-30 11:15:08,179	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-30 11:15:09,111	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:15:10,084	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:15:11,098	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:15:14,262	[INFO]	25	SUCCESS	*0.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:15:14,263	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 11:15:14,263	[INFO]	==== END ====
2020-12-30 11:15:14,263	[INFO]	Reason: target fitness reached
2020-12-30 11:15:14,264	[INFO]	
2020-12-30 11:15:14,264	[INFO]	========== EPOCH 20 ==========
2020-12-30 11:15:14,264	[INFO]	==== WARMUP ====
2020-12-30 11:15:17,449	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 11:15:17,449	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 11:15:20,736	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 11:15:20,736	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 11:15:23,914	[INFO]	WARM	SUCCESS	 13.0	
2020-12-30 11:15:23,915	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 11:15:27,112	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-30 11:15:27,112	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-30 11:15:27,113	[INFO]	==== START ====
2020-12-30 11:15:28,088	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:15:28,972	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 11:15:29,874	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:15:33,101	[INFO]	4	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 11:15:33,102	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }

2020-12-30 11:15:33,104	[INFO]	5	SUCCESS	+13.0	
2020-12-30 11:15:33,104	[DEBUG]	
2020-12-30 11:15:33,106	[INFO]	6	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-30 11:15:33,107	[DEBUG]	
2020-12-30 11:15:33,108	[INFO]	7	SUCCESS	+13.0	
2020-12-30 11:15:33,109	[DEBUG]	
2020-12-30 11:15:34,060	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 11:15:35,069	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:15:36,120	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-30 11:15:39,377	[INFO]	11	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-30 11:15:40,373	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-30 11:15:41,374	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-30 11:15:42,381	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:15:43,366	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-30 11:15:46,573	[INFO]	16	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-30 11:15:47,558	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:15:48,515	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:15:49,486	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:15:50,474	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-30 11:15:51,490	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:15:52,473	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:15:53,480	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:15:54,467	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:15:55,450	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-30 11:15:56,434	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:15:57,431	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:15:58,433	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:15:59,456	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-30 11:16:00,458	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:16:00,460	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:16:01,432	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-30 11:16:02,411	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:16:03,296	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-30 11:16:04,305	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-30 11:16:07,367	[INFO]	36	SUCCESS	 29.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-30 11:16:10,594	[INFO]	37	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:16:10,595	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,33 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-30 11:16:10,595	[INFO]	38	SUCCESS	+13.0	
2020-12-30 11:16:10,596	[DEBUG]	
2020-12-30 11:16:13,709	[INFO]	39	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:16:13,712	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:16:14,681	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-30 11:16:15,666	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-30 11:16:18,867	[INFO]	43	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:16:18,868	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-30 11:16:18,868	[INFO]	==== END ====
2020-12-30 11:16:18,869	[INFO]	Reason: target fitness reached
2020-12-30 11:16:18,869	[INFO]	
2020-12-30 11:16:18,869	[INFO]	========== REPORT ==========
2020-12-30 11:16:18,869	[INFO]	==== Epoch 1 ====
2020-12-30 11:16:18,870	[INFO]	Termination: target fitness reached
2020-12-30 11:16:18,870	[INFO]	Number of interations: 274
2020-12-30 11:16:18,870	[INFO]	Best fitness: 0.0
2020-12-30 11:16:18,870	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:16:18,870	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-30 11:16:18,870	[INFO]	==== Epoch 2 ====
2020-12-30 11:16:18,870	[INFO]	Termination: target fitness reached
2020-12-30 11:16:18,870	[INFO]	Number of interations: 48
2020-12-30 11:16:18,870	[INFO]	Best fitness: 0.0
2020-12-30 11:16:18,870	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:16:18,870	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 11:16:18,870	[INFO]	==== Epoch 3 ====
2020-12-30 11:16:18,871	[INFO]	Termination: target fitness reached
2020-12-30 11:16:18,871	[INFO]	Number of interations: 92
2020-12-30 11:16:18,871	[INFO]	Best fitness: 0.0
2020-12-30 11:16:18,871	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-30 11:16:18,871	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,30 ****
--- 19,36 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
+ 
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 
+             }
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);

2020-12-30 11:16:18,871	[INFO]	==== Epoch 4 ====
2020-12-30 11:16:18,871	[INFO]	Termination: target fitness reached
2020-12-30 11:16:18,871	[INFO]	Number of interations: 298
2020-12-30 11:16:18,871	[INFO]	Best fitness: 0.0
2020-12-30 11:16:18,871	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:16:18,871	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-30 11:16:18,871	[INFO]	==== Epoch 5 ====
2020-12-30 11:16:18,871	[INFO]	Termination: target fitness reached
2020-12-30 11:16:18,871	[INFO]	Number of interations: 55
2020-12-30 11:16:18,871	[INFO]	Best fitness: 0.0
2020-12-30 11:16:18,872	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:16:18,872	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-30 11:16:18,872	[INFO]	==== Epoch 6 ====
2020-12-30 11:16:18,872	[INFO]	Termination: target fitness reached
2020-12-30 11:16:18,872	[INFO]	Number of interations: 396
2020-12-30 11:16:18,872	[INFO]	Best fitness: 0.0
2020-12-30 11:16:18,872	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-30 11:16:18,872	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-30 11:16:18,872	[INFO]	==== Epoch 7 ====
2020-12-30 11:16:18,872	[INFO]	Termination: target fitness reached
2020-12-30 11:16:18,872	[INFO]	Number of interations: 59
2020-12-30 11:16:18,872	[INFO]	Best fitness: 0.0
2020-12-30 11:16:18,872	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:16:18,872	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 11:16:18,873	[INFO]	==== Epoch 8 ====
2020-12-30 11:16:18,873	[INFO]	Termination: target fitness reached
2020-12-30 11:16:18,873	[INFO]	Number of interations: 471
2020-12-30 11:16:18,873	[INFO]	Best fitness: 0.0
2020-12-30 11:16:18,873	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:16:18,873	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             ends.put(length+1, i);
! 
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:16:18,873	[INFO]	==== Epoch 9 ====
2020-12-30 11:16:18,873	[INFO]	Termination: target fitness reached
2020-12-30 11:16:18,873	[INFO]	Number of interations: 315
2020-12-30 11:16:18,873	[INFO]	Best fitness: 0.0
2020-12-30 11:16:18,873	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:16:18,873	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-30 11:16:18,873	[INFO]	==== Epoch 10 ====
2020-12-30 11:16:18,873	[INFO]	Termination: target fitness reached
2020-12-30 11:16:18,873	[INFO]	Number of interations: 128
2020-12-30 11:16:18,873	[INFO]	Best fitness: 0.0
2020-12-30 11:16:18,874	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:16:18,874	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-30 11:16:18,874	[INFO]	==== Epoch 11 ====
2020-12-30 11:16:18,874	[INFO]	Termination: target fitness reached
2020-12-30 11:16:18,874	[INFO]	Number of interations: 104
2020-12-30 11:16:18,874	[INFO]	Best fitness: 0.0
2020-12-30 11:16:18,874	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:16:18,874	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-30 11:16:18,874	[INFO]	==== Epoch 12 ====
2020-12-30 11:16:18,874	[INFO]	Termination: target fitness reached
2020-12-30 11:16:18,874	[INFO]	Number of interations: 346
2020-12-30 11:16:18,874	[INFO]	Best fitness: 0.0
2020-12-30 11:16:18,874	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:16:18,874	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-30 11:16:18,875	[INFO]	==== Epoch 13 ====
2020-12-30 11:16:18,875	[INFO]	Termination: target fitness reached
2020-12-30 11:16:18,875	[INFO]	Number of interations: 347
2020-12-30 11:16:18,875	[INFO]	Best fitness: 0.0
2020-12-30 11:16:18,875	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:16:18,875	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             ends.put(length+1, i);
! 
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:16:18,875	[INFO]	==== Epoch 14 ====
2020-12-30 11:16:18,875	[INFO]	Termination: target fitness reached
2020-12-30 11:16:18,875	[INFO]	Number of interations: 96
2020-12-30 11:16:18,875	[INFO]	Best fitness: 0.0
2020-12-30 11:16:18,875	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:16:18,875	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 11:16:18,875	[INFO]	==== Epoch 15 ====
2020-12-30 11:16:18,875	[INFO]	Termination: step budget
2020-12-30 11:16:18,875	[INFO]	Number of interations: 500
2020-12-30 11:16:18,876	[INFO]	Best fitness: 9.0
2020-12-30 11:16:18,876	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-30 11:16:18,876	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-30 11:16:18,876	[INFO]	==== Epoch 16 ====
2020-12-30 11:16:18,876	[INFO]	Termination: target fitness reached
2020-12-30 11:16:18,876	[INFO]	Number of interations: 17
2020-12-30 11:16:18,876	[INFO]	Best fitness: 0.0
2020-12-30 11:16:18,876	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:16:18,876	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 11:16:18,876	[INFO]	==== Epoch 17 ====
2020-12-30 11:16:18,876	[INFO]	Termination: target fitness reached
2020-12-30 11:16:18,876	[INFO]	Number of interations: 146
2020-12-30 11:16:18,876	[INFO]	Best fitness: 0.0
2020-12-30 11:16:18,876	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:16:18,876	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 11:16:18,877	[INFO]	==== Epoch 18 ====
2020-12-30 11:16:18,877	[INFO]	Termination: target fitness reached
2020-12-30 11:16:18,877	[INFO]	Number of interations: 88
2020-12-30 11:16:18,877	[INFO]	Best fitness: 0.0
2020-12-30 11:16:18,877	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:16:18,877	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-30 11:16:18,877	[INFO]	==== Epoch 19 ====
2020-12-30 11:16:18,877	[INFO]	Termination: target fitness reached
2020-12-30 11:16:18,877	[INFO]	Number of interations: 25
2020-12-30 11:16:18,877	[INFO]	Best fitness: 0.0
2020-12-30 11:16:18,877	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-30 11:16:18,877	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-30 11:16:18,877	[INFO]	==== Epoch 20 ====
2020-12-30 11:16:18,877	[INFO]	Termination: target fitness reached
2020-12-30 11:16:18,877	[INFO]	Number of interations: 43
2020-12-30 11:16:18,877	[INFO]	Best fitness: 0.0
2020-12-30 11:16:18,878	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-30 11:16:18,878	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-30 11:16:18,882	[INFO]	Experiment duration: 5033.807735919952
